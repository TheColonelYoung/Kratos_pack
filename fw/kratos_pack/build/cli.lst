ARM GAS  /tmp/ccszdRNt.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"cli.cpp"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text._ZN17IRQ_observer_base8RegisterEv,"axG",%progbits,_ZN17IRQ_observer_base8RegisterEv
  16              		.align	1
  17              		.weak	_ZN17IRQ_observer_base8RegisterEv
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	_ZN17IRQ_observer_base8RegisterEv:
  25              	.LVL0:
  26              	.LFB1692:
  27              		.file 1 "alohal/irq/irq_observer.hpp"
   1:alohal/irq/irq_observer.hpp **** #ifndef IRQ_OBSERVER_HPP
   2:alohal/irq/irq_observer.hpp **** #define IRQ_OBSERVER_HPP
   3:alohal/irq/irq_observer.hpp **** 
   4:alohal/irq/irq_observer.hpp **** // ------------------LIBRARY_INCLUDES--------------
   5:alohal/irq/irq_observer.hpp **** 
   6:alohal/irq/irq_observer.hpp **** #ifdef STM32_F0
   7:alohal/irq/irq_observer.hpp **** # include "stm32f0xx_hal.h"
   8:alohal/irq/irq_observer.hpp **** #elif STM32_F1
   9:alohal/irq/irq_observer.hpp **** # include "stm32f1xx_hal.h"
  10:alohal/irq/irq_observer.hpp **** #elif STM32_F3
  11:alohal/irq/irq_observer.hpp **** # include "stm32f3xx_hal.h"
  12:alohal/irq/irq_observer.hpp **** #elif STM32_F4
  13:alohal/irq/irq_observer.hpp **** # include "stm32f4xx_hal.h"
  14:alohal/irq/irq_observer.hpp **** #elif STM32_F7
  15:alohal/irq/irq_observer.hpp **** # include "stm32f7xx_hal.h"
  16:alohal/irq/irq_observer.hpp **** #endif
  17:alohal/irq/irq_observer.hpp **** 
  18:alohal/irq/irq_observer.hpp **** using namespace std;
  19:alohal/irq/irq_observer.hpp **** 
  20:alohal/irq/irq_observer.hpp **** class IRQ_observer_base {
  21:alohal/irq/irq_observer.hpp **** public:
  22:alohal/irq/irq_observer.hpp ****     IRQ_observer_base() = default;
  23:alohal/irq/irq_observer.hpp ****     virtual ~IRQ_observer_base() = default;
  24:alohal/irq/irq_observer.hpp ****     virtual void Register(){ }
  28              		.loc 1 24 18 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 24 30 is_stmt 0 view .LVU1
  34              		@ sp needed
ARM GAS  /tmp/ccszdRNt.s 			page 2


  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE1692:
  39              		.section	.text._ZN12IRQ_observerI3CLIED2Ev,"axG",%progbits,_ZN12IRQ_observerI3CLIED5Ev,comdat
  40              		.align	1
  41              		.weak	_ZN12IRQ_observerI3CLIED2Ev
  42              		.syntax unified
  43              		.code	16
  44              		.thumb_func
  45              		.fpu softvfp
  47              	_ZN12IRQ_observerI3CLIED2Ev:
  48              	.LVL1:
  49              	.LFB4912:
  25:alohal/irq/irq_observer.hpp **** 
  26:alohal/irq/irq_observer.hpp ****     virtual void Run(){ }
  27:alohal/irq/irq_observer.hpp **** 
  28:alohal/irq/irq_observer.hpp ****     virtual void * Get_origin_object() = 0;
  29:alohal/irq/irq_observer.hpp **** };
  30:alohal/irq/irq_observer.hpp **** 
  31:alohal/irq/irq_observer.hpp **** template <typename observer_class>
  32:alohal/irq/irq_observer.hpp **** class IRQ_observer : public IRQ_observer_base {
  50              		.loc 1 32 7 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 0, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		@ link register save eliminated.
  55              	.LBB4476:
  56              	.LBI4476:
  23:alohal/irq/irq_observer.hpp ****     virtual void Register(){ }
  57              		.loc 1 23 13 view .LVU3
  23:alohal/irq/irq_observer.hpp ****     virtual void Register(){ }
  58              		.loc 1 23 13 is_stmt 0 view .LVU4
  59              	.LBE4476:
  60              		.loc 1 32 7 view .LVU5
  61              		@ sp needed
  62 0000 7047     		bx	lr
  63              		.cfi_endproc
  64              	.LFE4912:
  66              		.weak	_ZN12IRQ_observerI3CLIED1Ev
  67              		.thumb_set _ZN12IRQ_observerI3CLIED1Ev,_ZN12IRQ_observerI3CLIED2Ev
  68              		.section	.text._ZN12IRQ_observerI3CLIE3RunEv,"axG",%progbits,_ZN12IRQ_observerI3CLIE3RunEv,comdat
  69              		.align	1
  70              		.weak	_ZN12IRQ_observerI3CLIE3RunEv
  71              		.syntax unified
  72              		.code	16
  73              		.thumb_func
  74              		.fpu softvfp
  76              	_ZN12IRQ_observerI3CLIE3RunEv:
  77              	.LVL2:
  78              	.LFB4926:
  33:alohal/irq/irq_observer.hpp ****     void *pointer_to_origin;
  34:alohal/irq/irq_observer.hpp **** 
  35:alohal/irq/irq_observer.hpp ****     observer_class * object_ptr = nullptr;
  36:alohal/irq/irq_observer.hpp ****     void (observer_class::*method_pointer)();
  37:alohal/irq/irq_observer.hpp **** 
  38:alohal/irq/irq_observer.hpp ****     void (*function)(void) = nullptr;
  39:alohal/irq/irq_observer.hpp **** 
ARM GAS  /tmp/ccszdRNt.s 			page 3


  40:alohal/irq/irq_observer.hpp **** public:
  41:alohal/irq/irq_observer.hpp ****     IRQ_observer() = default;
  42:alohal/irq/irq_observer.hpp **** 
  43:alohal/irq/irq_observer.hpp ****     void Register(observer_class& object_set, void (observer_class::*method_pointer_set)()){
  44:alohal/irq/irq_observer.hpp ****         pointer_to_origin = &object_set;
  45:alohal/irq/irq_observer.hpp ****         object_ptr         = &object_set;
  46:alohal/irq/irq_observer.hpp ****         method_pointer = method_pointer_set;
  47:alohal/irq/irq_observer.hpp ****     }
  48:alohal/irq/irq_observer.hpp **** 
  49:alohal/irq/irq_observer.hpp ****     void Register(observer_class* object_set, void (observer_class::*method_pointer_set)()){
  50:alohal/irq/irq_observer.hpp ****         pointer_to_origin = &object_set;
  51:alohal/irq/irq_observer.hpp ****         object_ptr        = object_set;
  52:alohal/irq/irq_observer.hpp ****         method_pointer = method_pointer_set;
  53:alohal/irq/irq_observer.hpp ****     }
  54:alohal/irq/irq_observer.hpp **** 
  55:alohal/irq/irq_observer.hpp ****     void Register(void (*function_pointer_set)(void)){
  56:alohal/irq/irq_observer.hpp ****         function = function_pointer_set;
  57:alohal/irq/irq_observer.hpp ****     }
  58:alohal/irq/irq_observer.hpp **** 
  59:alohal/irq/irq_observer.hpp ****     void Run() override {
  79              		.loc 1 59 10 is_stmt 1 view -0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83              		.loc 1 59 10 is_stmt 0 view .LVU7
  84 0000 10B5     		push	{r4, lr}
  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 14, -4
  60:alohal/irq/irq_observer.hpp ****         if (function) {
  89              		.loc 1 60 13 view .LVU8
  90 0002 4369     		ldr	r3, [r0, #20]
  91              		.loc 1 60 9 view .LVU9
  92 0004 002B     		cmp	r3, #0
  93 0006 01D0     		beq	.L4
  61:alohal/irq/irq_observer.hpp ****             (*(function))();
  94              		.loc 1 61 26 view .LVU10
  95 0008 9847     		blx	r3
  96              	.LVL3:
  97              	.L3:
  62:alohal/irq/irq_observer.hpp ****         } else if (object_ptr){
  63:alohal/irq/irq_observer.hpp ****             (*object_ptr.*method_pointer)();
  64:alohal/irq/irq_observer.hpp ****         }
  65:alohal/irq/irq_observer.hpp ****     }
  98              		.loc 1 65 5 view .LVU11
  99              		@ sp needed
 100 000a 10BD     		pop	{r4, pc}
 101              	.LVL4:
 102              	.L4:
  62:alohal/irq/irq_observer.hpp ****         } else if (object_ptr){
 103              		.loc 1 62 20 view .LVU12
 104 000c 8368     		ldr	r3, [r0, #8]
  62:alohal/irq/irq_observer.hpp ****         } else if (object_ptr){
 105              		.loc 1 62 16 view .LVU13
 106 000e 002B     		cmp	r3, #0
 107 0010 FBD0     		beq	.L3
ARM GAS  /tmp/ccszdRNt.s 			page 4


  63:alohal/irq/irq_observer.hpp ****         }
 108              		.loc 1 63 42 view .LVU14
 109 0012 0269     		ldr	r2, [r0, #16]
 110 0014 D107     		lsls	r1, r2, #31
 111 0016 04D4     		bmi	.L6
  63:alohal/irq/irq_observer.hpp ****         }
 112              		.loc 1 63 42 discriminator 1 view .LVU15
 113 0018 C168     		ldr	r1, [r0, #12]
 114              	.L7:
  63:alohal/irq/irq_observer.hpp ****         }
 115              		.loc 1 63 42 discriminator 4 view .LVU16
 116 001a 5010     		asrs	r0, r2, #1
 117              	.LVL5:
  63:alohal/irq/irq_observer.hpp ****         }
 118              		.loc 1 63 42 discriminator 4 view .LVU17
 119 001c 1818     		adds	r0, r3, r0
 120 001e 8847     		blx	r1
 121              	.LVL6:
 122              		.loc 1 65 5 discriminator 4 view .LVU18
 123 0020 F3E7     		b	.L3
 124              	.LVL7:
 125              	.L6:
  63:alohal/irq/irq_observer.hpp ****         }
 126              		.loc 1 63 42 discriminator 2 view .LVU19
 127 0022 5110     		asrs	r1, r2, #1
 128 0024 5C58     		ldr	r4, [r3, r1]
 129 0026 C168     		ldr	r1, [r0, #12]
 130 0028 6158     		ldr	r1, [r4, r1]
 131 002a F6E7     		b	.L7
 132              		.cfi_endproc
 133              	.LFE4926:
 135              		.section	.text._ZN12IRQ_observerI3CLIE17Get_origin_objectEv,"axG",%progbits,_ZN12IRQ_observerI3CLI
 136              		.align	1
 137              		.weak	_ZN12IRQ_observerI3CLIE17Get_origin_objectEv
 138              		.syntax unified
 139              		.code	16
 140              		.thumb_func
 141              		.fpu softvfp
 143              	_ZN12IRQ_observerI3CLIE17Get_origin_objectEv:
 144              	.LVL8:
 145              	.LFB4927:
  66:alohal/irq/irq_observer.hpp **** 
  67:alohal/irq/irq_observer.hpp ****     void * Get_origin_object() override {
 146              		.loc 1 67 12 is_stmt 1 view -0
 147              		.cfi_startproc
 148              		@ args = 0, pretend = 0, frame = 0
 149              		@ frame_needed = 0, uses_anonymous_args = 0
 150              		@ link register save eliminated.
  68:alohal/irq/irq_observer.hpp ****         return pointer_to_origin;
 151              		.loc 1 68 16 is_stmt 0 view .LVU21
 152 0000 4068     		ldr	r0, [r0, #4]
 153              	.LVL9:
  69:alohal/irq/irq_observer.hpp ****     }
 154              		.loc 1 69 5 view .LVU22
 155              		@ sp needed
 156 0002 7047     		bx	lr
 157              		.cfi_endproc
ARM GAS  /tmp/ccszdRNt.s 			page 5


 158              	.LFE4927:
 160              		.section	.text._ZN12IRQ_observerI3CLIED0Ev,"axG",%progbits,_ZN12IRQ_observerI3CLIED5Ev,comdat
 161              		.align	1
 162              		.weak	_ZN12IRQ_observerI3CLIED0Ev
 163              		.syntax unified
 164              		.code	16
 165              		.thumb_func
 166              		.fpu softvfp
 168              	_ZN12IRQ_observerI3CLIED0Ev:
 169              	.LVL10:
 170              	.LFB4914:
  32:alohal/irq/irq_observer.hpp ****     void *pointer_to_origin;
 171              		.loc 1 32 7 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 0
 174              		@ frame_needed = 0, uses_anonymous_args = 0
  32:alohal/irq/irq_observer.hpp ****     void *pointer_to_origin;
 175              		.loc 1 32 7 is_stmt 0 view .LVU24
 176 0000 10B5     		push	{r4, lr}
 177              	.LCFI1:
 178              		.cfi_def_cfa_offset 8
 179              		.cfi_offset 4, -8
 180              		.cfi_offset 14, -4
 181 0002 0400     		movs	r4, r0
 182              	.LVL11:
 183              	.LBB4477:
 184              	.LBI4477:
  32:alohal/irq/irq_observer.hpp ****     void *pointer_to_origin;
 185              		.loc 1 32 7 is_stmt 1 view .LVU25
 186              	.LBB4478:
 187              	.LBI4478:
  23:alohal/irq/irq_observer.hpp ****     virtual void Register(){ }
 188              		.loc 1 23 13 view .LVU26
  23:alohal/irq/irq_observer.hpp ****     virtual void Register(){ }
 189              		.loc 1 23 13 is_stmt 0 view .LVU27
 190              	.LBE4478:
 191              	.LBE4477:
  32:alohal/irq/irq_observer.hpp ****     void *pointer_to_origin;
 192              		.loc 1 32 7 view .LVU28
 193 0004 1821     		movs	r1, #24
 194 0006 FFF7FEFF 		bl	_ZdlPvj
 195              	.LVL12:
  32:alohal/irq/irq_observer.hpp ****     void *pointer_to_origin;
 196              		.loc 1 32 7 view .LVU29
 197 000a 2000     		movs	r0, r4
 198              		@ sp needed
 199              	.LVL13:
  32:alohal/irq/irq_observer.hpp ****     void *pointer_to_origin;
 200              		.loc 1 32 7 view .LVU30
 201 000c 10BD     		pop	{r4, pc}
 202              		.cfi_endproc
 203              	.LFE4914:
 205              		.section	.text._ZN3CLI28Enable_filesystem_executableEP10Filesystem,"ax",%progbits
 206              		.align	1
 207              		.global	_ZN3CLI28Enable_filesystem_executableEP10Filesystem
 208              		.syntax unified
 209              		.code	16
ARM GAS  /tmp/ccszdRNt.s 			page 6


 210              		.thumb_func
 211              		.fpu softvfp
 213              	_ZN3CLI28Enable_filesystem_executableEP10Filesystem:
 214              	.LVL14:
 215              	.LFB3869:
 216              		.file 2 "alohal/cli/cli.cpp"
   1:alohal/cli/cli.cpp **** #include "cli.hpp"
   2:alohal/cli/cli.cpp **** 
   3:alohal/cli/cli.cpp **** #include "filesystem/filesystem.hpp"
   4:alohal/cli/cli.cpp **** #include "device/device.hpp"
   5:alohal/cli/cli.cpp **** #include "globals.hpp"
   6:alohal/cli/cli.cpp **** 
   7:alohal/cli/cli.cpp **** void CLI::Connect(Serial_line *connection){
   8:alohal/cli/cli.cpp ****     serial_connection = connection;
   9:alohal/cli/cli.cpp ****     serial_connection->IRQ->Register(this, &CLI::Char_load);
  10:alohal/cli/cli.cpp ****     serial_connection->Send("\r\n");
  11:alohal/cli/cli.cpp **** }
  12:alohal/cli/cli.cpp **** 
  13:alohal/cli/cli.cpp **** void CLI::Start(){
  14:alohal/cli/cli.cpp ****     Register_command("help", "Print available commands or help for given command, example: help, he
  15:alohal/cli/cli.cpp ****     Register_command("build_info", "Print information about compilation as compiler version and dat
  16:alohal/cli/cli.cpp ****     Clear_line();
  17:alohal/cli/cli.cpp **** }
  18:alohal/cli/cli.cpp **** 
  19:alohal/cli/cli.cpp **** void CLI::Char_load(){
  20:alohal/cli/cli.cpp ****     while (serial_connection->Buffer_size() > 0) {
  21:alohal/cli/cli.cpp ****         Process_character();
  22:alohal/cli/cli.cpp ****     }
  23:alohal/cli/cli.cpp **** }
  24:alohal/cli/cli.cpp **** 
  25:alohal/cli/cli.cpp **** void CLI::Process_character(){
  26:alohal/cli/cli.cpp ****     char received_char = serial_connection->Read(1)[0];
  27:alohal/cli/cli.cpp **** 
  28:alohal/cli/cli.cpp ****     if (escape_sequency_remaining > 1) {
  29:alohal/cli/cli.cpp ****         escape_sequency_remaining--;
  30:alohal/cli/cli.cpp ****         return;
  31:alohal/cli/cli.cpp ****     }
  32:alohal/cli/cli.cpp **** 
  33:alohal/cli/cli.cpp ****     // Newline (picocom - \r)
  34:alohal/cli/cli.cpp ****     if (received_char == 13) {
  35:alohal/cli/cli.cpp ****         Process_line();
  36:alohal/cli/cli.cpp ****         Clear_line();
  37:alohal/cli/cli.cpp ****         return;
  38:alohal/cli/cli.cpp ****     }
  39:alohal/cli/cli.cpp ****     // Escape sequence -> skip next character [, after that use arrow sign
  40:alohal/cli/cli.cpp ****     else if (received_char == 27) {
  41:alohal/cli/cli.cpp ****         escape_sequency_remaining = 2;
  42:alohal/cli/cli.cpp ****         return;
  43:alohal/cli/cli.cpp ****     }
  44:alohal/cli/cli.cpp ****     // Backspace (screen - DEL)
  45:alohal/cli/cli.cpp ****     else if (received_char == 127) { // backspace (screen - DEL)
  46:alohal/cli/cli.cpp ****         if (actual_line.length() > (line_opening.length() + line_prefix.length())) {
  47:alohal/cli/cli.cpp ****             actual_line = actual_line.substr(0, actual_line.length() - 1);
  48:alohal/cli/cli.cpp ****         }
  49:alohal/cli/cli.cpp ****     }
  50:alohal/cli/cli.cpp ****     // Handle escape sequence for arrows
  51:alohal/cli/cli.cpp ****     else if (escape_sequency_remaining == 1) {
ARM GAS  /tmp/ccszdRNt.s 			page 7


  52:alohal/cli/cli.cpp ****         if (command_history) {
  53:alohal/cli/cli.cpp ****             // History arrow up
  54:alohal/cli/cli.cpp ****             if (received_char == 65) {
  55:alohal/cli/cli.cpp ****                 Set_line(command_history->Up());
  56:alohal/cli/cli.cpp ****             }
  57:alohal/cli/cli.cpp ****             // History arrow down
  58:alohal/cli/cli.cpp ****             else if (received_char == 66) {
  59:alohal/cli/cli.cpp ****                 Set_line(command_history->Down());
  60:alohal/cli/cli.cpp ****             }
  61:alohal/cli/cli.cpp ****         }
  62:alohal/cli/cli.cpp ****         escape_sequency_remaining = 0;
  63:alohal/cli/cli.cpp ****     }
  64:alohal/cli/cli.cpp ****     // Autocomplete
  65:alohal/cli/cli.cpp ****     else if (received_char == 9) {
  66:alohal/cli/cli.cpp ****         // If nothing on line skip autocomplete
  67:alohal/cli/cli.cpp ****         if ((actual_line.back() != ' ') or (actual_line != line_prefix + line_opening)) {
  68:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
  69:alohal/cli/cli.cpp ****             Autocomplete(actual_line.substr(actual_line.find_last_of(" ") + 1, actual_line.length()
  70:alohal/cli/cli.cpp ****         }
  71:alohal/cli/cli.cpp ****     }
  72:alohal/cli/cli.cpp ****     // Any other printable character
  73:alohal/cli/cli.cpp ****     else if (isprint(received_char)) {
  74:alohal/cli/cli.cpp ****         actual_line += string(1, received_char);
  75:alohal/cli/cli.cpp ****     }
  76:alohal/cli/cli.cpp ****     Redraw_line();
  77:alohal/cli/cli.cpp **** } // CLI::Process_character
  78:alohal/cli/cli.cpp **** 
  79:alohal/cli/cli.cpp **** int CLI::Process_line(){
  80:alohal/cli/cli.cpp ****     size_t position = actual_line.find(line_opening);
  81:alohal/cli/cli.cpp ****     string cmd_line = actual_line.substr(position + line_opening.length(), actual_line.length() - p
  82:alohal/cli/cli.cpp **** 
  83:alohal/cli/cli.cpp ****     // only Enter is pressed
  84:alohal/cli/cli.cpp ****     if (cmd_line == "") {
  85:alohal/cli/cli.cpp ****         Print("\r\n");
  86:alohal/cli/cli.cpp ****         Clear_line();
  87:alohal/cli/cli.cpp ****         if (History()) {
  88:alohal/cli/cli.cpp ****             command_history->Reset_pointer();
  89:alohal/cli/cli.cpp ****         }
  90:alohal/cli/cli.cpp ****         return 0;
  91:alohal/cli/cli.cpp ****     }
  92:alohal/cli/cli.cpp **** 
  93:alohal/cli/cli.cpp ****     // Add new record to history if is enabled
  94:alohal/cli/cli.cpp ****     if (History()) {
  95:alohal/cli/cli.cpp ****         command_history->Update(cmd_line);
  96:alohal/cli/cli.cpp ****     }
  97:alohal/cli/cli.cpp **** 
  98:alohal/cli/cli.cpp ****     // parse command line into vector of strings (first is command, next are arguments)
  99:alohal/cli/cli.cpp ****     vector<string> args;
 100:alohal/cli/cli.cpp ****     while ((position = cmd_line.find(" ")) != string::npos) {
 101:alohal/cli/cli.cpp ****         string cmd = cmd_line.substr(0, position);
 102:alohal/cli/cli.cpp ****         if (cmd.find_first_not_of(' ') != std::string::npos) {
 103:alohal/cli/cli.cpp ****             args.emplace_back(cmd);
 104:alohal/cli/cli.cpp ****         }
 105:alohal/cli/cli.cpp ****         cmd_line.erase(0, position + 1);
 106:alohal/cli/cli.cpp ****     }
 107:alohal/cli/cli.cpp ****     args.emplace_back(cmd_line);
 108:alohal/cli/cli.cpp **** 
ARM GAS  /tmp/ccszdRNt.s 			page 8


 109:alohal/cli/cli.cpp ****     if (args.size() < 1) {
 110:alohal/cli/cli.cpp ****         return -1;
 111:alohal/cli/cli.cpp ****     }
 112:alohal/cli/cli.cpp ****     Print("\r\r\n");
 113:alohal/cli/cli.cpp **** 
 114:alohal/cli/cli.cpp ****     // Handle input for foreground application
 115:alohal/cli/cli.cpp ****     if (fs and foreground_application) {
 116:alohal/cli/cli.cpp ****         // Insert name of app as first argument to adhere to conventions
 117:alohal/cli/cli.cpp ****         args.insert(args.begin(), foreground_application->Name());
 118:alohal/cli/cli.cpp ****         Process_foreground_application(args);
 119:alohal/cli/cli.cpp ****         return 0;
 120:alohal/cli/cli.cpp ****     }
 121:alohal/cli/cli.cpp **** 
 122:alohal/cli/cli.cpp ****     // Run registred command
 123:alohal/cli/cli.cpp ****     for (auto &command:commands) {
 124:alohal/cli/cli.cpp ****         if (args[0] == command->Get_command()) {
 125:alohal/cli/cli.cpp ****             int ret = command->Invoke(args);
 126:alohal/cli/cli.cpp ****             actual_line = line_opening;
 127:alohal/cli/cli.cpp ****             Clear_line();
 128:alohal/cli/cli.cpp ****             return ret;
 129:alohal/cli/cli.cpp ****         }
 130:alohal/cli/cli.cpp ****     }
 131:alohal/cli/cli.cpp **** 
 132:alohal/cli/cli.cpp ****     // Run executable from filesystem if exists
 133:alohal/cli/cli.cpp ****     if (fs) {
 134:alohal/cli/cli.cpp ****         string path = args[0];
 135:alohal/cli/cli.cpp ****         unsigned int position = path.find_last_of("/");
 136:alohal/cli/cli.cpp ****         if (position != string::npos) {
 137:alohal/cli/cli.cpp ****             args[0] = path.substr(position + 1);
 138:alohal/cli/cli.cpp ****         }
 139:alohal/cli/cli.cpp ****         return fs->Execute(path, args);
 140:alohal/cli/cli.cpp ****     }
 141:alohal/cli/cli.cpp **** 
 142:alohal/cli/cli.cpp ****     Print("Command \"" + args[0] + "\" was not found\r\n");
 143:alohal/cli/cli.cpp ****     return -1;
 144:alohal/cli/cli.cpp **** } // CLI::Process_line
 145:alohal/cli/cli.cpp **** 
 146:alohal/cli/cli.cpp **** bool CLI::Start_foreground_application(string path_to_application){
 147:alohal/cli/cli.cpp ****     if (fs and fs->Entry_exists(path_to_application)) {
 148:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 149:alohal/cli/cli.cpp ****             foreground_application = static_cast<Executable *>(fs->Get_entry(path_to_application));
 150:alohal/cli/cli.cpp ****             Set_line_prefix("$" + foreground_application->Name());
 151:alohal/cli/cli.cpp ****             return true;
 152:alohal/cli/cli.cpp ****         }
 153:alohal/cli/cli.cpp ****     }
 154:alohal/cli/cli.cpp ****     return false;
 155:alohal/cli/cli.cpp **** }
 156:alohal/cli/cli.cpp **** 
 157:alohal/cli/cli.cpp **** void CLI::Stop_foreground_application(){
 158:alohal/cli/cli.cpp ****     foreground_application = nullptr;
 159:alohal/cli/cli.cpp ****     if (fs) {
 160:alohal/cli/cli.cpp ****         // Refresh line opening for filesystem when exiting foreground application
 161:alohal/cli/cli.cpp ****         fs->Set_location(".");
 162:alohal/cli/cli.cpp ****     }
 163:alohal/cli/cli.cpp **** }
 164:alohal/cli/cli.cpp **** 
 165:alohal/cli/cli.cpp **** void CLI::Process_foreground_application(vector<string> args){
ARM GAS  /tmp/ccszdRNt.s 			page 9


 166:alohal/cli/cli.cpp ****     if (args[1] == "exit") {
 167:alohal/cli/cli.cpp ****         Stop_foreground_application();
 168:alohal/cli/cli.cpp ****     } else {
 169:alohal/cli/cli.cpp ****         foreground_application->Run(args);
 170:alohal/cli/cli.cpp ****     }
 171:alohal/cli/cli.cpp **** }
 172:alohal/cli/cli.cpp **** 
 173:alohal/cli/cli.cpp **** int CLI::Enable_filesystem_executable(Filesystem *fs){
 217              		.loc 2 173 54 is_stmt 1 view -0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 0
 220              		@ frame_needed = 0, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222              		.loc 2 173 54 is_stmt 0 view .LVU32
 223 0000 0300     		movs	r3, r0
 174:alohal/cli/cli.cpp ****     int ret = 0;
 224              		.loc 2 174 5 is_stmt 1 view .LVU33
 225              	.LVL15:
 175:alohal/cli/cli.cpp ****     if (this->fs != nullptr) {
 226              		.loc 2 175 5 view .LVU34
 227 0002 C26C     		ldr	r2, [r0, #76]
 228 0004 002A     		cmp	r2, #0
 229 0006 02D0     		beq	.L13
 176:alohal/cli/cli.cpp ****         ret = 1;
 230              		.loc 2 176 13 is_stmt 0 view .LVU35
 231 0008 0120     		movs	r0, #1
 232              	.LVL16:
 233              	.L11:
 177:alohal/cli/cli.cpp ****     }
 178:alohal/cli/cli.cpp ****     this->fs = fs;
 234              		.loc 2 178 5 is_stmt 1 view .LVU36
 235              		.loc 2 178 14 is_stmt 0 view .LVU37
 236 000a D964     		str	r1, [r3, #76]
 179:alohal/cli/cli.cpp ****     return ret;
 237              		.loc 2 179 5 is_stmt 1 view .LVU38
 180:alohal/cli/cli.cpp **** }
 238              		.loc 2 180 1 is_stmt 0 view .LVU39
 239              		@ sp needed
 240 000c 7047     		bx	lr
 241              	.LVL17:
 242              	.L13:
 174:alohal/cli/cli.cpp ****     if (this->fs != nullptr) {
 243              		.loc 2 174 9 view .LVU40
 244 000e 0020     		movs	r0, #0
 245              	.LVL18:
 174:alohal/cli/cli.cpp ****     if (this->fs != nullptr) {
 246              		.loc 2 174 9 view .LVU41
 247 0010 FBE7     		b	.L11
 248              		.cfi_endproc
 249              	.LFE3869:
 251              		.section	.text._ZN3CLI14Enable_historyEj,"ax",%progbits
 252              		.align	1
 253              		.global	_ZN3CLI14Enable_historyEj
 254              		.syntax unified
 255              		.code	16
 256              		.thumb_func
 257              		.fpu softvfp
ARM GAS  /tmp/ccszdRNt.s 			page 10


 259              	_ZN3CLI14Enable_historyEj:
 260              	.LVL19:
 261              	.LFB3875:
 181:alohal/cli/cli.cpp **** 
 182:alohal/cli/cli.cpp **** int CLI::Redraw_line(){
 183:alohal/cli/cli.cpp ****     // Actual_line is text which will be now printed
 184:alohal/cli/cli.cpp ****     int missing_spaces = last_printed_line.length() - actual_line.length();
 185:alohal/cli/cli.cpp ****     if (missing_spaces > 0) {
 186:alohal/cli/cli.cpp ****         Print("\r" + string(last_printed_line.length(), ' ') + "\r" + actual_line);
 187:alohal/cli/cli.cpp ****     } else {
 188:alohal/cli/cli.cpp ****         Print("\r" + actual_line);
 189:alohal/cli/cli.cpp ****     }
 190:alohal/cli/cli.cpp ****     last_printed_line = actual_line;
 191:alohal/cli/cli.cpp ****     return actual_line.length();
 192:alohal/cli/cli.cpp **** }
 193:alohal/cli/cli.cpp **** 
 194:alohal/cli/cli.cpp **** int CLI::Set_line(string text){
 195:alohal/cli/cli.cpp ****     actual_line = line_prefix + line_opening + text;
 196:alohal/cli/cli.cpp ****     return actual_line.size();
 197:alohal/cli/cli.cpp **** }
 198:alohal/cli/cli.cpp **** 
 199:alohal/cli/cli.cpp **** void CLI::Set_line_prefix(const string prefix){
 200:alohal/cli/cli.cpp ****     line_prefix = prefix;
 201:alohal/cli/cli.cpp ****     if (line_prefix.back() == '/' && line_prefix.length() > 1) {
 202:alohal/cli/cli.cpp ****         line_prefix.erase(line_prefix.length() - 1);
 203:alohal/cli/cli.cpp ****     }
 204:alohal/cli/cli.cpp ****     line_prefix = "\u001b[34;1m" + line_prefix + "\u001b[0m";
 205:alohal/cli/cli.cpp ****     Clear_line();
 206:alohal/cli/cli.cpp **** }
 207:alohal/cli/cli.cpp **** 
 208:alohal/cli/cli.cpp **** void CLI::Clear_line(){
 209:alohal/cli/cli.cpp ****     actual_line = line_prefix + line_opening;
 210:alohal/cli/cli.cpp ****     Redraw_line();
 211:alohal/cli/cli.cpp **** }
 212:alohal/cli/cli.cpp **** 
 213:alohal/cli/cli.cpp **** int CLI::Print(const string text){
 214:alohal/cli/cli.cpp ****     serial_connection->Send(text);
 215:alohal/cli/cli.cpp ****     return text.length();
 216:alohal/cli/cli.cpp **** }
 217:alohal/cli/cli.cpp **** 
 218:alohal/cli/cli.cpp **** int CLI::Enable_history(uint size_of_history){
 262              		.loc 2 218 46 is_stmt 1 view -0
 263              		.cfi_startproc
 264              		@ args = 0, pretend = 0, frame = 0
 265              		@ frame_needed = 0, uses_anonymous_args = 0
 266              		.loc 2 218 46 is_stmt 0 view .LVU43
 267 0000 70B5     		push	{r4, r5, r6, lr}
 268              	.LCFI2:
 269              		.cfi_def_cfa_offset 16
 270              		.cfi_offset 4, -16
 271              		.cfi_offset 5, -12
 272              		.cfi_offset 6, -8
 273              		.cfi_offset 14, -4
 274 0002 0400     		movs	r4, r0
 275 0004 0E00     		movs	r6, r1
 219:alohal/cli/cli.cpp ****     if (command_history != nullptr) {
 276              		.loc 2 219 5 is_stmt 1 view .LVU44
ARM GAS  /tmp/ccszdRNt.s 			page 11


 277 0006 436F     		ldr	r3, [r0, #116]
 278 0008 002B     		cmp	r3, #0
 279 000a 09D1     		bne	.L16
 220:alohal/cli/cli.cpp ****         return -1;
 221:alohal/cli/cli.cpp ****     }
 222:alohal/cli/cli.cpp ****     command_history = new CLI_history(size_of_history);
 280              		.loc 2 222 5 view .LVU45
 281              		.loc 2 222 54 is_stmt 0 view .LVU46
 282 000c 1C20     		movs	r0, #28
 283              	.LVL20:
 284              		.loc 2 222 54 view .LVU47
 285 000e FFF7FEFF 		bl	_Znwj
 286              	.LVL21:
 287              		.loc 2 222 54 view .LVU48
 288 0012 0500     		movs	r5, r0
 289 0014 3100     		movs	r1, r6
 290 0016 FFF7FEFF 		bl	_ZN11CLI_historyC1Ej
 291              	.LVL22:
 292              		.loc 2 222 21 view .LVU49
 293 001a 6567     		str	r5, [r4, #116]
 223:alohal/cli/cli.cpp ****     return 0;
 294              		.loc 2 223 5 is_stmt 1 view .LVU50
 295              		.loc 2 223 12 is_stmt 0 view .LVU51
 296 001c 0020     		movs	r0, #0
 297              	.L14:
 224:alohal/cli/cli.cpp **** }
 298              		.loc 2 224 1 view .LVU52
 299              		@ sp needed
 300              	.LVL23:
 301              	.LVL24:
 302              		.loc 2 224 1 view .LVU53
 303 001e 70BD     		pop	{r4, r5, r6, pc}
 304              	.LVL25:
 305              	.L16:
 220:alohal/cli/cli.cpp ****         return -1;
 306              		.loc 2 220 17 view .LVU54
 307 0020 0120     		movs	r0, #1
 308              	.LVL26:
 220:alohal/cli/cli.cpp ****         return -1;
 309              		.loc 2 220 17 view .LVU55
 310 0022 4042     		rsbs	r0, r0, #0
 311 0024 FBE7     		b	.L14
 312              		.cfi_endproc
 313              	.LFE3875:
 315              		.section	.rodata._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_.st
 316              		.align	2
 317              	.LC0:
 318 0000 62617369 		.ascii	"basic_string::append\000"
 318      635F7374 
 318      72696E67 
 318      3A3A6170 
 318      70656E64 
 319              		.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_,"axG
 320              		.align	1
 321              		.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 322              		.syntax unified
 323              		.code	16
ARM GAS  /tmp/ccszdRNt.s 			page 12


 324              		.thumb_func
 325              		.fpu softvfp
 327              	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:
 328              	.LVL27:
 329              	.LFB4242:
 330              		.file 3 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** /** @file bits/basic_string.tcc
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****  *  Do not attempt to use it directly. @headername{string}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** //
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // ISO C++ 14882: 21  Strings library
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** //
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Written by Jason Merrill based upon the specification by Takanori Adachi
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // in ANSI X3J16/94-0013R2.  Rewritten by Nathan Myers to ISO-14882.
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // Non-reference-counted implementation written by Paolo Carlini and
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** // updated by Jonathan Wakely for ISO-14882-2011.
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #ifndef _BASIC_STRING_TCC
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #define _BASIC_STRING_TCC 1
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #pragma GCC system_header
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #include <bits/cxxabi_forced.h>
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** {
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_USE_CXX11_ABI
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccszdRNt.s 			page 13


  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     swap(basic_string& __s) _GLIBCXX_NOEXCEPT
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this == &__s)
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return;
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Alloc_traits::_S_on_swap(_M_get_allocator(), __s._M_get_allocator());
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_is_local())
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__s._M_is_local())
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    if (length() && __s.length())
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_CharT __tmp_data[_S_local_capacity + 1];
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(__tmp_data, __s._M_local_buf,
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __tmp_data,
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    else if (__s.length())
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(_M_local_buf, __s._M_local_buf,
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_M_length(__s.length());
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		__s._M_set_length(0);
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		return;
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    else if (length())
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		traits_type::copy(__s._M_local_buf, _M_local_buf,
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  _S_local_capacity + 1);
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		__s._M_length(length());
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_M_set_length(0);
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		return;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	else
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    const size_type __tmp_capacity = __s._M_allocated_capacity;
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    traits_type::copy(__s._M_local_buf, _M_local_buf,
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			      _S_local_capacity + 1);
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_data(__s._M_data());
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __s._M_data(__s._M_local_buf);
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__tmp_capacity);
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __tmp_capacity = _M_allocated_capacity;
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__s._M_is_local())
ARM GAS  /tmp/ccszdRNt.s 			page 14


 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      traits_type::copy(_M_local_buf, __s._M_local_buf,
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				_S_local_capacity + 1);
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      __s._M_data(_M_data());
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(_M_local_buf);
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      pointer __tmp_ptr = _M_data();
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(__s._M_data());
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      __s._M_data(__tmp_ptr);
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_capacity(__s._M_allocated_capacity);
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __s._M_capacity(__tmp_capacity);
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __tmp_length = length();
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_length(__s.length());
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __s._M_length(__tmp_length);
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::pointer
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_create(size_type& __capacity, size_type __old_capacity)
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > max_size())
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	std::__throw_length_error(__N("basic_string::_M_create"));
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __capacity = 2 * __old_capacity;
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Never allocate a string bigger than max_size.
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__capacity > max_size())
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __capacity = max_size();
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // null char_type() element.
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return _Alloc_traits::allocate(_M_get_allocator(), __capacity + 1);
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       void
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   std::input_iterator_tag)
ARM GAS  /tmp/ccszdRNt.s 			page 15


 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __len = 0;
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __capacity = size_type(_S_local_capacity);
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	while (__beg != __end && __len < __capacity)
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_data()[__len++] = *__beg;
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    ++__beg;
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    while (__beg != __end)
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		if (__len == __capacity)
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  {
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    // Allocate more space.
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    __capacity = __len + 1;
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    pointer __another = _M_create(__capacity, __len);
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    this->_S_copy(__another, _M_data(), __len);
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_dispose();
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_data(__another);
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_capacity(__capacity);
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  }
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		_M_data()[__len++] = *__beg;
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		++__beg;
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_set_length(__len);
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       void
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   std::forward_iterator_tag)
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __dnew = static_cast<size_type>(std::distance(__beg, __end));
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__dnew > size_type(_S_local_capacity))
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_data(_M_create(__dnew, size_type(0)));
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccszdRNt.s 			page 16


 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  { this->_S_copy_chars(_M_data(), __beg, __end); }
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_dispose();
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_set_length(__dnew);
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_construct(size_type __n, _CharT __c)
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n > size_type(_S_local_capacity))
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(_M_create(__n, size_type(0)));
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_capacity(__n);
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_assign(_M_data(), __n, __c);
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_set_length(__n);
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_assign(const basic_string& __str)
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this != &__str)
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __rsize = __str.length();
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __capacity = capacity();
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__rsize > __capacity)
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      size_type __new_capacity = __rsize;
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      pointer __tmp = _M_create(__new_capacity, __capacity);
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_dispose();
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(__tmp);
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_capacity(__new_capacity);
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__rsize)
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->_S_copy(_M_data(), __str._M_data(), __rsize);
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_set_length(__rsize);
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
ARM GAS  /tmp/ccszdRNt.s 			page 17


 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     reserve(size_type __res)
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Make sure we don't shrink below the current size.
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__res < length())
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__res = length();
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __capacity = capacity();
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__res != __capacity)
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__res > __capacity
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      || __res > size_type(_S_local_capacity))
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      pointer __tmp = _M_create(__res, __capacity);
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      this->_S_copy(__tmp, _M_data(), length() + 1);
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_dispose();
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(__tmp);
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_capacity(__res);
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else if (!_M_is_local())
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      this->_S_copy(_M_local_data(), _M_data(), length() + 1);
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_destroy(__capacity);
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      _M_data(_M_local_data());
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      size_type __len2)
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __how_much = length() - __pos - __len1;
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       size_type __new_capacity = length() + __len2 - __len1;
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       pointer __r = _M_create(__new_capacity, capacity());
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__pos)
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_copy(__r, _M_data(), __pos);
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__s && __len2)
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_copy(__r + __pos, __s, __len2);
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__how_much)
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_copy(__r + __pos + __len2,
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      _M_data() + __pos + __len1, __how_much);
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_dispose();
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_data(__r);
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_capacity(__new_capacity);
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_erase(size_type __pos, size_type __n)
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
ARM GAS  /tmp/ccszdRNt.s 			page 18


 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __how_much = length() - __pos - __n;
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__how_much && __n)
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_move(_M_data() + __pos, _M_data() + __pos + __n, __how_much);
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_set_length(length() - __n);
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     resize(size_type __n, _CharT __c)
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = this->size();
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__size < __n)
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->append(__n - __size, __c);
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else if (__n < __size)
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_set_length(__n);
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_append(const _CharT* __s, size_type __n)
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __len = __n + this->size();
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__len <= this->capacity())
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__n)
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->_S_copy(this->_M_data() + this->size(), __s, __n);
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_mutate(this->size(), size_type(0), __s, __n);
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       this->_M_set_length(__len);
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InputIterator>
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>&
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_replace_dispatch(const_iterator __i1, const_iterator __i2,
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  _InputIterator __k1, _InputIterator __k2,
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  std::__false_type)
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const basic_string __s(__k1, __k2);
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const size_type __n1 = __i2 - __i1;
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _M_replace(__i1 - begin(), __n1, __s._M_data(),
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  __s.size());
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
ARM GAS  /tmp/ccszdRNt.s 			page 19


 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   _CharT __c)
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __old_size = this->size();
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __new_size = __old_size + __n2 - __n1;
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__new_size <= this->capacity())
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  pointer __p = this->_M_data() + __pos1;
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __how_much = __old_size - __pos1 - __n1;
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__how_much && __n1 != __n2)
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->_S_move(__p + __n2, __p + __n1, __how_much);
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_mutate(__pos1, __n1, 0, __n2);
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n2)
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_S_assign(this->_M_data() + __pos1, __n2, __c);
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       this->_M_set_length(__new_size);
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	       const size_type __len2)
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__len1, __len2, "basic_string::_M_replace");
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __old_size = this->size();
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __new_size = __old_size + __len2 - __len1;
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__new_size <= this->capacity())
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  pointer __p = this->_M_data() + __pos;
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __how_much = __old_size - __pos - __len1;
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (_M_disjunct(__s))
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__how_much && __len1 != __len2)
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_move(__p + __len2, __p + __len1, __how_much);
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__len2)
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_copy(__p, __s, __len2);
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      // Work in-place.
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__len2 && __len2 <= __len1)
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_move(__p, __s, __len2);
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__how_much && __len1 != __len2)
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->_S_move(__p + __len2, __p + __len1, __how_much);
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (__len2 > __len1)
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		{
ARM GAS  /tmp/ccszdRNt.s 			page 20


 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  if (__s + __len2 <= __p + __len1)
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    this->_S_move(__p, __s, __len2);
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  else if (__s >= __p + __len1)
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    this->_S_copy(__p, __s + __len2 - __len1, __len2);
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  else
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    {
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      const size_type __nleft = (__p + __len1) - __s;
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      this->_S_move(__p, __s, __nleft);
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		      this->_S_copy(__p + __nleft, __p + __len2,
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				    __len2 - __nleft);
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    }
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		}
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->_M_mutate(__pos, __len1, __s, __len2);
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       this->_M_set_length(__new_size);
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::size_type
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     copy(_CharT* __s, size_type __n, size_type __pos) const
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check(__pos, "basic_string::copy");
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __n = _M_limit(__pos, __n);
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_S_copy(__s, _M_data() + __pos, __n);
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 21.3.5.7 par 3: do not append null.  (good.)
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __n;
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #else  // !_GLIBCXX_USE_CXX11_ABI
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _Rep::_S_max_size = (((npos - sizeof(_Rep_base))/sizeof(_CharT)) - 1) / 4;
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const _CharT
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _Rep::_S_terminal = _CharT();
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     const typename basic_string<_CharT, _Traits, _Alloc>::size_type
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::npos;
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // Linker sets _S_empty_rep_storage to all 0s (one reference, empty string)
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // at static init time (before static ctors are run).
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::size_type
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::_S_empty_rep_storage[
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     (sizeof(_Rep_base) + sizeof(_CharT) + sizeof(size_type) - 1) /
ARM GAS  /tmp/ccszdRNt.s 			page 21


 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       sizeof(size_type)];
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // NB: This is the special case for Input Iterators, used in
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // istreambuf_iterators, etc.
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // Input Iterators have a cost structure very different from
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // pointers, calling for a different coding style.
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InIterator>
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _CharT*
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   input_iterator_tag)
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__beg == __end && __a == _Alloc())
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  return _S_empty_rep()._M_refdata();
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// Avoid reallocation for common case.
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_CharT __buf[128];
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	size_type __len = 0;
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	while (__beg != __end && __len < sizeof(__buf) / sizeof(_CharT))
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __buf[__len++] = *__beg;
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    ++__beg;
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_Rep* __r = _Rep::_S_create(__len, size_type(0), __a);
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(__r->_M_refdata(), __buf, __len);
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    while (__beg != __end)
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      {
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		if (__len == __r->_M_capacity)
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  {
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    // Allocate more space.
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _Rep* __another = _Rep::_S_create(__len + 1, __len, __a);
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_copy(__another->_M_refdata(), __r->_M_refdata(), __len);
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    __r->_M_destroy(__a);
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    __r = __another;
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  }
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		__r->_M_refdata()[__len++] = *__beg;
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		++__beg;
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      }
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __r->_M_destroy(__a);
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__r->_M_set_length_and_sharable(__len);
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return __r->_M_refdata();
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template <typename _InIterator>
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _CharT*
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
ARM GAS  /tmp/ccszdRNt.s 			page 22


 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   forward_iterator_tag)
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__beg == __end && __a == _Alloc())
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  return _S_empty_rep()._M_refdata();
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// NB: Not required, but considered best practice.
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	if (__gnu_cxx::__is_null_pointer(__beg) && __beg != __end)
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __throw_logic_error(__N("basic_string::_S_construct null not valid"));
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const size_type __dnew = static_cast<size_type>(std::distance(__beg,
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 								      __end));
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	// Check for out_of_range and length_error exceptions.
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_Rep* __r = _Rep::_S_create(__dnew, size_type(0), __a);
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__try
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  { _S_copy_chars(__r->_M_refdata(), __beg, __end); }
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__catch(...)
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __r->_M_destroy(__a);
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __throw_exception_again;
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  }
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__r->_M_set_length_and_sharable(__dnew);
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return __r->_M_refdata();
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _CharT*
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _S_construct(size_type __n, _CharT __c, const _Alloc& __a)
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n == 0 && __a == _Alloc())
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _S_empty_rep()._M_refdata();
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Check for out_of_range and length_error exceptions.
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Rep* __r = _Rep::_S_create(__n, size_type(0), __a);
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_assign(__r->_M_refdata(), __n, __c);
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __r->_M_set_length_and_sharable(__n);
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __r->_M_refdata();
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str)
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(__str._M_rep()->_M_grab(_Alloc(__str.get_allocator()),
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 					  __str.get_allocator()),
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  __str.get_allocator())
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const _Alloc& __a)
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(size_type(), _CharT(), __a), __a)
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
ARM GAS  /tmp/ccszdRNt.s 			page 23


 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str, size_type __pos, const _Alloc& __a)
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__str._M_data()
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __str._M_check(__pos,
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 						"basic_string::basic_string"),
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __str._M_data() + __str._M_limit(__pos, npos)
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __pos, __a), __a)
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str, size_type __pos, size_type __n)
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__str._M_data()
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __str._M_check(__pos,
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 						"basic_string::basic_string"),
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __str._M_data() + __str._M_limit(__pos, __n)
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __pos, _Alloc()), _Alloc())
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const basic_string& __str, size_type __pos,
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		 size_type __n, const _Alloc& __a)
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__str._M_data()
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __str._M_check(__pos,
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 						"basic_string::basic_string"),
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __str._M_data() + __str._M_limit(__pos, __n)
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       + __pos, __a), __a)
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // TBD: DPG annotate
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const _CharT* __s, size_type __n, const _Alloc& __a)
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__s, __s + __n, __a), __a)
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // TBD: DPG annotate
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(const _CharT* __s, const _Alloc& __a)
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__s, __s ? __s + traits_type::length(__s) :
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __s + npos, __a), __a)
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(size_type __n, _CharT __c, const _Alloc& __a)
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__n, __c, __a), __a)
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   // TBD: DPG annotate
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InputIterator>
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(_InputIterator __beg, _InputIterator __end, const _Alloc& __a)
ARM GAS  /tmp/ccszdRNt.s 			page 24


 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__beg, __end, __a), __a)
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if __cplusplus >= 201103L
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string(initializer_list<_CharT> __l, const _Alloc& __a)
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     : _M_dataplus(_S_construct(__l.begin(), __l.end(), __a), __a)
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     { }
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     assign(const basic_string& __str)
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep() != __str._M_rep())
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // XXX MT
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const allocator_type __a = this->get_allocator();
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _CharT* __tmp = __str._M_rep()->_M_grab(__a, __str.get_allocator());
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_dispose(__a);
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__tmp);
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     assign(const _CharT* __s, size_type __n)
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(this->size(), __n, "basic_string::assign");
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _M_replace_safe(size_type(0), this->size(), __s, __n);
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Work in-place.
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __pos = __s - _M_data();
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__pos >= __n)
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_copy(_M_data(), __s, __n);
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  else if (__pos)
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_move(_M_data(), __s, __n);
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__n);
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  return *this;
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(size_type __n, _CharT __c)
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_check_length(size_type(0), __n, "basic_string::append");	  
ARM GAS  /tmp/ccszdRNt.s 			page 25


 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __n + this->size();
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->reserve(__len);
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_assign(_M_data() + this->size(), __n, __c);
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(const _CharT* __s, size_type __n)
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_check_length(size_type(0), __n, "basic_string::append");
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __n + this->size();
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    {
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      if (_M_disjunct(__s))
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		this->reserve(__len);
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      else
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		{
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  const size_type __off = __s - _M_data();
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  this->reserve(__len);
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  __s = _M_data() + __off;
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		}
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    }
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_copy(_M_data() + this->size(), __s, __n);
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(const basic_string& __str)
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = __str.size();
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__size)
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __size + this->size();
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->reserve(__len);
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_copy(_M_data() + this->size(), __str._M_data(), __size);
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }    
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     append(const basic_string& __str, size_type __pos, size_type __n)
ARM GAS  /tmp/ccszdRNt.s 			page 26


 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str._M_check(__pos, "basic_string::append");
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __n = __str._M_limit(__pos, __n);
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __len = __n + this->size();
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__len > this->capacity() || _M_rep()->_M_is_shared())
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    this->reserve(__len);
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_copy(_M_data() + this->size(), __str._M_data() + __pos, __n);
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_set_length_and_sharable(__len);	  
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    template<typename _CharT, typename _Traits, typename _Alloc>
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>&
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>::
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      insert(size_type __pos, const _CharT* __s, size_type __n)
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      {
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        __glibcxx_requires_string_len(__s, __n);
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check(__pos, "basic_string::insert");
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check_length(size_type(0), __n, "basic_string::insert");
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          return _M_replace_safe(__pos, size_type(0), __s, __n);
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          {
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            // Work in-place.
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            const size_type __off = __s - _M_data();
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            _M_mutate(__pos, 0, __n);
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            __s = _M_data() + __off;
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            _CharT* __p = _M_data() + __pos;
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            if (__s  + __n <= __p)
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              _M_copy(__p, __s, __n);
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            else if (__s >= __p)
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              _M_copy(__p, __s + __n, __n);
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            else
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              {
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	       const size_type __nleft = __p - __s;
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****                _M_copy(__p, __s, __nleft);
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****                _M_copy(__p + __nleft, __p + __n, __n - __nleft);
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****              }
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****            return *this;
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          }
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    template<typename _CharT, typename _Traits, typename _Alloc>
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      typename basic_string<_CharT, _Traits, _Alloc>::iterator
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>::
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      erase(iterator __first, iterator __last)
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      {
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _GLIBCXX_DEBUG_PEDASSERT(__first >= _M_ibegin() && __first <= __last
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				&& __last <= _M_iend());
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        // NB: This isn't just an optimization (bail out early when
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        // there is nothing to do, really), it's also a correctness
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        // issue vs MT, see libstdc++/40518.
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        const size_type __size = __last - __first;
ARM GAS  /tmp/ccszdRNt.s 			page 27


 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        if (__size)
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 {
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   const size_type __pos = __first - _M_ibegin();
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_mutate(__pos, __size, size_type(0));
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_rep()->_M_set_leaked();
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   return iterator(_M_data() + __pos);
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 }
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 return __first;
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    template<typename _CharT, typename _Traits, typename _Alloc>
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>&
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      basic_string<_CharT, _Traits, _Alloc>::
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      replace(size_type __pos, size_type __n1, const _CharT* __s,
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	     size_type __n2)
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      {
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        __glibcxx_requires_string_len(__s, __n2);
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check(__pos, "basic_string::replace");
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        __n1 = _M_limit(__pos, __n1);
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        _M_check_length(__n1, __n2, "basic_string::replace");
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        bool __left;
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        if (_M_disjunct(__s) || _M_rep()->_M_is_shared())
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****          return _M_replace_safe(__pos, __n1, __s, __n2);
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else if ((__left = __s + __n2 <= _M_data() + __pos)
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		|| _M_data() + __pos + __n1 <= __s)
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 {
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   // Work in-place: non-overlapping case.
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   size_type __off = __s - _M_data();
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   __left ? __off : (__off += __n2 - __n1);
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_mutate(__pos, __n1, __n2);
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   _M_copy(_M_data() + __pos, _M_data() + __off, __n2);
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   return *this;
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 }
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****        else
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 {
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   // Todo: overlapping case.
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   const basic_string __tmp(__s, __n2);
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	   return _M_replace_safe(__pos, __n1, __tmp._M_data(), __n2);
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	 }
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****      }
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_destroy(const _Alloc& __a) throw ()
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = sizeof(_Rep_base) +
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	                       (this->_M_capacity + 1) * sizeof(_CharT);
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Raw_bytes_alloc(__a).deallocate(reinterpret_cast<char*>(this), __size);
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_leak_hard()
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
ARM GAS  /tmp/ccszdRNt.s 			page 28


 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep() == &_S_empty_rep())
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return;
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep()->_M_is_shared())
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_mutate(0, 0, 0);
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_rep()->_M_set_leaked();
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_mutate(size_type __pos, size_type __len1, size_type __len2)
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __old_size = this->size();
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __new_size = __old_size + __len2 - __len1;
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __how_much = __old_size - __pos - __len1;
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__new_size > this->capacity() || _M_rep()->_M_is_shared())
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Must reallocate.
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const allocator_type __a = get_allocator();
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _Rep* __r = _Rep::_S_create(__new_size, this->capacity(), __a);
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__pos)
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_copy(__r->_M_refdata(), _M_data(), __pos);
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__how_much)
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_copy(__r->_M_refdata() + __pos + __len2,
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    _M_data() + __pos + __len1, __how_much);
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_dispose(__a);
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__r->_M_refdata());
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else if (__how_much && __len1 != __len2)
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Work in-place.
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_move(_M_data() + __pos + __len2,
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		  _M_data() + __pos + __len1, __how_much);
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_rep()->_M_set_length_and_sharable(__new_size);
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     reserve(size_type __res)
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__res != this->capacity() || _M_rep()->_M_is_shared())
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****         {
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Make sure we don't shrink below the current size
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__res < this->size())
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __res = this->size();
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const allocator_type __a = get_allocator();
 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _CharT* __tmp = _M_rep()->_M_clone(__a, __res - this->size());
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_rep()->_M_dispose(__a);
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__tmp);
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****         }
ARM GAS  /tmp/ccszdRNt.s 			page 29


 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     swap(basic_string& __s)
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (_M_rep()->_M_is_leaked())
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_rep()->_M_set_sharable();
 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__s._M_rep()->_M_is_leaked())
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__s._M_rep()->_M_set_sharable();
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this->get_allocator() == __s.get_allocator())
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _CharT* __tmp = _M_data();
 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  _M_data(__s._M_data());
 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __s._M_data(__tmp);
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The code below can usually be optimized away.
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const basic_string __tmp1(_M_ibegin(), _M_iend(),
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				    __s.get_allocator());
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const basic_string __tmp2(__s._M_ibegin(), __s._M_iend(),
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				    this->get_allocator());
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  *this = __tmp2;
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __s = __tmp1;
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::_Rep*
 996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::
 997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _S_create(size_type __capacity, size_type __old_capacity,
 998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      const _Alloc& __alloc)
 999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 83.  String::npos vs. string::max_size()
1002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > _S_max_size)
1003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__throw_length_error(__N("basic_string::_S_create"));
1004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The standard places no restriction on allocating more memory
1006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // than is strictly needed within this layer at the moment or as
1007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // requested by an explicit application call to reserve().
1008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Many malloc implementations perform quite poorly when an
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // application attempts to allocate memory in a stepwise fashion
1011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // growing each allocation size by only 1 char.  Additionally,
1012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // it makes little sense to allocate less linear memory than the
1013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // natural blocking size of the malloc implementation.
1014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Unfortunately, we would need a somewhat low-level calculation
1015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // with tuned parameters to get this perfect for any particular
1016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // malloc implementation.  Fortunately, generalizations about
1017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // common features seen among implementations seems to suffice.
1018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // __pagesize need not match the actual VM page size for good
1020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // results in practice, thus we pick a common value on the low
ARM GAS  /tmp/ccszdRNt.s 			page 30


1021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // side.  __malloc_header_size is an estimate of the amount of
1022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // overhead per memory allocation (in practice seen N * sizeof
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // (void*) where N is 0, 2 or 4).  According to folklore,
1024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // picking this value on the high side is better than
1025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // low-balling it (especially when this algorithm is used with
1026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // malloc implementations that allocate memory blocks rounded up
1027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // to a size which is a power of 2).
1028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __pagesize = 4096;
1029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __malloc_header_size = 4 * sizeof(void*);
1030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // The below implements an exponential growth policy, necessary to
1032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // meet amortized linear time requirements of the library: see
1033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // http://gcc.gnu.org/ml/libstdc++/2001-07/msg00085.html.
1034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // It's active for allocations requiring an amount of memory above
1035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // system pagesize. This is consistent with the requirements of the
1036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // standard: http://gcc.gnu.org/ml/libstdc++/2001-07/msg00130.html
1037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__capacity > __old_capacity && __capacity < 2 * __old_capacity)
1038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	__capacity = 2 * __old_capacity;
1039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // NB: Need an array of char_type[__capacity], plus a terminating
1041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // null char_type() element, plus enough for the _Rep data structure.
1042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Whew. Seemingly so needy, yet so elemental.
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       size_type __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);
1044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __adj_size = __size + __malloc_header_size;
1046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__adj_size > __pagesize && __capacity > __old_capacity)
1047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	{
1048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  const size_type __extra = __pagesize - __adj_size % __pagesize;
1049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __capacity += __extra / sizeof(_CharT);
1050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  // Never allocate a string bigger than _S_max_size.
1051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  if (__capacity > _S_max_size)
1052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    __capacity = _S_max_size;
1053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  __size = (__capacity + 1) * sizeof(_CharT) + sizeof(_Rep);
1054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	}
1055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // NB: Might throw, but no worries about a leak, mate: _Rep()
1057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // does not throw.
1058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       void* __place = _Raw_bytes_alloc(__alloc).allocate(__size);
1059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Rep *__p = new (__place) _Rep;
1060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __p->_M_capacity = __capacity;
1061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // ABI compatibility - 3.4.x set in _S_create both
1062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // _M_refcount and _M_length.  All callers of _S_create
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // in basic_string.tcc then set just _M_length.
1064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // In 4.0.x and later both _M_refcount and _M_length
1065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // are initialized in the callers, unfortunately we can
1066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // have 3.4.x compiled code with _S_create callers inlined
1067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // calling 4.0.x+ _S_create.
1068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __p->_M_set_sharable();
1069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __p;
1070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _CharT*
1074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::_Rep::
1075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_clone(const _Alloc& __alloc, size_type __res)
1076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // Requested capacity of the clone.
ARM GAS  /tmp/ccszdRNt.s 			page 31


1078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __requested_cap = this->_M_length + __res;
1079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _Rep* __r = _Rep::_S_create(__requested_cap, this->_M_capacity,
1080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				  __alloc);
1081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (this->_M_length)
1082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(__r->_M_refdata(), _M_refdata(), this->_M_length);
1083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __r->_M_set_length_and_sharable(this->_M_length);
1085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __r->_M_refdata();
1086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     void
1090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     resize(size_type __n, _CharT __c)
1092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const size_type __size = this->size();
1094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__size, __n, "basic_string::resize");
1095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__size < __n)
1096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->append(__n - __size, __c);
1097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       else if (__n < __size)
1098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	this->erase(__n);
1099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // else nothing (in particular, avoid calling _M_mutate() unnecessarily.)
1100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _InputIterator>
1104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>&
1105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       basic_string<_CharT, _Traits, _Alloc>::
1106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
1107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			  _InputIterator __k2, __false_type)
1108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       {
1109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const basic_string __s(__k1, __k2);
1110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	const size_type __n1 = __i2 - __i1;
1111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_check_length(__n1, __s.size(), "basic_string::_M_replace_dispatch");
1112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	return _M_replace_safe(__i1 - _M_ibegin(), __n1, __s._M_data(),
1113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 			       __s.size());
1114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
1115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
1120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		   _CharT __c)
1121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check_length(__n1, __n2, "basic_string::_M_replace_aux");
1123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_mutate(__pos1, __n1, __n2);
1124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n2)
1125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_assign(_M_data() + __pos1, __n2, __c);
1126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
1127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>&
1131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
1133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 		    size_type __n2)
1134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
ARM GAS  /tmp/ccszdRNt.s 			page 32


1135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_mutate(__pos1, __n1, __n2);
1136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n2)
1137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(_M_data() + __pos1, __s, __n2);
1138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return *this;
1139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
1141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     template<typename _CharT, typename _Traits, typename _Alloc>
1142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     typename basic_string<_CharT, _Traits, _Alloc>::size_type
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>::
1144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     copy(_CharT* __s, size_type __n, size_type __pos) const
1145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_check(__pos, "basic_string::copy");
1147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __n = _M_limit(__pos, __n);
1148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string_len(__s, __n);
1149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       if (__n)
1150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	_M_copy(__s, _M_data() + __pos, __n);
1151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       // 21.3.5.7 par 3: do not append null.  (good.)
1152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __n;
1153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
1154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** #endif  // !_GLIBCXX_USE_CXX11_ABI
1155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****    
1156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****   template<typename _CharT, typename _Traits, typename _Alloc>
1157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     basic_string<_CharT, _Traits, _Alloc>
1158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     operator+(const _CharT* __lhs,
 331              		.loc 3 1158 5 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		.loc 3 1158 5 is_stmt 0 view .LVU57
 336 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 337              	.LCFI3:
 338              		.cfi_def_cfa_offset 20
 339              		.cfi_offset 4, -20
 340              		.cfi_offset 5, -16
 341              		.cfi_offset 6, -12
 342              		.cfi_offset 7, -8
 343              		.cfi_offset 14, -4
 344 0002 C646     		mov	lr, r8
 345 0004 00B5     		push	{lr}
 346              	.LCFI4:
 347              		.cfi_def_cfa_offset 24
 348              		.cfi_offset 8, -24
 349 0006 0400     		movs	r4, r0
 350 0008 0F00     		movs	r7, r1
 351 000a 1600     		movs	r6, r2
 352              	.LVL28:
 353              	.LBB4512:
 354              	.LBI4512:
 355              		.file 4 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Character Traits for use by standard string and iostream -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /tmp/ccszdRNt.s 			page 33


   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** /** @file bits/char_traits.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** //
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** // ISO C++ 14882: 21  Strings library
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** //
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifndef _CHAR_TRAITS_H
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #define _CHAR_TRAITS_H 1
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #pragma GCC system_header
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #include <bits/stl_algobase.h>  // std::copy, std::fill_n
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #include <bits/postypes.h>      // For streampos
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #include <cwchar>               // For WEOF, wmemmove, wmemset, etc.
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifndef _GLIBCXX_ALWAYS_INLINE
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** # define _GLIBCXX_ALWAYS_INLINE inline __attribute__((__always_inline__))
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** {
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief  Mapping from character type to associated types.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @note This is an implementation class for the generic version
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  of char_traits.  It defines int_type, off_type, pos_type, and
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  state_type.  By default these are unsigned long, streamoff,
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  streampos, and mbstate_t.  Users who need a different set of
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  types, but who don't need to change the definitions of any function
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  defined in char_traits, can specialize __gnu_cxx::_Char_types
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  while leaving __gnu_cxx::char_traits alone. */
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct _Char_types
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef unsigned long   int_type;
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef std::streampos  pos_type;
ARM GAS  /tmp/ccszdRNt.s 			page 34


  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef std::streamoff  off_type;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef std::mbstate_t  state_type;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     };
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief  Base class used to implement std::char_traits.
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @note For any given actual character type, this definition is
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  probably wrong.  (Most of the member functions are likely to be
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  right, but the int_type and state_type typedefs, and the eof()
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  member function, are likely to be wrong.)  The reason this class
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  exists is so users can specialize it.  Classes in namespace std
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  may not be specialized for fundamental types, but classes in
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  namespace __gnu_cxx may be.
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.  
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    */
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct char_traits
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef _CharT                                    char_type;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::int_type    int_type;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::pos_type    pos_type;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::off_type    off_type;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef typename _Char_types<_CharT>::state_type  state_type;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR void
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2)
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2)
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2)
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 < __c2; }
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR int
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, std::size_t __n);
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR std::size_t
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       length(const char_type* __s);
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX14_CONSTEXPR const char_type*
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       find(const char_type* __s, std::size_t __n, const char_type& __a);
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, std::size_t __n);
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, std::size_t __n);
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
ARM GAS  /tmp/ccszdRNt.s 			page 35


 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       assign(char_type* __s, std::size_t __n, char_type __a);
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR char_type
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       to_char_type(const int_type& __c)
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return static_cast<char_type>(__c); }
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       to_int_type(const char_type& __c)
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return static_cast<int_type>(__c); }
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eq_int_type(const int_type& __c1, const int_type& __c2)
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eof()
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return static_cast<int_type>(_GLIBCXX_STDIO_EOF); }
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR int_type
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       not_eof(const int_type& __c)
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return !eq_int_type(__c, eof()) ? __c : to_int_type(char_type()); }
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     };
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR int
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     compare(const char_type* __s1, const char_type* __s2, std::size_t __n)
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (lt(__s1[__i], __s2[__i]))
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return -1;
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	else if (lt(__s2[__i], __s1[__i]))
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 1;
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return 0;
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR std::size_t
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     length(const char_type* __p)
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       std::size_t __i = 0;
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       while (!eq(__p[__i], char_type()))
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****         ++__i;
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __i;
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     _GLIBCXX14_CONSTEXPR const typename char_traits<_CharT>::char_type*
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     find(const char_type* __s, std::size_t __n, const char_type& __a)
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       for (std::size_t __i = 0; __i < __n; ++__i)
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****         if (eq(__s[__i], __a))
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****           return __s + __i;
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return 0;
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
ARM GAS  /tmp/ccszdRNt.s 			page 36


 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     move(char_type* __s1, const char_type* __s2, std::size_t __n)
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       if (__n == 0)
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return __s1;
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return static_cast<_CharT*>(__builtin_memmove(__s1, __s2,
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 						    __n * sizeof(char_type)));
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     copy(char_type* __s1, const char_type* __s2, std::size_t __n)
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // NB: Inline std::copy so no recursive dependencies.
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       std::copy(__s2, __s2 + __n, __s1);
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __s1;
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     typename char_traits<_CharT>::char_type*
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     char_traits<_CharT>::
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     assign(char_type* __s, std::size_t __n, char_type __a)
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // NB: Inline std::fill_n so no recursive dependencies.
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       std::fill_n(__s, __n, __a);
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __s;
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** _GLIBCXX_END_NAMESPACE_VERSION
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** } // namespace
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** {
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #define __cpp_lib_constexpr_char_traits 201611
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a NULL-terminated
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  string are known at compile time.
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @param  __s  The string.
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    */
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     __constant_string_p(const _CharT* __s)
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       (void) __s;
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // In constexpr contexts all strings should be constant.
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
ARM GAS  /tmp/ccszdRNt.s 			page 37


 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #else
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       while (__builtin_constant_p(*__s) && *__s)
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	__s++;
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __builtin_constant_p(*__s);
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief Determine whether the characters of a character array are
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  known at compile time.
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @param  __a  The character array.
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @param  __n  Number of characters.
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  Assumes that _CharT is a built-in character type.
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    */
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<typename _CharT>
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     static _GLIBCXX_ALWAYS_INLINE constexpr bool
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     __constant_char_array_p(const _CharT* __a, size_t __n)
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #ifdef _GLIBCXX_HAVE_BUILTIN_IS_CONSTANT_EVALUATED
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       (void) __a;
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       (void) __n;
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       // In constexpr contexts all character arrays should be constant.
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __builtin_is_constant_evaluated();
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #else
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       size_t __i = 0;
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       while (__i < __n && __builtin_constant_p(__a[__i]))
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	__i++;
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       return __i == __n;
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     }
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   // 21.1
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /**
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @brief  Basis for explicit traits specializations.
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  @note  For any given actual character type, this definition is
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  probably wrong.  Since this is just a thin wrapper around
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  __gnu_cxx::char_traits, it is possible to achieve a more
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  appropriate definition by specializing __gnu_cxx::char_traits.
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/strings.html#strings.string.character_typ
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  for advice on how to make use of this class for @a unusual character
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****    *  types. Also, check out include/ext/pod_char_traits.h.
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   */
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<class _CharT>
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct char_traits : public __gnu_cxx::char_traits<_CharT>
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     { };
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   /// 21.1.3.1  char_traits specializations
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****   template<>
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     struct char_traits<char>
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****     {
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef char              char_type;
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef int               int_type;
ARM GAS  /tmp/ccszdRNt.s 			page 38


 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef streampos         pos_type;
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef streamoff         off_type;
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       typedef mbstate_t         state_type;
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR void
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       assign(char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       eq(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { return __c1 == __c2; }
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX_CONSTEXPR bool
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       lt(const char_type& __c1, const char_type& __c2) _GLIBCXX_NOEXCEPT
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	// LWG 467.
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return (static_cast<unsigned char>(__c1)
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 		< static_cast<unsigned char>(__c2));
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR int
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       compare(const char_type* __s1, const char_type* __s2, size_t __n)
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s2, __n))
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::compare(__s1, __s2, __n);
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return __builtin_memcmp(__s1, __s2, __n);
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR size_t
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       length(const char_type* __s)
 356              		.loc 4 329 7 is_stmt 1 view .LVU58
 357              	.LBB4513:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__constant_string_p(__s))
 358              		.loc 4 332 2 view .LVU59
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return __builtin_strlen(__s);
 359              		.loc 4 335 2 view .LVU60
 360              		.loc 4 335 25 is_stmt 0 view .LVU61
 361 000c 0800     		movs	r0, r1
 362              	.LVL29:
 363              		.loc 4 335 25 view .LVU62
 364 000e FFF7FEFF 		bl	strlen
 365              	.LVL30:
 366              		.loc 4 335 25 view .LVU63
 367 0012 0500     		movs	r5, r0
 368              	.LVL31:
 369              		.loc 4 335 25 view .LVU64
 370              	.LBE4513:
ARM GAS  /tmp/ccszdRNt.s 			page 39


 371              	.LBE4512:
 372              	.LBB4514:
 373              	.LBI4514:
 374              		.file 5 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Copyright (C) 1997-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** //
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** //
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #pragma GCC system_header
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <ext/atomicity.h>
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <ext/alloc_traits.h>
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <debug/debug.h>
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <initializer_list>
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** # include <string_view>
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** {
ARM GAS  /tmp/ccszdRNt.s 			page 40


  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup strings
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup sequences
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     class basic_string
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Types:
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Traits					traits_type;
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 							const_iterator;
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     protected:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef iterator __const_iterator;
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 41


 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _Res>;
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static __sv_type
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __svt; }
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // is provided.
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct __sv_wrapper
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__sv_type _M_sv;
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          wrapper.
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type		_M_string_length;
ARM GAS  /tmp/ccszdRNt.s 			page 42


 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       union
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data(pointer __p)
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_length(size_type __length)
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pointer
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data() const
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pointer
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_local_data()
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return pointer(_M_local_buf);
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_pointer
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_local_data() const
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_set_length(size_type __n)
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_length(__n);
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_is_local() const
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Create & Destroy
ARM GAS  /tmp/ccszdRNt.s 			page 43


 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pointer
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_create(size_type&, size_type);
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_dispose()
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!_M_is_local())
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InIterator>
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Integer>
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__req, __c); }
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InIterator>
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end)
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InIterator>
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     std::input_iterator_tag);
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _FwdIterator>
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     std::forward_iterator_tag);
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 44


 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       allocator_type&
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_get_allocator()
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const allocator_type&
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_get_allocator() const
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__pos > this->size())
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __s, __pos, this->size());
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __pos;
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 45


 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Iterator>
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static void
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
ARM GAS  /tmp/ccszdRNt.s 			page 46


 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static int
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return int(__d);
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_assign(const basic_string&);
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __len2);
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Construct/copy/destroy:
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string()
 375              		.loc 5 431 7 is_stmt 1 view .LVU65
 376              	.LBB4515:
 377              	.LBI4515:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 378              		.loc 5 190 7 view .LVU66
 379              	.LBB4516:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 380              		.loc 5 193 51 is_stmt 0 view .LVU67
 381 0014 2300     		movs	r3, r4
 382 0016 0833     		adds	r3, r3, #8
 383              	.LVL32:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 384              		.loc 5 193 51 view .LVU68
 385              	.LBE4516:
 386              	.LBE4515:
 387              	.LBB4517:
 388              	.LBI4517:
 389              		.file 6 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
ARM GAS  /tmp/ccszdRNt.s 			page 47


   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  *
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  */
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** /** @file bits/allocator.h
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****  */
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #include <type_traits>
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #define __cpp_lib_incomplete_container_elements 201505
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** # define __cpp_lib_allocator_is_always_equal 201411
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** {
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 48


  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   /**
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  @addtogroup allocators
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  @{
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    */
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   /// allocator<void> specialization.
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   template<>
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     class allocator<void>
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     {
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     public:
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef size_t      size_type;
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef void*       pointer;
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef const void* const_pointer;
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef void        value_type;
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Tp1>
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	struct rebind
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Up, typename... _Args>
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	void
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	construct(_Up* __p, _Args&&... __args)
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	noexcept(noexcept(::new((void *)__p)
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Up>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	void
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	destroy(_Up* __p)
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	noexcept(noexcept(__p->~_Up()))
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ __p->~_Up(); }
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     };
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   /**
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    * @brief  The @a standard allocator, as per [20.4].
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  for further details.
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    */
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****   template<typename _Tp>
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****     {
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****    public:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef size_t     size_type;
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef _Tp*       pointer;
ARM GAS  /tmp/ccszdRNt.s 			page 49


 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef const _Tp* const_pointer;
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef _Tp&       reference;
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef const _Tp& const_reference;
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef _Tp        value_type;
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Tp1>
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	struct rebind
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type propagate_on_container_move_assignment;
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       typedef true_type is_always_equal;
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
 390              		.loc 6 138 7 is_stmt 1 view .LVU69
 391              	.LBB4518:
 392              	.LBI4518:
 393              		.file 7 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** /** @file ext/new_allocator.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****  */
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <bits/c++config.h>
ARM GAS  /tmp/ccszdRNt.s 			page 50


  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <new>
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <bits/functexcept.h>
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <bits/move.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #include <type_traits>
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** {
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   using std::size_t;
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   using std::ptrdiff_t;
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   /**
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  @ingroup allocators
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard.
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *    - all allocation calls operator new
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *    - all deallocation calls operator delete
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****    */
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****   template<typename _Tp>
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****     class new_allocator
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****     {
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****     public:
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef size_t     size_type;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef _Tp*       pointer;
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef _Tp&       reference;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef _Tp        value_type;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	struct rebind
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	{ typedef new_allocator<_Tp1> other; };
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 394              		.loc 7 80 7 view .LVU70
 395              		.loc 7 80 7 is_stmt 0 view .LVU71
 396              	.LBE4518:
 397              	.LBE4517:
 398              	.LBB4519:
 399              	.LBI4519:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 400              		.loc 5 159 2 is_stmt 1 view .LVU72
 401              	.LBB4520:
ARM GAS  /tmp/ccszdRNt.s 			page 51


 402              	.LBB4521:
 403              	.LBI4521:
 404              		.file 8 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Move, forward and identity for C++11 + swap -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Copyright (C) 2007-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** /** @file bits/move.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****  *  Do not attempt to use it directly. @headername{utility}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #ifndef _MOVE_H
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #define _MOVE_H 1
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #include <bits/c++config.h>
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #include <bits/concept_check.h>
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** {
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   // Used, in C++03 mode too, by allocators, etc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief Same as C++11 std::addressof
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @ingroup utilities
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     inline _GLIBCXX_CONSTEXPR _Tp*
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     __addressof(_Tp& __r) _GLIBCXX_NOEXCEPT
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     { return __builtin_addressof(__r); }
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #if __cplusplus >= 201103L
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** _GLIBCXX_END_NAMESPACE_VERSION
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** } // namespace
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 52


  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** #include <type_traits> // Brings in std::declval too.
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** namespace std _GLIBCXX_VISIBILITY(default)
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** {
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @addtogroup utilities
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @{
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief  Forward an lvalue.
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     constexpr _Tp&&
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type& __t) noexcept
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief  Forward an rvalue.
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @return The parameter cast to the specified type.
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  This function is used to implement "perfect forwarding".
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    */
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     constexpr _Tp&&
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     forward(typename std::remove_reference<_Tp>::type&& __t) noexcept
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     {
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****       static_assert(!std::is_lvalue_reference<_Tp>::value, "template argument"
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 		    " substituting _Tp is an lvalue reference type");
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****       return static_cast<_Tp&&>(__t);
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     }
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h **** 
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   /**
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @brief  Convert a value to an rvalue.
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @param  __t  A thing of arbitrary type.
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****    *  @return The parameter cast to an rvalue-reference to allow moving it.
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   */
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****   template<typename _Tp>
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     constexpr typename std::remove_reference<_Tp>::type&&
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     move(_Tp&& __t) noexcept
 405              		.loc 8 99 5 view .LVU73
 406              		.loc 8 99 5 is_stmt 0 view .LVU74
 407              	.LBE4521:
 408              	.LBB4522:
 409              	.LBI4522:
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 410              		.loc 6 141 7 is_stmt 1 view .LVU75
 411              	.LBB4523:
 412              	.LBI4523:
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 53


  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 413              		.loc 7 83 7 view .LVU76
 414              		.loc 7 83 7 is_stmt 0 view .LVU77
 415              	.LBE4523:
 416              	.LBE4522:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 417              		.loc 5 160 46 view .LVU78
 418 0018 2360     		str	r3, [r4]
 419              	.LVL33:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 420              		.loc 5 160 46 view .LVU79
 421              	.LBE4520:
 422              	.LBE4519:
 423              	.LBB4524:
 424              	.LBI4524:
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #if __cplusplus >= 201103L
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       // Avoid implicit deprecation.
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** #endif
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       template<typename _Tp1>
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 425              		.loc 6 153 7 is_stmt 1 view .LVU80
 426              	.LBB4525:
 427              	.LBI4525:
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Tp1>
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 428              		.loc 7 89 7 view .LVU81
 429              		.loc 7 89 7 is_stmt 0 view .LVU82
 430              	.LBE4525:
 431              	.LBE4524:
 432              	.LBB4526:
 433              	.LBI4526:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 434              		.loc 5 214 7 is_stmt 1 view .LVU83
 435              	.LBB4527:
 436              	.LBI4527:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 437              		.loc 5 182 7 view .LVU84
 438              	.LBB4528:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 439              		.loc 5 183 9 is_stmt 0 view .LVU85
 440 001a 0023     		movs	r3, #0
 441 001c 6360     		str	r3, [r4, #4]
 442              	.LVL34:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 443              		.loc 5 183 9 view .LVU86
ARM GAS  /tmp/ccszdRNt.s 			page 54


 444              	.LBE4528:
 445              	.LBE4527:
 446              	.LBB4529:
 447              	.LBI4529:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 448              		.loc 4 299 7 is_stmt 1 view .LVU87
 449              	.LBB4530:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 450              		.loc 4 300 9 view .LVU88
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 451              		.loc 4 300 14 is_stmt 0 view .LVU89
 452 001e 2372     		strb	r3, [r4, #8]
 453              	.LVL35:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 454              		.loc 4 300 14 view .LVU90
 455              	.LBE4530:
 456              	.LBE4529:
 457              	.LBE4526:
 458              	.LBE4514:
 459              	.LBB4531:
 460              	.LBI4531:
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str)
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__str._M_data(), __str._M_data() + __str.length()); }
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos));
ARM GAS  /tmp/ccszdRNt.s 			page 55


 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const _CharT* __start
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n));
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  has no special meaning.
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__s, __s + __n); }
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source C string.
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccszdRNt.s 			page 56


 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__s, __s ? __s + traits_type::length(__s) : __s+npos); }
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to use.
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__n, __c); }
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move construct string.
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_length(__str.length());
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_data(__str._M_local_data());
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_set_length(0);
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end()); }
ARM GAS  /tmp/ccszdRNt.s 			page 57


 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end()); }
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _S_local_capacity + 1);
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_data(__str._M_local_buf);
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_set_length(0);
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end());
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __end  End of range.
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InputIterator,
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _InputIterator>
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a)
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ _M_construct(__beg, __end); }
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
ARM GAS  /tmp/ccszdRNt.s 			page 58


 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ~basic_string()
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const basic_string& __str)
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  {
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_data(_M_local_data());
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_set_length(0);
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		else
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  {
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    const auto __len = __str.size();
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    auto __ptr = _Alloc_traits::allocate(__alloc, __len + 1);
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_data(__ptr);
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_capacity(__len);
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    _M_set_length(__len);
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      }
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccszdRNt.s 			page 59


 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->assign(__str);
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const _CharT* __s)
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__s); }
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Source character.
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(_CharT __c)
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(1, __c);
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(basic_string&& __str)
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    && !_Alloc_traits::_S_always_equal()
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    && _M_get_allocator() != __str._M_get_allocator())
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(_M_local_data());
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_set_length(0);
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__str._M_is_local())
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it.
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__str.size())
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_set_length(__str.size());
ARM GAS  /tmp/ccszdRNt.s 			page 60


 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign()
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    || _Alloc_traits::_S_always_equal()
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    || _M_get_allocator() == __str._M_get_allocator())
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    pointer __data = nullptr;
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (!_M_is_local())
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		if (_Alloc_traits::_S_always_equal())
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  {
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    __data = _M_data();
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		else // __str can't use it, so free it.
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      }
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(__str._M_data());
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_length(__str.length());
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		__str._M_data(__data);
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      }
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    else
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __str._M_data(__str._M_local_buf);
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else // Need to do a deep copy
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  assign(__str);
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str.clear();
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****      template<typename _Tp>
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        operator=(const _Tp& __svt)
ARM GAS  /tmp/ccszdRNt.s 			page 61


 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        { return this->assign(__svt); }
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return A string_view.
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator __sv_type() const noexcept
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Iterators:
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string.
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data()); }
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  order.
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccszdRNt.s 			page 62


 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element order.
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cbegin() const noexcept
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cend() const noexcept
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crbegin() const noexcept
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crend() const noexcept
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccszdRNt.s 			page 63


 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Capacity:
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
 461              		.loc 5 930 7 is_stmt 1 view .LVU91
 462              		.loc 5 930 7 is_stmt 0 view .LVU92
 463              	.LBE4531:
1159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
1160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     {
1161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __glibcxx_requires_string(__lhs);
1162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       typedef basic_string<_CharT, _Traits, _Alloc> __string_type;
1163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       typedef typename __string_type::size_type	  __size_type;
1164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       const __size_type __len = _Traits::length(__lhs);
1165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __string_type __str;
1166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str.reserve(__len + __rhs.size());
 464              		.loc 3 1166 7 view .LVU93
 465 0020 7368     		ldr	r3, [r6, #4]
 466 0022 1918     		adds	r1, r3, r0
 467 0024 2000     		movs	r0, r4
 468              	.LVL36:
 469              		.loc 3 1166 7 view .LVU94
 470 0026 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj
 471              	.LVL37:
 472              	.LBB4532:
 473              	.LBI4532:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
ARM GAS  /tmp/ccszdRNt.s 			page 64


 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  setting them to 0.
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n)
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       shrink_to_fit() noexcept
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_exceptions
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (capacity() > size())
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    try
 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { reserve(0); }
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    catch(...)
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { }
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  before needing to allocate more memory.
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
 994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
 996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          characters.
1002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
1009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  data.
1015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
ARM GAS  /tmp/ccszdRNt.s 			page 65


1017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
1018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Erases the string, making it empty.
1021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
1025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
1029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
1031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->size() == 0; }
1033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Element access:
1035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)
1044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
1050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)
1061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[](size_type __pos)
1064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// and in C++11 mode.
1067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
1071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 66


1074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n) const
1085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= this->size())
1087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
1091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
1097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n)
1106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= size())
1108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
1111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
1112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
1113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
1119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front() noexcept
1122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
1125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
1130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccszdRNt.s 			page 67


1131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front() const noexcept
1133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
1136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
1141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back() noexcept
1144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last element of the %string.
1152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
1154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back() const noexcept
1155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
1158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Modifiers:
1162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
1169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
1170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
1178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__s); }
1179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a character.
1182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to append.
1183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(_CharT __c)
1187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 68


1188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->push_back(__c);
1189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
1190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
1200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return this->append(__svt); }
1213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
1217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str)
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
1223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a substring.
1226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
1227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
1236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data()
1240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 + __str._M_check(__pos, "basic_string::append"),
1241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 __str._M_limit(__pos, __n)); }
1242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C substring.
ARM GAS  /tmp/ccszdRNt.s 			page 69


1245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
 474              		.loc 5 1250 7 is_stmt 1 view .LVU95
 475              	.LBB4533:
 476              	.LBB4534:
 477              	.LBI4534:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 478              		.loc 5 320 7 view .LVU96
 479              	.LBB4535:
 480              	.LBB4536:
 481              	.LBI4536:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 482              		.loc 5 930 7 view .LVU97
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 483              		.loc 5 930 7 is_stmt 0 view .LVU98
 484              	.LBE4536:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 485              		.loc 5 322 2 view .LVU99
 486 002a 0B4B     		ldr	r3, .L20
 487 002c 6268     		ldr	r2, [r4, #4]
 488 002e 9B1A     		subs	r3, r3, r2
 489 0030 9D42     		cmp	r5, r3
 490 0032 0DD8     		bhi	.L19
 491              	.LVL38:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 492              		.loc 5 322 2 view .LVU100
 493              	.LBE4535:
 494              	.LBE4534:
1251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
 495              		.loc 5 1254 27 view .LVU101
 496 0034 2A00     		movs	r2, r5
 497 0036 3900     		movs	r1, r7
 498 0038 2000     		movs	r0, r4
 499 003a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 500              	.LVL39:
 501              		.loc 5 1254 27 view .LVU102
 502              	.LBE4533:
 503              	.LBE4532:
 504              	.LBB4540:
 505              	.LBI4540:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 506              		.loc 5 1221 7 is_stmt 1 view .LVU103
 507              	.LBB4541:
 508              	.LBB4542:
 509              	.LBI4542:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 510              		.loc 5 186 7 view .LVU104
 511              	.LBB4543:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 512              		.loc 5 187 28 is_stmt 0 view .LVU105
ARM GAS  /tmp/ccszdRNt.s 			page 70


 513 003e 3168     		ldr	r1, [r6]
 514              	.LVL40:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 515              		.loc 5 187 28 view .LVU106
 516              	.LBE4543:
 517              	.LBE4542:
 518              	.LBB4544:
 519              	.LBI4544:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 520              		.loc 5 930 7 is_stmt 1 view .LVU107
 521              	.LBB4545:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 522              		.loc 5 931 16 is_stmt 0 view .LVU108
 523 0040 7268     		ldr	r2, [r6, #4]
 524              	.LVL41:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 525              		.loc 5 931 16 view .LVU109
 526              	.LBE4545:
 527              	.LBE4544:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 528              		.loc 5 1222 55 view .LVU110
 529 0042 2000     		movs	r0, r4
 530 0044 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 531              	.LVL42:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 532              		.loc 5 1222 55 view .LVU111
 533              	.LBE4541:
 534              	.LBE4540:
1167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str.append(__lhs, __len);
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       __str.append(__rhs);
1169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       return __str;
1170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****     }
 535              		.loc 3 1170 5 view .LVU112
 536 0048 2000     		movs	r0, r4
 537              		@ sp needed
 538              	.LVL43:
 539              	.LVL44:
 540              	.LVL45:
 541              	.LVL46:
 542              		.loc 3 1170 5 view .LVU113
 543 004a 80BC     		pop	{r7}
 544 004c B846     		mov	r8, r7
 545 004e F0BD     		pop	{r4, r5, r6, r7, pc}
 546              	.LVL47:
 547              	.L19:
 548              	.LBB4546:
 549              	.LBB4539:
 550              	.LBB4538:
 551              	.LBB4537:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 552              		.loc 5 323 24 view .LVU114
 553 0050 0248     		ldr	r0, .L20+4
 554 0052 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 555              	.LVL48:
 556              	.L21:
 557 0056 C046     		.align	2
 558              	.L20:
ARM GAS  /tmp/ccszdRNt.s 			page 71


 559 0058 FFFFFF3F 		.word	1073741823
 560 005c 00000000 		.word	.LC0
 561              	.LBE4537:
 562              	.LBE4538:
 563              	.LBE4539:
 564              	.LBE4546:
 565              		.cfi_endproc
 566              	.LFE4242:
 568              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_inser
 569              		.align	1
 570              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxIS5_
 571              		.syntax unified
 572              		.code	16
 573              		.thumb_func
 574              		.fpu softvfp
 576              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxIS5_EEvN9__
 577              	.LVL49:
 578              	.LFB4447:
 579              		.file 9 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Vector implementation (out of line) -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
ARM GAS  /tmp/ccszdRNt.s 			page 72


  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Copyright (c) 1996
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * representations about the suitability of this  software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** /** @file bits/vector.tcc
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  *  Do not attempt to use it directly. @headername{vector}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #ifndef _VECTOR_TCC
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #define _VECTOR_TCC 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** {
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     reserve(size_type __n)
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__n > this->max_size())
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	__throw_length_error(__N("vector::reserve"));
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (this->capacity() < __n)
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  const size_type __old_size = size();
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  pointer __tmp;
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __tmp = this->_M_allocate(__n);
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _S_relocate(this->_M_impl._M_start, this->_M_impl._M_finish,
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  __tmp, _M_get_Tp_allocator());
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __tmp = _M_allocate_and_copy(__n,
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_start),
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(this->_M_impl._M_finish));
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    _M_get_Tp_allocator());
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_deallocate(this->_M_impl._M_start,
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			this->_M_impl._M_end_of_storage
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			- this->_M_impl._M_start);
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_start = __tmp;
ARM GAS  /tmp/ccszdRNt.s 			page 73


  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_finish = __tmp + __old_size;
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename... _Args>
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       typename vector<_Tp, _Alloc>::reference
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				     std::forward<_Args>(__args)...);
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_realloc_insert(end(), std::forward<_Args>(__args)...);
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	return back();
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     insert(const_iterator __position, const value_type& __x)
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     insert(iterator __position, const value_type& __x)
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __n = __position - begin();
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__position == end())
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				     __x);
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    const auto __pos = begin() + (__position - cbegin());
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    // __x could be an existing element of this vector, so make a
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    // copy of it before _M_insert_aux moves elements around.
ARM GAS  /tmp/ccszdRNt.s 			page 74


 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Temporary_value __x_copy(this, __x);
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _M_insert_aux(__pos, std::move(__x_copy._M_val()));
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _M_insert_aux(__position, __x);
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_realloc_insert(begin() + (__position - cbegin()), __x);
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_realloc_insert(__position, __x);
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_erase(iterator __position)
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__position + 1 != end())
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_GLIBCXX_MOVE3(__position + 1, end(), __position);
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       --this->_M_impl._M_finish;
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return __position;
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     typename vector<_Tp, _Alloc>::iterator
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_erase(iterator __first, iterator __last)
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__first != __last)
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (__last != end())
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_MOVE3(__last, end(), __first);
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_erase_at_end(__first.base() + (end() - __last));
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return __first;
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>&
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     operator=(const vector<_Tp, _Alloc>& __x)
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (&__x != this)
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_REINIT;
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (_Alloc_traits::_S_propagate_on_copy_assign())
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      if (!_Alloc_traits::_S_always_equal()
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	          && _M_get_Tp_allocator() != __x._M_get_Tp_allocator())
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	        {
ARM GAS  /tmp/ccszdRNt.s 			page 75


 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  // replacement allocator cannot free existing storage
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->clear();
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  _M_deallocate(this->_M_impl._M_start,
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				this->_M_impl._M_end_of_storage
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				- this->_M_impl._M_start);
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->_M_impl._M_start = nullptr;
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->_M_impl._M_finish = nullptr;
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		  this->_M_impl._M_end_of_storage = nullptr;
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		}
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::__alloc_on_copy(_M_get_Tp_allocator(),
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __x._M_get_Tp_allocator());
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  const size_type __xlen = __x.size();
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (__xlen > capacity())
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      pointer __tmp = _M_allocate_and_copy(__xlen, __x.begin(),
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 						   __x.end());
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    _M_get_Tp_allocator());
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _M_deallocate(this->_M_impl._M_start,
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    this->_M_impl._M_end_of_storage
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    - this->_M_impl._M_start);
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      this->_M_impl._M_start = __tmp;
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __xlen;
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else if (size() >= __xlen)
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::_Destroy(std::copy(__x.begin(), __x.end(), begin()),
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			    end(), _M_get_Tp_allocator());
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::copy(__x._M_impl._M_start, __x._M_impl._M_start + size(),
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			this->_M_impl._M_start);
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::__uninitialized_copy_a(__x._M_impl._M_start + size(),
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  __x._M_impl._M_finish,
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  this->_M_impl._M_finish,
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  _M_get_Tp_allocator());
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_finish = this->_M_impl._M_start + __xlen;
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return *this;
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_fill_assign(size_t __n, const value_type& __val)
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (__n > capacity())
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  vector __tmp(__n, __val, _M_get_Tp_allocator());
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  __tmp._M_impl._M_swap_data(this->_M_impl);
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else if (__n > size())
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
ARM GAS  /tmp/ccszdRNt.s 			page 76


 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  std::fill(begin(), end(), __val);
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  const size_type __add = __n - size();
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GROW(__add);
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  this->_M_impl._M_finish =
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::__uninitialized_fill_n_a(this->_M_impl._M_finish,
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  __add, __val, _M_get_Tp_allocator());
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _GLIBCXX_ASAN_ANNOTATE_GREW(__add);
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****         _M_erase_at_end(std::fill_n(this->_M_impl._M_start, __n, __val));
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename _InputIterator>
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_assign_aux(_InputIterator __first, _InputIterator __last,
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		    std::input_iterator_tag)
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	pointer __cur(this->_M_impl._M_start);
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	for (; __first != __last && __cur != this->_M_impl._M_finish;
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	     ++__cur, (void)++__first)
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  *__cur = *__first;
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__first == __last)
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_erase_at_end(__cur);
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_range_insert(end(), __first, __last,
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  std::__iterator_category(__first));
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename _ForwardIterator>
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		    std::forward_iterator_tag)
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	const size_type __len = std::distance(__first, __last);
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__len > capacity())
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _S_check_init_len(__len, _M_get_Tp_allocator());
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    pointer __tmp(_M_allocate_and_copy(__len, __first, __last));
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  _M_get_Tp_allocator());
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_REINIT;
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _M_deallocate(this->_M_impl._M_start,
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  this->_M_impl._M_end_of_storage
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			  - this->_M_impl._M_start);
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_start = __tmp;
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_finish = this->_M_impl._M_start + __len;
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_end_of_storage = this->_M_impl._M_finish;
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else if (size() >= __len)
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_erase_at_end(std::copy(__first, __last, this->_M_impl._M_start));
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
ARM GAS  /tmp/ccszdRNt.s 			page 77


 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _ForwardIterator __mid = __first;
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::advance(__mid, size());
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::copy(__first, __mid, this->_M_impl._M_start);
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    const size_type __attribute__((__unused__)) __n = __len - size();
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(__n);
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    this->_M_impl._M_finish =
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      std::__uninitialized_copy_a(__mid, __last,
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  this->_M_impl._M_finish,
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					  _M_get_Tp_allocator());
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(__n);
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     auto
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_insert_rval(const_iterator __position, value_type&& __v) -> iterator
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const auto __n = __position - cbegin();
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__position == cend())
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				     std::move(__v));
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    ++this->_M_impl._M_finish;
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  }
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_insert_aux(begin() + __n, std::move(__v));
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       else
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_realloc_insert(begin() + __n, std::move(__v));
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       return iterator(this->_M_impl._M_start + __n);
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename... _Args>
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       auto
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_emplace_aux(const_iterator __position, _Args&&... __args)
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       -> iterator
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       {
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	const auto __n = __position - cbegin();
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (__position == cend())
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				       std::forward<_Args>(__args)...);
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      ++this->_M_impl._M_finish;
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      // We need to construct a temporary because something in __args...
ARM GAS  /tmp/ccszdRNt.s 			page 78


 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      // could alias one of the elements of the container and so we
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      // need to use it before _M_insert_aux moves elements around.
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _Temporary_value __tmp(this, std::forward<_Args>(__args)...);
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      _M_insert_aux(begin() + __n, std::move(__tmp._M_val()));
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	else
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_realloc_insert(begin() + __n, std::forward<_Args>(__args)...);
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	return iterator(this->_M_impl._M_start + __n);
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       }
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename _Arg>
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 580              		.loc 9 395 7 is_stmt 1 view -0
 581              		.cfi_startproc
 582              		@ args = 0, pretend = 0, frame = 0
 583              		@ frame_needed = 0, uses_anonymous_args = 0
 584              		.loc 9 395 7 is_stmt 0 view .LVU116
 585 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 586              	.LCFI5:
 587              		.cfi_def_cfa_offset 24
 588              		.cfi_offset 3, -24
 589              		.cfi_offset 4, -20
 590              		.cfi_offset 5, -16
 591              		.cfi_offset 6, -12
 592              		.cfi_offset 7, -8
 593              		.cfi_offset 14, -4
 594 0002 DE46     		mov	lr, fp
 595 0004 5746     		mov	r7, r10
 596 0006 4E46     		mov	r6, r9
 597 0008 4546     		mov	r5, r8
 598 000a E0B5     		push	{r5, r6, r7, lr}
 599              	.LCFI6:
 600              		.cfi_def_cfa_offset 40
 601              		.cfi_offset 8, -40
 602              		.cfi_offset 9, -36
 603              		.cfi_offset 10, -32
 604              		.cfi_offset 11, -28
 605 000c 0600     		movs	r6, r0
 606 000e 8846     		mov	r8, r1
 607              	.LVL50:
 608              		.loc 9 395 7 view .LVU117
 609 0010 1700     		movs	r7, r2
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_insert_aux(iterator __position, _Arg&& __arg)
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_insert_aux(iterator __position, const _Tp& __x)
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GROW(1);
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 610              		.loc 9 405 31 view .LVU118
 611 0012 4468     		ldr	r4, [r0, #4]
ARM GAS  /tmp/ccszdRNt.s 			page 79


 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			       _GLIBCXX_MOVE(*(this->_M_impl._M_finish - 1)));
 612              		.loc 9 406 11 view .LVU119
 613 0014 2500     		movs	r5, r4
 614 0016 183D     		subs	r5, r5, #24
 615              	.LVL51:
 616              	.LBB4701:
 617              	.LBI4701:
 618              		.file 10 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** /** @file bits/alloc_traits.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****  */
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #ifndef _ALLOC_TRAITS_H
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #define _ALLOC_TRAITS_H 1
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #if __cplusplus >= 201103L
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #include <bits/memoryfwd.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #include <bits/ptr_traits.h>
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #include <ext/numeric_traits.h>
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** #define __cpp_lib_allocator_traits_is_always_equal 201411
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** {
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   struct __allocator_traits_base
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   {
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up, typename = void>
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       struct __rebind : __replace_first_arg<_Tp, _Up> { };
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 80


  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp, typename _Up>
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       struct __rebind<_Tp, _Up,
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 		      __void_t<typename _Tp::template rebind<_Up>::other>>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { using type = typename _Tp::template rebind<_Up>::other; };
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   protected:
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pointer = typename _Tp::pointer;
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __c_pointer = typename _Tp::const_pointer;
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __v_pointer = typename _Tp::void_pointer;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __cv_pointer = typename _Tp::const_void_pointer;
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pocca = typename _Tp::propagate_on_container_copy_assignment;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pocma = typename _Tp::propagate_on_container_move_assignment;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __pocs = typename _Tp::propagate_on_container_swap;
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     template<typename _Tp>
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using __equal = typename _Tp::is_always_equal;
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   };
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   template<typename _Alloc, typename _Up>
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     using __alloc_rebind
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       = typename __allocator_traits_base::template __rebind<_Alloc, _Up>::type;
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   /**
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****    * @brief  Uniform interface to all allocator types.
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****    * @ingroup allocators
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   */
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   template<typename _Alloc>
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     struct allocator_traits : __allocator_traits_base
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     {
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator type
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       typedef _Alloc allocator_type;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocated type
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       typedef typename _Alloc::value_type value_type;
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's pointer type.
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::pointer if that type exists, otherwise @c value_type*
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using pointer = __detected_or_t<value_type*, __pointer, _Alloc>;
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     private:
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       // Select _Func<_Alloc> or pointer_traits<pointer>::rebind<_Tp>
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp, typename = void>
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Ptr
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  using type = typename pointer_traits<pointer>::template rebind<_Tp>;
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	};
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<template<typename> class _Func, typename _Tp>
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Ptr<_Func, _Tp, __void_t<_Func<_Alloc>>>
ARM GAS  /tmp/ccszdRNt.s 			page 81


 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  using type = _Func<_Alloc>;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	};
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       // Select _A2::difference_type or pointer_traits<_Ptr>::difference_type
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT, typename = void>
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Diff
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ using type = typename pointer_traits<_PtrT>::difference_type; };
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _PtrT>
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Diff<_A2, _PtrT, __void_t<typename _A2::difference_type>>
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ using type = typename _A2::difference_type; };
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       // Select _A2::size_type or make_unsigned<_DiffT>::type
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT, typename = void>
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Size : make_unsigned<_DiffT> { };
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _A2, typename _DiffT>
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct _Size<_A2, _DiffT, __void_t<typename _A2::size_type>>
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ using type = typename _A2::size_type; };
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     public:
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's const pointer type.
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::const_pointer if that type exists, otherwise
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const value_type> </tt>
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_pointer = typename _Ptr<__c_pointer, const value_type>::type;
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's void pointer type.
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::void_pointer if that type exists, otherwise
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<void> </tt>
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using void_pointer = typename _Ptr<__v_pointer, void>::type;
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's const void pointer type.
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::const_void_pointer if that type exists, otherwise
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::rebind<const void> </tt>
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_void_pointer = typename _Ptr<__cv_pointer, const void>::type;
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's difference type
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::difference_type if that type exists, otherwise
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> pointer_traits<pointer>::difference_type </tt>
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using difference_type = typename _Diff<_Alloc, pointer>::type;
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   The allocator's size type
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
ARM GAS  /tmp/ccszdRNt.s 			page 82


 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::size_type if that type exists, otherwise
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * <tt> make_unsigned<difference_type>::type </tt>
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using size_type = typename _Size<_Alloc, difference_type>::type;
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on copy assignment
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_copy_assignment if that type exists,
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocca, _Alloc>;
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on move assignment
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_move_assignment if that type exists,
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocma, _Alloc>;
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   How the allocator is propagated on swap
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::propagate_on_container_swap if that type exists,
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c false_type
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_swap
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<false_type, __pocs, _Alloc>;
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @brief   Whether all instances of the allocator type compare equal.
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * @c Alloc::is_always_equal if that type exists,
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        * otherwise @c is_empty<Alloc>::type
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using is_always_equal
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	= __detected_or_t<typename is_empty<_Alloc>::type, __equal, _Alloc>;
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_alloc = __alloc_rebind<_Alloc, _Tp>;
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<rebind_alloc<_Tp>>;
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     private:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer __hint, int)
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.allocate(__n, __hint))
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n, __hint); }
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static pointer
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_allocate(_Alloc2& __a, size_type __n, const_void_pointer, ...)
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.allocate(__n); }
ARM GAS  /tmp/ccszdRNt.s 			page 83


 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	struct __construct_helper
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  template<typename _Alloc2,
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    typename = decltype(std::declval<_Alloc2*>()->construct(
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 		  std::declval<_Tp*>(), std::declval<_Args>()...))>
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    static true_type __test(int);
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  template<typename>
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    static false_type __test(...);
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  using type = decltype(__test<_Alloc>(0));
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	};
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using __has_construct
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  = typename __construct_helper<_Tp, _Args...>::type;
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static _Require<__has_construct<_Tp, _Args...>>
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_Require<__and_<__not_<__has_construct<_Tp, _Args...>>,
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 			       is_constructible<_Tp, _Args...>>>
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_construct(_Alloc&, _Tp* __p, _Args&&... __args)
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(::new((void*)__p)
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 			  _Tp(std::forward<_Args>(__args)...)))
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ ::new((void*)__p) _Tp(std::forward<_Args>(__args)...); }
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2& __a, _Tp* __p, int)
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.destroy(__p))
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2, typename _Tp>
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_destroy(_Alloc2&, _Tp* __p, ...)
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__p->~_Tp()))
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __p->~_Tp(); }
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2& __a, int)
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.max_size())
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.max_size(); }
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static size_type
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_max_size(_Alloc2&, ...)
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{
ARM GAS  /tmp/ccszdRNt.s 			page 84


 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  // _GLIBCXX_RESOLVE_LIB_DEFECTS
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  // 2466. allocator_traits::max_size() default behavior is incorrect
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	  return __gnu_cxx::__numeric_traits<size_type>::__max
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	    / sizeof(value_type);
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	}
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, int)
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(__a.select_on_container_copy_construction())
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a.select_on_container_copy_construction(); }
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Alloc2>
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static _Alloc2
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	_S_select(_Alloc2& __a, ...)
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ return __a; }
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     public:
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n)
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *          of type @c value_type
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt> if that expression is
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  well-formed, otherwise returns @c a.allocate(n)
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(_Alloc& __a, size_type __n, const_void_pointer __hint)
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return _S_allocate(__a, __n, __hint, 0); }
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static void
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       deallocate(_Alloc& __a, pointer __p, size_type __n)
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 85


 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Tp
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  if that expression is well-formed, otherwise uses placement-new
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  to construct an object of type @a _Tp at location @a __p from the
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  arguments @a __args...
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp, typename... _Args>
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static auto construct(_Alloc& __a, _Tp* __p, _Args&&... __args)
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_construct(__a, __p,
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 				       std::forward<_Args>(__args)...)))
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	-> decltype(_S_construct(__a, __p, std::forward<_Args>(__args)...))
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ _S_construct(__a, __p, std::forward<_Args>(__args)...); }
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Tp
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p) if that expression is well-formed,
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  otherwise calls @c __p->~_Tp()
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Tp>
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void destroy(_Alloc& __a, _Tp* __p)
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(_S_destroy(__a, __p, 0)))
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ _S_destroy(__a, __p, 0); }
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __a.max_size() or @c numeric_limits<size_type>::max()
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns @c __a.max_size() if that expression is well-formed,
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  otherwise returns @c numeric_limits<size_type>::max()
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static size_type max_size(const _Alloc& __a) noexcept
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return _S_max_size(__a, 0); }
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __rhs.select_on_container_copy_construction() or @a __rhs
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns @c __rhs.select_on_container_copy_construction() if that
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  expression is well-formed, otherwise returns @a __rhs
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static _Alloc
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const _Alloc& __rhs)
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return _S_select(__rhs, 0); }
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     };
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   /// Partial specialization for std::allocator.
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****   template<typename _Tp>
ARM GAS  /tmp/ccszdRNt.s 			page 86


 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     struct allocator_traits<allocator<_Tp>>
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****     {
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator type
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using allocator_type = allocator<_Tp>;
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocated type
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using value_type = _Tp;
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's pointer type.
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using pointer = _Tp*;
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's const pointer type.
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_pointer = const _Tp*;
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's void pointer type.
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using void_pointer = void*;
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's const void pointer type.
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using const_void_pointer = const void*;
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's difference type
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using difference_type = std::ptrdiff_t;
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// The allocator's size type
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using size_type = std::size_t;
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on copy assignment
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_copy_assignment = false_type;
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on move assignment
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_move_assignment = true_type;
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// How the allocator is propagated on swap
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using propagate_on_container_swap = false_type;
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /// Whether all instances of the allocator type compare equal.
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       using is_always_equal = true_type;
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up>
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_alloc = allocator<_Up>;
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up>
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	using rebind_traits = allocator_traits<allocator<_Up>>;
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c a.allocate(n)
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n)
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Allocate memory.
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
ARM GAS  /tmp/ccszdRNt.s 			page 87


 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects to allocate space for.
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __hint Aid to locality.
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return Memory of suitable size and alignment for @a n objects
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *          of type @c value_type
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Returns <tt> a.allocate(n, hint) </tt>
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       _GLIBCXX_NODISCARD static pointer
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       allocate(allocator_type& __a, size_type __n, const_void_pointer __hint)
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n, __hint); }
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Deallocate memory.
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the memory to deallocate.
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __n  The number of objects space was allocated for.
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> a.deallocate(p, n) </tt>
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static void
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       deallocate(allocator_type& __a, pointer __p, size_type __n)
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Construct an object of type @a _Up
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to memory of suitable size and alignment for Tp
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __args Constructor arguments.
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls <tt> __a.construct(__p, std::forward<Args>(__args)...) </tt>
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up, typename... _Args>
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	construct(allocator_type& __a, _Up* __p, _Args&&... __args)
 619              		.loc 10 482 2 is_stmt 1 view .LVU120
 620              	.LBB4702:
 621              	.LBI4702:
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       pointer
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       const_pointer
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       { return std::__addressof(__x); }
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // about what the return value is when __n == 0.
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       _GLIBCXX_NODISCARD pointer
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       allocate(size_type __n, const void* = static_cast<const void*>(0))
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	if (__n > this->max_size())
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cpp_aligned_new
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  {
ARM GAS  /tmp/ccszdRNt.s 			page 88


 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    std::align_val_t __al = std::align_val_t(alignof(_Tp));
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp), __al));
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  }
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       void
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cpp_aligned_new
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	if (alignof(_Tp) > __STDCPP_DEFAULT_NEW_ALIGNMENT__)
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  {
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    ::operator delete(__p, std::align_val_t(alignof(_Tp)));
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	    return;
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  }
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	::operator delete(__p);
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       size_type
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       max_size() const _GLIBCXX_USE_NOEXCEPT
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __PTRDIFF_MAX__ < __SIZE_MAX__
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	return size_t(__PTRDIFF_MAX__) / sizeof(_Tp);
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #else
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	return size_t(-1) / sizeof(_Tp);
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #endif
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** #if __cplusplus >= 201103L
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Up, typename... _Args>
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	void
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	construct(_Up* __p, _Args&&... __args)
 622              		.loc 7 144 2 view .LVU121
 623              		.loc 7 144 2 is_stmt 0 view .LVU122
 624              	.LBE4702:
 625              	.LBE4701:
 626              		.file 11 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // The -*- C++ -*- dynamic memory management header.
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // Copyright (C) 1994-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // This file is part of GCC.
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** //
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // GCC is free software; you can redistribute it and/or modify
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // it under the terms of the GNU General Public License as published by
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // the Free Software Foundation; either version 3, or (at your option)
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // any later version.
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // 
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // GCC is distributed in the hope that it will be useful,
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // GNU General Public License for more details.
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // 
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  /tmp/ccszdRNt.s 			page 89


  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // permissions described in the GCC Runtime Library Exception, version
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // 3.1, as published by the Free Software Foundation.
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // You should have received a copy of the GNU General Public License and
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // a copy of the GCC Runtime Library Exception along with this program;
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // <http://www.gnu.org/licenses/>.
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** /** @file new
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  This is a Standard C++ Library header.
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  The header @c new defines several functions to manage dynamic memory and
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  handling memory allocation errors; see
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  http://gcc.gnu.org/onlinedocs/libstdc++/18_support/howto.html#4 for more.
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  */
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #ifndef _NEW
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #define _NEW
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #pragma GCC system_header
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #include <bits/c++config.h>
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #include <exception>
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #pragma GCC visibility push(default)
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** extern "C++" {
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** namespace std 
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** {
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /**
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  @brief  Exception possibly thrown by @c new.
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  @ingroup exceptions
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  @c bad_alloc (or classes derived from it) is used to report allocation
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  errors from the throwing forms of @c new.  */
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   class bad_alloc : public exception 
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   {
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   public:
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_alloc() throw() { }
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_alloc(const bad_alloc&) = default;
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_alloc& operator=(const bad_alloc&) = default;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // This declaration is not useless:
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual ~bad_alloc() throw();
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // See comment in eh_exception.cc.
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual const char* what() const throw();
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   };
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   class bad_array_new_length : public bad_alloc
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   {
ARM GAS  /tmp/ccszdRNt.s 			page 90


  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   public:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     bad_array_new_length() throw() { }
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // This declaration is not useless:
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // http://gcc.gnu.org/onlinedocs/gcc-3.0.2/gcc_6.html#SEC118
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual ~bad_array_new_length() throw();
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     // See comment in eh_exception.cc.
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     virtual const char* what() const throw();
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   };
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_aligned_new
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   enum class align_val_t: size_t {};
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   struct nothrow_t
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   {
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****     explicit nothrow_t() = default;
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   };
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   extern const nothrow_t nothrow;
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /** If you write your own error handler to be called by @c new, it must
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****    *  be of this type.  */
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   typedef void (*new_handler)();
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /// Takes a replacement handler as the argument, returns the
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /// previous handler.
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   new_handler set_new_handler(new_handler) throw();
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cplusplus >= 201103L
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   /// Return the current new handler.
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   new_handler get_new_handler() noexcept;
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** } // namespace std
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** //@{
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** /** These are replaceable signatures:
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - normal single new and delete (no arguments, throw @c bad_alloc on error)
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - normal array new and delete (same)
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - @c nothrow single new and delete (take a @c nothrow argument, return
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *    @c NULL on error)
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  - @c nothrow array new and delete (same)
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  Placement new and delete signatures (take a memory address argument,
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****  *  does nothing) may not be replaced by a user's program.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** */
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t) _GLIBCXX_THROW (std::bad_alloc)
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*) _GLIBCXX_USE_NOEXCEPT
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*) _GLIBCXX_USE_NOEXCEPT
ARM GAS  /tmp/ccszdRNt.s 			page 91


 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_sized_deallocation
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::size_t) _GLIBCXX_USE_NOEXCEPT
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__, __malloc__));
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__, __malloc__));
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, const std::nothrow_t&) _GLIBCXX_USE_NOEXCEPT
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_aligned_new
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t)
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new(std::size_t, std::align_val_t, const std::nothrow_t&)
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::align_val_t)
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::align_val_t, const std::nothrow_t&)
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t)
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   __attribute__((__externally_visible__));
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD void* operator new[](std::size_t, std::align_val_t, const std::nothrow_t&)
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__, __malloc__));
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::align_val_t)
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::align_val_t, const std::nothrow_t&)
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #if __cpp_sized_deallocation
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete(void*, std::size_t, std::align_val_t)
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** void operator delete[](void*, std::size_t, std::align_val_t)
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new ****   _GLIBCXX_USE_NOEXCEPT __attribute__((__externally_visible__));
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif // __cpp_sized_deallocation
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** #endif // __cpp_aligned_new
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** 
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** // Default placement versions of operator new.
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** _GLIBCXX_NODISCARD inline void* operator new(std::size_t, void* __p) _GLIBCXX_USE_NOEXCEPT
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/new **** { return __p; }
 627              		.loc 11 174 3 is_stmt 1 view .LVU123
 628              	.LBB4741:
 629              	.LBB4739:
 630              	.LBB4703:
 631              	.LBI4703:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 632              		.loc 5 552 7 view .LVU124
 633              	.LBB4704:
 634              	.LBB4705:
 635              	.LBI4705:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 636              		.loc 5 190 7 view .LVU125
 637              	.LBB4706:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccszdRNt.s 			page 92


 638              		.loc 5 193 51 is_stmt 0 view .LVU126
 639 0018 2000     		movs	r0, r4
 640              	.LVL52:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 641              		.loc 5 193 51 view .LVU127
 642 001a 0830     		adds	r0, r0, #8
 643              	.LVL53:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 644              		.loc 5 193 51 view .LVU128
 645              	.LBE4706:
 646              	.LBE4705:
 647              	.LBB4707:
 648              	.LBI4707:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 649              		.loc 5 286 7 is_stmt 1 view .LVU129
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 650              		.loc 5 286 7 is_stmt 0 view .LVU130
 651              	.LBE4707:
 652              	.LBB4708:
 653              	.LBI4708:
 654              		.loc 8 99 5 is_stmt 1 view .LVU131
 655              		.loc 8 99 5 is_stmt 0 view .LVU132
 656              	.LBE4708:
 657              	.LBB4709:
 658              	.LBI4709:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 659              		.loc 5 159 2 is_stmt 1 view .LVU133
 660              	.LBB4710:
 661              	.LBB4711:
 662              	.LBI4711:
 663              		.loc 8 99 5 view .LVU134
 664              		.loc 8 99 5 is_stmt 0 view .LVU135
 665              	.LBE4711:
 666              	.LBB4712:
 667              	.LBI4712:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 668              		.loc 6 141 7 is_stmt 1 view .LVU136
 669              	.LBB4713:
 670              	.LBI4713:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 671              		.loc 7 83 7 view .LVU137
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 672              		.loc 7 83 7 is_stmt 0 view .LVU138
 673              	.LBE4713:
 674              	.LBE4712:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 675              		.loc 5 160 46 view .LVU139
 676 001c 2060     		str	r0, [r4]
 677              	.LVL54:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 678              		.loc 5 160 46 view .LVU140
 679              	.LBE4710:
 680              	.LBE4709:
 681              	.LBB4714:
 682              	.LBI4714:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 683              		.loc 5 221 7 is_stmt 1 view .LVU141
ARM GAS  /tmp/ccszdRNt.s 			page 93


 684              	.LBB4715:
 685              	.LBI4715:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 686              		.loc 5 186 7 view .LVU142
 687              	.LBB4716:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 688              		.loc 5 187 28 is_stmt 0 view .LVU143
 689 001e 2B68     		ldr	r3, [r5]
 690              	.LVL55:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 691              		.loc 5 187 28 view .LVU144
 692              	.LBE4716:
 693              	.LBE4715:
 694              	.LBB4717:
 695              	.LBI4717:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 696              		.loc 5 200 7 is_stmt 1 view .LVU145
 697              	.LBB4718:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 698              		.loc 5 203 57 is_stmt 0 view .LVU146
 699 0020 1022     		movs	r2, #16
 700              	.LVL56:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 701              		.loc 5 203 57 view .LVU147
 702 0022 5242     		rsbs	r2, r2, #0
 703 0024 9346     		mov	fp, r2
 704 0026 A344     		add	fp, fp, r4
 705              	.LVL57:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 706              		.loc 5 203 57 view .LVU148
 707              	.LBE4718:
 708              	.LBE4717:
 709              	.LBE4714:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 710              		.loc 5 555 2 view .LVU149
 711 0028 5B45     		cmp	r3, fp
 712 002a 1ED0     		beq	.L41
 713              	.LVL58:
 714              	.LBB4719:
 715              	.LBI4719:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 716              		.loc 5 186 7 is_stmt 1 view .LVU150
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 717              		.loc 5 186 7 is_stmt 0 view .LVU151
 718              	.LBE4719:
 719              	.LBB4720:
 720              	.LBI4720:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 721              		.loc 5 178 7 is_stmt 1 view .LVU152
 722              	.LBB4721:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 723              		.loc 5 179 9 is_stmt 0 view .LVU153
 724 002c 2360     		str	r3, [r4]
 725              	.LVL59:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 726              		.loc 5 179 9 view .LVU154
 727              	.LBE4721:
ARM GAS  /tmp/ccszdRNt.s 			page 94


 728              	.LBE4720:
 729              	.LBB4722:
 730              	.LBI4722:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 731              		.loc 5 210 7 is_stmt 1 view .LVU155
 732              	.LBB4723:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 733              		.loc 5 211 9 is_stmt 0 view .LVU156
 734 002e AB68     		ldr	r3, [r5, #8]
 735 0030 A360     		str	r3, [r4, #8]
 736              	.LVL60:
 737              	.L24:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 738              		.loc 5 211 9 view .LVU157
 739              	.LBE4723:
 740              	.LBE4722:
 741              	.LBB4724:
 742              	.LBI4724:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 743              		.loc 5 936 7 is_stmt 1 view .LVU158
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 744              		.loc 5 936 7 is_stmt 0 view .LVU159
 745              	.LBE4724:
 746              	.LBB4725:
 747              	.LBI4725:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 748              		.loc 5 182 7 is_stmt 1 view .LVU160
 749              	.LBB4726:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 750              		.loc 5 183 9 is_stmt 0 view .LVU161
 751 0032 6B68     		ldr	r3, [r5, #4]
 752 0034 6360     		str	r3, [r4, #4]
 753              	.LVL61:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 754              		.loc 5 183 9 view .LVU162
 755              	.LBE4726:
 756              	.LBE4725:
 757              	.LBB4727:
 758              	.LBI4727:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 759              		.loc 5 190 7 is_stmt 1 view .LVU163
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 760              		.loc 5 190 7 is_stmt 0 view .LVU164
 761              	.LBE4727:
 762              	.LBB4728:
 763              	.LBI4728:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 764              		.loc 5 178 7 is_stmt 1 view .LVU165
 765              	.LBB4729:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 766              		.loc 5 179 9 is_stmt 0 view .LVU166
 767 0036 5B46     		mov	r3, fp
 768 0038 2B60     		str	r3, [r5]
 769              	.LVL62:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 770              		.loc 5 179 9 view .LVU167
 771              	.LBE4729:
ARM GAS  /tmp/ccszdRNt.s 			page 95


 772              	.LBE4728:
 773              	.LBB4730:
 774              	.LBI4730:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 775              		.loc 5 214 7 is_stmt 1 view .LVU168
 776              	.LBB4731:
 777              	.LBI4731:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 778              		.loc 5 182 7 view .LVU169
 779              	.LBB4732:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 780              		.loc 5 183 9 is_stmt 0 view .LVU170
 781 003a 0023     		movs	r3, #0
 782 003c 6B60     		str	r3, [r5, #4]
 783              	.LVL63:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 784              		.loc 5 183 9 view .LVU171
 785              	.LBE4732:
 786              	.LBE4731:
 787              	.LBB4733:
 788              	.LBI4733:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 789              		.loc 4 299 7 is_stmt 1 view .LVU172
 790              	.LBB4734:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 791              		.loc 4 300 9 view .LVU173
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 792              		.loc 4 300 14 is_stmt 0 view .LVU174
 793 003e 5A46     		mov	r2, fp
 794 0040 1370     		strb	r3, [r2]
 795              	.LVL64:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 796              		.loc 4 300 14 view .LVU175
 797              	.LBE4734:
 798              	.LBE4733:
 799              	.LBE4730:
 800              	.LBE4704:
 801              	.LBE4703:
 802              	.LBE4739:
 803              	.LBE4741:
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       ++this->_M_impl._M_finish;
 804              		.loc 9 407 23 view .LVU176
 805 0042 7568     		ldr	r5, [r6, #4]
 806              		.loc 9 407 7 view .LVU177
 807 0044 2B00     		movs	r3, r5
 808 0046 1833     		adds	r3, r3, #24
 809 0048 7360     		str	r3, [r6, #4]
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus < 201103L
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _Tp __x_copy = __x;
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_MOVE_BACKWARD3(__position.base(),
 810              		.loc 9 412 7 view .LVU178
 811 004a 2C00     		movs	r4, r5
 812 004c 183C     		subs	r4, r4, #24
 813              	.LVL65:
 814              	.LBB4742:
ARM GAS  /tmp/ccszdRNt.s 			page 96


 815              	.LBI4742:
 816              		.file 12 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 97


  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/c++config.h>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/functexcept.h>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <ext/type_traits.h>
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/concept_check.h>
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <debug/debug.h>
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** # include <type_traits>
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** {
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _BoolType>
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __iter_swap
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static void
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_ForwardIterator1>::value_type
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    _ValueType1;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  _ValueType1 __tmp = *__a;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  *__a = *__b;
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  *__b = __tmp;
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __iter_swap<true>
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static void
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  swap(*__a, *__b);
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
ARM GAS  /tmp/ccszdRNt.s 			page 98


 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   Nothing.
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  iterators themselves.
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline void
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus < 201103L
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ValueType1;
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ValueType2;
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ValueType2>)
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ValueType1>)
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ReferenceType1;
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	_ReferenceType2;
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #else
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       swap(*__a, *__b);
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  The ranges must not overlap.
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _ForwardIterator2
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
ARM GAS  /tmp/ccszdRNt.s 			page 99


 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, (void)++__first2)
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __first2;
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__b < __a)
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  preprocessor macro.
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp>
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
ARM GAS  /tmp/ccszdRNt.s 			page 100


 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__a < __b)
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__comp(__b, __a))
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX14_CONSTEXPR
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline const _Tp&
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       if (__comp(__a, __b))
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // Fallback implementation of the function in bits/stl_iterator.h used to
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // remove the __normal_iterator wrapper. See copy, fill, ...
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _Iterator
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     _GLIBCXX_NOEXCEPT_IF(std::is_nothrow_copy_constructible<_Iterator>::value)
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     { return __it; }
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 101


 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // Reverse the __niter_base transformation to get a
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // __normal_iterator back again (this assumes that __normal_iterator
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // is only used to wrap random access iterators, like pointers).
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _From, typename _To>
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _From
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __niter_wrap(_From __from, _To __res)
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     { return __from + (__res - std::__niter_base(__from)); }
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // No need to wrap, iterator already has the right type.
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Iterator>
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _Iterator
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __niter_wrap(const _Iterator&, _Iterator __res)
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     { return __res; }
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // a for loop with an explicit count.
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, bool _IsSimple, typename _Category>
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *__result = *__first;
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Category>
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, (void)++__first)
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
ARM GAS  /tmp/ccszdRNt.s 			page 102


 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      *__result = *__first;
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__first;
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__result;
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    }
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _OI
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(_II __first, _II __last, _OI __result)
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    {
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__first;
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	      ++__result;
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    }
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _Tp*
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  if (_Num)
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result + _Num;
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
ARM GAS  /tmp/ccszdRNt.s 			page 103


 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueTypeI)
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __is_pointer<_II>::__value
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __is_pointer<_OI>::__value
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			      _Category>::__copy_m(__first, __last, __result);
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _CharT>
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct char_traits;
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     class istreambuf_iterator;
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     class ostreambuf_iterator;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				    _CharT*>::__type
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					    std::__niter_base(__last),
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					    std::__niter_base(__result)));
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
ARM GAS  /tmp/ccszdRNt.s 			page 104


 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  within [first,last).
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__copy_move_a2<__is_move_iterator<_II>::__value>
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   result + (first - last)
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  within [first,last).
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _OI
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_increment_range(__first, __last, __result);
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #else
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
ARM GAS  /tmp/ccszdRNt.s 			page 105


 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool, bool, typename>
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move_backward
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _BI2
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _Category>
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _BI2
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  while (__first != __last)
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _BI2
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = *--__last;
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<>
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _BI2
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 106


 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove>
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       template<typename _Tp>
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	static _Tp*
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	__copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  using __assignable = conditional<_IsMove,
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					   is_move_assignable<_Tp>,
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 					   is_copy_assignable<_Tp>>;
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  static_assert( __assignable::type::value, "type is not assignable" );
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #endif
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  if (_Num)
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result - _Num;
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	}
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     };
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _BI2
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       const bool __simple = (__is_trivially_copyable(_ValueType1)
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __is_pointer<_BI1>::__value
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __is_pointer<_BI2>::__value
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 				       _Category>::__copy_move_b(__first,
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 								 __last,
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 								 __result);
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _BI2
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__niter_wrap(__result,
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		std::__copy_move_backward_a<_IsMove>
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
ARM GAS  /tmp/ccszdRNt.s 			page 107


 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _BI2
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       // concept requirements
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       __glibcxx_requires_can_decrement_range(__first, __last, __result);
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	     (std::__miter_base(__first), std::__miter_base(__last), __result);
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   /**
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  @return   result - (first - last)
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   */
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     inline _BI2
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 817              		.loc 12 676 5 is_stmt 1 view .LVU179
 818              	.LBB4743:
 819              	.LBI4743:
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 820              		.loc 12 613 5 view .LVU180
 821              	.LBB4744:
ARM GAS  /tmp/ccszdRNt.s 			page 108


 822              	.LBI4744:
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 823              		.loc 12 595 5 view .LVU181
 824              	.LBB4745:
 825              	.LBB4746:
 826              	.LBI4746:
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	{
 827              		.loc 12 562 2 view .LVU182
 828              	.LBB4747:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 829              		.loc 12 565 22 is_stmt 0 view .LVU183
 830 004e 4346     		mov	r3, r8
 831              	.LVL66:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 832              		.loc 12 565 22 view .LVU184
 833 0050 E21A     		subs	r2, r4, r3
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 834              		.loc 12 565 13 view .LVU185
 835 0052 D210     		asrs	r2, r2, #3
 836 0054 9300     		lsls	r3, r2, #2
 837              	.LVL67:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 838              		.loc 12 565 13 view .LVU186
 839 0056 9B18     		adds	r3, r3, r2
 840 0058 1E01     		lsls	r6, r3, #4
 841              	.LVL68:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 842              		.loc 12 565 13 view .LVU187
 843 005a 9B19     		adds	r3, r3, r6
 844 005c 1E02     		lsls	r6, r3, #8
 845 005e 9B19     		adds	r3, r3, r6
 846 0060 1E04     		lsls	r6, r3, #16
 847 0062 9E19     		adds	r6, r3, r6
 848 0064 7600     		lsls	r6, r6, #1
 849 0066 B618     		adds	r6, r6, r2
 850              	.LVL69:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 851              		.loc 12 565 13 view .LVU188
 852 0068 17E0     		b	.L32
 853              	.LVL70:
 854              	.L41:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 855              		.loc 12 565 13 view .LVU189
 856              	.LBE4747:
 857              	.LBE4746:
 858              	.LBE4745:
 859              	.LBE4744:
 860              	.LBE4743:
 861              	.LBE4742:
 862              	.LBB4808:
 863              	.LBB4740:
 864              	.LBB4738:
 865              	.LBB4737:
 866              	.LBB4735:
 867              	.LBI4735:
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 109


 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static _GLIBCXX17_CONSTEXPR const char_type*
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       find(const char_type* __s, size_t __n, const char_type& __a)
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #if __cplusplus >= 201703L
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__builtin_constant_p(__n)
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __builtin_constant_p(__a)
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s, __n))
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::find(__s, __n, __a);
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** #endif
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return static_cast<const char_type*>(__builtin_memchr(__s, __a, __n));
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       move(char_type* __s1, const char_type* __s2, size_t __n)
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memmove(__s1, __s2, __n));
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       static char_type*
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       copy(char_type* __s1, const char_type* __s2, size_t __n)
 868              		.loc 4 361 7 is_stmt 1 view .LVU190
 869              	.LBB4736:
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	if (__n == 0)
 870              		.loc 4 363 2 view .LVU191
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	return static_cast<char_type*>(__builtin_memcpy(__s1, __s2, __n));
 871              		.loc 4 365 2 view .LVU192
 872              		.loc 4 365 49 is_stmt 0 view .LVU193
 873 006a 2032     		adds	r2, r2, #32
 874 006c 5946     		mov	r1, fp
 875 006e FFF7FEFF 		bl	memcpy
 876              	.LVL71:
 877              		.loc 4 365 49 view .LVU194
 878 0072 DEE7     		b	.L24
 879              	.LVL72:
 880              	.L43:
 881              		.loc 4 365 49 view .LVU195
 882              	.LBE4736:
 883              	.LBE4735:
 884              	.LBE4737:
 885              	.LBE4738:
 886              	.LBE4740:
 887              	.LBE4808:
 888              	.LBB4809:
 889              	.LBB4807:
 890              	.LBB4806:
 891              	.LBB4805:
 892              	.LBB4804:
 893              	.LBB4803:
 894              	.LBB4748:
 895              	.LBB4749:
 896              	.LBB4750:
ARM GAS  /tmp/ccszdRNt.s 			page 110


 897              	.LBI4750:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 898              		.loc 5 930 7 is_stmt 1 view .LVU196
 899              	.LBB4751:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 900              		.loc 5 931 16 is_stmt 0 view .LVU197
 901 0074 6268     		ldr	r2, [r4, #4]
 902              	.LVL73:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 903              		.loc 5 931 16 view .LVU198
 904              	.LBE4751:
 905              	.LBE4750:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 906              		.loc 5 750 6 view .LVU199
 907 0076 002A     		cmp	r2, #0
 908 0078 03D0     		beq	.L27
 909              	.LVL74:
 910              	.LBB4752:
 911              	.LBI4752:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 912              		.loc 5 346 7 is_stmt 1 view .LVU200
 913              	.LBB4753:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 914              		.loc 5 348 2 is_stmt 0 view .LVU201
 915 007a 012A     		cmp	r2, #1
 916 007c 28D0     		beq	.L42
 917              	.LVL75:
 918              	.LBB4754:
 919              	.LBI4754:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 920              		.loc 4 361 7 is_stmt 1 view .LVU202
 921              	.LBB4755:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 922              		.loc 4 363 2 view .LVU203
 923              		.loc 4 365 2 view .LVU204
 924              		.loc 4 365 49 is_stmt 0 view .LVU205
 925 007e FFF7FEFF 		bl	memcpy
 926              	.LVL76:
 927              	.L27:
 928              		.loc 4 365 49 view .LVU206
 929              	.LBE4755:
 930              	.LBE4754:
 931              	.LBE4753:
 932              	.LBE4752:
 933              	.LBB4759:
 934              	.LBI4759:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 935              		.loc 5 930 7 is_stmt 1 view .LVU207
 936              	.LBB4760:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 937              		.loc 5 931 16 is_stmt 0 view .LVU208
 938 0082 6368     		ldr	r3, [r4, #4]
 939              	.LVL77:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 940              		.loc 5 931 16 view .LVU209
 941              	.LBE4760:
 942              	.LBE4759:
ARM GAS  /tmp/ccszdRNt.s 			page 111


 943              	.LBB4761:
 944              	.LBI4761:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 945              		.loc 5 214 7 is_stmt 1 view .LVU210
 946              	.LBB4762:
 947              	.LBB4763:
 948              	.LBI4763:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 949              		.loc 5 182 7 view .LVU211
 950              	.LBB4764:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 951              		.loc 5 183 9 is_stmt 0 view .LVU212
 952 0084 6B60     		str	r3, [r5, #4]
 953              	.LVL78:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 954              		.loc 5 183 9 view .LVU213
 955              	.LBE4764:
 956              	.LBE4763:
 957              	.LBB4765:
 958              	.LBI4765:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 959              		.loc 5 186 7 is_stmt 1 view .LVU214
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 960              		.loc 5 186 7 is_stmt 0 view .LVU215
 961              	.LBE4765:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 962              		.loc 5 217 31 view .LVU216
 963 0086 2A68     		ldr	r2, [r5]
 964 0088 9446     		mov	ip, r2
 965 008a 6344     		add	r3, r3, ip
 966              	.LVL79:
 967              	.LBB4766:
 968              	.LBI4766:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 969              		.loc 4 299 7 is_stmt 1 view .LVU217
 970              	.LBB4767:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 971              		.loc 4 300 9 view .LVU218
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 972              		.loc 4 300 14 is_stmt 0 view .LVU219
 973 008c 0022     		movs	r2, #0
 974 008e 1A70     		strb	r2, [r3]
 975              	.LVL80:
 976              	.L29:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 977              		.loc 4 300 14 view .LVU220
 978              	.LBE4767:
 979              	.LBE4766:
 980              	.LBE4762:
 981              	.LBE4761:
 982              	.LBE4749:
 983              	.LBB4789:
 984              	.LBI4789:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 985              		.loc 5 1023 7 is_stmt 1 view .LVU221
 986              	.LBB4790:
 987              	.LBI4790:
ARM GAS  /tmp/ccszdRNt.s 			page 112


 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 988              		.loc 5 214 7 view .LVU222
 989              	.LBB4791:
 990              	.LBI4791:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 991              		.loc 5 182 7 view .LVU223
 992              	.LBB4792:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 993              		.loc 5 183 9 is_stmt 0 view .LVU224
 994 0090 0023     		movs	r3, #0
 995 0092 6360     		str	r3, [r4, #4]
 996              	.LVL81:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 997              		.loc 5 183 9 view .LVU225
 998              	.LBE4792:
 999              	.LBE4791:
 1000              	.LBB4793:
 1001              	.LBI4793:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1002              		.loc 5 186 7 is_stmt 1 view .LVU226
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1003              		.loc 5 186 7 is_stmt 0 view .LVU227
 1004              	.LBE4793:
 1005              	.LBB4794:
 1006              	.LBI4794:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 1007              		.loc 4 299 7 is_stmt 1 view .LVU228
 1008              	.LBB4795:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1009              		.loc 4 300 9 view .LVU229
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1010              		.loc 4 300 14 is_stmt 0 view .LVU230
 1011 0094 2268     		ldr	r2, [r4]
 1012 0096 1370     		strb	r3, [r2]
 1013              	.LVL82:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1014              		.loc 4 300 14 view .LVU231
 1015              	.LBE4795:
 1016              	.LBE4794:
 1017              	.LBE4790:
 1018              	.LBE4789:
 1019              	.LBE4748:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 1020              		.loc 12 565 4 is_stmt 1 view .LVU232
 1021 0098 013E     		subs	r6, r6, #1
 1022              	.LVL83:
 1023              	.L32:
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 1024              		.loc 12 565 37 view .LVU233
 1025 009a 002E     		cmp	r6, #0
 1026 009c 1FDD     		ble	.L25
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 1027              		.loc 12 566 6 is_stmt 0 view .LVU234
 1028 009e 183C     		subs	r4, r4, #24
 1029              	.LVL84:
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	  return __result;
 1030              		.loc 12 566 6 view .LVU235
ARM GAS  /tmp/ccszdRNt.s 			page 113


 1031 00a0 183D     		subs	r5, r5, #24
 1032              	.LVL85:
 1033              	.LBB4802:
 1034              	.LBI4748:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 1035              		.loc 5 732 7 is_stmt 1 view .LVU236
 1036              	.LBB4796:
 1037              	.LBI4796:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1038              		.loc 5 221 7 view .LVU237
 1039              	.LBB4797:
 1040              	.LBI4797:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1041              		.loc 5 186 7 view .LVU238
 1042              	.LBB4798:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1043              		.loc 5 187 28 is_stmt 0 view .LVU239
 1044 00a2 2868     		ldr	r0, [r5]
 1045              	.LVL86:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1046              		.loc 5 187 28 view .LVU240
 1047              	.LBE4798:
 1048              	.LBE4797:
 1049              	.LBB4799:
 1050              	.LBI4799:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1051              		.loc 5 200 7 is_stmt 1 view .LVU241
 1052              	.LBB4800:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1053              		.loc 5 203 57 is_stmt 0 view .LVU242
 1054 00a4 2A00     		movs	r2, r5
 1055 00a6 0832     		adds	r2, r2, #8
 1056              	.LVL87:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1057              		.loc 5 203 57 view .LVU243
 1058              	.LBE4800:
 1059              	.LBE4799:
 1060              	.LBE4796:
 1061              	.LBB4801:
 1062              	.LBB4768:
 1063              	.LBI4768:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1064              		.loc 5 221 7 is_stmt 1 view .LVU244
 1065              	.LBB4769:
 1066              	.LBI4769:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1067              		.loc 5 186 7 view .LVU245
 1068              	.LBB4770:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1069              		.loc 5 187 28 is_stmt 0 view .LVU246
 1070 00a8 2168     		ldr	r1, [r4]
 1071              	.LVL88:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1072              		.loc 5 187 28 view .LVU247
 1073              	.LBE4770:
 1074              	.LBE4769:
 1075              	.LBB4771:
ARM GAS  /tmp/ccszdRNt.s 			page 114


 1076              	.LBI4771:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1077              		.loc 5 200 7 is_stmt 1 view .LVU248
 1078              	.LBB4772:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1079              		.loc 5 203 57 is_stmt 0 view .LVU249
 1080 00aa 2300     		movs	r3, r4
 1081 00ac 0833     		adds	r3, r3, #8
 1082              	.LVL89:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1083              		.loc 5 203 57 view .LVU250
 1084              	.LBE4772:
 1085              	.LBE4771:
 1086              	.LBE4768:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 1087              		.loc 5 747 2 view .LVU251
 1088 00ae 9942     		cmp	r1, r3
 1089 00b0 E0D0     		beq	.L43
 1090              	.LVL90:
 1091              	.LBB4773:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 1092              		.loc 5 761 6 view .LVU252
 1093 00b2 9042     		cmp	r0, r2
 1094 00b4 0FD0     		beq	.L39
 1095              	.LVL91:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 1096              		.loc 5 767 7 view .LVU253
 1097 00b6 AA68     		ldr	r2, [r5, #8]
 1098 00b8 9146     		mov	r9, r2
 1099              	.LVL92:
 1100              	.L30:
 1101              	.LBB4774:
 1102              	.LBI4774:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1103              		.loc 5 178 7 is_stmt 1 view .LVU254
 1104              	.LBB4775:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1105              		.loc 5 179 9 is_stmt 0 view .LVU255
 1106 00ba 2960     		str	r1, [r5]
 1107              	.LVL93:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1108              		.loc 5 179 9 view .LVU256
 1109              	.LBE4775:
 1110              	.LBE4774:
 1111              	.LBB4776:
 1112              	.LBI4776:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1113              		.loc 5 936 7 is_stmt 1 view .LVU257
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1114              		.loc 5 936 7 is_stmt 0 view .LVU258
 1115              	.LBE4776:
 1116              	.LBB4777:
 1117              	.LBI4777:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1118              		.loc 5 182 7 is_stmt 1 view .LVU259
 1119              	.LBB4778:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 115


 1120              		.loc 5 183 9 is_stmt 0 view .LVU260
 1121 00bc 6268     		ldr	r2, [r4, #4]
 1122 00be 6A60     		str	r2, [r5, #4]
 1123              	.LVL94:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1124              		.loc 5 183 9 view .LVU261
 1125              	.LBE4778:
 1126              	.LBE4777:
 1127              	.LBB4779:
 1128              	.LBI4779:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1129              		.loc 5 210 7 is_stmt 1 view .LVU262
 1130              	.LBB4780:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1131              		.loc 5 211 9 is_stmt 0 view .LVU263
 1132 00c0 A268     		ldr	r2, [r4, #8]
 1133 00c2 AA60     		str	r2, [r5, #8]
 1134              	.LVL95:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1135              		.loc 5 211 9 view .LVU264
 1136              	.LBE4780:
 1137              	.LBE4779:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 1138              		.loc 5 776 6 view .LVU265
 1139 00c4 0028     		cmp	r0, #0
 1140 00c6 08D0     		beq	.L31
 1141              	.LVL96:
 1142              	.LBB4781:
 1143              	.LBI4781:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1144              		.loc 5 178 7 is_stmt 1 view .LVU266
 1145              	.LBB4782:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1146              		.loc 5 179 9 is_stmt 0 view .LVU267
 1147 00c8 2060     		str	r0, [r4]
 1148              	.LVL97:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1149              		.loc 5 179 9 view .LVU268
 1150              	.LBE4782:
 1151              	.LBE4781:
 1152              	.LBB4783:
 1153              	.LBI4783:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1154              		.loc 5 210 7 is_stmt 1 view .LVU269
 1155              	.LBB4784:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1156              		.loc 5 211 9 is_stmt 0 view .LVU270
 1157 00ca 4B46     		mov	r3, r9
 1158 00cc A360     		str	r3, [r4, #8]
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1159              		.loc 5 211 45 view .LVU271
 1160 00ce DFE7     		b	.L29
 1161              	.LVL98:
 1162              	.L42:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1163              		.loc 5 211 45 view .LVU272
 1164              	.LBE4784:
ARM GAS  /tmp/ccszdRNt.s 			page 116


 1165              	.LBE4783:
 1166              	.LBE4773:
 1167              	.LBB4787:
 1168              	.LBB4758:
 1169              	.LBB4756:
 1170              	.LBI4756:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 1171              		.loc 4 299 7 is_stmt 1 view .LVU273
 1172              	.LBB4757:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1173              		.loc 4 300 9 view .LVU274
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1174              		.loc 4 300 16 is_stmt 0 view .LVU275
 1175 00d0 0B78     		ldrb	r3, [r1]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1176              		.loc 4 300 14 view .LVU276
 1177 00d2 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1178              		.loc 4 300 22 view .LVU277
 1179 00d4 D5E7     		b	.L27
 1180              	.LVL99:
 1181              	.L39:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1182              		.loc 4 300 22 view .LVU278
 1183              	.LBE4757:
 1184              	.LBE4756:
 1185              	.LBE4758:
 1186              	.LBE4787:
 1187              	.LBB4788:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 1188              		.loc 5 759 14 view .LVU279
 1189 00d6 0020     		movs	r0, #0
 1190 00d8 EFE7     		b	.L30
 1191              	.LVL100:
 1192              	.L31:
 1193              	.LBB4785:
 1194              	.LBI4785:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1195              		.loc 5 178 7 is_stmt 1 view .LVU280
 1196              	.LBB4786:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1197              		.loc 5 179 9 is_stmt 0 view .LVU281
 1198 00da 2360     		str	r3, [r4]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1199              		.loc 5 179 33 view .LVU282
 1200 00dc D8E7     		b	.L29
 1201              	.LVL101:
 1202              	.L25:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1203              		.loc 5 179 33 view .LVU283
 1204              	.LBE4786:
 1205              	.LBE4785:
 1206              	.LBE4788:
 1207              	.LBE4801:
 1208              	.LBE4802:
 1209              	.LBE4803:
 1210              	.LBE4804:
ARM GAS  /tmp/ccszdRNt.s 			page 117


 1211              	.LBE4805:
 1212              	.LBE4806:
 1213              	.LBE4807:
 1214              	.LBE4809:
 1215              	.LBB4810:
 1216              	.LBI4810:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 1217              		.loc 5 732 7 is_stmt 1 view .LVU284
 1218              	.LBB4811:
 1219              	.LBI4811:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1220              		.loc 5 221 7 view .LVU285
 1221              	.LBB4812:
 1222              	.LBI4812:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1223              		.loc 5 186 7 view .LVU286
 1224              	.LBB4813:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1225              		.loc 5 187 28 is_stmt 0 view .LVU287
 1226 00de 4346     		mov	r3, r8
 1227              	.LVL102:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1228              		.loc 5 187 28 view .LVU288
 1229 00e0 1868     		ldr	r0, [r3]
 1230              	.LVL103:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1231              		.loc 5 187 28 view .LVU289
 1232              	.LBE4813:
 1233              	.LBE4812:
 1234              	.LBB4814:
 1235              	.LBI4814:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1236              		.loc 5 200 7 is_stmt 1 view .LVU290
 1237              	.LBB4815:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1238              		.loc 5 203 57 is_stmt 0 view .LVU291
 1239 00e2 4246     		mov	r2, r8
 1240 00e4 0832     		adds	r2, r2, #8
 1241              	.LVL104:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1242              		.loc 5 203 57 view .LVU292
 1243              	.LBE4815:
 1244              	.LBE4814:
 1245              	.LBE4811:
 1246              	.LBB4816:
 1247              	.LBB4817:
 1248              	.LBI4817:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 1249              		.loc 5 221 7 is_stmt 1 view .LVU293
 1250              	.LBB4818:
 1251              	.LBI4818:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1252              		.loc 5 186 7 view .LVU294
 1253              	.LBB4819:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1254              		.loc 5 187 28 is_stmt 0 view .LVU295
 1255 00e6 3968     		ldr	r1, [r7]
ARM GAS  /tmp/ccszdRNt.s 			page 118


 1256              	.LVL105:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1257              		.loc 5 187 28 view .LVU296
 1258              	.LBE4819:
 1259              	.LBE4818:
 1260              	.LBB4820:
 1261              	.LBI4820:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1262              		.loc 5 200 7 is_stmt 1 view .LVU297
 1263              	.LBB4821:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1264              		.loc 5 203 57 is_stmt 0 view .LVU298
 1265 00e8 3B00     		movs	r3, r7
 1266              	.LVL106:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1267              		.loc 5 203 57 view .LVU299
 1268 00ea 0833     		adds	r3, r3, #8
 1269              	.LVL107:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 1270              		.loc 5 203 57 view .LVU300
 1271              	.LBE4821:
 1272              	.LBE4820:
 1273              	.LBE4817:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 1274              		.loc 5 747 2 view .LVU301
 1275 00ec 9942     		cmp	r1, r3
 1276 00ee 19D0     		beq	.L44
 1277              	.LVL108:
 1278              	.LBB4822:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 1279              		.loc 5 761 6 view .LVU302
 1280 00f0 9042     		cmp	r0, r2
 1281 00f2 29D0     		beq	.L40
 1282              	.LVL109:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 1283              		.loc 5 767 7 view .LVU303
 1284 00f4 4246     		mov	r2, r8
 1285              	.LVL110:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 1286              		.loc 5 767 7 view .LVU304
 1287 00f6 9268     		ldr	r2, [r2, #8]
 1288              	.LVL111:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 1289              		.loc 5 767 7 view .LVU305
 1290 00f8 9246     		mov	r10, r2
 1291              	.LVL112:
 1292              	.L37:
 1293              	.LBB4823:
 1294              	.LBI4823:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1295              		.loc 5 178 7 is_stmt 1 view .LVU306
 1296              	.LBB4824:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1297              		.loc 5 179 9 is_stmt 0 view .LVU307
 1298 00fa 4246     		mov	r2, r8
 1299              	.LVL113:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 119


 1300              		.loc 5 179 9 view .LVU308
 1301 00fc 1160     		str	r1, [r2]
 1302              	.LVL114:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1303              		.loc 5 179 9 view .LVU309
 1304              	.LBE4824:
 1305              	.LBE4823:
 1306              	.LBB4825:
 1307              	.LBI4825:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1308              		.loc 5 936 7 is_stmt 1 view .LVU310
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1309              		.loc 5 936 7 is_stmt 0 view .LVU311
 1310              	.LBE4825:
 1311              	.LBB4826:
 1312              	.LBI4826:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1313              		.loc 5 182 7 is_stmt 1 view .LVU312
 1314              	.LBB4827:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1315              		.loc 5 183 9 is_stmt 0 view .LVU313
 1316 00fe 7968     		ldr	r1, [r7, #4]
 1317 0100 5160     		str	r1, [r2, #4]
 1318              	.LVL115:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1319              		.loc 5 183 9 view .LVU314
 1320              	.LBE4827:
 1321              	.LBE4826:
 1322              	.LBB4828:
 1323              	.LBI4828:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1324              		.loc 5 210 7 is_stmt 1 view .LVU315
 1325              	.LBB4829:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1326              		.loc 5 211 9 is_stmt 0 view .LVU316
 1327 0102 B968     		ldr	r1, [r7, #8]
 1328 0104 9160     		str	r1, [r2, #8]
 1329              	.LVL116:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1330              		.loc 5 211 9 view .LVU317
 1331              	.LBE4829:
 1332              	.LBE4828:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 1333              		.loc 5 776 6 view .LVU318
 1334 0106 0028     		cmp	r0, #0
 1335 0108 20D0     		beq	.L38
 1336              	.LVL117:
 1337              	.LBB4830:
 1338              	.LBI4830:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1339              		.loc 5 178 7 is_stmt 1 view .LVU319
 1340              	.LBB4831:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1341              		.loc 5 179 9 is_stmt 0 view .LVU320
 1342 010a 3860     		str	r0, [r7]
 1343              	.LVL118:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 120


 1344              		.loc 5 179 9 view .LVU321
 1345              	.LBE4831:
 1346              	.LBE4830:
 1347              	.LBB4832:
 1348              	.LBI4832:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 1349              		.loc 5 210 7 is_stmt 1 view .LVU322
 1350              	.LBB4833:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1351              		.loc 5 211 9 is_stmt 0 view .LVU323
 1352 010c 5346     		mov	r3, r10
 1353 010e BB60     		str	r3, [r7, #8]
 1354              	.LVL119:
 1355              	.L36:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1356              		.loc 5 211 9 view .LVU324
 1357              	.LBE4833:
 1358              	.LBE4832:
 1359              	.LBE4822:
 1360              	.LBE4816:
 1361              	.LBB4857:
 1362              	.LBI4857:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 1363              		.loc 5 1023 7 is_stmt 1 view .LVU325
 1364              	.LBB4858:
 1365              	.LBI4858:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1366              		.loc 5 214 7 view .LVU326
 1367              	.LBB4859:
 1368              	.LBI4859:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1369              		.loc 5 182 7 view .LVU327
 1370              	.LBB4860:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1371              		.loc 5 183 9 is_stmt 0 view .LVU328
 1372 0110 0023     		movs	r3, #0
 1373 0112 7B60     		str	r3, [r7, #4]
 1374              	.LVL120:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1375              		.loc 5 183 9 view .LVU329
 1376              	.LBE4860:
 1377              	.LBE4859:
 1378              	.LBB4861:
 1379              	.LBI4861:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1380              		.loc 5 186 7 is_stmt 1 view .LVU330
 1381              	.LBB4862:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1382              		.loc 5 187 28 is_stmt 0 view .LVU331
 1383 0114 3A68     		ldr	r2, [r7]
 1384              	.LVL121:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1385              		.loc 5 187 28 view .LVU332
 1386              	.LBE4862:
 1387              	.LBE4861:
 1388              	.LBB4863:
 1389              	.LBI4863:
ARM GAS  /tmp/ccszdRNt.s 			page 121


 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 1390              		.loc 4 299 7 is_stmt 1 view .LVU333
 1391              	.LBB4864:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1392              		.loc 4 300 9 view .LVU334
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1393              		.loc 4 300 14 is_stmt 0 view .LVU335
 1394 0116 1370     		strb	r3, [r2]
 1395              	.LVL122:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1396              		.loc 4 300 14 view .LVU336
 1397              	.LBE4864:
 1398              	.LBE4863:
 1399              	.LBE4858:
 1400              	.LBE4857:
 1401              	.LBE4810:
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			      this->_M_impl._M_finish - 2,
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 			      this->_M_impl._M_finish - 1);
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus < 201103L
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       *__position = __x_copy;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       *__position = std::forward<_Arg>(__arg);
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 1402              		.loc 9 420 5 view .LVU337
 1403              		@ sp needed
 1404              	.LVL123:
 1405              	.LVL124:
 1406              		.loc 9 420 5 view .LVU338
 1407 0118 F0BC     		pop	{r4, r5, r6, r7}
 1408 011a BB46     		mov	fp, r7
 1409 011c B246     		mov	r10, r6
 1410 011e A946     		mov	r9, r5
 1411 0120 A046     		mov	r8, r4
 1412 0122 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1413              	.LVL125:
 1414              	.L44:
 1415              	.LBB4866:
 1416              	.LBB4865:
 1417              	.LBB4836:
 1418              	.LBI4836:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1419              		.loc 5 930 7 is_stmt 1 view .LVU339
 1420              	.LBB4837:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1421              		.loc 5 931 16 is_stmt 0 view .LVU340
 1422 0124 7A68     		ldr	r2, [r7, #4]
 1423              	.LVL126:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1424              		.loc 5 931 16 view .LVU341
 1425              	.LBE4837:
 1426              	.LBE4836:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 1427              		.loc 5 750 6 view .LVU342
 1428 0126 002A     		cmp	r2, #0
 1429 0128 03D0     		beq	.L34
 1430              	.LVL127:
ARM GAS  /tmp/ccszdRNt.s 			page 122


 1431              	.LBB4838:
 1432              	.LBI4838:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1433              		.loc 5 346 7 is_stmt 1 view .LVU343
 1434              	.LBB4839:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 1435              		.loc 5 348 2 is_stmt 0 view .LVU344
 1436 012a 012A     		cmp	r2, #1
 1437 012c 09D0     		beq	.L45
 1438              	.LVL128:
 1439              	.LBB4840:
 1440              	.LBI4840:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 1441              		.loc 4 361 7 is_stmt 1 view .LVU345
 1442              	.LBB4841:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 1443              		.loc 4 363 2 view .LVU346
 1444              		.loc 4 365 2 view .LVU347
 1445              		.loc 4 365 49 is_stmt 0 view .LVU348
 1446 012e FFF7FEFF 		bl	memcpy
 1447              	.LVL129:
 1448              	.L34:
 1449              		.loc 4 365 49 view .LVU349
 1450              	.LBE4841:
 1451              	.LBE4840:
 1452              	.LBE4839:
 1453              	.LBE4838:
 1454              	.LBB4845:
 1455              	.LBI4845:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 1456              		.loc 5 930 7 is_stmt 1 view .LVU350
 1457              	.LBB4846:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1458              		.loc 5 931 16 is_stmt 0 view .LVU351
 1459 0132 7A68     		ldr	r2, [r7, #4]
 1460              	.LVL130:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1461              		.loc 5 931 16 view .LVU352
 1462              	.LBE4846:
 1463              	.LBE4845:
 1464              	.LBB4847:
 1465              	.LBI4847:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 1466              		.loc 5 214 7 is_stmt 1 view .LVU353
 1467              	.LBB4848:
 1468              	.LBB4849:
 1469              	.LBI4849:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 1470              		.loc 5 182 7 view .LVU354
 1471              	.LBB4850:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1472              		.loc 5 183 9 is_stmt 0 view .LVU355
 1473 0134 4346     		mov	r3, r8
 1474 0136 5A60     		str	r2, [r3, #4]
 1475              	.LVL131:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1476              		.loc 5 183 9 view .LVU356
ARM GAS  /tmp/ccszdRNt.s 			page 123


 1477              	.LBE4850:
 1478              	.LBE4849:
 1479              	.LBB4851:
 1480              	.LBI4851:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1481              		.loc 5 186 7 is_stmt 1 view .LVU357
 1482              	.LBB4852:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1483              		.loc 5 187 28 is_stmt 0 view .LVU358
 1484 0138 1B68     		ldr	r3, [r3]
 1485              	.LVL132:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1486              		.loc 5 187 28 view .LVU359
 1487              	.LBE4852:
 1488              	.LBE4851:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 1489              		.loc 5 217 31 view .LVU360
 1490 013a 9B18     		adds	r3, r3, r2
 1491              	.LVL133:
 1492              	.LBB4853:
 1493              	.LBI4853:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 1494              		.loc 4 299 7 is_stmt 1 view .LVU361
 1495              	.LBB4854:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1496              		.loc 4 300 9 view .LVU362
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1497              		.loc 4 300 14 is_stmt 0 view .LVU363
 1498 013c 0022     		movs	r2, #0
 1499              	.LVL134:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1500              		.loc 4 300 14 view .LVU364
 1501 013e 1A70     		strb	r2, [r3]
 1502              	.LVL135:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1503              		.loc 4 300 14 view .LVU365
 1504              	.LBE4854:
 1505              	.LBE4853:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1506              		.loc 5 218 7 view .LVU366
 1507 0140 E6E7     		b	.L36
 1508              	.LVL136:
 1509              	.L45:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1510              		.loc 5 218 7 view .LVU367
 1511              	.LBE4848:
 1512              	.LBE4847:
 1513              	.LBB4855:
 1514              	.LBB4844:
 1515              	.LBB4842:
 1516              	.LBI4842:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 1517              		.loc 4 299 7 is_stmt 1 view .LVU368
 1518              	.LBB4843:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1519              		.loc 4 300 9 view .LVU369
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 124


 1520              		.loc 4 300 16 is_stmt 0 view .LVU370
 1521 0142 0B78     		ldrb	r3, [r1]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1522              		.loc 4 300 14 view .LVU371
 1523 0144 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1524              		.loc 4 300 22 view .LVU372
 1525 0146 F4E7     		b	.L34
 1526              	.LVL137:
 1527              	.L40:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 1528              		.loc 4 300 22 view .LVU373
 1529              	.LBE4843:
 1530              	.LBE4842:
 1531              	.LBE4844:
 1532              	.LBE4855:
 1533              	.LBB4856:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 1534              		.loc 5 759 14 view .LVU374
 1535 0148 0020     		movs	r0, #0
 1536 014a D6E7     		b	.L37
 1537              	.LVL138:
 1538              	.L38:
 1539              	.LBB4834:
 1540              	.LBI4834:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 1541              		.loc 5 178 7 is_stmt 1 view .LVU375
 1542              	.LBB4835:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1543              		.loc 5 179 9 is_stmt 0 view .LVU376
 1544 014c 3B60     		str	r3, [r7]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 1545              		.loc 5 179 33 view .LVU377
 1546 014e DFE7     		b	.L36
 1547              	.LBE4835:
 1548              	.LBE4834:
 1549              	.LBE4856:
 1550              	.LBE4865:
 1551              	.LBE4866:
 1552              		.cfi_endproc
 1553              	.LFE4447:
 1555              		.section	.rodata._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3C
 1556              		.align	2
 1557              	.LC2:
 1558 0000 76656374 		.ascii	"vector::_M_realloc_insert\000"
 1558      6F723A3A 
 1558      5F4D5F72 
 1558      65616C6C 
 1558      6F635F69 
 1559              		.section	.text._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLI
 1560              		.align	1
 1561              		.weak	_ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__
 1562              		.syntax unified
 1563              		.code	16
 1564              		.thumb_func
 1565              		.fpu softvfp
 1567              	_ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__gnu_cxx
ARM GAS  /tmp/ccszdRNt.s 			page 125


 1568              	.LVL139:
 1569              	.LFB4562:
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     template<typename... _Args>
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       void
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       vector<_Tp, _Alloc>::
 1570              		.loc 9 426 7 is_stmt 1 view -0
 1571              		.cfi_startproc
 1572              		@ args = 0, pretend = 0, frame = 8
 1573              		@ frame_needed = 0, uses_anonymous_args = 0
 1574              		.loc 9 426 7 is_stmt 0 view .LVU379
 1575 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1576              	.LCFI7:
 1577              		.cfi_def_cfa_offset 20
 1578              		.cfi_offset 4, -20
 1579              		.cfi_offset 5, -16
 1580              		.cfi_offset 6, -12
 1581              		.cfi_offset 7, -8
 1582              		.cfi_offset 14, -4
 1583 0002 DE46     		mov	lr, fp
 1584 0004 5746     		mov	r7, r10
 1585 0006 4E46     		mov	r6, r9
 1586 0008 4546     		mov	r5, r8
 1587 000a E0B5     		push	{r5, r6, r7, lr}
 1588              	.LCFI8:
 1589              		.cfi_def_cfa_offset 36
 1590              		.cfi_offset 8, -36
 1591              		.cfi_offset 9, -32
 1592              		.cfi_offset 10, -28
 1593              		.cfi_offset 11, -24
 1594 000c 83B0     		sub	sp, sp, #12
 1595              	.LCFI9:
 1596              		.cfi_def_cfa_offset 48
 1597 000e 0500     		movs	r5, r0
 1598 0010 8846     		mov	r8, r1
 1599              	.LVL140:
 1600              		.loc 9 426 7 view .LVU380
 1601 0012 9346     		mov	fp, r2
 1602              	.LVL141:
 1603              		.loc 9 426 7 view .LVU381
 1604 0014 0123     		movs	r3, #1
 1605 0016 0093     		str	r3, [sp]
 1606              	.LVL142:
 1607              	.LBB4905:
 1608              	.LBI4905:
 1609              		.file 13 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // any later version.
ARM GAS  /tmp/ccszdRNt.s 			page 126


  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Copyright (c) 1996
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** /** @file bits/stl_vector.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <bits/functexcept.h>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <bits/concept_check.h>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <initializer_list>
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #include <debug/assertions.h>
ARM GAS  /tmp/ccszdRNt.s 			page 127


  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** extern "C" void
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** __sanitizer_annotate_contiguous_container(const void*, const void*,
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  const void*, const void*);
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** {
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     struct _Vector_base
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     {
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	rebind<_Tp>::other _Tp_alloc_type;
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        	pointer;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       struct _Vector_impl_data
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer _M_start;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer _M_finish;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl_data() _GLIBCXX_NOEXCEPT
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl_data(_Vector_impl_data&& __x) noexcept
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(__x._M_start), _M_finish(__x._M_finish),
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_end_of_storage(__x._M_end_of_storage)
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ __x._M_start = __x._M_finish = __x._M_end_of_storage = pointer(); }
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_copy_data(_Vector_impl_data const& __x) _GLIBCXX_NOEXCEPT
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_start = __x._M_start;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_finish = __x._M_finish;
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_end_of_storage = __x._M_end_of_storage;
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_swap_data(_Vector_impl_data& __x) _GLIBCXX_NOEXCEPT
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Do not use std::swap(_M_start, __x._M_start), etc as it loses
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // information used by TBAA.
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Vector_impl_data __tmp;
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __tmp._M_copy_data(*this);
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_copy_data(__x);
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __x._M_copy_data(__tmp);
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       };
ARM GAS  /tmp/ccszdRNt.s 			page 128


 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       struct _Vector_impl
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl() _GLIBCXX_NOEXCEPT_IF(
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type()
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// Not defaulted, to enforce noexcept(true) even when
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// !is_nothrow_move_constructible<_Tp_alloc_type>.
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Vector_impl&& __x) noexcept
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__x)), _Vector_impl_data(std::move(__x))
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a))
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a, _Vector_impl&& __rv) noexcept
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)), _Vector_impl_data(std::move(__rv))
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	template<typename = _Tp_alloc_type>
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  struct _Asan
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ::size_type size_type;
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void _S_shrink(_Vector_impl&, size_type) { }
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void _S_on_dealloc(_Vector_impl&) { }
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    typedef _Vector_impl& _Reinit;
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    struct _Grow
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl&, size_type) { }
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      void _M_grew(size_type) { }
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    };
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  };
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// Enable ASan annotations for memory obtained from std::allocator.
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	template<typename _Up>
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  struct _Asan<allocator<_Up> >
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ::size_type size_type;
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // Adjust ASan annotation for [_M_start, _M_end_of_storage) to
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // mark end of valid region as __curr instead of __prev.
ARM GAS  /tmp/ccszdRNt.s 			page 129


 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_adjust(_Vector_impl& __impl, pointer __prev, pointer __curr)
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      __sanitizer_annotate_contiguous_container(__impl._M_start,
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  __impl._M_end_of_storage, __prev, __curr);
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_grow(_Vector_impl& __impl, size_type __n)
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish, __impl._M_finish + __n); }
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_shrink(_Vector_impl& __impl, size_type __n)
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    { _S_adjust(__impl, __impl._M_finish + __n, __impl._M_finish); }
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    static void
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _S_on_dealloc(_Vector_impl& __impl)
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      if (__impl._M_start)
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		_S_adjust(__impl, __impl._M_finish, __impl._M_end_of_storage);
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // Used on reallocation to tell ASan unused capacity is invalid.
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    struct _Reinit
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      explicit _Reinit(_Vector_impl& __impl) : _M_impl(__impl)
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      {
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		// Mark unused capacity as valid again before deallocating it.
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		_S_on_dealloc(_M_impl);
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      }
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ~_Reinit()
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      {
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		// Mark unused capacity as invalid after reallocation.
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		if (_M_impl._M_start)
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _S_adjust(_M_impl, _M_impl._M_end_of_storage,
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    _M_impl._M_finish);
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      }
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Reinit(const _Reinit&) = delete;
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Reinit& operator=(const _Reinit&) = delete;
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    };
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    // Tell ASan when unused capacity is initialized to be valid.
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    struct _Grow
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow(_Vector_impl& __impl, size_type __n)
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      : _M_impl(__impl), _M_n(__n)
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      { _S_grow(_M_impl, __n); }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      ~_Grow() { if (_M_n) _S_shrink(_M_impl, _M_n); }
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      void _M_grew(size_type __n) { _M_n -= __n; }
ARM GAS  /tmp/ccszdRNt.s 			page 130


 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow(const _Grow&) = delete;
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Grow& operator=(const _Grow&) = delete;
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    private:
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _Vector_impl& _M_impl;
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      size_type _M_n;
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    };
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  };
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT \
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Reinit const \
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __reinit_guard(this->_M_impl)
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n) \
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   typename _Base::_Vector_impl::template _Asan<>::_Grow \
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__attribute__((__unused__)) __grow_guard(this->_M_impl, (n))
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n) __grow_guard._M_grew(n)
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n) \
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_shrink(this->_M_impl, n)
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC \
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   _Base::_Vector_impl::template _Asan<>::_S_on_dealloc(this->_M_impl)
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else // ! (_GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR)
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_REINIT
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GROW(n)
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_GREW(n)
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_SHRINK(n)
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #define _GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif // _GLIBCXX_SANITIZE_STD_ALLOCATOR && _GLIBCXX_SANITIZE_VECTOR
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       };
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Tp_alloc_type&
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const _Tp_alloc_type&
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       allocator_type
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base() = default;
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base() { }
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a) { }
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if !_GLIBCXX_INLINE_VERSION
ARM GAS  /tmp/ccszdRNt.s 			page 131


 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(size_t __n)
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl()
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_create_storage(__n); }
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&&) = default;
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Kept for ABI compatibility.
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # if !_GLIBCXX_INLINE_VERSION
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _M_create_storage(__n);
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # endif
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a, _Vector_base&& __x)
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(_Tp_alloc_type(__a), std::move(__x._M_impl))
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { }
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_deallocate(_M_impl._M_start,
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Vector_impl _M_impl;
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       pointer
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_allocate(size_t __n)
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : pointer();
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__p)
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
ARM GAS  /tmp/ccszdRNt.s 			page 132


 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     };
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   /**
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  individual elements in any order.
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @ingroup sequences
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   */
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     {
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #ifdef _GLIBCXX_CONCEPT_CHECKS
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Concept requirements.
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc::value_type		_Alloc_value_type;
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # if __cplusplus < 201103L
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # endif
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static_assert(is_same<typename remove_cv<_Tp>::type, _Tp>::value,
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  "std::vector must have a non-const, non-volatile value_type");
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # ifdef __STRICT_ANSI__
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static_assert(is_same<typename _Alloc::value_type, _Tp>::value,
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  "std::vector must have the same value_type as its allocator");
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** # endif
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			_Base;
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		_Tp_alloc_type;
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>	_Alloc_traits;
ARM GAS  /tmp/ccszdRNt.s 			page 133


 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Tp					value_type;
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Base::pointer			pointer;
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference		reference;
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator;
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef size_t					size_type;
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef ptrdiff_t					difference_type;
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       typedef _Alloc					allocator_type;
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     private:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static constexpr bool
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_nothrow_relocate(true_type)
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return noexcept(std::__relocate_a(std::declval<pointer>(),
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  std::declval<pointer>(),
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  std::declval<_Tp_alloc_type&>()));
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static constexpr bool
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_nothrow_relocate(false_type)
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return false; }
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static constexpr bool
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_use_relocate()
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// Instantiating std::__relocate_a might cause an error outside the
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// immediate context (in __relocate_object_a's noexcept-specifier),
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	// so only do it if we know the type can be move-inserted into *this.
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return _S_nothrow_relocate(__is_move_insertable<_Tp_alloc_type>{});
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static pointer
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_do_relocate(pointer __first, pointer __last, pointer __result,
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return std::__relocate_a(__first, __last, __result, __alloc);
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static pointer
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_do_relocate(pointer, pointer, pointer __result,
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type&, false_type) noexcept
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return __result; }
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       static pointer
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _S_relocate(pointer __first, pointer __last, pointer __result,
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	using __do_it = __bool_constant<_S_use_relocate()>;
ARM GAS  /tmp/ccszdRNt.s 			page 134


 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return _S_do_relocate(__first, __last, __result, __alloc, __do_it{});
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif // C++11
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_allocate;
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_deallocate;
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_impl;
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector() = default;
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector() { }
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       explicit
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__a) { }
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  constructed elements.
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       explicit
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
ARM GAS  /tmp/ccszdRNt.s 			page 135


 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       explicit
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(_S_check_init_len(__n, __a), __a)
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @a __x  will not be copied
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  (i.e. capacity() == size() in the new %vector).
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocator object used
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  by @a __x (unless the allocator traits dictate a different object).
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(const vector& __x)
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of the
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  moved instance.
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The contents of the moved instance are a valid, but unspecified
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector.
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&&) noexcept = default;
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 136


 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     private:
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, true_type) noexcept
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__m, std::move(__rv))
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { }
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m, false_type)
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__m)
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__rv.get_allocator() == __m)
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__rv._M_impl);
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (!__rv.empty())
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    this->_M_create_storage(__rv.size());
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    __rv.clear();
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       noexcept( noexcept(
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector(std::declval<vector&&>(), std::declval<const allocator_type&>(),
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       std::declval<typename _Alloc_traits::is_always_equal>())) )
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : vector(std::move(__rv), __m, typename _Alloc_traits::is_always_equal{})
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { }
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer_list @a __l.
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__a)
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __a  An allocator.
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
ARM GAS  /tmp/ccszdRNt.s 			page 137


 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [first,last).
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator,
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Base(__a)
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			      std::__iterator_category(__first));
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector(_InputIterator __first, _InputIterator __last,
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Base(__a)
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  responsibility.
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_BEFORE_DEALLOC;
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any unused capacity in
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @a __x will not be copied.
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Whether the allocator is copied depends on the allocator traits.
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector&
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator=(const vector& __x);
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 138


 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  if the allocators permit it).
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Afterwards @a __x is a valid, but unspecified %vector.
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Whether the allocator is moved depends on the allocator traits.
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector&
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	constexpr bool __move_storage =
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Alloc_traits::_S_propagate_on_move_assign()
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  || _Alloc_traits::_S_always_equal();
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_move_assign(std::move(__x), __bool_constant<__move_storage>());
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *this;
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer list @a __l.
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  of elements assigned.
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       vector&
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *this;
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the number of elements assigned.
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
ARM GAS  /tmp/ccszdRNt.s 			page 139


 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  range [__first,__last).
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  of elements assigned.
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator,
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_assign_dispatch(__first, __last, __false_type()); }
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	assign(_InputIterator __first, _InputIterator __last)
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer list @a __l.
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  of elements assigned.
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_assign_aux(__l.begin(), __l.end(),
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    random_access_iterator_tag());
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       using _Base::get_allocator;
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // iterators
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
ARM GAS  /tmp/ccszdRNt.s 			page 140


 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  ordinary element order.
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reverse_iterator
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  reverse element order.
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  in reverse element order.
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reverse_iterator
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 141


 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is done in reverse element order.
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element order.
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       cbegin() const noexcept
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  ordinary element order.
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_iterator
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       cend() const noexcept
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  reverse element order.
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       crbegin() const noexcept
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is done in reverse element order.
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reverse_iterator
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       crend() const noexcept
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // [23.2.4.2] capacity
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _S_max_size(_M_get_Tp_allocator()); }
ARM GAS  /tmp/ccszdRNt.s 			page 142


 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  default constructed elements are appended.
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       resize(size_type __new_size)
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__new_size > size())
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (__new_size < size())
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  given data.
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__new_size > size())
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (__new_size < size())
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  given data.
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__new_size > size())
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_fill_insert(end(), __new_size - size(), __x);
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else if (__new_size < size())
ARM GAS  /tmp/ccszdRNt.s 			page 143


 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       shrink_to_fit()
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
 994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
1001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  equal end().)
1002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _GLIBCXX_NODISCARD bool
1004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
1005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return begin() == end(); }
1006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *          elements.
1010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
1011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
1012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
1014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
1015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
1016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  thrown.
1017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
1019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
1020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
1021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
1022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  and copying of %vector data.
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reserve(size_type __n);
1026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // element access
1028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
ARM GAS  /tmp/ccszdRNt.s 			page 144


1036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  see at().)
1038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
1041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
1048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
1053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
1054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
1055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  see at().)
1056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
1059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_subscript(__n);
1061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(this->_M_impl._M_start + __n);
1062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
1065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /// Safety check used only from at().
1066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_range_check(size_type __n) const
1068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (__n >= this->size())
1070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
1071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
1072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				       "(which is %zu)"),
1073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				   __n, this->size());
1074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     public:
1077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read/write reference to data.
1082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       at(size_type __n)
1090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_check(__n);
1092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (*this)[__n];
ARM GAS  /tmp/ccszdRNt.s 			page 145


1093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
1097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
1098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  accessed.
1099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
1100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
1101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
1103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
1104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
1105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       at(size_type __n) const
1108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_check(__n);
1110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (*this)[__n];
1111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
1115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element of the %vector.
1116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
1119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *begin();
1122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
1126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element of the %vector.
1127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
1130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *begin();
1133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
1137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element of the %vector.
1138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       reference
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
1141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(end() - 1);
1144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
1148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  last element of the %vector.
1149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
ARM GAS  /tmp/ccszdRNt.s 			page 146


1150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const_reference
1151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
1152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return *(end() - 1);
1155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
1159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // data access
1160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
1162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
1163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _Tp*
1165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
1166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       const _Tp*
1169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
1170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
1171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // [23.2.4.3] modifiers
1173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
1175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be added.
1176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
1178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
1179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
1180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
1181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  available.
1182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       push_back(const value_type& __x)
1185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
1187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
1188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GROW(1);
1189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
1190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				     __x);
1191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
1192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
1193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
1194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	else
1195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_realloc_insert(end(), __x);
1196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       push_back(value_type&& __x)
1201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
1202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus > 201402L
1205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	reference
1206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
ARM GAS  /tmp/ccszdRNt.s 			page 147


1207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	emplace_back(_Args&&... __args);
1210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Removes last element.
1214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
1216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
1218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
1219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  called.
1220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
1223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_requires_nonempty();
1225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
1226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
1227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_GLIBCXX_ASAN_ANNOTATE_SHRINK(1);
1228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
1233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __args  Arguments.
1235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
1238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
1239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
1240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
1241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  std::list.
1242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	iterator
1245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	emplace(const_iterator __position, _Args&&... __args)
1246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ return _M_emplace_aux(__position, std::forward<_Args>(__args)...); }
1247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
1250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
1261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
ARM GAS  /tmp/ccszdRNt.s 			page 148


1264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
1269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
1275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  used the user should consider using std::list.
1288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_insert_rval(__position, std::move(__x)); }
1292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the
1299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
1300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  specified by @a position.
1301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	auto __offset = __position - cbegin();
1310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_insert(begin() + __offset, __l.begin(), __l.end(),
1311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			std::random_access_iterator_tag());
1312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return begin() + __offset;
1313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
ARM GAS  /tmp/ccszdRNt.s 			page 149


1321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return begin() + __offset;
1337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  by @a pos.
1368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator,
1374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	iterator
1376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	insert(const_iterator __position, _InputIterator __first,
1377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       _InputIterator __last)
ARM GAS  /tmp/ccszdRNt.s 			page 150


1378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			     __first, __last, __false_type());
1382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  return begin() + __offset;
1383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  by @a pos.
1394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  consider using std::list.
1398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	insert(iterator __position, _InputIterator __first,
1402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	       _InputIterator __last)
1403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  shorten the %vector by one.
1417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(const_iterator __position)
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(iterator __position)
1431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(__position); }
1432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 151


1435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *                  erased.
1439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *           prior to erasing (or end()).
1441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This function will erase the elements in the range
1443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	const auto __beg = begin();
1457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *
1474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Whether the allocators are swapped depends on the allocator traits.
1475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       swap(vector& __x) _GLIBCXX_NOEXCEPT
1478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	__glibcxx_assert(_Alloc_traits::propagate_on_container_swap::value
1481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			 || _M_get_Tp_allocator() == __x._M_get_Tp_allocator());
1482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				  __x._M_get_Tp_allocator());
1486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
ARM GAS  /tmp/ccszdRNt.s 			page 152


1492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  the user's responsibility.
1493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****     protected:
1499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       /**
1500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****        */
1503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	pointer
1505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_allocate_and_copy(size_type __n,
1506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __try
1510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
1511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      return __result;
1514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
1515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __catch(...)
1516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    {
1517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      __throw_exception_again;
1519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    }
1520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Internal constructor functions follow.
1524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus < 201103L
1528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Integer>
1531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(_S_check_init_len(
1535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		static_cast<size_type>(__n), _M_get_Tp_allocator()));
1536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
1538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			       __false_type)
1546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last,
1548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			      std::__iterator_category(__first));
ARM GAS  /tmp/ccszdRNt.s 			page 153


1549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_initialize(_InputIterator __first, _InputIterator __last,
1556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    std::input_iterator_tag)
1557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __try {
1559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    for (; __first != __last; ++__first)
1560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      emplace_back(*__first);
1562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	      push_back(*__first);
1564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  } __catch(...) {
1566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    clear();
1567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    __throw_exception_again;
1568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
1569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_initialize(_ForwardIterator __first, _ForwardIterator __last,
1575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			    std::forward_iterator_tag)
1576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_start
1579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    = this->_M_allocate(_S_check_init_len(__n, _M_get_Tp_allocator()));
1580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					this->_M_impl._M_start,
1584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value,
1594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
1596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the vector(n) constructor.
1599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_default_initialize(size_type __n)
1601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish =
1603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_default_n_a(this->_M_impl._M_start, __n,
1604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 					   _M_get_Tp_allocator());
1605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 154


1606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Internal assign functions follow.  The *_aux functions do the actual
1609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // assignment work for the range versions.
1610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Integer>
1616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_dispatch(_Integer __n, _Integer __val, __true_type)
1618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_fill_assign(__n, __val); }
1619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range assign to implement [23.1.1]/9
1621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_dispatch(_InputIterator __first, _InputIterator __last,
1624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			   __false_type)
1625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_assign_aux(__first, __last, std::__iterator_category(__first)); }
1626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_aux(_InputIterator __first, _InputIterator __last,
1631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      std::input_iterator_tag);
1632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second assign_dispatch above
1634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_assign_aux(_ForwardIterator __first, _ForwardIterator __last,
1637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      std::forward_iterator_tag);
1638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by assign(n,t), and the range assign when it turns out
1640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // to be the same thing.
1641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_fill_assign(size_type __n, const value_type& __val);
1643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Internal insert functions follow.
1645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Integer>
1651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _Integer __n, _Integer __val,
1653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			   __true_type)
1654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _M_fill_insert(__pos, __n, __val); }
1655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the range insert to implement [23.1.1]/9
1657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_insert_dispatch(iterator __pos, _InputIterator __first,
1660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			   _InputIterator __last, __false_type)
1661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{
1662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _M_range_insert(__pos, __first, __last,
ARM GAS  /tmp/ccszdRNt.s 			page 155


1663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			  std::__iterator_category(__first));
1664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	}
1665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _InputIterator>
1668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_insert(iterator __pos, _InputIterator __first,
1670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			_InputIterator __last, std::input_iterator_tag);
1671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by the second insert_dispatch above
1673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _ForwardIterator>
1674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_range_insert(iterator __pos, _ForwardIterator __first,
1676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 			_ForwardIterator __last, std::forward_iterator_tag);
1677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by insert(p,n,x), and the range insert when it turns out to be
1679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // the same thing.
1680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_fill_insert(iterator __pos, size_type __n, const value_type& __x);
1682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus >= 201103L
1684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by resize(n).
1685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_default_append(size_type __n);
1687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       bool
1689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_shrink_to_fit();
1690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #if __cplusplus < 201103L
1693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by insert(p,x)
1694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_insert_aux(iterator __position, const value_type& __x);
1696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       void
1698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_realloc_insert(iterator __position, const value_type& __x);
1699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
1700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // A value_type object constructed with _Alloc_traits::construct()
1701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // and destroyed with _Alloc_traits::destroy().
1702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       struct _Temporary_value
1703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	template<typename... _Args>
1705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  explicit
1706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Temporary_value(vector* __vec, _Args&&... __args) : _M_this(__vec)
1707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
1708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _Alloc_traits::construct(_M_this->_M_impl, _M_ptr(),
1709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 				     std::forward<_Args>(__args)...);
1710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  }
1711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	~_Temporary_value()
1713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
1714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	value_type&
1716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_val() { return *_M_ptr(); }
1717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       private:
1719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_Tp*
ARM GAS  /tmp/ccszdRNt.s 			page 156


1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_ptr() { return reinterpret_cast<_Tp*>(&__buf); }
1721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	vector* _M_this;
1723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	typename aligned_storage<sizeof(_Tp), alignof(_Tp)>::type __buf;
1724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       };
1725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by insert(p,x) and other functions when insertion needs to
1727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // reallocate or move existing elements. _Arg is either _Tp& or _Tp.
1728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename _Arg>
1729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_insert_aux(iterator __position, _Arg&& __arg);
1731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	void
1734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_realloc_insert(iterator __position, _Args&&... __args);
1735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Either move-construct at the end, or forward to _M_insert_aux.
1737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_insert_rval(const_iterator __position, value_type&& __v);
1739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Try to emplace at the end, otherwise forward to _M_insert_aux.
1741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       template<typename... _Args>
1742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	iterator
1743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	_M_emplace_aux(const_iterator __position, _Args&&... __args);
1744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Emplacing an rvalue of the correct type can use _M_insert_rval.
1746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       iterator
1747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_emplace_aux(const_iterator __position, value_type&& __v)
1748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return _M_insert_rval(__position, std::move(__v)); }
1749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #endif
1750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       // Called by _M_fill_insert, _M_insert_aux etc.
1752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       size_type
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       _M_check_len(size_type __n, const char* __s) const
 1610              		.loc 13 1753 7 is_stmt 1 view .LVU382
 1611              	.LBB4906:
 1612              	.LBB4907:
 1613              	.LBI4907:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1614              		.loc 13 915 7 view .LVU383
 1615              	.LBB4908:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1616              		.loc 13 916 40 is_stmt 0 view .LVU384
 1617 0018 4368     		ldr	r3, [r0, #4]
 1618              	.LVL143:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1619              		.loc 13 916 50 view .LVU385
 1620 001a 0268     		ldr	r2, [r0]
 1621              	.LVL144:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1622              		.loc 13 916 50 view .LVU386
 1623 001c 9C1A     		subs	r4, r3, r2
 1624 001e A410     		asrs	r4, r4, #2
 1625              	.LVL145:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1626              		.loc 13 916 50 view .LVU387
 1627              	.LBE4908:
ARM GAS  /tmp/ccszdRNt.s 			page 157


 1628              	.LBE4907:
1754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	if (max_size() - size() < __n)
 1629              		.loc 13 1755 17 view .LVU388
 1630 0020 2E4A     		ldr	r2, .L64
 1631              		.loc 13 1755 26 view .LVU389
 1632 0022 0121     		movs	r1, #1
 1633              		.loc 13 1755 2 view .LVU390
 1634 0024 A242     		cmp	r2, r4
 1635 0026 3FD0     		beq	.L59
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
1757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	const size_type __len = size() + (std::max)(size(), __n);
 1636              		.loc 13 1758 45 view .LVU391
 1637 0028 0194     		str	r4, [sp, #4]
 1638              	.LVL146:
 1639              	.LBB4909:
 1640              	.LBI4909:
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 1641              		.loc 12 222 5 is_stmt 1 view .LVU392
 1642              	.LBB4910:
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 1643              		.loc 12 227 7 is_stmt 0 view .LVU393
 1644 002a 8C42     		cmp	r4, r1
 1645 002c 3FD3     		bcc	.L55
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 1646              		.loc 12 229 14 view .LVU394
 1647 002e 01AA     		add	r2, sp, #4
 1648              	.LVL147:
 1649              	.L48:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 1650              		.loc 12 229 14 view .LVU395
 1651              	.LBE4910:
 1652              	.LBE4909:
 1653              		.loc 13 1758 33 view .LVU396
 1654 0030 1068     		ldr	r0, [r2]
 1655              	.LVL148:
 1656              		.loc 13 1758 18 view .LVU397
 1657 0032 2418     		adds	r4, r4, r0
 1658              	.LVL149:
 1659              	.LBB4912:
 1660              	.LBI4912:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 1661              		.loc 13 915 7 is_stmt 1 view .LVU398
 1662              	.LBB4913:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1663              		.loc 13 916 50 is_stmt 0 view .LVU399
 1664 0034 2A68     		ldr	r2, [r5]
 1665 0036 9B1A     		subs	r3, r3, r2
 1666 0038 9B10     		asrs	r3, r3, #2
 1667              	.LVL150:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1668              		.loc 13 916 50 view .LVU400
 1669              	.LBE4913:
 1670              	.LBE4912:
1759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 1671              		.loc 13 1759 48 view .LVU401
ARM GAS  /tmp/ccszdRNt.s 			page 158


 1672 003a 9C42     		cmp	r4, r3
 1673 003c 39D3     		bcc	.L56
 1674              		.loc 13 1759 25 view .LVU402
 1675 003e 8023     		movs	r3, #128
 1676 0040 9B05     		lsls	r3, r3, #22
 1677 0042 9C42     		cmp	r4, r3
 1678 0044 37D2     		bcs	.L60
 1679              	.LVL151:
 1680              	.L49:
 1681              		.loc 13 1759 25 view .LVU403
 1682              	.LBE4906:
 1683              	.LBE4905:
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****   template<typename _Tp, typename _Alloc>
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     void
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     vector<_Tp, _Alloc>::
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     _M_realloc_insert(iterator __position, const _Tp& __x)
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     {
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __len =
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	_M_check_len(size_type(1), "vector::_M_realloc_insert");
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_start = this->_M_impl._M_start;
 1684              		.loc 9 437 15 view .LVU404
 1685 0046 2B68     		ldr	r3, [r5]
 1686 0048 9946     		mov	r9, r3
 1687              	.LVL152:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 1688              		.loc 9 438 15 view .LVU405
 1689 004a 6B68     		ldr	r3, [r5, #4]
 1690              	.LVL153:
 1691              		.loc 9 438 15 view .LVU406
 1692 004c 9A46     		mov	r10, r3
 1693              	.LVL154:
 1694              	.LBB4916:
 1695              	.LBI4916:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 1696              		.loc 13 808 7 is_stmt 1 view .LVU407
 1697              	.LBB4917:
 1698              	.LBI4917:
 1699              		.file 14 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Iterators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  /tmp/ccszdRNt.s 			page 159


  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** /** @file bits/stl_iterator.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  This file implements reverse_iterator, back_insert_iterator,
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  front_insert_iterator, insert_iterator, __normal_iterator, and their
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  *  supporting functions and overloaded operators.
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****  */
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #ifndef _STL_ITERATOR_H
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #define _STL_ITERATOR_H 1
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <bits/cpp_type_traits.h>
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <ext/type_traits.h>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <bits/move.h>
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #include <bits/ptr_traits.h>
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # include <type_traits>
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus > 201402L
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # define __cpp_lib_array_constexpr 201603
ARM GAS  /tmp/ccszdRNt.s 			page 160


  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** {
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    * @addtogroup iterators
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    * @{
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    */
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // 24.4.1 Reverse iterators
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Bidirectional and random access iterators have corresponding reverse
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  %iterator adaptors that iterate through the data structure in the
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  opposite direction.  They have the same signatures as the corresponding
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  iterators.  The fundamental relation between a reverse %iterator and its
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  corresponding %iterator @c i is established by the identity:
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @code
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *      &*(reverse_iterator(i)) == &*(i - 1)
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @endcode
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  <em>This mapping is dictated by the fact that while there is always a
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  pointer past the end of an array, there might not be a valid pointer
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  before the beginning of an array.</em> [24.4.1]/1,2
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Reverse iterators can be tricky and surprising at first.  Their
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  semantics make sense, however, and the trickiness is a side effect of
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  the requirement that the iterators must be safe.
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class reverse_iterator
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<typename iterator_traits<_Iterator>::iterator_category,
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::value_type,
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::difference_type,
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      typename iterator_traits<_Iterator>::pointer,
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****                       typename iterator_traits<_Iterator>::reference>
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Iterator current;
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type	difference_type;
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::pointer		pointer;
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::reference		reference;
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The default constructor value-initializes member @p current.
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  If it is a pointer, that means it is zero-initialized.
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // 235 No specification of default ctor for reverse_iterator
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // 1012. reverse_iterator default ctor should value initialize
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
ARM GAS  /tmp/ccszdRNt.s 			page 161


 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator() : current() { }
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This %iterator will move in the opposite direction that @p x does.
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit _GLIBCXX17_CONSTEXPR
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator(iterator_type __x) : current(__x) { }
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The copy constructor is normal.
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator(const reverse_iterator& __x)
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : current(__x.current) { }
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reverse_iterator& operator=(const reverse_iterator&) = default;
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  A %reverse_iterator across other types can be copied if the
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  underlying %iterator can be converted to the type of @c current.
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Iter>
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_GLIBCXX17_CONSTEXPR
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         reverse_iterator(const reverse_iterator<_Iter>& __x)
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	: current(__x.base()) { }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  @c current, the %iterator used for underlying work.
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR iterator_type
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       base() const
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return current; }
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reference to the value at @c --current
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @warning This implementation requires that for an iterator of the
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *           underlying iterator type, @c x, a reference obtained by
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *           @c *x remains valid after @c x has been modified or
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *           destroyed. This is a bug: http://gcc.gnu.org/PR51823
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*() const
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *--__tmp;
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A pointer to the value at @c --current
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This requires that @c --current is dereferenceable.
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
ARM GAS  /tmp/ccszdRNt.s 			page 162


 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR pointer
 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator->() const
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	// 1052. operator-> should also support smart pointers
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_Iterator __tmp = current;
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--__tmp;
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return _S_to_pointer(__tmp);
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  @c *this
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--current;
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  The original value of @c *this
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Decrements the underlying iterator.
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--current;
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return __tmp;
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  @c *this
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--()
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++current;
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator with the previous value of @c *this
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Increments the underlying iterator.
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--(int)
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	reverse_iterator __tmp = *this;
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++current;
ARM GAS  /tmp/ccszdRNt.s 			page 163


 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return __tmp;
 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+(difference_type __n) const
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return reverse_iterator(current - __n); }
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  *this
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Moves the underlying iterator backwards @a __n steps.
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+=(difference_type __n)
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	current -= __n;
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  A reverse_iterator that refers to @c current - @a __n
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-(difference_type __n) const
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return reverse_iterator(current + __n); }
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  *this
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  Moves the underlying iterator forwards @a __n steps.
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reverse_iterator&
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-=(difference_type __n)
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	current += __n;
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  The value at @c current - @a __n - 1
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The underlying iterator must be a Random Access Iterator.
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX17_CONSTEXPR reference
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator[](difference_type __n) const
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *(*this + __n); }
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     private:
ARM GAS  /tmp/ccszdRNt.s 			page 164


 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Tp>
 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR _Tp*
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_S_to_pointer(_Tp* __p)
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         { return __p; }
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Tp>
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	static _GLIBCXX17_CONSTEXPR pointer
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	_S_to_pointer(_Tp __t)
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         { return __t.operator->(); }
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   //@{
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __x  A %reverse_iterator.
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __y  A %reverse_iterator.
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  A simple bool.
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Reverse iterators forward many operations to their underlying base()
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  iterators.  Others are implemented in terms of one another.
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const reverse_iterator<_Iterator>& __x,
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const reverse_iterator<_Iterator>& __x,
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_Iterator>& __x,
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x == __y); }
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const reverse_iterator<_Iterator>& __x,
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y < __x; }
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_Iterator>& __x,
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__y < __x); }
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_Iterator>& __x,
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_Iterator>& __y)
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x < __y); }
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 165


 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // DR 280. Comparison of reverse_iterator to const reverse_iterator.
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const reverse_iterator<_IteratorL>& __x,
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __x.base() == __y.base(); }
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const reverse_iterator<_IteratorL>& __x,
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() < __x.base(); }
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const reverse_iterator<_IteratorL>& __x,
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x == __y); }
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const reverse_iterator<_IteratorL>& __x,
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y < __x; }
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const reverse_iterator<_IteratorL>& __x,
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__y < __x); }
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR bool
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const reverse_iterator<_IteratorL>& __x,
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const reverse_iterator<_IteratorR>& __y)
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return !(__x < __y); }
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   //@}
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename reverse_iterator<_Iterator>::difference_type
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_Iterator>& __x,
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __y)
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename reverse_iterator<_IteratorL>::difference_type
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // DR 685. reverse_iterator/move_iterator difference has invalid signatures
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR>
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR auto
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const reverse_iterator<_IteratorL>& __x,
ARM GAS  /tmp/ccszdRNt.s 			page 166


 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_IteratorR>& __y)
 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__y.base() - __x.base())
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __y.base() - __x.base(); }
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator+(typename reverse_iterator<_Iterator>::difference_type __n,
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const reverse_iterator<_Iterator>& __x)
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__x.base() - __n); }
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Same as C++14 make_reverse_iterator but used in C++11 mode too.
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     __make_reverse_iterator(_Iterator __i)
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # if __cplusplus > 201103L
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #  define __cpp_lib_make_reverse_iterator 201402
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // DR 2285. make_reverse_iterator
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /// Generator function for reverse_iterator.
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline _GLIBCXX17_CONSTEXPR reverse_iterator<_Iterator>
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     make_reverse_iterator(_Iterator __i)
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return reverse_iterator<_Iterator>(__i); }
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** # endif
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     auto
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     __niter_base(reverse_iterator<_Iterator> __it)
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__niter_base(__it.base())))
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __make_reverse_iterator(__niter_base(__it.base())); }
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     struct __is_move_iterator<reverse_iterator<_Iterator> >
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : __is_move_iterator<_Iterator>
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { };
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator>
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     auto
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     __miter_base(reverse_iterator<_Iterator> __it)
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__make_reverse_iterator(__miter_base(__it.base())))
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __make_reverse_iterator(__miter_base(__it.base())); }
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // 24.4.2.2.1 back_insert_iterator
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator appends it to the container using
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  push_back.
ARM GAS  /tmp/ccszdRNt.s 			page 167


 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Tip:  Using the back_inserter function to create these iterators can
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  save typing.
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class back_insert_iterator
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Container* container;
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator(_Container& __x)
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  the end, if you like).  Assigning a value to the %iterator will
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  always append the value to the end of the container.
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_back(__value);
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_back(__value);
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_back(std::move(__value));
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*()
ARM GAS  /tmp/ccszdRNt.s 			page 168


 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator&
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       back_insert_iterator
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  An instance of back_insert_iterator working on @p __x.
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating back_insert_iterator instances.
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  types for you.
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline back_insert_iterator<_Container>
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     back_inserter(_Container& __x)
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return back_insert_iterator<_Container>(__x); }
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator prepends it to the container using
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  push_front.
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Tip:  Using the front_inserter function to create these iterators can
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  save typing.
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class front_insert_iterator
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Container* container;
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// The only way to create this %iterator is with a container.
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit front_insert_iterator(_Container& __x)
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)) { }
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
ARM GAS  /tmp/ccszdRNt.s 			page 169


 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This kind of %iterator doesn't really have a @a position in the
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  container (you can think of the position as being permanently at
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  the front, if you like).  Assigning a value to the %iterator will
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  always prepend the value to the front of the container.
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_front(__value);
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_front(__value);
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	container->push_front(std::move(__value));
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*()
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator&
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       front_insert_iterator
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param  __x  A container of arbitrary type.
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  An instance of front_insert_iterator working on @p x.
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating front_insert_iterator instances.
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  types for you.
ARM GAS  /tmp/ccszdRNt.s 			page 170


 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline front_insert_iterator<_Container>
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     front_inserter(_Container& __x)
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return front_insert_iterator<_Container>(__x); }
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @brief  Turns assignment into insertion.
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  These are output iterators, constructed from a container-of-T.
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Assigning a T to the iterator inserts it in the container at the
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  %iterator's position, rather than overwriting the value at that
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  position.
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  (Sequences will actually insert a @e copy of the value before the
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  %iterator's position.)
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Tip:  Using the inserter function to create these iterators can
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  save typing.
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container>
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class insert_iterator
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     : public iterator<output_iterator_tag, void, void, void, void>
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Container* container;
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typename _Container::iterator iter;
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// A nested typedef for the type of whatever container you used.
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Container          container_type;
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The only way to create this %iterator is with a container and an
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  initial position (a normal %iterator into the container).
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator(_Container& __x, typename _Container::iterator __i)
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : container(std::__addressof(__x)), iter(__i) {}
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /**
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @param  __value  An instance of whatever type
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 container_type::const_reference is; presumably a
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *                 reference-to-const T for container<T>.
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @return  This %iterator, for chained operations.
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  This kind of %iterator maintains its own position in the
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  container.  Assigning a value to the %iterator will insert the
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  value into the container at the place before the %iterator.
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  The position is maintained such that subsequent assignments will
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  insert values immediately after one another.  For example,
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @code
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     // vector v contains A and Z
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     insert_iterator i (v, ++v.begin());
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     i = 1;
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     i = 2;
ARM GAS  /tmp/ccszdRNt.s 			page 171


 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     i = 3;
 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *     // vector v contains A, 1, 2, 3, and Z
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****        *  @endcode
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       */
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus < 201103L
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::const_reference __value)
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++iter;
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(const typename _Container::value_type& __value)
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	iter = container->insert(iter, __value);
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++iter;
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator=(typename _Container::value_type&& __value)
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	iter = container->insert(iter, std::move(__value));
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++iter;
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*()
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++()
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       /// Simply returns *this.  (This %iterator does not @a move.)
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       insert_iterator&
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int)
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *this; }
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   /**
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param __x  A container of arbitrary type.
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @param __i  An iterator into the container.
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  @return  An instance of insert_iterator working on @p __x.
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  This wrapper function helps in creating insert_iterator instances.
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  Typing the name of the %iterator requires knowing the precise full
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  type of the container, which can be tedious and impedes generic
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  programming.  Using this function lets you take advantage of automatic
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  template parameter deduction, making the compiler match the correct
ARM GAS  /tmp/ccszdRNt.s 			page 172


 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****    *  types for you.
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   */
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Container, typename _Iterator>
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline insert_iterator<_Container>
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inserter(_Container& __x, _Iterator __i)
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       return insert_iterator<_Container>(__x,
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 					 typename _Container::iterator(__i));
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     }
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // @} group iterators
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_END_NAMESPACE_VERSION
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** } // namespace
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** {
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // This iterator adapter is @a normal in the sense that it does not
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // change the semantics of any of the operators of its iterator
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // parameter.  Its primary purpose is to convert an iterator that is
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // not a class, e.g. a pointer, into an iterator that is a class.
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // The _Container parameter exists solely so that different containers
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // using this template can instantiate different types, even if the
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _Iterator parameter is the same.
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   using std::iterator_traits;
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   using std::iterator;
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     class __normal_iterator
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     {
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     protected:
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _Iterator _M_current;
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef iterator_traits<_Iterator>		__traits_type;
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     public:
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef _Iterator					iterator_type;
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::iterator_category iterator_category;
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::value_type  	value_type;
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::difference_type 	difference_type;
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::reference 	reference;
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       typedef typename __traits_type::pointer   	pointer;
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       _GLIBCXX_CONSTEXPR __normal_iterator() _GLIBCXX_NOEXCEPT
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(_Iterator()) { }
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       explicit
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator(const _Iterator& __i) _GLIBCXX_NOEXCEPT
 1700              		.loc 14 806 7 view .LVU408
 1701              		.loc 14 806 7 is_stmt 0 view .LVU409
 1702              	.LBE4917:
 1703              	.LBE4916:
 1704              	.LBB4918:
 1705              	.LBI4918:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 173


 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Allow iterator to const_iterator conversion
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       template<typename _Iter>
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         __normal_iterator(const __normal_iterator<_Iter,
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       	       (std::__are_same<_Iter, typename _Container::pointer>::__value),
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 		      _Container>::__type>& __i) _GLIBCXX_NOEXCEPT
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****         : _M_current(__i.base()) { }
 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Forward iterator requirements
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reference
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator*() const _GLIBCXX_NOEXCEPT
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return *_M_current; }
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       pointer
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator->() const _GLIBCXX_NOEXCEPT
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++() _GLIBCXX_NOEXCEPT
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	++_M_current;
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator++(int) _GLIBCXX_NOEXCEPT
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current++); }
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Bidirectional iterator requirements
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--() _GLIBCXX_NOEXCEPT
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	--_M_current;
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       }
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator--(int) _GLIBCXX_NOEXCEPT
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current--); }
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       // Random access iterator requirements
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       reference
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator[](difference_type __n) const _GLIBCXX_NOEXCEPT
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current[__n]; }
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+=(difference_type __n) _GLIBCXX_NOEXCEPT
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { _M_current += __n; return *this; }
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator+(difference_type __n) const _GLIBCXX_NOEXCEPT
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator&
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-=(difference_type __n) _GLIBCXX_NOEXCEPT
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { _M_current -= __n; return *this; }
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 174


 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       __normal_iterator
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       operator-(difference_type __n) const _GLIBCXX_NOEXCEPT
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       const _Iterator&
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       base() const _GLIBCXX_NOEXCEPT
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     };
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Note: In what follows, the left- and right-hand-side iterators are
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // allowed to vary in types (conceptually in cv-qualification) so that
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // comparison between cv-qualified and non-cv-qualified iterators be
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // valid.  However, the greedy and unfriendly operators in std::rel_ops
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // will make overload resolution ambiguous (when in scope) if we don't
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // provide overloads whose operands are of the same type.  Can someone
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // remind me what generic programming is about? -- Gaby
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Forward iterator requirements
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const __normal_iterator<_IteratorL, _Container>& __lhs,
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator==(const __normal_iterator<_Iterator, _Container>& __lhs,
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() == __rhs.base(); }
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator!=(const __normal_iterator<_Iterator, _Container>& __lhs,
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() != __rhs.base(); }
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // Random access iterator requirements
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const __normal_iterator<_IteratorL, _Container>& __lhs,
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<(const __normal_iterator<_Iterator, _Container>& __lhs,
ARM GAS  /tmp/ccszdRNt.s 			page 175


 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() < __rhs.base(); }
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const __normal_iterator<_IteratorL, _Container>& __lhs,
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>(const __normal_iterator<_Iterator, _Container>& __lhs,
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() > __rhs.base(); }
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator<=(const __normal_iterator<_Iterator, _Container>& __lhs,
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() <= __rhs.base(); }
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_IteratorL, _Container>& __lhs,
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_IteratorR, _Container>& __rhs)
 959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline bool
 964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator>=(const __normal_iterator<_Iterator, _Container>& __lhs,
 965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() >= __rhs.base(); }
 968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // According to the resolution of DR179 not only the various comparison
 971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // operators but also operator- must accept mixed iterator/const_iterator
 972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   // parameters.
 973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _IteratorL, typename _IteratorR, typename _Container>
 974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #if __cplusplus >= 201103L
 975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     // DR 685.
 976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline auto
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     -> decltype(__lhs.base() - __rhs.base())
ARM GAS  /tmp/ccszdRNt.s 			page 176


 980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #else
 981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename __normal_iterator<_IteratorL, _Container>::difference_type
 982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const __normal_iterator<_IteratorL, _Container>& __lhs,
 983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs)
 984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** #endif
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****   template<typename _Iterator, typename _Container>
 988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     inline typename __normal_iterator<_Iterator, _Container>::difference_type
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     operator-(const __normal_iterator<_Iterator, _Container>& __lhs,
 1706              		.loc 14 989 5 is_stmt 1 view .LVU410
 1707              	.LBB4919:
 990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     _GLIBCXX_NOEXCEPT
 992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****     { return __lhs.base() - __rhs.base(); }
 1708              		.loc 14 992 27 is_stmt 0 view .LVU411
 1709 004e 4346     		mov	r3, r8
 1710              	.LVL155:
 1711              		.loc 14 992 27 view .LVU412
 1712 0050 4A46     		mov	r2, r9
 1713 0052 9E1A     		subs	r6, r3, r2
 1714              	.LVL156:
 1715              		.loc 14 992 27 view .LVU413
 1716              	.LBE4919:
 1717              	.LBE4918:
 1718              	.LBB4920:
 1719              	.LBI4920:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 1720              		.loc 13 340 7 is_stmt 1 view .LVU414
 1721              	.LBB4921:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 1722              		.loc 13 343 18 is_stmt 0 view .LVU415
 1723 0054 002C     		cmp	r4, #0
 1724 0056 32D0     		beq	.L58
 1725              	.LVL157:
 1726              	.LBB4922:
 1727              	.LBI4922:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 1728              		.loc 10 443 7 is_stmt 1 view .LVU416
 1729              	.LBB4923:
 1730              	.LBI4923:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 1731              		.loc 7 102 7 view .LVU417
 1732              	.LBB4924:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 1733              		.loc 7 104 2 is_stmt 0 view .LVU418
 1734 0058 8023     		movs	r3, #128
 1735 005a 9B05     		lsls	r3, r3, #22
 1736 005c 9C42     		cmp	r4, r3
 1737 005e 2CD2     		bcs	.L61
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1738              		.loc 7 114 41 view .LVU419
 1739 0060 A000     		lsls	r0, r4, #2
 1740 0062 FFF7FEFF 		bl	_Znwj
 1741              	.LVL158:
 1742 0066 0700     		movs	r7, r0
 1743              	.LVL159:
ARM GAS  /tmp/ccszdRNt.s 			page 177


 1744              	.L50:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1745              		.loc 7 114 41 view .LVU420
 1746              	.LBE4924:
 1747              	.LBE4923:
 1748              	.LBE4922:
 1749              	.LBE4921:
 1750              	.LBE4920:
 1751              	.LBB4929:
 1752              	.LBI4929:
 1753              		.loc 10 482 2 is_stmt 1 view .LVU421
 1754              	.LBB4930:
 1755              	.LBI4930:
 1756              		.loc 7 144 2 view .LVU422
 1757              	.LBB4931:
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 			    _Up(std::forward<_Args>(__args)...)))
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	{ ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
 1758              		.loc 7 147 4 is_stmt 0 view .LVU423
 1759 0068 5B46     		mov	r3, fp
 1760 006a 1B68     		ldr	r3, [r3]
 1761 006c BB51     		str	r3, [r7, r6]
 1762              	.LVL160:
 1763              		.loc 7 147 4 view .LVU424
 1764              	.LBE4931:
 1765              	.LBE4930:
 1766              	.LBE4929:
 1767              		.loc 11 174 3 is_stmt 1 view .LVU425
 1768              	.LBB4932:
 1769              	.LBI4932:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1770              		.loc 13 462 7 view .LVU426
 1771              	.LBB4933:
 1772              	.LBB4934:
 1773              	.LBI4934:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1774              		.loc 13 450 7 view .LVU427
 1775              	.LBB4935:
 1776              	.LBI4935:
 1777              		.file 15 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
ARM GAS  /tmp/ccszdRNt.s 			page 178


  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus > 201402L
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #include <utility>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #include <type_traits>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
ARM GAS  /tmp/ccszdRNt.s 			page 179


  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, (void)++__cur)
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType1;
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType2;
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #else
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::copy
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType2, decltype(*__first)>::value,
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from value type of input range");
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType1;
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::reference _RefType2;
ARM GAS  /tmp/ccszdRNt.s 			page 180


 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::copy
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::copy:
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_RefType2, _RefType1>::value;
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       && __assignable>::
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return   Nothing.
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       const _Tp& __x)
ARM GAS  /tmp/ccszdRNt.s 			page 181


 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #else
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from input type");
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			const _Tp& __x)
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
 224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			const _Tp& __x)
 240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         { return std::fill_n(__first, __n, __x); }
 241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    // _GLIBCXX_RESOLVE_LIB_DEFECTS
 244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    // DR 1339. uninitialized_fill_n should return the end of its range
 245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
ARM GAS  /tmp/ccszdRNt.s 			page 182


 246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return   Nothing.
 251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = true;
 262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #else
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted copy constructor, but the std::fill
 264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // optimization that uses memmove would happily "copy" them anyway.
 265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(is_constructible<_ValueType, const _Tp&>::value,
 266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "result type must be constructible from input type");
 267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // Trivial types can have deleted assignment, so using std::fill
 269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // would be ill-formed. Require assignability before using std::fill:
 270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, (void)++__cur)
 293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 183


 303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 __result, __alloc);
 318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     void
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
ARM GAS  /tmp/ccszdRNt.s 			page 184


 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Tp2>
 381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::uninitialized_fill_n(__first, __n, __x); }
 385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // for construction and destruction.
 391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_copy_move
 393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  move [first2, last2) into
 395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
 403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __result,
 408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __alloc);
 409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
ARM GAS  /tmp/ccszdRNt.s 			page 185


 417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_move_copy
 421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  copies [first2, last2) into
 423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
 431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __result,
 436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							   __alloc);
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_fill_move
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_move_fill
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
ARM GAS  /tmp/ccszdRNt.s 			page 186


 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _Allocator>
 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __first2,
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							    __first2,
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 							    __alloc);
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_1
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    _ValueType;
 529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
ARM GAS  /tmp/ccszdRNt.s 			page 187


 531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_n_1
 536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
 547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_n_1<true>
 558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static _ForwardIterator
 561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         {
 563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    _ValueType;
 565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return std::fill_n(__first, __n, _ValueType());
 567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default
 571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // constructed value_types(s).
 573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator>
 574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default(_ForwardIterator __first,
 576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			    _ForwardIterator __last)
 577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_default_1<__is_trivial(_ValueType)
 584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				     && __assignable>::
 585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default(__first, __last);
 586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 188


 588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_n
 589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_type(s).
 590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_n(_ForwardIterator __first, _Size __n)
 593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_n_1<__is_trivial(_ValueType)
 600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				       && __assignable>::
 601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_n(__first, __n);
 602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_a
 606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default
 607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // constructed value_types(s), constructed with the allocator alloc.
 608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Allocator>
 609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     void
 610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __last,
 612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_a(_ForwardIterator __first,
 631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __last,
 632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      allocator<_Tp>&)
 633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { std::__uninitialized_default(__first, __last); }
 634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_n_a
 637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, first + n) with n default constructed value_types(s),
 638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // constructed with the allocator alloc.
 639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Allocator>
 640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
 641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				_Allocator& __alloc)
 643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
ARM GAS  /tmp/ccszdRNt.s 			page 189


 645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__cur)
 649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur));
 650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_n_a(_ForwardIterator __first, _Size __n, 
 662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				allocator<_Tp>&)
 663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::__uninitialized_default_n(__first, __n); }
 664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_1
 667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	static void
 670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue(_ForwardIterator __first,
 671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				 _ForwardIterator __last)
 672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_1<true>
 689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         static void
 692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****         __uninit_default_novalue(_ForwardIterator __first,
 693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				 _ForwardIterator __last)
 694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1
 700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
ARM GAS  /tmp/ccszdRNt.s 			page 190


 702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	static _ForwardIterator
 703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __try
 707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, (void) ++__cur)
 709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct_novalue(std::__addressof(*__cur));
 710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      return __cur;
 711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __catch(...)
 713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    {
 714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    }
 717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<>
 721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __uninitialized_default_novalue_n_1<true>
 722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	static _ForwardIterator
 725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue_n(_ForwardIterator __first, _Size __n)
 726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{ return std::next(__first, __n); }
 727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     };
 728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_novalue
 730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, last) with std::distance(first, last) default-initialized
 731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // value_types(s).
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator>
 733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_novalue(_ForwardIterator __first,
 735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				    _ForwardIterator __last)
 736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       std::__uninitialized_default_novalue_1<
 741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue(__first, __last);
 743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // __uninitialized_default_n
 746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Fills [first, first + n) with n default-initialized value_type(s).
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size>
 748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_default_novalue_n(_ForwardIterator __first, _Size __n)
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_novalue_n_1<
 755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	is_trivially_default_constructible<_ValueType>::value>::
 756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__uninit_default_novalue_n(__first, __n);
 757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 191


 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     _ForwardIterator
 762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n(_InputIterator __first, _Size __n,
 763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return __cur;
 771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n(_RandomAccessIterator __first, _Size __n,
 783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result,
 784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   random_access_iterator_tag)
 785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __first + __n, __result); }
 786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size,
 788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     pair<_InputIterator, _ForwardIterator>
 790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, input_iterator_tag)
 792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __try
 795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, (void) ++__first, ++__cur)
 797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    std::_Construct(std::__addressof(*__cur), *__first);
 798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  return {__first, __cur};
 799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __catch(...)
 801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	{
 802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur);
 803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	}
 805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _RandomAccessIterator, typename _Size,
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	   typename _ForwardIterator>
 809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline pair<_RandomAccessIterator, _ForwardIterator>
 810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n_pair(_RandomAccessIterator __first, _Size __n,
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result,
 812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   random_access_iterator_tag)
 813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       auto __second_res = uninitialized_copy(__first, __first + __n, __result);
 815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       auto __first_res = std::next(__first, __n);
ARM GAS  /tmp/ccszdRNt.s 			page 192


 816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return {__first_res, __second_res};
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   /**
 820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,first+n) into result.
 821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __n      The number of elements to copy.
 823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  @return  __result + __n
 825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****    *  Like copy_n(), but does not require an initialized output range.
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   */
 828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_copy_n(_InputIterator __first, _Size __n,
 831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			 _ForwardIterator __result)
 832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     { return std::__uninitialized_copy_n(__first, __n, __result,
 833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 std::__iterator_category(__first)); }
 834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _Size, typename _ForwardIterator>
 836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __uninitialized_copy_n_pair(_InputIterator __first, _Size __n,
 838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			      _ForwardIterator __result)
 839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return
 841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__uninitialized_copy_n_pair(__first, __n, __result,
 842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					 std::__iterator_category(__first));
 843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif
 846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201703L
 848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** # define __cpp_lib_raw_memory_algorithms 201606L
 849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator>
 851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_default_construct(_ForwardIterator __first,
 853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				    _ForwardIterator __last)
 854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __uninitialized_default_novalue(__first, __last);
 856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_default_construct_n(_ForwardIterator __first, _Size __count)
 861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_novalue_n(__first, __count);
 863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator>
 866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_value_construct(_ForwardIterator __first,
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				  _ForwardIterator __last)
 869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default(__first, __last);
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 193


 873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _ForwardIterator, typename _Size>
 874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_value_construct_n(_ForwardIterator __first, _Size __count)
 876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __uninitialized_default_n(__first, __count);
 878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator>
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_move(_InputIterator __first, _InputIterator __last,
 883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return std::uninitialized_copy
 886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_ITERATOR(__last), __result);
 888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _Size, typename _ForwardIterator>
 891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline pair<_InputIterator, _ForwardIterator>
 892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     uninitialized_move_n(_InputIterator __first, _Size __count,
 893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			 _ForwardIterator __result)
 894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       auto __res = std::__uninitialized_copy_n_pair
 896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
 897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	 __count, __result);
 898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return {__res.first.base(), __res.second};
 899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #endif // C++17
 901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
 903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _Tp, typename _Up, typename _Allocator>
 904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline void
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_object_a(_Tp* __dest, _Up* __orig, _Allocator& __alloc)
 906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			 __dest, std::move(*__orig)))
 908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	     && noexcept(std::allocator_traits<_Allocator>::destroy(
 909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			    __alloc, std::__addressof(*__orig))))
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef std::allocator_traits<_Allocator> __traits;
 912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __traits::construct(__alloc, __dest, std::move(*__orig));
 913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       __traits::destroy(__alloc, std::__addressof(*__orig));
 914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // This class may be specialized for specific types.
 917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   // Also known as is_trivially_relocatable.
 918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template<typename _Tp, typename = void>
 919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     struct __is_bitwise_relocatable
 920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     : is_trivial<_Tp> { };
 921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _Tp, typename _Up>
 923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline __enable_if_t<std::__is_bitwise_relocatable<_Tp>::value, _Tp*>
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_a_1(_Tp* __first, _Tp* __last,
 925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       ptrdiff_t __count = __last - __first;
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       if (__count > 0)
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
ARM GAS  /tmp/ccszdRNt.s 			page 194


 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    typename _Allocator>
 935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_a_1(_InputIterator __first, _InputIterator __last,
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::__relocate_object_a(std::addressof(*__result),
 939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					       std::addressof(*__first),
 940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 					       __alloc)))
 941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     {
 942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType;
 944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	_ValueType2;
 946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       static_assert(std::is_same<_ValueType, _ValueType2>::value,
 947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	  "relocation is only possible for values of the same type");
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 				 std::__addressof(*__first), __alloc);
 952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __cur;
 953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 
 955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****   template <typename _InputIterator, typename _ForwardIterator,
 956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	    typename _Allocator>
 957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     inline _ForwardIterator
 958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     __relocate_a(_InputIterator __first, _InputIterator __last,
 1778              		.loc 15 958 5 view .LVU428
 1779              	.LBB4936:
 1780              	.LBI4936:
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 1781              		.loc 15 924 5 view .LVU429
 1782              	.LBB4937:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1783              		.loc 15 928 7 is_stmt 0 view .LVU430
 1784 006e 002E     		cmp	r6, #0
 1785 0070 27DC     		bgt	.L62
 1786              	.L52:
 1787              	.LVL161:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1788              		.loc 15 928 7 view .LVU431
 1789              	.LBE4937:
 1790              	.LBE4936:
 1791              	.LBE4935:
 1792              	.LBE4934:
 1793              	.LBE4933:
 1794              	.LBE4932:
 439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __new_start(this->_M_allocate(__len));
 441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __new_finish(__new_start);
 442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       __try
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // The order of the three operations is dictated by the C++11
 445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // case, where the moves could alter a new element belonging
 446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // to the existing vector.  This is an issue only for callers
ARM GAS  /tmp/ccszdRNt.s 			page 195


 447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // taking the element by lvalue ref (see last bullet of C++11
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  // [res.on.arguments]).
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _Alloc_traits::construct(this->_M_impl,
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before,
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   std::forward<_Args>(__args)...);
 453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __x);
 455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  __new_finish = pointer();
 457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if _GLIBCXX17_CONSTEXPR (_S_use_relocate())
 460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish = _S_relocate(__old_start, __position.base(),
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					 __new_start, _M_get_Tp_allocator());
 463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      ++__new_finish;
 1795              		.loc 9 464 8 view .LVU432
 1796 0072 0436     		adds	r6, r6, #4
 1797              	.LVL162:
 1798              		.loc 9 464 8 view .LVU433
 1799 0074 BE19     		adds	r6, r7, r6
 1800              	.LVL163:
 1801              	.LBB4943:
 1802              	.LBI4943:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 1803              		.loc 13 462 7 is_stmt 1 view .LVU434
 1804              	.LBB4944:
 1805              	.LBB4945:
 1806              	.LBI4945:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 1807              		.loc 13 450 7 view .LVU435
 1808              	.LBB4946:
 1809              	.LBI4946:
 1810              		.loc 15 958 5 view .LVU436
 1811              	.LBB4947:
 1812              	.LBI4947:
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 1813              		.loc 15 924 5 view .LVU437
 1814              	.LBB4948:
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       if (__count > 0)
 1815              		.loc 15 927 34 is_stmt 0 view .LVU438
 1816 0076 5346     		mov	r3, r10
 1817 0078 4246     		mov	r2, r8
 1818              	.LVL164:
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       if (__count > 0)
 1819              		.loc 15 927 34 view .LVU439
 1820 007a 9B1A     		subs	r3, r3, r2
 1821 007c 9A46     		mov	r10, r3
 1822              	.LVL165:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 1823              		.loc 15 928 7 view .LVU440
 1824 007e 002B     		cmp	r3, #0
 1825 0080 25DC     		bgt	.L63
 1826              	.LVL166:
 1827              	.L53:
ARM GAS  /tmp/ccszdRNt.s 			page 196


 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 1828              		.loc 15 930 25 view .LVU441
 1829 0082 5644     		add	r6, r6, r10
 1830              	.LVL167:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 1831              		.loc 15 930 25 view .LVU442
 1832              	.LBE4948:
 1833              	.LBE4947:
 1834              	.LBE4946:
 1835              	.LBE4945:
 1836              	.LBE4944:
 1837              	.LBE4943:
 1838              	.LBB4954:
 1839              	.LBI4954:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 1840              		.loc 13 347 7 is_stmt 1 view .LVU443
 1841              	.LBB4955:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 1842              		.loc 13 350 2 is_stmt 0 view .LVU444
 1843 0084 4B46     		mov	r3, r9
 1844 0086 002B     		cmp	r3, #0
 1845 0088 02D0     		beq	.L54
 1846              	.LVL168:
 1847              	.LBB4956:
 1848              	.LBI4956:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 1849              		.loc 10 469 7 is_stmt 1 view .LVU445
 1850              	.LBB4957:
 1851              	.LBB4958:
 1852              	.LBI4958:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 1853              		.loc 7 119 7 view .LVU446
 1854              	.LBB4959:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1855              		.loc 7 128 19 is_stmt 0 view .LVU447
 1856 008a 4846     		mov	r0, r9
 1857 008c FFF7FEFF 		bl	_ZdlPv
 1858              	.LVL169:
 1859              	.L54:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 1860              		.loc 7 128 19 view .LVU448
 1861              	.LBE4959:
 1862              	.LBE4958:
 1863              	.LBE4957:
 1864              	.LBE4956:
 1865              	.LBE4955:
 1866              	.LBE4954:
 465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish = _S_relocate(__position.base(), __old_finish,
 467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 					 __new_finish, _M_get_Tp_allocator());
 468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    {
 472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish
 473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		(__old_start, __position.base(),
ARM GAS  /tmp/ccszdRNt.s 			page 197


 475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		 __new_start, _M_get_Tp_allocator());
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      ++__new_finish;
 478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	      __new_finish
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		= std::__uninitialized_move_if_noexcept_a
 481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		(__position.base(), __old_finish,
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		 __new_finish, _M_get_Tp_allocator());
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    }
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       __catch(...)
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	{
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  if (!__new_finish)
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _Alloc_traits::destroy(this->_M_impl,
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before);
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  else
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    std::_Destroy(__new_start, __new_finish, _M_get_Tp_allocator());
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  _M_deallocate(__new_start, __len);
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  __throw_exception_again;
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	}
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       if _GLIBCXX17_CONSTEXPR (!_S_use_relocate())
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	std::_Destroy(__old_start, __old_finish, _M_get_Tp_allocator());
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _GLIBCXX_ASAN_ANNOTATE_REINIT;
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_deallocate(__old_start,
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 		    this->_M_impl._M_end_of_storage - __old_start);
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_start = __new_start;
 1867              		.loc 9 502 7 view .LVU449
 1868 0090 2F60     		str	r7, [r5]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 1869              		.loc 9 503 7 view .LVU450
 1870 0092 6E60     		str	r6, [r5, #4]
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 1871              		.loc 9 504 53 view .LVU451
 1872 0094 A400     		lsls	r4, r4, #2
 1873              	.LVL170:
 1874              		.loc 9 504 53 view .LVU452
 1875 0096 3C19     		adds	r4, r7, r4
 1876              		.loc 9 504 7 view .LVU453
 1877 0098 AC60     		str	r4, [r5, #8]
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 1878              		.loc 9 505 5 view .LVU454
 1879 009a 03B0     		add	sp, sp, #12
 1880              		@ sp needed
 1881              	.LVL171:
 1882              	.LVL172:
 1883              	.LVL173:
 1884              	.LVL174:
 1885              	.LVL175:
 1886              	.LVL176:
 1887              	.LVL177:
 1888              		.loc 9 505 5 view .LVU455
 1889 009c F0BC     		pop	{r4, r5, r6, r7}
 1890 009e BB46     		mov	fp, r7
 1891 00a0 B246     		mov	r10, r6
 1892 00a2 A946     		mov	r9, r5
ARM GAS  /tmp/ccszdRNt.s 			page 198


 1893 00a4 A046     		mov	r8, r4
 1894 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 1895              	.LVL178:
 1896              	.L59:
 1897              	.LBB4960:
 1898              	.LBB4915:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1899              		.loc 13 1756 24 view .LVU456
 1900 00a8 0D48     		ldr	r0, .L64+4
 1901              	.LVL179:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 1902              		.loc 13 1756 24 view .LVU457
 1903 00aa FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 1904              	.LVL180:
 1905              	.L55:
 1906              	.LBB4914:
 1907              	.LBB4911:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 1908              		.loc 12 228 9 view .LVU458
 1909 00ae 6A46     		mov	r2, sp
 1910 00b0 BEE7     		b	.L48
 1911              	.LVL181:
 1912              	.L56:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 1913              		.loc 12 228 9 view .LVU459
 1914              	.LBE4911:
 1915              	.LBE4914:
 1916              		.loc 13 1759 48 view .LVU460
 1917 00b2 0A4C     		ldr	r4, .L64
 1918              	.LVL182:
 1919              		.loc 13 1759 48 view .LVU461
 1920 00b4 C7E7     		b	.L49
 1921              	.LVL183:
 1922              	.L60:
 1923              		.loc 13 1759 48 view .LVU462
 1924 00b6 094C     		ldr	r4, .L64
 1925              	.LVL184:
 1926              		.loc 13 1759 48 view .LVU463
 1927 00b8 C5E7     		b	.L49
 1928              	.LVL185:
 1929              	.L61:
 1930              		.loc 13 1759 48 view .LVU464
 1931              	.LBE4915:
 1932              	.LBE4960:
 1933              	.LBB4961:
 1934              	.LBB4928:
 1935              	.LBB4927:
 1936              	.LBB4926:
 1937              	.LBB4925:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1938              		.loc 7 105 26 view .LVU465
 1939 00ba FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 1940              	.LVL186:
 1941              	.L58:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 1942              		.loc 7 105 26 view .LVU466
 1943              	.LBE4925:
ARM GAS  /tmp/ccszdRNt.s 			page 199


 1944              	.LBE4926:
 1945              	.LBE4927:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 1946              		.loc 13 343 18 view .LVU467
 1947 00be 0027     		movs	r7, #0
 1948 00c0 D2E7     		b	.L50
 1949              	.LVL187:
 1950              	.L62:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 1951              		.loc 13 343 18 view .LVU468
 1952              	.LBE4928:
 1953              	.LBE4961:
 1954              	.LBB4962:
 1955              	.LBB4942:
 1956              	.LBB4941:
 1957              	.LBB4940:
 1958              	.LBB4939:
 1959              	.LBB4938:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 1960              		.loc 15 929 19 view .LVU469
 1961 00c2 3200     		movs	r2, r6
 1962 00c4 4946     		mov	r1, r9
 1963 00c6 3800     		movs	r0, r7
 1964 00c8 FFF7FEFF 		bl	memmove
 1965              	.LVL188:
 1966 00cc D1E7     		b	.L52
 1967              	.LVL189:
 1968              	.L63:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 1969              		.loc 15 929 19 view .LVU470
 1970              	.LBE4938:
 1971              	.LBE4939:
 1972              	.LBE4940:
 1973              	.LBE4941:
 1974              	.LBE4942:
 1975              	.LBE4962:
 1976              	.LBB4963:
 1977              	.LBB4953:
 1978              	.LBB4952:
 1979              	.LBB4951:
 1980              	.LBB4950:
 1981              	.LBB4949:
 1982 00ce 1A00     		movs	r2, r3
 1983              	.LVL190:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 1984              		.loc 15 929 19 view .LVU471
 1985 00d0 4146     		mov	r1, r8
 1986 00d2 3000     		movs	r0, r6
 1987 00d4 FFF7FEFF 		bl	memmove
 1988              	.LVL191:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 1989              		.loc 15 929 19 view .LVU472
 1990 00d8 D3E7     		b	.L53
 1991              	.L65:
 1992 00da C046     		.align	2
 1993              	.L64:
 1994 00dc FFFFFF1F 		.word	536870911
ARM GAS  /tmp/ccszdRNt.s 			page 200


 1995 00e0 00000000 		.word	.LC2
 1996              	.LBE4949:
 1997              	.LBE4950:
 1998              	.LBE4951:
 1999              	.LBE4952:
 2000              	.LBE4953:
 2001              	.LBE4963:
 2002              		.cfi_endproc
 2003              	.LFE4562:
 2005              		.section	.text._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE12emplace_backIJRP12IRQ_observerI3CLIEEEER
 2006              		.align	1
 2007              		.weak	_ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE12emplace_backIJRP12IRQ_observerI3CLIEEEERS1_DpOT_
 2008              		.syntax unified
 2009              		.code	16
 2010              		.thumb_func
 2011              		.fpu softvfp
 2013              	_ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE12emplace_backIJRP12IRQ_observerI3CLIEEEERS1_DpOT_:
 2014              	.LVL192:
 2015              	.LFB4387:
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2016              		.loc 9 109 7 is_stmt 1 view -0
 2017              		.cfi_startproc
 2018              		@ args = 0, pretend = 0, frame = 0
 2019              		@ frame_needed = 0, uses_anonymous_args = 0
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2020              		.loc 9 109 7 is_stmt 0 view .LVU474
 2021 0000 10B5     		push	{r4, lr}
 2022              	.LCFI10:
 2023              		.cfi_def_cfa_offset 8
 2024              		.cfi_offset 4, -8
 2025              		.cfi_offset 14, -4
 2026 0002 0400     		movs	r4, r0
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2027              		.loc 9 112 20 view .LVU475
 2028 0004 4368     		ldr	r3, [r0, #4]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2029              		.loc 9 112 2 view .LVU476
 2030 0006 8268     		ldr	r2, [r0, #8]
 2031 0008 9342     		cmp	r3, r2
 2032 000a 07D0     		beq	.L67
 2033              	.LVL193:
 2034              	.LBB4964:
 2035              	.LBI4964:
 2036              		.loc 10 482 2 is_stmt 1 view .LVU477
 2037              	.LBB4965:
 2038              	.LBI4965:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 2039              		.loc 7 144 2 view .LVU478
 2040              	.LBB4966:
 2041              		.loc 7 147 4 is_stmt 0 view .LVU479
 2042 000c 0A68     		ldr	r2, [r1]
 2043 000e 1A60     		str	r2, [r3]
 2044              	.LVL194:
 2045              		.loc 7 147 4 view .LVU480
 2046              	.LBE4966:
 2047              	.LBE4965:
 2048              	.LBE4964:
ARM GAS  /tmp/ccszdRNt.s 			page 201


 2049              		.loc 11 174 3 is_stmt 1 view .LVU481
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 2050              		.loc 9 117 6 is_stmt 0 view .LVU482
 2051 0010 4368     		ldr	r3, [r0, #4]
 2052 0012 0433     		adds	r3, r3, #4
 2053 0014 4360     		str	r3, [r0, #4]
 2054              	.LVL195:
 2055              	.L68:
 2056              	.LBB4967:
 2057              	.LBI4967:
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2058              		.loc 13 1140 7 is_stmt 1 view .LVU483
 2059              	.LBB4968:
 2060              	.LBI4968:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2061              		.loc 13 826 7 view .LVU484
 2062              	.LBB4969:
 2063              	.LBI4969:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2064              		.loc 14 806 7 view .LVU485
 2065              	.LBB4970:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2066              		.loc 14 807 23 is_stmt 0 view .LVU486
 2067 0016 6068     		ldr	r0, [r4, #4]
 2068              	.LVL196:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2069              		.loc 14 807 23 view .LVU487
 2070              	.LBE4970:
 2071              	.LBE4969:
 2072              	.LBE4968:
 2073              	.LBB4971:
 2074              	.LBI4971:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 2075              		.loc 14 867 7 is_stmt 1 view .LVU488
 2076              	.LBB4972:
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2077              		.loc 14 868 45 is_stmt 0 view .LVU489
 2078 0018 0438     		subs	r0, r0, #4
 2079              	.LBB4973:
 2080              	.LBI4973:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2081              		.loc 14 806 7 is_stmt 1 view .LVU490
 2082              	.LVL197:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2083              		.loc 14 806 7 is_stmt 0 view .LVU491
 2084              	.LBE4973:
 2085              	.LBE4972:
 2086              	.LBE4971:
 2087              	.LBE4967:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 2088              		.loc 9 125 7 view .LVU492
 2089              		@ sp needed
 2090              	.LVL198:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 2091              		.loc 9 125 7 view .LVU493
 2092 001a 10BD     		pop	{r4, pc}
 2093              	.LVL199:
ARM GAS  /tmp/ccszdRNt.s 			page 202


 2094              	.L67:
 2095              	.LBB4974:
 2096              	.LBI4974:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2097              		.loc 13 826 7 is_stmt 1 view .LVU494
 2098              	.LBB4975:
 2099              	.LBB4976:
 2100              	.LBI4976:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2101              		.loc 14 806 7 view .LVU495
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2102              		.loc 14 806 7 is_stmt 0 view .LVU496
 2103              	.LBE4976:
 2104              	.LBE4975:
 2105              	.LBE4974:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2106              		.loc 9 121 4 view .LVU497
 2107 001c 0A00     		movs	r2, r1
 2108 001e 1900     		movs	r1, r3
 2109              	.LVL200:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2110              		.loc 9 121 4 view .LVU498
 2111 0020 FFF7FEFF 		bl	_ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__gnu
 2112              	.LVL201:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2113              		.loc 9 121 4 view .LVU499
 2114 0024 F7E7     		b	.L68
 2115              		.cfi_endproc
 2116              	.LFE4387:
 2118              		.section	.text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu
 2119              		.align	1
 2120              		.weak	_ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu_cxx17__n
 2121              		.syntax unified
 2122              		.code	16
 2123              		.thumb_func
 2124              		.fpu softvfp
 2126              	_ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu_cxx17__normal_i
 2127              	.LVL202:
 2128              	.LFB4567:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 2129              		.loc 9 426 7 is_stmt 1 view -0
 2130              		.cfi_startproc
 2131              		@ args = 0, pretend = 0, frame = 8
 2132              		@ frame_needed = 0, uses_anonymous_args = 0
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 2133              		.loc 9 426 7 is_stmt 0 view .LVU501
 2134 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2135              	.LCFI11:
 2136              		.cfi_def_cfa_offset 20
 2137              		.cfi_offset 4, -20
 2138              		.cfi_offset 5, -16
 2139              		.cfi_offset 6, -12
 2140              		.cfi_offset 7, -8
 2141              		.cfi_offset 14, -4
 2142 0002 DE46     		mov	lr, fp
 2143 0004 5746     		mov	r7, r10
 2144 0006 4E46     		mov	r6, r9
ARM GAS  /tmp/ccszdRNt.s 			page 203


 2145 0008 4546     		mov	r5, r8
 2146 000a E0B5     		push	{r5, r6, r7, lr}
 2147              	.LCFI12:
 2148              		.cfi_def_cfa_offset 36
 2149              		.cfi_offset 8, -36
 2150              		.cfi_offset 9, -32
 2151              		.cfi_offset 10, -28
 2152              		.cfi_offset 11, -24
 2153 000c 83B0     		sub	sp, sp, #12
 2154              	.LCFI13:
 2155              		.cfi_def_cfa_offset 48
 2156 000e 0500     		movs	r5, r0
 2157 0010 8846     		mov	r8, r1
 2158              	.LVL203:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 2159              		.loc 9 426 7 view .LVU502
 2160 0012 9346     		mov	fp, r2
 2161              	.LVL204:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 2162              		.loc 9 426 7 view .LVU503
 2163 0014 0123     		movs	r3, #1
 2164 0016 0093     		str	r3, [sp]
 2165              	.LVL205:
 2166              	.LBB5015:
 2167              	.LBI5015:
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2168              		.loc 13 1753 7 is_stmt 1 view .LVU504
 2169              	.LBB5016:
 2170              	.LBB5017:
 2171              	.LBI5017:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 2172              		.loc 13 915 7 view .LVU505
 2173              	.LBB5018:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2174              		.loc 13 916 40 is_stmt 0 view .LVU506
 2175 0018 4368     		ldr	r3, [r0, #4]
 2176              	.LVL206:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2177              		.loc 13 916 50 view .LVU507
 2178 001a 0268     		ldr	r2, [r0]
 2179              	.LVL207:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2180              		.loc 13 916 50 view .LVU508
 2181 001c 9C1A     		subs	r4, r3, r2
 2182 001e A410     		asrs	r4, r4, #2
 2183              	.LVL208:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2184              		.loc 13 916 50 view .LVU509
 2185              	.LBE5018:
 2186              	.LBE5017:
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 2187              		.loc 13 1755 17 view .LVU510
 2188 0020 2E4A     		ldr	r2, .L87
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 2189              		.loc 13 1755 26 view .LVU511
 2190 0022 0121     		movs	r1, #1
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
ARM GAS  /tmp/ccszdRNt.s 			page 204


 2191              		.loc 13 1755 2 view .LVU512
 2192 0024 A242     		cmp	r2, r4
 2193 0026 3FD0     		beq	.L82
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2194              		.loc 13 1758 45 view .LVU513
 2195 0028 0194     		str	r4, [sp, #4]
 2196              	.LVL209:
 2197              	.LBB5019:
 2198              	.LBI5019:
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 2199              		.loc 12 222 5 is_stmt 1 view .LVU514
 2200              	.LBB5020:
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 2201              		.loc 12 227 7 is_stmt 0 view .LVU515
 2202 002a 8C42     		cmp	r4, r1
 2203 002c 3FD3     		bcc	.L78
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 2204              		.loc 12 229 14 view .LVU516
 2205 002e 01AA     		add	r2, sp, #4
 2206              	.LVL210:
 2207              	.L71:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 2208              		.loc 12 229 14 view .LVU517
 2209              	.LBE5020:
 2210              	.LBE5019:
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2211              		.loc 13 1758 33 view .LVU518
 2212 0030 1068     		ldr	r0, [r2]
 2213              	.LVL211:
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 2214              		.loc 13 1758 18 view .LVU519
 2215 0032 2418     		adds	r4, r4, r0
 2216              	.LVL212:
 2217              	.LBB5022:
 2218              	.LBI5022:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 2219              		.loc 13 915 7 is_stmt 1 view .LVU520
 2220              	.LBB5023:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2221              		.loc 13 916 50 is_stmt 0 view .LVU521
 2222 0034 2A68     		ldr	r2, [r5]
 2223 0036 9B1A     		subs	r3, r3, r2
 2224 0038 9B10     		asrs	r3, r3, #2
 2225              	.LVL213:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2226              		.loc 13 916 50 view .LVU522
 2227              	.LBE5023:
 2228              	.LBE5022:
 2229              		.loc 13 1759 48 view .LVU523
 2230 003a 9C42     		cmp	r4, r3
 2231 003c 39D3     		bcc	.L79
 2232              		.loc 13 1759 25 view .LVU524
 2233 003e 8023     		movs	r3, #128
 2234 0040 9B05     		lsls	r3, r3, #22
 2235 0042 9C42     		cmp	r4, r3
 2236 0044 37D2     		bcs	.L83
 2237              	.LVL214:
ARM GAS  /tmp/ccszdRNt.s 			page 205


 2238              	.L72:
 2239              		.loc 13 1759 25 view .LVU525
 2240              	.LBE5016:
 2241              	.LBE5015:
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 2242              		.loc 9 437 15 view .LVU526
 2243 0046 2B68     		ldr	r3, [r5]
 2244 0048 9946     		mov	r9, r3
 2245              	.LVL215:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 2246              		.loc 9 438 15 view .LVU527
 2247 004a 6B68     		ldr	r3, [r5, #4]
 2248              	.LVL216:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 2249              		.loc 9 438 15 view .LVU528
 2250 004c 9A46     		mov	r10, r3
 2251              	.LVL217:
 2252              	.LBB5026:
 2253              	.LBI5026:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 2254              		.loc 13 808 7 is_stmt 1 view .LVU529
 2255              	.LBB5027:
 2256              	.LBI5027:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2257              		.loc 14 806 7 view .LVU530
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2258              		.loc 14 806 7 is_stmt 0 view .LVU531
 2259              	.LBE5027:
 2260              	.LBE5026:
 2261              	.LBB5028:
 2262              	.LBI5028:
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 2263              		.loc 14 989 5 is_stmt 1 view .LVU532
 2264              	.LBB5029:
 2265              		.loc 14 992 27 is_stmt 0 view .LVU533
 2266 004e 4346     		mov	r3, r8
 2267              	.LVL218:
 2268              		.loc 14 992 27 view .LVU534
 2269 0050 4A46     		mov	r2, r9
 2270 0052 9E1A     		subs	r6, r3, r2
 2271              	.LVL219:
 2272              		.loc 14 992 27 view .LVU535
 2273              	.LBE5029:
 2274              	.LBE5028:
 2275              	.LBB5030:
 2276              	.LBI5030:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2277              		.loc 13 340 7 is_stmt 1 view .LVU536
 2278              	.LBB5031:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 2279              		.loc 13 343 18 is_stmt 0 view .LVU537
 2280 0054 002C     		cmp	r4, #0
 2281 0056 32D0     		beq	.L81
 2282              	.LVL220:
 2283              	.LBB5032:
 2284              	.LBI5032:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
ARM GAS  /tmp/ccszdRNt.s 			page 206


 2285              		.loc 10 443 7 is_stmt 1 view .LVU538
 2286              	.LBB5033:
 2287              	.LBI5033:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 2288              		.loc 7 102 7 view .LVU539
 2289              	.LBB5034:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 2290              		.loc 7 104 2 is_stmt 0 view .LVU540
 2291 0058 8023     		movs	r3, #128
 2292 005a 9B05     		lsls	r3, r3, #22
 2293 005c 9C42     		cmp	r4, r3
 2294 005e 2CD2     		bcs	.L84
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2295              		.loc 7 114 41 view .LVU541
 2296 0060 A000     		lsls	r0, r4, #2
 2297 0062 FFF7FEFF 		bl	_Znwj
 2298              	.LVL221:
 2299 0066 0700     		movs	r7, r0
 2300              	.LVL222:
 2301              	.L73:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2302              		.loc 7 114 41 view .LVU542
 2303              	.LBE5034:
 2304              	.LBE5033:
 2305              	.LBE5032:
 2306              	.LBE5031:
 2307              	.LBE5030:
 2308              	.LBB5039:
 2309              	.LBI5039:
 2310              		.loc 10 482 2 is_stmt 1 view .LVU543
 2311              	.LBB5040:
 2312              	.LBI5040:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 2313              		.loc 7 144 2 view .LVU544
 2314              	.LBB5041:
 2315              		.loc 7 147 4 is_stmt 0 view .LVU545
 2316 0068 5B46     		mov	r3, fp
 2317 006a 1B68     		ldr	r3, [r3]
 2318 006c BB51     		str	r3, [r7, r6]
 2319              	.LVL223:
 2320              		.loc 7 147 4 view .LVU546
 2321              	.LBE5041:
 2322              	.LBE5040:
 2323              	.LBE5039:
 2324              		.loc 11 174 3 is_stmt 1 view .LVU547
 2325              	.LBB5042:
 2326              	.LBI5042:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 2327              		.loc 13 462 7 view .LVU548
 2328              	.LBB5043:
 2329              	.LBB5044:
 2330              	.LBI5044:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 2331              		.loc 13 450 7 view .LVU549
 2332              	.LBB5045:
 2333              	.LBI5045:
 2334              		.loc 15 958 5 view .LVU550
ARM GAS  /tmp/ccszdRNt.s 			page 207


 2335              	.LBB5046:
 2336              	.LBI5046:
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 2337              		.loc 15 924 5 view .LVU551
 2338              	.LBB5047:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2339              		.loc 15 928 7 is_stmt 0 view .LVU552
 2340 006e 002E     		cmp	r6, #0
 2341 0070 27DC     		bgt	.L85
 2342              	.L75:
 2343              	.LVL224:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2344              		.loc 15 928 7 view .LVU553
 2345              	.LBE5047:
 2346              	.LBE5046:
 2347              	.LBE5045:
 2348              	.LBE5044:
 2349              	.LBE5043:
 2350              	.LBE5042:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 2351              		.loc 9 464 8 view .LVU554
 2352 0072 0436     		adds	r6, r6, #4
 2353              	.LVL225:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 2354              		.loc 9 464 8 view .LVU555
 2355 0074 BE19     		adds	r6, r7, r6
 2356              	.LVL226:
 2357              	.LBB5053:
 2358              	.LBI5053:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 2359              		.loc 13 462 7 is_stmt 1 view .LVU556
 2360              	.LBB5054:
 2361              	.LBB5055:
 2362              	.LBI5055:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 2363              		.loc 13 450 7 view .LVU557
 2364              	.LBB5056:
 2365              	.LBI5056:
 2366              		.loc 15 958 5 view .LVU558
 2367              	.LBB5057:
 2368              	.LBI5057:
 924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _Tp* __result, allocator<_Up>&) noexcept
 2369              		.loc 15 924 5 view .LVU559
 2370              	.LBB5058:
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       if (__count > 0)
 2371              		.loc 15 927 34 is_stmt 0 view .LVU560
 2372 0076 5346     		mov	r3, r10
 2373 0078 4246     		mov	r2, r8
 2374              	.LVL227:
 927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       if (__count > 0)
 2375              		.loc 15 927 34 view .LVU561
 2376 007a 9B1A     		subs	r3, r3, r2
 2377 007c 9A46     		mov	r10, r3
 2378              	.LVL228:
 928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	__builtin_memmove(__result, __first, __count * sizeof(_Tp));
 2379              		.loc 15 928 7 view .LVU562
 2380 007e 002B     		cmp	r3, #0
ARM GAS  /tmp/ccszdRNt.s 			page 208


 2381 0080 25DC     		bgt	.L86
 2382              	.LVL229:
 2383              	.L76:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 2384              		.loc 15 930 25 view .LVU563
 2385 0082 5644     		add	r6, r6, r10
 2386              	.LVL230:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     }
 2387              		.loc 15 930 25 view .LVU564
 2388              	.LBE5058:
 2389              	.LBE5057:
 2390              	.LBE5056:
 2391              	.LBE5055:
 2392              	.LBE5054:
 2393              	.LBE5053:
 2394              	.LBB5064:
 2395              	.LBI5064:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2396              		.loc 13 347 7 is_stmt 1 view .LVU565
 2397              	.LBB5065:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 2398              		.loc 13 350 2 is_stmt 0 view .LVU566
 2399 0084 4B46     		mov	r3, r9
 2400 0086 002B     		cmp	r3, #0
 2401 0088 02D0     		beq	.L77
 2402              	.LVL231:
 2403              	.LBB5066:
 2404              	.LBI5066:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 2405              		.loc 10 469 7 is_stmt 1 view .LVU567
 2406              	.LBB5067:
 2407              	.LBB5068:
 2408              	.LBI5068:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 2409              		.loc 7 119 7 view .LVU568
 2410              	.LBB5069:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2411              		.loc 7 128 19 is_stmt 0 view .LVU569
 2412 008a 4846     		mov	r0, r9
 2413 008c FFF7FEFF 		bl	_ZdlPv
 2414              	.LVL232:
 2415              	.L77:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 2416              		.loc 7 128 19 view .LVU570
 2417              	.LBE5069:
 2418              	.LBE5068:
 2419              	.LBE5067:
 2420              	.LBE5066:
 2421              	.LBE5065:
 2422              	.LBE5064:
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 2423              		.loc 9 502 7 view .LVU571
 2424 0090 2F60     		str	r7, [r5]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 2425              		.loc 9 503 7 view .LVU572
 2426 0092 6E60     		str	r6, [r5, #4]
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
ARM GAS  /tmp/ccszdRNt.s 			page 209


 2427              		.loc 9 504 53 view .LVU573
 2428 0094 A400     		lsls	r4, r4, #2
 2429              	.LVL233:
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 2430              		.loc 9 504 53 view .LVU574
 2431 0096 3C19     		adds	r4, r7, r4
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 2432              		.loc 9 504 7 view .LVU575
 2433 0098 AC60     		str	r4, [r5, #8]
 2434              		.loc 9 505 5 view .LVU576
 2435 009a 03B0     		add	sp, sp, #12
 2436              		@ sp needed
 2437              	.LVL234:
 2438              	.LVL235:
 2439              	.LVL236:
 2440              	.LVL237:
 2441              	.LVL238:
 2442              	.LVL239:
 2443              	.LVL240:
 2444              		.loc 9 505 5 view .LVU577
 2445 009c F0BC     		pop	{r4, r5, r6, r7}
 2446 009e BB46     		mov	fp, r7
 2447 00a0 B246     		mov	r10, r6
 2448 00a2 A946     		mov	r9, r5
 2449 00a4 A046     		mov	r8, r4
 2450 00a6 F0BD     		pop	{r4, r5, r6, r7, pc}
 2451              	.LVL241:
 2452              	.L82:
 2453              	.LBB5070:
 2454              	.LBB5025:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2455              		.loc 13 1756 24 view .LVU578
 2456 00a8 0D48     		ldr	r0, .L87+4
 2457              	.LVL242:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 2458              		.loc 13 1756 24 view .LVU579
 2459 00aa FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 2460              	.LVL243:
 2461              	.L78:
 2462              	.LBB5024:
 2463              	.LBB5021:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 2464              		.loc 12 228 9 view .LVU580
 2465 00ae 6A46     		mov	r2, sp
 2466 00b0 BEE7     		b	.L71
 2467              	.LVL244:
 2468              	.L79:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 2469              		.loc 12 228 9 view .LVU581
 2470              	.LBE5021:
 2471              	.LBE5024:
 2472              		.loc 13 1759 48 view .LVU582
 2473 00b2 0A4C     		ldr	r4, .L87
 2474              	.LVL245:
 2475              		.loc 13 1759 48 view .LVU583
 2476 00b4 C7E7     		b	.L72
 2477              	.LVL246:
ARM GAS  /tmp/ccszdRNt.s 			page 210


 2478              	.L83:
 2479              		.loc 13 1759 48 view .LVU584
 2480 00b6 094C     		ldr	r4, .L87
 2481              	.LVL247:
 2482              		.loc 13 1759 48 view .LVU585
 2483 00b8 C5E7     		b	.L72
 2484              	.LVL248:
 2485              	.L84:
 2486              		.loc 13 1759 48 view .LVU586
 2487              	.LBE5025:
 2488              	.LBE5070:
 2489              	.LBB5071:
 2490              	.LBB5038:
 2491              	.LBB5037:
 2492              	.LBB5036:
 2493              	.LBB5035:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2494              		.loc 7 105 26 view .LVU587
 2495 00ba FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 2496              	.LVL249:
 2497              	.L81:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 2498              		.loc 7 105 26 view .LVU588
 2499              	.LBE5035:
 2500              	.LBE5036:
 2501              	.LBE5037:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 2502              		.loc 13 343 18 view .LVU589
 2503 00be 0027     		movs	r7, #0
 2504 00c0 D2E7     		b	.L73
 2505              	.LVL250:
 2506              	.L85:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 2507              		.loc 13 343 18 view .LVU590
 2508              	.LBE5038:
 2509              	.LBE5071:
 2510              	.LBB5072:
 2511              	.LBB5052:
 2512              	.LBB5051:
 2513              	.LBB5050:
 2514              	.LBB5049:
 2515              	.LBB5048:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 2516              		.loc 15 929 19 view .LVU591
 2517 00c2 3200     		movs	r2, r6
 2518 00c4 4946     		mov	r1, r9
 2519 00c6 3800     		movs	r0, r7
 2520 00c8 FFF7FEFF 		bl	memmove
 2521              	.LVL251:
 2522 00cc D1E7     		b	.L75
 2523              	.LVL252:
 2524              	.L86:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 2525              		.loc 15 929 19 view .LVU592
 2526              	.LBE5048:
 2527              	.LBE5049:
 2528              	.LBE5050:
ARM GAS  /tmp/ccszdRNt.s 			page 211


 2529              	.LBE5051:
 2530              	.LBE5052:
 2531              	.LBE5072:
 2532              	.LBB5073:
 2533              	.LBB5063:
 2534              	.LBB5062:
 2535              	.LBB5061:
 2536              	.LBB5060:
 2537              	.LBB5059:
 2538 00ce 1A00     		movs	r2, r3
 2539              	.LVL253:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 2540              		.loc 15 929 19 view .LVU593
 2541 00d0 4146     		mov	r1, r8
 2542 00d2 3000     		movs	r0, r6
 2543 00d4 FFF7FEFF 		bl	memmove
 2544              	.LVL254:
 929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       return __result + __count;
 2545              		.loc 15 929 19 view .LVU594
 2546 00d8 D3E7     		b	.L76
 2547              	.L88:
 2548 00da C046     		.align	2
 2549              	.L87:
 2550 00dc FFFFFF1F 		.word	536870911
 2551 00e0 00000000 		.word	.LC2
 2552              	.LBE5059:
 2553              	.LBE5060:
 2554              	.LBE5061:
 2555              	.LBE5062:
 2556              	.LBE5063:
 2557              	.LBE5073:
 2558              		.cfi_endproc
 2559              	.LFE4567:
 2561              		.section	.text._ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_,"ax
 2562              		.align	1
 2563              		.weak	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_
 2564              		.syntax unified
 2565              		.code	16
 2566              		.thumb_func
 2567              		.fpu softvfp
 2569              	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_:
 2570              	.LVL255:
 2571              	.LFB4395:
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2572              		.loc 9 109 7 is_stmt 1 view -0
 2573              		.cfi_startproc
 2574              		@ args = 0, pretend = 0, frame = 0
 2575              		@ frame_needed = 0, uses_anonymous_args = 0
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 2576              		.loc 9 109 7 is_stmt 0 view .LVU596
 2577 0000 10B5     		push	{r4, lr}
 2578              	.LCFI14:
 2579              		.cfi_def_cfa_offset 8
 2580              		.cfi_offset 4, -8
 2581              		.cfi_offset 14, -4
 2582 0002 0400     		movs	r4, r0
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
ARM GAS  /tmp/ccszdRNt.s 			page 212


 2583              		.loc 9 112 20 view .LVU597
 2584 0004 4368     		ldr	r3, [r0, #4]
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 2585              		.loc 9 112 2 view .LVU598
 2586 0006 8268     		ldr	r2, [r0, #8]
 2587 0008 9342     		cmp	r3, r2
 2588 000a 07D0     		beq	.L90
 2589              	.LVL256:
 2590              	.LBB5074:
 2591              	.LBI5074:
 2592              		.loc 10 482 2 is_stmt 1 view .LVU599
 2593              	.LBB5075:
 2594              	.LBI5075:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 2595              		.loc 7 144 2 view .LVU600
 2596              	.LBB5076:
 2597              		.loc 7 147 4 is_stmt 0 view .LVU601
 2598 000c 0A68     		ldr	r2, [r1]
 2599 000e 1A60     		str	r2, [r3]
 2600              	.LVL257:
 2601              		.loc 7 147 4 view .LVU602
 2602              	.LBE5076:
 2603              	.LBE5075:
 2604              	.LBE5074:
 2605              		.loc 11 174 3 is_stmt 1 view .LVU603
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 2606              		.loc 9 117 6 is_stmt 0 view .LVU604
 2607 0010 4368     		ldr	r3, [r0, #4]
 2608 0012 0433     		adds	r3, r3, #4
 2609 0014 4360     		str	r3, [r0, #4]
 2610              	.LVL258:
 2611              	.L91:
 2612              	.LBB5077:
 2613              	.LBI5077:
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 2614              		.loc 13 1140 7 is_stmt 1 view .LVU605
 2615              	.LBB5078:
 2616              	.LBI5078:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2617              		.loc 13 826 7 view .LVU606
 2618              	.LBB5079:
 2619              	.LBI5079:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2620              		.loc 14 806 7 view .LVU607
 2621              	.LBB5080:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2622              		.loc 14 807 23 is_stmt 0 view .LVU608
 2623 0016 6068     		ldr	r0, [r4, #4]
 2624              	.LVL259:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2625              		.loc 14 807 23 view .LVU609
 2626              	.LBE5080:
 2627              	.LBE5079:
 2628              	.LBE5078:
 2629              	.LBB5081:
 2630              	.LBI5081:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
ARM GAS  /tmp/ccszdRNt.s 			page 213


 2631              		.loc 14 867 7 is_stmt 1 view .LVU610
 2632              	.LBB5082:
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 2633              		.loc 14 868 45 is_stmt 0 view .LVU611
 2634 0018 0438     		subs	r0, r0, #4
 2635              	.LBB5083:
 2636              	.LBI5083:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2637              		.loc 14 806 7 is_stmt 1 view .LVU612
 2638              	.LVL260:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2639              		.loc 14 806 7 is_stmt 0 view .LVU613
 2640              	.LBE5083:
 2641              	.LBE5082:
 2642              	.LBE5081:
 2643              	.LBE5077:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 2644              		.loc 9 125 7 view .LVU614
 2645              		@ sp needed
 2646              	.LVL261:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 2647              		.loc 9 125 7 view .LVU615
 2648 001a 10BD     		pop	{r4, pc}
 2649              	.LVL262:
 2650              	.L90:
 2651              	.LBB5084:
 2652              	.LBI5084:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 2653              		.loc 13 826 7 is_stmt 1 view .LVU616
 2654              	.LBB5085:
 2655              	.LBB5086:
 2656              	.LBI5086:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2657              		.loc 14 806 7 view .LVU617
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 2658              		.loc 14 806 7 is_stmt 0 view .LVU618
 2659              	.LBE5086:
 2660              	.LBE5085:
 2661              	.LBE5084:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2662              		.loc 9 121 4 view .LVU619
 2663 001c 0A00     		movs	r2, r1
 2664 001e 1900     		movs	r1, r3
 2665              	.LVL263:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2666              		.loc 9 121 4 view .LVU620
 2667 0020 FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu_cxx17__norm
 2668              	.LVL264:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 2669              		.loc 9 121 4 view .LVU621
 2670 0024 F7E7     		b	.L91
 2671              		.cfi_endproc
 2672              	.LFE4395:
 2674              		.section	.rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St
 2675              		.align	2
 2676              	.LC5:
 2677 0000 62617369 		.ascii	"basic_string::_M_construct null not valid\000"
ARM GAS  /tmp/ccszdRNt.s 			page 214


 2677      635F7374 
 2677      72696E67 
 2677      3A3A5F4D 
 2677      5F636F6E 
 2678              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20
 2679              		.align	1
 2680              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_i
 2681              		.syntax unified
 2682              		.code	16
 2683              		.thumb_func
 2684              		.fpu softvfp
 2686              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator
 2687              	.LVL265:
 2688              	.LFB4603:
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2689              		.loc 3 206 7 is_stmt 1 view -0
 2690              		.cfi_startproc
 2691              		@ args = 0, pretend = 0, frame = 8
 2692              		@ frame_needed = 0, uses_anonymous_args = 0
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 2693              		.loc 3 206 7 is_stmt 0 view .LVU623
 2694 0000 70B5     		push	{r4, r5, r6, lr}
 2695              	.LCFI15:
 2696              		.cfi_def_cfa_offset 16
 2697              		.cfi_offset 4, -16
 2698              		.cfi_offset 5, -12
 2699              		.cfi_offset 6, -8
 2700              		.cfi_offset 14, -4
 2701 0002 82B0     		sub	sp, sp, #8
 2702              	.LCFI16:
 2703              		.cfi_def_cfa_offset 24
 2704 0004 0500     		movs	r5, r0
 2705 0006 0E1E     		subs	r6, r1, #0
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 2706              		.loc 3 211 42 view .LVU624
 2707 0008 0DD0     		beq	.L97
 2708              	.L93:
 2709              	.LVL266:
 2710              	.LBB5087:
 2711              	.LBI5087:
 2712              		.file 16 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Functions used by iterators -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // Under Section 7 of GPL version 3, you are granted additional
ARM GAS  /tmp/ccszdRNt.s 			page 215


  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Copyright (c) 1996-1998
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** /** @file bits/stl_iterator_base_funcs.h
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  Do not attempt to use it directly. @headername{iterator}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  This file contains all of the general iterator-related utility
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  *  functions, such as distance() and advance().
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****  */
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #ifndef _STL_ITERATOR_BASE_FUNCS_H
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #define _STL_ITERATOR_BASE_FUNCS_H 1
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #pragma GCC system_header
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #include <bits/concept_check.h>
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #include <debug/assertions.h>
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** namespace std _GLIBCXX_VISIBILITY(default)
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   // Forward declaration for the overloads of __distance.
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_iterator;
ARM GAS  /tmp/ccszdRNt.s 			page 216


  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template <typename> struct _List_const_iterator;
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** _GLIBCXX_END_NAMESPACE_CONTAINER
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_InputIterator __first, _InputIterator __last,
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                input_iterator_tag)
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     {
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       // concept requirements
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       while (__first != __last)
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	{
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	  ++__first;
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	  ++__n;
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	}
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       return __n;
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _RandomAccessIterator>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX14_CONSTEXPR
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_RandomAccessIterator>::difference_type
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_RandomAccessIterator __first, _RandomAccessIterator __last,
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     {
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       // concept requirements
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       __glibcxx_function_requires(_RandomAccessIteratorConcept<
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 				  _RandomAccessIterator>)
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****       return __last - __first;
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #if _GLIBCXX_USE_CXX11_ABI
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   // Forward declaration because of the qualified call in distance.
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_iterator<_Tp>,
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_iterator<_Tp>,
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _Tp>
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     ptrdiff_t
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     __distance(_GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       _GLIBCXX_STD_C::_List_const_iterator<_Tp>,
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 	       input_iterator_tag);
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** #endif
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h **** 
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   /**
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @brief A generalization of pointer arithmetic.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @param  __first  An input iterator.
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @param  __last  An input iterator.
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  @return  The distance between them.
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  Returns @c n such that __first + n == __last.  This requires
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  that @p __last must be reachable from @p __first.  Note that @c
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  n may be negative.
ARM GAS  /tmp/ccszdRNt.s 			page 217


 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *
 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  For random access iterators, this uses their @c + and @c - operations
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****    *  and are constant time.  For other %iterator classes they are linear time.
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   */
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****   template<typename _InputIterator>
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     inline _GLIBCXX17_CONSTEXPR
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     typename iterator_traits<_InputIterator>::difference_type
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     distance(_InputIterator __first, _InputIterator __last)
 2713              		.loc 16 138 5 is_stmt 1 view .LVU625
 2714              	.LBB5088:
 2715              	.LBI5088:
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 2716              		.loc 16 98 5 view .LVU626
 2717              	.LBB5089:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 2718              		.loc 16 104 23 is_stmt 0 view .LVU627
 2719 000a 941B     		subs	r4, r2, r6
 2720              	.LVL267:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 2721              		.loc 16 104 23 view .LVU628
 2722              	.LBE5089:
 2723              	.LBE5088:
 2724              	.LBE5087:
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 2725              		.loc 3 215 12 view .LVU629
 2726 000c 0194     		str	r4, [sp, #4]
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 2727              		.loc 3 217 2 view .LVU630
 2728 000e 0F2C     		cmp	r4, #15
 2729 0010 0ED8     		bhi	.L98
 2730              	.LVL268:
 2731              	.L94:
 2732              	.LBB5090:
 2733              	.LBI5090:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2734              		.loc 5 186 7 is_stmt 1 view .LVU631
 2735              	.LBB5091:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2736              		.loc 5 187 28 is_stmt 0 view .LVU632
 2737 0012 2868     		ldr	r0, [r5]
 2738              	.LVL269:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2739              		.loc 5 187 28 view .LVU633
 2740              	.LBE5091:
 2741              	.LBE5090:
 2742              	.LBB5092:
 2743              	.LBI5092:
 396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 2744              		.loc 5 396 7 is_stmt 1 view .LVU634
 2745              	.LBB5093:
 2746              	.LBI5093:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2747              		.loc 5 346 7 view .LVU635
 2748              	.LBB5094:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 2749              		.loc 5 348 2 is_stmt 0 view .LVU636
 2750 0014 012C     		cmp	r4, #1
ARM GAS  /tmp/ccszdRNt.s 			page 218


 2751 0016 14D0     		beq	.L99
 2752              	.LVL270:
 2753              	.LBB5095:
 2754              	.LBI5095:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 2755              		.loc 4 361 7 is_stmt 1 view .LVU637
 2756              	.LBB5096:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 2757              		.loc 4 363 2 view .LVU638
 2758 0018 002C     		cmp	r4, #0
 2759 001a 14D0     		beq	.L96
 2760              		.loc 4 365 2 view .LVU639
 2761              		.loc 4 365 49 is_stmt 0 view .LVU640
 2762 001c 2200     		movs	r2, r4
 2763 001e 3100     		movs	r1, r6
 2764 0020 FFF7FEFF 		bl	memcpy
 2765              	.LVL271:
 2766              		.loc 4 365 66 view .LVU641
 2767 0024 0FE0     		b	.L96
 2768              	.LVL272:
 2769              	.L97:
 2770              		.loc 4 365 66 view .LVU642
 2771              	.LBE5096:
 2772              	.LBE5095:
 2773              	.LBE5094:
 2774              	.LBE5093:
 2775              	.LBE5092:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 2776              		.loc 3 211 42 discriminator 1 view .LVU643
 2777 0026 9142     		cmp	r1, r2
 2778 0028 EFD0     		beq	.L93
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2779              		.loc 3 212 28 view .LVU644
 2780 002a 0B48     		ldr	r0, .L100
 2781              	.LVL273:
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 2782              		.loc 3 212 28 view .LVU645
 2783 002c FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 2784              	.LVL274:
 2785              	.L98:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2786              		.loc 3 219 6 view .LVU646
 2787 0030 0022     		movs	r2, #0
 2788              	.LVL275:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2789              		.loc 3 219 6 view .LVU647
 2790 0032 01A9     		add	r1, sp, #4
 2791              	.LVL276:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2792              		.loc 3 219 6 view .LVU648
 2793 0034 2800     		movs	r0, r5
 2794              	.LVL277:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 2795              		.loc 3 219 6 view .LVU649
 2796 0036 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 2797              	.LVL278:
 2798              	.LBB5101:
ARM GAS  /tmp/ccszdRNt.s 			page 219


 2799              	.LBI5101:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 2800              		.loc 5 178 7 is_stmt 1 view .LVU650
 2801              	.LBB5102:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2802              		.loc 5 179 9 is_stmt 0 view .LVU651
 2803 003a 2860     		str	r0, [r5]
 2804              	.LVL279:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2805              		.loc 5 179 9 view .LVU652
 2806              	.LBE5102:
 2807              	.LBE5101:
 2808              	.LBB5103:
 2809              	.LBI5103:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 2810              		.loc 5 210 7 is_stmt 1 view .LVU653
 2811              	.LBB5104:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2812              		.loc 5 211 9 is_stmt 0 view .LVU654
 2813 003c 019B     		ldr	r3, [sp, #4]
 2814 003e AB60     		str	r3, [r5, #8]
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2815              		.loc 5 211 45 view .LVU655
 2816 0040 E7E7     		b	.L94
 2817              	.LVL280:
 2818              	.L99:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2819              		.loc 5 211 45 view .LVU656
 2820              	.LBE5104:
 2821              	.LBE5103:
 2822              	.LBB5105:
 2823              	.LBB5100:
 2824              	.LBB5099:
 2825              	.LBB5097:
 2826              	.LBI5097:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 2827              		.loc 4 299 7 is_stmt 1 view .LVU657
 2828              	.LBB5098:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2829              		.loc 4 300 9 view .LVU658
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2830              		.loc 4 300 16 is_stmt 0 view .LVU659
 2831 0042 3378     		ldrb	r3, [r6]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2832              		.loc 4 300 14 view .LVU660
 2833 0044 0370     		strb	r3, [r0]
 2834              	.LVL281:
 2835              	.L96:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2836              		.loc 4 300 14 view .LVU661
 2837              	.LBE5098:
 2838              	.LBE5097:
 2839              	.LBE5099:
 2840              	.LBE5100:
 2841              	.LBE5105:
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 2842              		.loc 3 232 2 view .LVU662
ARM GAS  /tmp/ccszdRNt.s 			page 220


 2843 0046 019A     		ldr	r2, [sp, #4]
 2844              	.LVL282:
 2845              	.LBB5106:
 2846              	.LBI5106:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 2847              		.loc 5 214 7 is_stmt 1 view .LVU663
 2848              	.LBB5107:
 2849              	.LBB5108:
 2850              	.LBI5108:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 2851              		.loc 5 182 7 view .LVU664
 2852              	.LBB5109:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2853              		.loc 5 183 9 is_stmt 0 view .LVU665
 2854 0048 6A60     		str	r2, [r5, #4]
 2855              	.LVL283:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2856              		.loc 5 183 9 view .LVU666
 2857              	.LBE5109:
 2858              	.LBE5108:
 2859              	.LBB5110:
 2860              	.LBI5110:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 2861              		.loc 5 186 7 is_stmt 1 view .LVU667
 2862              	.LBB5111:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2863              		.loc 5 187 28 is_stmt 0 view .LVU668
 2864 004a 2B68     		ldr	r3, [r5]
 2865              	.LVL284:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 2866              		.loc 5 187 28 view .LVU669
 2867              	.LBE5111:
 2868              	.LBE5110:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 2869              		.loc 5 217 31 view .LVU670
 2870 004c 9B18     		adds	r3, r3, r2
 2871              	.LVL285:
 2872              	.LBB5112:
 2873              	.LBI5112:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 2874              		.loc 4 299 7 is_stmt 1 view .LVU671
 2875              	.LBB5113:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2876              		.loc 4 300 9 view .LVU672
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2877              		.loc 4 300 14 is_stmt 0 view .LVU673
 2878 004e 0022     		movs	r2, #0
 2879              	.LVL286:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2880              		.loc 4 300 14 view .LVU674
 2881 0050 1A70     		strb	r2, [r3]
 2882              	.LVL287:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 2883              		.loc 4 300 14 view .LVU675
 2884              	.LBE5113:
 2885              	.LBE5112:
 2886              	.LBE5107:
ARM GAS  /tmp/ccszdRNt.s 			page 221


 2887              	.LBE5106:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 2888              		.loc 3 233 7 view .LVU676
 2889 0052 02B0     		add	sp, sp, #8
 2890              		@ sp needed
 2891              	.LVL288:
 2892              	.LVL289:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 2893              		.loc 3 233 7 view .LVU677
 2894 0054 70BD     		pop	{r4, r5, r6, pc}
 2895              	.L101:
 2896 0056 C046     		.align	2
 2897              	.L100:
 2898 0058 00000000 		.word	.LC5
 2899              		.cfi_endproc
 2900              	.LFE4603:
 2902              		.section	.rodata._ZN3CLI7ConnectEP11Serial_line.str1.4,"aMS",%progbits,1
 2903              		.align	2
 2904              	.LC9:
 2905 0000 0D0A00   		.ascii	"\015\012\000"
 2906              		.section	.text._ZN3CLI7ConnectEP11Serial_line,"ax",%progbits
 2907              		.align	1
 2908              		.global	_ZN3CLI7ConnectEP11Serial_line
 2909              		.syntax unified
 2910              		.code	16
 2911              		.thumb_func
 2912              		.fpu softvfp
 2914              	_ZN3CLI7ConnectEP11Serial_line:
 2915              	.LVL290:
 2916              	.LFB3849:
   7:alohal/cli/cli.cpp ****     serial_connection = connection;
 2917              		.loc 2 7 43 is_stmt 1 view -0
 2918              		.cfi_startproc
 2919              		@ args = 0, pretend = 0, frame = 56
 2920              		@ frame_needed = 0, uses_anonymous_args = 0
   7:alohal/cli/cli.cpp ****     serial_connection = connection;
 2921              		.loc 2 7 43 is_stmt 0 view .LVU679
 2922 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 2923              	.LCFI17:
 2924              		.cfi_def_cfa_offset 20
 2925              		.cfi_offset 4, -20
 2926              		.cfi_offset 5, -16
 2927              		.cfi_offset 6, -12
 2928              		.cfi_offset 7, -8
 2929              		.cfi_offset 14, -4
 2930 0002 8FB0     		sub	sp, sp, #60
 2931              	.LCFI18:
 2932              		.cfi_def_cfa_offset 80
 2933 0004 0500     		movs	r5, r0
   8:alohal/cli/cli.cpp ****     serial_connection->IRQ->Register(this, &CLI::Char_load);
 2934              		.loc 2 8 5 is_stmt 1 view .LVU680
   8:alohal/cli/cli.cpp ****     serial_connection->IRQ->Register(this, &CLI::Char_load);
 2935              		.loc 2 8 23 is_stmt 0 view .LVU681
 2936 0006 0160     		str	r1, [r0]
   9:alohal/cli/cli.cpp ****     serial_connection->Send("\r\n");
 2937              		.loc 2 9 5 is_stmt 1 view .LVU682
   9:alohal/cli/cli.cpp ****     serial_connection->Send("\r\n");
ARM GAS  /tmp/ccszdRNt.s 			page 222


 2938              		.loc 2 9 24 is_stmt 0 view .LVU683
 2939 0008 CF69     		ldr	r7, [r1, #28]
   9:alohal/cli/cli.cpp ****     serial_connection->Send("\r\n");
 2940              		.loc 2 9 37 view .LVU684
 2941 000a 1B4B     		ldr	r3, .L104
 2942 000c 0693     		str	r3, [sp, #24]
 2943 000e 0026     		movs	r6, #0
 2944 0010 0796     		str	r6, [sp, #28]
 2945              	.LVL291:
   9:alohal/cli/cli.cpp ****     serial_connection->Send("\r\n");
 2946              		.loc 2 9 37 view .LVU685
 2947 0012 0822     		movs	r2, #8
 2948 0014 06A9     		add	r1, sp, #24
 2949              	.LVL292:
   9:alohal/cli/cli.cpp ****     serial_connection->Send("\r\n");
 2950              		.loc 2 9 37 view .LVU686
 2951 0016 02A8     		add	r0, sp, #8
 2952              	.LVL293:
   9:alohal/cli/cli.cpp ****     serial_connection->Send("\r\n");
 2953              		.loc 2 9 37 view .LVU687
 2954 0018 FFF7FEFF 		bl	memcpy
 2955              	.LVL294:
 2956              	.LBB5158:
 2957              	.LBI5158:
 2958              		.file 17 "alohal/irq/irq_handler.hpp"
   1:alohal/irq/irq_handler.hpp **** #ifndef IRQ_HANDLER_HPP
   2:alohal/irq/irq_handler.hpp **** #define IRQ_HANDLER_HPP
   3:alohal/irq/irq_handler.hpp **** 
   4:alohal/irq/irq_handler.hpp **** // ------------------LIBRARY_INCLUDES--------------
   5:alohal/irq/irq_handler.hpp **** 
   6:alohal/irq/irq_handler.hpp **** #pragma once
   7:alohal/irq/irq_handler.hpp **** 
   8:alohal/irq/irq_handler.hpp **** #ifdef STM32_F0
   9:alohal/irq/irq_handler.hpp **** # include "stm32f0xx_hal.h"
  10:alohal/irq/irq_handler.hpp **** #elif STM32_F1
  11:alohal/irq/irq_handler.hpp **** # include "stm32f1xx_hal.h"
  12:alohal/irq/irq_handler.hpp **** #elif STM32_F3
  13:alohal/irq/irq_handler.hpp **** # include "stm32f3xx_hal.h"
  14:alohal/irq/irq_handler.hpp **** #elif STM32_F4
  15:alohal/irq/irq_handler.hpp **** # include "stm32f4xx_hal.h"
  16:alohal/irq/irq_handler.hpp **** #elif STM32_F7
  17:alohal/irq/irq_handler.hpp **** # include "stm32f7xx_hal.h"
  18:alohal/irq/irq_handler.hpp **** #endif
  19:alohal/irq/irq_handler.hpp **** 
  20:alohal/irq/irq_handler.hpp **** using namespace std;
  21:alohal/irq/irq_handler.hpp **** 
  22:alohal/irq/irq_handler.hpp **** #include <vector>
  23:alohal/irq/irq_handler.hpp **** #include <string>
  24:alohal/irq/irq_handler.hpp **** 
  25:alohal/irq/irq_handler.hpp **** #include "irq_observer.hpp"
  26:alohal/irq/irq_handler.hpp **** 
  27:alohal/irq/irq_handler.hpp **** class IRQ_handler {
  28:alohal/irq/irq_handler.hpp **** public:
  29:alohal/irq/irq_handler.hpp ****     vector<IRQ_observer_base *> observers;
  30:alohal/irq/irq_handler.hpp **** 
  31:alohal/irq/irq_handler.hpp ****     IRQ_handler() = default;
  32:alohal/irq/irq_handler.hpp **** 
ARM GAS  /tmp/ccszdRNt.s 			page 223


  33:alohal/irq/irq_handler.hpp ****     template <class registrator_class>
  34:alohal/irq/irq_handler.hpp ****     void Register(registrator_class& object, void (registrator_class::*method_pointer_set)()){
  35:alohal/irq/irq_handler.hpp ****         IRQ_observer<registrator_class> *obs = new IRQ_observer<registrator_class>();
  36:alohal/irq/irq_handler.hpp ****         obs->Register(object, method_pointer_set);
  37:alohal/irq/irq_handler.hpp ****         observers.emplace_back(obs);
  38:alohal/irq/irq_handler.hpp ****     }
  39:alohal/irq/irq_handler.hpp **** 
  40:alohal/irq/irq_handler.hpp ****     template <class registrator_class>
  41:alohal/irq/irq_handler.hpp ****     void Register(registrator_class* object, void (registrator_class::*method_pointer_set)()){
 2959              		.loc 17 41 10 is_stmt 1 view .LVU688
 2960              	.LBB5159:
  42:alohal/irq/irq_handler.hpp ****         IRQ_observer<registrator_class> *obs = new IRQ_observer<registrator_class>();
 2961              		.loc 17 42 48 is_stmt 0 view .LVU689
 2962 001c 1820     		movs	r0, #24
 2963 001e FFF7FEFF 		bl	_Znwj
 2964              	.LVL295:
 2965 0022 0400     		movs	r4, r0
 2966              	.LVL296:
 2967              	.LBB5160:
 2968              	.LBI5160:
  41:alohal/irq/irq_observer.hpp **** 
 2969              		.loc 1 41 5 is_stmt 1 view .LVU690
 2970              	.LBB5161:
 2971              	.LBB5162:
 2972              	.LBI5162:
  22:alohal/irq/irq_observer.hpp ****     virtual ~IRQ_observer_base() = default;
 2973              		.loc 1 22 5 view .LVU691
  22:alohal/irq/irq_observer.hpp ****     virtual ~IRQ_observer_base() = default;
 2974              		.loc 1 22 5 is_stmt 0 view .LVU692
 2975              	.LBE5162:
  41:alohal/irq/irq_observer.hpp **** 
 2976              		.loc 1 41 5 view .LVU693
 2977 0024 154B     		ldr	r3, .L104+4
 2978 0026 0360     		str	r3, [r0]
 2979 0028 4661     		str	r6, [r0, #20]
 2980              	.LVL297:
  41:alohal/irq/irq_observer.hpp **** 
 2981              		.loc 1 41 5 view .LVU694
 2982              	.LBE5161:
 2983              	.LBE5160:
 2984              		.loc 17 42 42 view .LVU695
 2985 002a 0090     		str	r0, [sp]
 2986              	.LVL298:
 2987              		.loc 17 42 42 view .LVU696
 2988 002c 04AE     		add	r6, sp, #16
 2989 002e 0822     		movs	r2, #8
 2990 0030 02A9     		add	r1, sp, #8
 2991 0032 3000     		movs	r0, r6
 2992              	.LVL299:
 2993              		.loc 17 42 42 view .LVU697
 2994 0034 FFF7FEFF 		bl	memcpy
 2995              	.LVL300:
 2996              	.LBB5163:
 2997              	.LBI5163:
  49:alohal/irq/irq_observer.hpp ****         pointer_to_origin = &object_set;
 2998              		.loc 1 49 10 is_stmt 1 view .LVU698
 2999              	.LBB5164:
ARM GAS  /tmp/ccszdRNt.s 			page 224


  50:alohal/irq/irq_observer.hpp ****         object_ptr        = object_set;
 3000              		.loc 1 50 9 is_stmt 0 view .LVU699
 3001 0038 01AB     		add	r3, sp, #4
 3002 003a 6360     		str	r3, [r4, #4]
  51:alohal/irq/irq_observer.hpp ****         method_pointer = method_pointer_set;
 3003              		.loc 1 51 9 view .LVU700
 3004 003c A560     		str	r5, [r4, #8]
  52:alohal/irq/irq_observer.hpp ****     }
 3005              		.loc 1 52 9 view .LVU701
 3006 003e 0C34     		adds	r4, r4, #12
 3007              	.LVL301:
  52:alohal/irq/irq_observer.hpp ****     }
 3008              		.loc 1 52 9 view .LVU702
 3009 0040 0CCE     		ldmia	r6!, {r2, r3}
 3010 0042 0CC4     		stmia	r4!, {r2, r3}
 3011              	.LVL302:
  52:alohal/irq/irq_observer.hpp ****     }
 3012              		.loc 1 52 9 view .LVU703
 3013              	.LBE5164:
 3014              	.LBE5163:
  43:alohal/irq/irq_handler.hpp ****         obs->Register(object, method_pointer_set);
  44:alohal/irq/irq_handler.hpp ****         observers.emplace_back(obs);
 3015              		.loc 17 44 9 view .LVU704
 3016 0044 6946     		mov	r1, sp
 3017 0046 3800     		movs	r0, r7
 3018 0048 FFF7FEFF 		bl	_ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE12emplace_backIJRP12IRQ_observerI3CLIEEEERS1_DpOT_
 3019              	.LVL303:
 3020              		.loc 17 44 9 view .LVU705
 3021              	.LBE5159:
 3022              	.LBE5158:
  10:alohal/cli/cli.cpp **** }
 3023              		.loc 2 10 5 is_stmt 1 view .LVU706
 3024 004c 2D68     		ldr	r5, [r5]
 3025              	.LVL304:
 3026              	.LBB5165:
 3027              	.LBI5165:
 3028              		.file 18 "alohal/uart/serial_line.hpp"
   1:alohal/uart/serial_line.hpp **** /**
   2:alohal/uart/serial_line.hpp ****  * @file serial_line.hpp
   3:alohal/uart/serial_line.hpp ****  * @author Petr Malaník (TheColonelYoung(at)gmail(dot)com)
   4:alohal/uart/serial_line.hpp ****  * @version 0.1
   5:alohal/uart/serial_line.hpp ****  * @date 29.09.2020
   6:alohal/uart/serial_line.hpp ****  */
   7:alohal/uart/serial_line.hpp **** 
   8:alohal/uart/serial_line.hpp **** #pragma once
   9:alohal/uart/serial_line.hpp **** 
  10:alohal/uart/serial_line.hpp **** #include <vector>
  11:alohal/uart/serial_line.hpp **** #include <string>
  12:alohal/uart/serial_line.hpp **** 
  13:alohal/uart/serial_line.hpp **** #include "irq/irq_handler.hpp"
  14:alohal/uart/serial_line.hpp **** 
  15:alohal/uart/serial_line.hpp **** using namespace std;
  16:alohal/uart/serial_line.hpp **** 
  17:alohal/uart/serial_line.hpp **** /**
  18:alohal/uart/serial_line.hpp ****  * @brief   Common interface and basic functions for serial line interfaces like UART on USB CDC VC
  19:alohal/uart/serial_line.hpp ****  */
  20:alohal/uart/serial_line.hpp **** class Serial_line
ARM GAS  /tmp/ccszdRNt.s 			page 225


  21:alohal/uart/serial_line.hpp **** {
  22:alohal/uart/serial_line.hpp **** protected:
  23:alohal/uart/serial_line.hpp ****     /**
  24:alohal/uart/serial_line.hpp ****      * @brief String of characters, which was received by serial line
  25:alohal/uart/serial_line.hpp ****      */
  26:alohal/uart/serial_line.hpp ****     string RX_buffer = "";
  27:alohal/uart/serial_line.hpp **** 
  28:alohal/uart/serial_line.hpp **** public:
  29:alohal/uart/serial_line.hpp **** 
  30:alohal/uart/serial_line.hpp ****     /**
  31:alohal/uart/serial_line.hpp ****      * @brief IRQ handler which activates on Receive IRQ
  32:alohal/uart/serial_line.hpp ****      */
  33:alohal/uart/serial_line.hpp ****     IRQ_handler *IRQ = new IRQ_handler();
  34:alohal/uart/serial_line.hpp **** 
  35:alohal/uart/serial_line.hpp ****     /**
  36:alohal/uart/serial_line.hpp ****      * @brief Construct a new Serial_line object
  37:alohal/uart/serial_line.hpp ****      */
  38:alohal/uart/serial_line.hpp ****     Serial_line() = default;
  39:alohal/uart/serial_line.hpp **** 
  40:alohal/uart/serial_line.hpp ****     /**
  41:alohal/uart/serial_line.hpp ****      * @brief   Sends data via Serial line
  42:alohal/uart/serial_line.hpp ****      *
  43:alohal/uart/serial_line.hpp ****      * @param message   String to send
  44:alohal/uart/serial_line.hpp ****      * @return int      Status code, depends on transmit layer
  45:alohal/uart/serial_line.hpp ****      */
  46:alohal/uart/serial_line.hpp ****     virtual int Send(string message) = 0;
  47:alohal/uart/serial_line.hpp **** 
  48:alohal/uart/serial_line.hpp ****     /**
  49:alohal/uart/serial_line.hpp ****      * @brief Send anything what can be casted to string over serial line
  50:alohal/uart/serial_line.hpp ****      *
  51:alohal/uart/serial_line.hpp ****      * @tparam send__type   Type of message which will be converted to string and sended over seria
  52:alohal/uart/serial_line.hpp ****      * @param message       Value or text of message
  53:alohal/uart/serial_line.hpp ****      * @return int          Error code
  54:alohal/uart/serial_line.hpp ****      */
  55:alohal/uart/serial_line.hpp ****     template <typename send__type>
  56:alohal/uart/serial_line.hpp ****     int Send(send__type message){
  57:alohal/uart/serial_line.hpp ****         return Send(to_string(message));
  58:alohal/uart/serial_line.hpp ****     }
  59:alohal/uart/serial_line.hpp **** 
  60:alohal/uart/serial_line.hpp ****     /**
  61:alohal/uart/serial_line.hpp ****      * @brief Transmitt array of strings over serial line char by char
  62:alohal/uart/serial_line.hpp ****      *
  63:alohal/uart/serial_line.hpp ****      * @param message   Message to send
  64:alohal/uart/serial_line.hpp ****      * @return int      Error code
  65:alohal/uart/serial_line.hpp ****      */
  66:alohal/uart/serial_line.hpp ****     int Send(const char* message){
 3029              		.loc 18 66 9 view .LVU707
 3030              	.LBB5166:
  67:alohal/uart/serial_line.hpp ****         return Send(string(message));
 3031              		.loc 18 67 9 view .LVU708
 3032              		.loc 18 67 36 is_stmt 0 view .LVU709
 3033 004e 2B68     		ldr	r3, [r5]
 3034 0050 1E68     		ldr	r6, [r3]
 3035              	.LVL305:
 3036              	.LBB5167:
 3037              	.LBI5167:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 226


 3038              		.loc 6 138 7 is_stmt 1 view .LVU710
 3039              	.LBB5168:
 3040              	.LBI5168:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3041              		.loc 7 80 7 view .LVU711
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3042              		.loc 7 80 7 is_stmt 0 view .LVU712
 3043              	.LBE5168:
 3044              	.LBE5167:
 3045              	.LBB5169:
 3046              	.LBI5169:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3047              		.loc 5 525 7 is_stmt 1 view .LVU713
 3048              	.LBB5170:
 3049              	.LBB5171:
 3050              	.LBB5172:
 3051              	.LBI5172:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3052              		.loc 5 190 7 view .LVU714
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3053              		.loc 5 190 7 is_stmt 0 view .LVU715
 3054              	.LBE5172:
 3055              	.LBB5173:
 3056              	.LBI5173:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3057              		.loc 5 156 2 is_stmt 1 view .LVU716
 3058              	.LBB5174:
 3059              	.LBB5175:
 3060              	.LBB5176:
 3061              	.LBI5176:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3062              		.loc 6 141 7 view .LVU717
 3063              	.LBB5177:
 3064              	.LBI5177:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3065              		.loc 7 83 7 view .LVU718
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3066              		.loc 7 83 7 is_stmt 0 view .LVU719
 3067              	.LBE5177:
 3068              	.LBE5176:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3069              		.loc 5 157 35 view .LVU720
 3070 0052 0AAC     		add	r4, sp, #40
 3071              	.LVL306:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3072              		.loc 5 157 35 view .LVU721
 3073 0054 0894     		str	r4, [sp, #32]
 3074              	.LVL307:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3075              		.loc 5 157 35 view .LVU722
 3076              	.LBE5175:
 3077              	.LBE5174:
 3078              	.LBE5173:
 3079              	.LBB5178:
 3080              	.LBI5178:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 3081              		.loc 4 329 7 is_stmt 1 view .LVU723
ARM GAS  /tmp/ccszdRNt.s 			page 227


 3082              	.LBE5178:
 3083              	.LBE5171:
 3084              	.LBE5170:
 3085              	.LBE5169:
 3086              	.LBE5166:
 3087              	.LBE5165:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 3088              		.loc 4 332 2 view .LVU724
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 3089              		.loc 4 335 2 view .LVU725
 3090              	.LBB5204:
 3091              	.LBB5203:
 3092              	.LBB5185:
 3093              	.LBB5184:
 3094              	.LBB5183:
 3095              	.LBB5179:
 3096              	.LBI5179:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 3097              		.loc 5 263 9 view .LVU726
 3098              	.LBB5180:
 3099              	.LBB5181:
 3100              	.LBI5181:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 3101              		.loc 5 243 9 view .LVU727
 3102              	.LBB5182:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3103              		.loc 5 247 11 is_stmt 0 view .LVU728
 3104 0056 0A4A     		ldr	r2, .L104+8
 3105              	.LVL308:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3106              		.loc 5 247 11 view .LVU729
 3107 0058 911E     		subs	r1, r2, #2
 3108 005a 0023     		movs	r3, #0
 3109 005c 08A8     		add	r0, sp, #32
 3110              	.LVL309:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3111              		.loc 5 247 11 view .LVU730
 3112 005e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 3113              	.LVL310:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3114              		.loc 5 247 11 view .LVU731
 3115              	.LBE5182:
 3116              	.LBE5181:
 3117              	.LBE5180:
 3118              	.LBE5179:
 3119              	.LBE5183:
 3120              	.LBE5184:
 3121              	.LBE5185:
 3122              		.loc 18 67 20 view .LVU732
 3123 0062 08A9     		add	r1, sp, #32
 3124 0064 2800     		movs	r0, r5
 3125 0066 B047     		blx	r6
 3126              	.LVL311:
 3127              	.LBB5186:
 3128              	.LBI5186:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 3129              		.loc 5 657 7 is_stmt 1 view .LVU733
ARM GAS  /tmp/ccszdRNt.s 			page 228


 3130              	.LBB5187:
 3131              	.LBI5187:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3132              		.loc 5 229 7 view .LVU734
 3133              	.LBB5188:
 3134              	.LBB5189:
 3135              	.LBI5189:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3136              		.loc 5 221 7 view .LVU735
 3137              	.LBB5190:
 3138              	.LBI5190:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3139              		.loc 5 186 7 view .LVU736
 3140              	.LBB5191:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3141              		.loc 5 187 28 is_stmt 0 view .LVU737
 3142 0068 0898     		ldr	r0, [sp, #32]
 3143              	.LVL312:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3144              		.loc 5 187 28 view .LVU738
 3145              	.LBE5191:
 3146              	.LBE5190:
 3147              	.LBB5192:
 3148              	.LBI5192:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3149              		.loc 5 200 7 is_stmt 1 view .LVU739
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3150              		.loc 5 200 7 is_stmt 0 view .LVU740
 3151              	.LBE5192:
 3152              	.LBE5189:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3153              		.loc 5 231 2 view .LVU741
 3154 006a A042     		cmp	r0, r4
 3155 006c 01D0     		beq	.L102
 3156              	.LVL313:
 3157              	.LBB5193:
 3158              	.LBI5193:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3159              		.loc 5 236 7 is_stmt 1 view .LVU742
 3160              	.LBB5194:
 3161              	.LBB5195:
 3162              	.LBI5195:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3163              		.loc 10 469 7 view .LVU743
 3164              	.LBB5196:
 3165              	.LBI5196:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 3166              		.loc 7 119 7 view .LVU744
 3167              	.LBB5197:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3168              		.loc 7 128 19 is_stmt 0 view .LVU745
 3169 006e FFF7FEFF 		bl	_ZdlPv
 3170              	.LVL314:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3171              		.loc 7 128 19 view .LVU746
 3172              	.LBE5197:
 3173              	.LBE5196:
ARM GAS  /tmp/ccszdRNt.s 			page 229


 3174              	.LBE5195:
 3175              	.LBE5194:
 3176              	.LBE5193:
 3177              	.LBE5188:
 3178              	.LBE5187:
 3179              	.LBB5198:
 3180              	.LBI5198:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3181              		.loc 5 150 14 is_stmt 1 view .LVU747
 3182              	.LBB5199:
 3183              	.LBI5199:
 3184              		.loc 6 153 7 view .LVU748
 3185              	.LBB5200:
 3186              	.LBI5200:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3187              		.loc 7 89 7 view .LVU749
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3188              		.loc 7 89 7 is_stmt 0 view .LVU750
 3189              	.LBE5200:
 3190              	.LBE5199:
 3191              	.LBE5198:
 3192              	.LBE5186:
 3193              	.LBB5201:
 3194              	.LBI5201:
 3195              		.loc 6 153 7 is_stmt 1 view .LVU751
 3196              	.LBB5202:
 3197              	.LBI5202:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3198              		.loc 7 89 7 view .LVU752
 3199              	.L102:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3200              		.loc 7 89 7 is_stmt 0 view .LVU753
 3201              	.LBE5202:
 3202              	.LBE5201:
 3203              	.LBE5203:
 3204              	.LBE5204:
  11:alohal/cli/cli.cpp **** 
 3205              		.loc 2 11 1 view .LVU754
 3206 0072 0FB0     		add	sp, sp, #60
 3207              		@ sp needed
 3208 0074 F0BD     		pop	{r4, r5, r6, r7, pc}
 3209              	.L105:
 3210 0076 C046     		.align	2
 3211              	.L104:
 3212 0078 00000000 		.word	_ZN3CLI9Char_loadEv
 3213 007c 08000000 		.word	_ZTV12IRQ_observerI3CLIE+8
 3214 0080 02000000 		.word	.LC9+2
 3215              		.cfi_endproc
 3216              	.LFE3849:
 3218              		.section	.rodata._ZN3CLI27Stop_foreground_applicationEv.str1.4,"aMS",%progbits,1
 3219              		.align	2
 3220              	.LC12:
 3221 0000 2E00     		.ascii	".\000"
 3222              		.section	.text._ZN3CLI27Stop_foreground_applicationEv,"ax",%progbits
 3223              		.align	1
 3224              		.global	_ZN3CLI27Stop_foreground_applicationEv
 3225              		.syntax unified
ARM GAS  /tmp/ccszdRNt.s 			page 230


 3226              		.code	16
 3227              		.thumb_func
 3228              		.fpu softvfp
 3230              	_ZN3CLI27Stop_foreground_applicationEv:
 3231              	.LVL315:
 3232              	.LFB3867:
 157:alohal/cli/cli.cpp ****     foreground_application = nullptr;
 3233              		.loc 2 157 40 is_stmt 1 view -0
 3234              		.cfi_startproc
 3235              		@ args = 0, pretend = 0, frame = 24
 3236              		@ frame_needed = 0, uses_anonymous_args = 0
 157:alohal/cli/cli.cpp ****     foreground_application = nullptr;
 3237              		.loc 2 157 40 is_stmt 0 view .LVU756
 3238 0000 30B5     		push	{r4, r5, lr}
 3239              	.LCFI19:
 3240              		.cfi_def_cfa_offset 12
 3241              		.cfi_offset 4, -12
 3242              		.cfi_offset 5, -8
 3243              		.cfi_offset 14, -4
 3244 0002 87B0     		sub	sp, sp, #28
 3245              	.LCFI20:
 3246              		.cfi_def_cfa_offset 40
 158:alohal/cli/cli.cpp ****     if (fs) {
 3247              		.loc 2 158 5 is_stmt 1 view .LVU757
 158:alohal/cli/cli.cpp ****     if (fs) {
 3248              		.loc 2 158 28 is_stmt 0 view .LVU758
 3249 0004 0023     		movs	r3, #0
 3250 0006 C367     		str	r3, [r0, #124]
 159:alohal/cli/cli.cpp ****         // Refresh line opening for filesystem when exiting foreground application
 3251              		.loc 2 159 5 is_stmt 1 view .LVU759
 159:alohal/cli/cli.cpp ****         // Refresh line opening for filesystem when exiting foreground application
 3252              		.loc 2 159 9 is_stmt 0 view .LVU760
 3253 0008 C46C     		ldr	r4, [r0, #76]
 159:alohal/cli/cli.cpp ****         // Refresh line opening for filesystem when exiting foreground application
 3254              		.loc 2 159 5 view .LVU761
 3255 000a 002C     		cmp	r4, #0
 3256 000c 0FD0     		beq	.L106
 161:alohal/cli/cli.cpp ****     }
 3257              		.loc 2 161 9 is_stmt 1 view .LVU762
 3258              	.LVL316:
 3259              	.LBB5240:
 3260              	.LBI5240:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 3261              		.loc 6 138 7 view .LVU763
 3262              	.LBB5241:
 3263              	.LBI5241:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3264              		.loc 7 80 7 view .LVU764
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3265              		.loc 7 80 7 is_stmt 0 view .LVU765
 3266              	.LBE5241:
 3267              	.LBE5240:
 3268              	.LBB5242:
 3269              	.LBI5242:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 3270              		.loc 5 525 7 is_stmt 1 view .LVU766
 3271              	.LBB5243:
ARM GAS  /tmp/ccszdRNt.s 			page 231


 3272              	.LBB5244:
 3273              	.LBB5245:
 3274              	.LBI5245:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3275              		.loc 5 190 7 view .LVU767
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3276              		.loc 5 190 7 is_stmt 0 view .LVU768
 3277              	.LBE5245:
 3278              	.LBB5246:
 3279              	.LBI5246:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 3280              		.loc 5 156 2 is_stmt 1 view .LVU769
 3281              	.LBB5247:
 3282              	.LBB5248:
 3283              	.LBB5249:
 3284              	.LBI5249:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3285              		.loc 6 141 7 view .LVU770
 3286              	.LBB5250:
 3287              	.LBI5250:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3288              		.loc 7 83 7 view .LVU771
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3289              		.loc 7 83 7 is_stmt 0 view .LVU772
 3290              	.LBE5250:
 3291              	.LBE5249:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3292              		.loc 5 157 35 view .LVU773
 3293 000e 02AD     		add	r5, sp, #8
 3294              	.LVL317:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3295              		.loc 5 157 35 view .LVU774
 3296 0010 0095     		str	r5, [sp]
 3297              	.LVL318:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3298              		.loc 5 157 35 view .LVU775
 3299              	.LBE5248:
 3300              	.LBE5247:
 3301              	.LBE5246:
 3302              	.LBB5251:
 3303              	.LBI5251:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 3304              		.loc 4 329 7 is_stmt 1 view .LVU776
 3305              	.LBE5251:
 3306              	.LBE5244:
 3307              	.LBE5243:
 3308              	.LBE5242:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 3309              		.loc 4 332 2 view .LVU777
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 3310              		.loc 4 335 2 view .LVU778
 3311              	.LBB5258:
 3312              	.LBB5257:
 3313              	.LBB5256:
 3314              	.LBB5252:
 3315              	.LBI5252:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
ARM GAS  /tmp/ccszdRNt.s 			page 232


 3316              		.loc 5 263 9 view .LVU779
 3317              	.LBB5253:
 3318              	.LBB5254:
 3319              	.LBI5254:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 3320              		.loc 5 243 9 view .LVU780
 3321              	.LBB5255:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3322              		.loc 5 247 11 is_stmt 0 view .LVU781
 3323 0012 084A     		ldr	r2, .L109
 3324              	.LVL319:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3325              		.loc 5 247 11 view .LVU782
 3326 0014 511E     		subs	r1, r2, #1
 3327 0016 6846     		mov	r0, sp
 3328              	.LVL320:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3329              		.loc 5 247 11 view .LVU783
 3330 0018 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 3331              	.LVL321:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3332              		.loc 5 247 11 view .LVU784
 3333              	.LBE5255:
 3334              	.LBE5254:
 3335              	.LBE5253:
 3336              	.LBE5252:
 3337              	.LBE5256:
 3338              	.LBE5257:
 3339              	.LBE5258:
 161:alohal/cli/cli.cpp ****     }
 3340              		.loc 2 161 25 view .LVU785
 3341 001c 6946     		mov	r1, sp
 3342 001e 2000     		movs	r0, r4
 3343 0020 FFF7FEFF 		bl	_ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 3344              	.LVL322:
 3345              	.LBB5259:
 3346              	.LBI5259:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 3347              		.loc 5 657 7 is_stmt 1 view .LVU786
 3348              	.LBB5260:
 3349              	.LBI5260:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3350              		.loc 5 229 7 view .LVU787
 3351              	.LBB5261:
 3352              	.LBB5262:
 3353              	.LBI5262:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 3354              		.loc 5 221 7 view .LVU788
 3355              	.LBB5263:
 3356              	.LBI5263:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3357              		.loc 5 186 7 view .LVU789
 3358              	.LBB5264:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3359              		.loc 5 187 28 is_stmt 0 view .LVU790
 3360 0024 0098     		ldr	r0, [sp]
 3361              	.LVL323:
ARM GAS  /tmp/ccszdRNt.s 			page 233


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3362              		.loc 5 187 28 view .LVU791
 3363              	.LBE5264:
 3364              	.LBE5263:
 3365              	.LBB5265:
 3366              	.LBI5265:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3367              		.loc 5 200 7 is_stmt 1 view .LVU792
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3368              		.loc 5 200 7 is_stmt 0 view .LVU793
 3369              	.LBE5265:
 3370              	.LBE5262:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 3371              		.loc 5 231 2 view .LVU794
 3372 0026 A842     		cmp	r0, r5
 3373 0028 01D0     		beq	.L106
 3374              	.LVL324:
 3375              	.LBB5266:
 3376              	.LBI5266:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 3377              		.loc 5 236 7 is_stmt 1 view .LVU795
 3378              	.LBB5267:
 3379              	.LBB5268:
 3380              	.LBI5268:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 3381              		.loc 10 469 7 view .LVU796
 3382              	.LBB5269:
 3383              	.LBI5269:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 3384              		.loc 7 119 7 view .LVU797
 3385              	.LBB5270:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3386              		.loc 7 128 19 is_stmt 0 view .LVU798
 3387 002a FFF7FEFF 		bl	_ZdlPv
 3388              	.LVL325:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 3389              		.loc 7 128 19 view .LVU799
 3390              	.LBE5270:
 3391              	.LBE5269:
 3392              	.LBE5268:
 3393              	.LBE5267:
 3394              	.LBE5266:
 3395              	.LBE5261:
 3396              	.LBE5260:
 3397              	.LBB5271:
 3398              	.LBI5271:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3399              		.loc 5 150 14 is_stmt 1 view .LVU800
 3400              	.LBB5272:
 3401              	.LBI5272:
 3402              		.loc 6 153 7 view .LVU801
 3403              	.LBB5273:
 3404              	.LBI5273:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3405              		.loc 7 89 7 view .LVU802
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3406              		.loc 7 89 7 is_stmt 0 view .LVU803
ARM GAS  /tmp/ccszdRNt.s 			page 234


 3407              	.LBE5273:
 3408              	.LBE5272:
 3409              	.LBE5271:
 3410              	.LBE5259:
 3411              	.LBB5274:
 3412              	.LBI5274:
 3413              		.loc 6 153 7 is_stmt 1 view .LVU804
 3414              	.LBB5275:
 3415              	.LBI5275:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3416              		.loc 7 89 7 view .LVU805
 3417              	.L106:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3418              		.loc 7 89 7 is_stmt 0 view .LVU806
 3419              	.LBE5275:
 3420              	.LBE5274:
 163:alohal/cli/cli.cpp **** 
 3421              		.loc 2 163 1 view .LVU807
 3422 002e 07B0     		add	sp, sp, #28
 3423              		@ sp needed
 3424 0030 30BD     		pop	{r4, r5, pc}
 3425              	.L110:
 3426 0032 C046     		.align	2
 3427              	.L109:
 3428 0034 01000000 		.word	.LC12+1
 3429              		.cfi_endproc
 3430              	.LFE3867:
 3432              		.section	.rodata._ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11
 3433              		.align	2
 3434              	.LC15:
 3435 0000 65786974 		.ascii	"exit\000"
 3435      00
 3436              		.section	.text._ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11ch
 3437              		.align	1
 3438              		.global	_ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_trai
 3439              		.syntax unified
 3440              		.code	16
 3441              		.thumb_func
 3442              		.fpu softvfp
 3444              	_ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIc
 3445              	.LVL326:
 3446              	.LFB3868:
 165:alohal/cli/cli.cpp ****     if (args[1] == "exit") {
 3447              		.loc 2 165 62 is_stmt 1 view -0
 3448              		.cfi_startproc
 3449              		@ args = 0, pretend = 0, frame = 0
 3450              		@ frame_needed = 0, uses_anonymous_args = 0
 165:alohal/cli/cli.cpp ****     if (args[1] == "exit") {
 3451              		.loc 2 165 62 is_stmt 0 view .LVU809
 3452 0000 70B5     		push	{r4, r5, r6, lr}
 3453              	.LCFI21:
 3454              		.cfi_def_cfa_offset 16
 3455              		.cfi_offset 4, -16
 3456              		.cfi_offset 5, -12
 3457              		.cfi_offset 6, -8
 3458              		.cfi_offset 14, -4
 3459 0002 0500     		movs	r5, r0
ARM GAS  /tmp/ccszdRNt.s 			page 235


 3460 0004 0C00     		movs	r4, r1
 166:alohal/cli/cli.cpp ****         Stop_foreground_application();
 3461              		.loc 2 166 5 is_stmt 1 view .LVU810
 3462              	.LVL327:
 3463              	.LBB5276:
 3464              	.LBI5276:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 3465              		.loc 13 1040 7 view .LVU811
 3466              	.LBB5277:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 3467              		.loc 13 1043 39 is_stmt 0 view .LVU812
 3468 0006 0868     		ldr	r0, [r1]
 3469              	.LVL328:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 3470              		.loc 13 1043 39 view .LVU813
 3471 0008 1830     		adds	r0, r0, #24
 3472              	.LVL329:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 3473              		.loc 13 1043 39 view .LVU814
 3474              	.LBE5277:
 3475              	.LBE5276:
 3476              	.LBB5278:
 3477              	.LBI5278:
1255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
1259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
1260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s)
1264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_append(__s, __n);
1269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
1273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
1275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccszdRNt.s 			page 236


1289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
1296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
1304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
1307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
1309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
1315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         append(const _Tp& __svt)
1321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
1322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           __sv_type __sv = __svt;
1323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
1325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_append(__sv.data()
1339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a single character.
ARM GAS  /tmp/ccszdRNt.s 			page 237


1346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to append.
1347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       push_back(_CharT __c)
1350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
1352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str)
1365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->_M_assign(__str);
1367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
1368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
1374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(basic_string&& __str)
1381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this = std::move(__str);
1386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to use.
1392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
ARM GAS  /tmp/ccszdRNt.s 			page 238


1403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
1411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
1428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function returns.
1433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s)
1436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  traits_type::length(__s));
1440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
1446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character @a __c.
1450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
ARM GAS  /tmp/ccszdRNt.s 			page 239


1460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
1465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
1468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
1470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
1471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(begin(), end(), __first, __last); }
1472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
1482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	assign(const _Tp& __svt)
1493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
1512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 240


1517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *              insert at.
1522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *              insert at.
1565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __beg  Start of range.
1566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __end  End of range.
1567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
1571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
ARM GAS  /tmp/ccszdRNt.s 			page 241


1574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
1576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	iterator
1578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
1580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
1586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __beg  Start of range.
1590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __end  End of range.
1591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
1599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
1600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // See PR libstdc++/83328
1617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
1624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert value of a string.
1628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
1630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
ARM GAS  /tmp/ccszdRNt.s 			page 242


1631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a substring.
1645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
1646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
1647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C substring.
1670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
1672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
1681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 243


1688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C string.
1690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
1691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
1692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
1698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
1699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
1700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
1701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
1702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
1705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
1708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     traits_type::length(__s));
1709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
1714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
1722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
1723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
1724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
1729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
1730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      size_type(0), __n, __c); }
1731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert one character.
1734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
1735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
1736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
1737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
1740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
1741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
1742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
ARM GAS  /tmp/ccszdRNt.s 			page 244


1745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
1747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
1751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
1757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
1759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
1764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
1767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
1771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
1772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
1773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
1774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from.
1775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
1776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
1779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
1781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
1782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
1783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
1785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
1786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
1787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
1788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
1789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
1790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove characters.
1793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
1794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
1795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
1800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
1801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
ARM GAS  /tmp/ccszdRNt.s 			page 245


1802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
1803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
1804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
1808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
1810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == npos)
1811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (__n != 0)
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
1814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
1815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove one character.
1819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
1820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
1821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
1823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
1824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(__const_iterator __position)
1827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
1829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __position < end());
1830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __position - begin();
1831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
1832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
1833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove a range of characters.
1837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
1838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
1839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
1840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
1842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
1843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
1845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
1846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
1848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __last <= end());
1849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         const size_type __pos = __first - begin();
1850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__last == end())
1851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
1852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
1853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
1854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 246


1859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove the last character.
1860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The string must be non-empty.
1862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
1863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
1864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pop_back() noexcept
1865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
1868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
1870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
1875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
1876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
1879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
1882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
1883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
1885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
1886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  error is thrown.
1887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
1890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
1891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
1894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
1895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
1897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
1898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
1899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
1901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.size().
1902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
1905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
1906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
1907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
1908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
1909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
1912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
1913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
1914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
1915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
ARM GAS  /tmp/ccszdRNt.s 			page 247


1916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
1919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
1922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
1923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
1925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
1929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
1930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
1931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
1932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
1934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
1937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
1938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
1940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
1942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
1946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
1949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
1951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
1954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
1955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
1956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
1957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
1959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
1962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
1963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
1965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
1966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
1969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
1970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
1971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
1972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
ARM GAS  /tmp/ccszdRNt.s 			page 248


1973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
1975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
1978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
1979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
1980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
1981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
1983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
1984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
1985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
1986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
1987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
1988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
1989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
1990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
1991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
1992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
1993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String value to insert.
1994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
1997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
1998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
1999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string& __str)
2005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
2012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
2021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 249


2030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
2036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
2057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _CharT __c)
2068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
ARM GAS  /tmp/ccszdRNt.s 			page 250


2087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
2088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
2090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator,
2091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
2093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
2096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   && __i2 <= end());
2098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   std::__false_type());
2101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
2103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
2104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
2107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
2108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
2109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
2112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   && __i2 <= end());
2114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
2119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 251


2144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= end());
2161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
2180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
2185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 252


2201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
2219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           to replace at.
2227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           for the replace.
2229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
2231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
2242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Integer>
2243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
2244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
2249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
2250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    __false_type);
2253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     _CharT __c);
2257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 253


2258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 const size_type __len2);
2261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
2263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
2266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
2272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Number of characters actually copied
2273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.
2278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String to swap with.
2285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  time.
2288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
2290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // String operations:
2293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  happen.
2298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
2300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
2302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
2314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 254


2315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
2323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() noexcept
2324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
2325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
2326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       allocator_type
2331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_get_allocator(); }
2333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string.
2352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
2353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns npos.
2359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
ARM GAS  /tmp/ccszdRNt.s 			page 255


2372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C string.
2384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
2401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string.
2414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
2415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 256


2429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
2463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
2479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
ARM GAS  /tmp/ccszdRNt.s 			page 257


2486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
2511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
2535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
2538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
ARM GAS  /tmp/ccszdRNt.s 			page 258


2543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
2560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__c, __pos); }
2573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
2595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
ARM GAS  /tmp/ccszdRNt.s 			page 259


2600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
2619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
2640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
2644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
2645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
2653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
2656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
ARM GAS  /tmp/ccszdRNt.s 			page 260


2657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
2660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
2665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
2666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  was found.  If not found, returns npos.
2667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
2670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
2672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
2676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
2677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
2678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
2684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
2688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
2693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
2696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
2699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
2700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
2705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
2706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
2709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
ARM GAS  /tmp/ccszdRNt.s 			page 261


2714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
2715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
2719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
2723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a different character.
2727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
2728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
2730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
2732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
2733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
2734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
2737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
2741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
2742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
2747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
2752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
2754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
2758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
2760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
2766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
2770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 262


2771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
2775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
2778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
2781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
2782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
2783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
2784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
2787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
2788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
2790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
2791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
2795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
2796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
2798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
2801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
2805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a different character.
2809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
2810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
2812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
2814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
2815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
2816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
2818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
2819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Get a substring.
2823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
2824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
2825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  The new string.
2826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
ARM GAS  /tmp/ccszdRNt.s 			page 263


2828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
2829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
2830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
2831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
2832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
2835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
2836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
2837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string.
2840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
2844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
2845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
2846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
2847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
2848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
2849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const basic_string& __str) const
2854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
2855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
2856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
2857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
2858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
2860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!__r)
2861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
2862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __r;
2863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
2864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
2866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
2869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(const _Tp& __svt) const
2874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __size = this->size();
2878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
2879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
2880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
2882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (!__r)
2883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
2884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __r;
ARM GAS  /tmp/ccszdRNt.s 			page 264


2885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
2890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
2891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                against.
2893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
2898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
2902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
2906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
2907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
2908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
2909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                against.
2910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
2911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
2912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
2914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
2915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
2916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
2917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
2918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
2920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this)
2922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
2923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
2924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
2925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a string.
2928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
2930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
2934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
2935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
2936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
2937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
2938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
2939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
2940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling
2941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
ARM GAS  /tmp/ccszdRNt.s 			page 265


2942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
2943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the shorter one is ordered first.
2944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
2947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
2950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
2951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
2953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
2954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
2955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
2958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
2959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
2960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
2961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
2962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
2963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
2964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
2965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
2966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  calling
2967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
2968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
2969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
2970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
2973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
2974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a C string.
2977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
2978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
2979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
2980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
2981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
2982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
2983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
2984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
2985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
2986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
2987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  ordered first.
2988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
2989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
2990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
2991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
2992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
2993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 5 String::compare specification questionable
2994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
2995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
2996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
2997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
2998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
ARM GAS  /tmp/ccszdRNt.s 			page 266


2999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two string by calling
3009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
3012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
3013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
3014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
3015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two strings by calling
3033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
3036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  no special meaning.
3039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
3040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
3041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2) const;
3043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus > 201703L
3045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
ARM GAS  /tmp/ccszdRNt.s 			page 267


3056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++20
3069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     };
3073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else  // !_GLIBCXX_USE_CXX11_ABI
3075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // Reference-counted COW string implentation
3076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
3078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
3079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
3080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup strings
3082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @ingroup sequences
3083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _CharT  Type of character
3085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
3086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                   char_traits<_CharT>.
3087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
3088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
3090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
3091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
3092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
3093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
3094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @doctodo
3096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Documentation?  What's that?
3099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
3100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  A string looks like this:
3102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @code
3104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                                        [_Rep]
3105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *                                        _M_length
3106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
3107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
3108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
3109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @endcode
3110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
3112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
ARM GAS  /tmp/ccszdRNt.s 			page 268


3113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  pointer to the header.
3114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
3116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
3117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
3118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
3119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
3120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
3121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  object at the front.
3122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
3124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
3125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
3126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
3127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  string length.)
3128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
3130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
3131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
3132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
3133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
3134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
3135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
3136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  for a C++ string implementation.
3137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   */
3138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // 21.3  Template class basic_string
3139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     class basic_string
3141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
3142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
3143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Types:
3145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Traits					    traits_type;
3147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
3148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
3149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
3150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
3151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus < 201103L
3152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
3153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
3154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef value_type&				    reference;
3156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef const value_type&				    const_reference;
3157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
3159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
3160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
3161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
3162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****                                                             const_iterator;
3163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
3164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
3165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     protected:
3167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // type used for positions in insert, erase etc.
3168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef iterator __const_iterator;
3169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 269


3170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
3171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _Rep: string representation
3172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   Invariants:
3173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
3174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      must be kept null-terminated.
3175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
3176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
3177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   3. _M_refcount has three states:
3178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
3179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //       0: one reference, non-const.
3180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
3181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
3182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
3183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       //      empty string representation needs no constructor.
3184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Rep_base
3186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	size_type		_M_length;
3188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	size_type		_M_capacity;
3189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
3190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Rep : _Rep_base
3193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Types:
3195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
3196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// (Public) Data members:
3198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
3200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
3201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
3202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
3203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
3204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
3205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// look like this:
3206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
3207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Solving for m:
3208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
3209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
3210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	static const size_type	_S_max_size;
3211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	static const _CharT	_S_terminal;
3212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
3214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
3215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
3216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _Rep&
3218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
3219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { 
3220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
3221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
3222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  // be reasonably safe in this case.
3223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
3224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
3225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 270


3227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         bool
3228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
3229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
3230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if defined(__GTHREADS)
3231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // so we need to use an atomic load. However, _M_is_leaked
3233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // predicate does not change concurrently (i.e. the string is either
3234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // leaked or not), so a relaxed load is enough.
3235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_RELAXED) < 0;
3236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return this->_M_refcount < 0;
3238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
3240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         bool
3242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
3243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if defined(__GTHREADS)
3245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // _M_refcount is mutated concurrently by _M_refcopy/_M_dispose,
3246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // so we need to use an atomic load. Another thread can drop last
3247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // but one reference concurrently with this check, so we need this
3248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // load to be acquire to synchronize with release fetch_and_add in
3249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           // _M_dispose.
3250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return __atomic_load_n(&this->_M_refcount, __ATOMIC_ACQUIRE) > 0;
3251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return this->_M_refcount > 0;
3253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
3255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
3257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
3258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->_M_refcount = -1; }
3259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
3261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
3262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->_M_refcount = 0; }
3263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	void
3265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
3266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    {
3271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
3272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_M_length = __n;
3273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
3274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
3275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
3276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    }
3277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
3280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_refdata() throw()
3281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
3282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
ARM GAS  /tmp/ccszdRNt.s 			page 271


3284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
3285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
3287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
3288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// Create & Destroy
3291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	static _Rep*
3292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
3293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	void
3295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
3296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    {
3301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
3302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
3303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // Decrement of _M_refcount is acq_rel, because:
3304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // - all but last decrements need to release to synchronize with
3305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   the last decrement that will delete the object.
3306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // - the last decrement needs to acquire to synchronize with
3307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   all the previous decrements.
3308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               // - last but one decrement needs to release to synchronize with
3309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   the acquire load in _M_is_shared that will conclude that
3310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****               //   the object is not shared anymore.
3311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
3312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 							 -1) <= 0)
3313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		{
3314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
3315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _M_destroy(__a);
3316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		}
3317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    }
3318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}  // XXX MT
3319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	void
3321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
3322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
3324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_refcopy() throw()
3325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
3326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
3328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
3330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_refdata();
3331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}  // XXX MT
3332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT*
3334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
3335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
3338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
3339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccszdRNt.s 			page 272


3341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
3342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
3344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Data Members (public):
3348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
3349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // size that the allocator can hold.
3350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
3351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
3352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
3354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Data Members (private):
3355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
3356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
3358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
3359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
3360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
3362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
3363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
3364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _Rep*
3366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
3367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
3368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For the internal use we have functions similar to `begin'/`end'
3370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // but they do not call _M_leak.
3371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_ibegin() const _GLIBCXX_NOEXCEPT
3373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data()); }
3374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_iend() const _GLIBCXX_NOEXCEPT
3377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
3378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_leak()    // for use in begin() & non-const op[]
3381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!_M_rep()->_M_is_leaked())
3383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_leak_hard();
3384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
3388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__pos > this->size())
3390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
3391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
3392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __s, __pos, this->size());
3393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __pos;
3394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
ARM GAS  /tmp/ccszdRNt.s 			page 273


3398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
3400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
3401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
3404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
3406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
3408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
3409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // True if _Rep and source do not overlap.
3412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
3413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
3416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
3417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
3420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // traits_type::copy/move/assign.
3421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_copy(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
3425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
3428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_move(_CharT* __d, const _CharT* __s, size_type __n) _GLIBCXX_NOEXCEPT
3432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
3434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
3435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);	  
3437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_assign(_CharT* __d, size_type __n, _CharT __c) _GLIBCXX_NOEXCEPT
3441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n == 1)
3443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
3444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);	  
3446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
3449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
3450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Iterator>
3451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static void
3452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
3453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
3454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
ARM GAS  /tmp/ccszdRNt.s 			page 274


3455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
3456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
3457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
3460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
3464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
3466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
3469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static void
3472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
3473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_copy(__p, __k1, __k2 - __k1); }
3475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static int
3477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
3478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
3480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
3482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
3483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
3484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
3485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return int(__d);
3487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, size_type __len2);
3491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_leak_hard();
3494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static _Rep&
3496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_empty_rep() _GLIBCXX_NOEXCEPT
3497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _Rep::_S_empty_rep(); }
3498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
3501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
3502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename _Res>
3504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	using _If_sv = enable_if_t<
3505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
3506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
3507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
3508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _Res>;
3509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
3511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static __sv_type
ARM GAS  /tmp/ccszdRNt.s 			page 275


3512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
3513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __svt; }
3514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
3516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // allows to add an internal constructor that does not
3517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // participate in overload resolution when a string_view
3518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // is provided.
3519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       struct __sv_wrapper
3520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit __sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
3522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__sv_type _M_sv;
3523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       };
3524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
3527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          wrapper.
3528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
3529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
3532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
3533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
3534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Construct/copy/destroy:
3538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
3539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
3540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
3543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string()
3545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_S_empty_rep()._M_refdata(), _Alloc())
3548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_S_construct(size_type(), _CharT(), _Alloc()), _Alloc())
3550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { }
3552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
3555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       explicit
3557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _Alloc& __a);
3558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // NB: per LWG issue 42, semantics different from IS:
3560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a str.
3562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str);
3565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
3568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 276


3569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n);
3585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
3587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
3589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use.
3591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
3593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a);
3594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
3597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source character %array.
3598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
3599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
3602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  has no special meaning.
3603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
3605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc());
3606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
3608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source C string.
3609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc());
3612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
3614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters.
3615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to use.
3616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc());
3619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move construct string.
3623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
ARM GAS  /tmp/ccszdRNt.s 			page 277


3626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
3627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
3628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str)
3629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept // FIXME C++11: should always be noexcept.
3631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(std::move(__str._M_dataplus))
3633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_data(_S_empty_rep()._M_refdata());
3636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__str._M_data(_S_construct(size_type(), _CharT(), get_allocator()));
3638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
3643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
3644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc());
3647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
3649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(__str._M_rep()->_M_grab(__a, __str.get_allocator()), __a)
3650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { }
3651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
3653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(__str._M_data(), __a)
3654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__a == __str.get_allocator())
3656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
3657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_data(_S_empty_rep()._M_refdata());
3659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
3660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __str._M_data(_S_construct(size_type(), _CharT(), __a));
3661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
3663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
3664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_dataplus._M_p = _S_construct(__str.begin(), __str.end(), __a);
3665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
3667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
3670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __beg  Start of range.
3671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __end  End of range.
3672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
3675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
3676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc());
3677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
3681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
3682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
ARM GAS  /tmp/ccszdRNt.s 			page 278


3683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
3684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a   Allocator to use.
3685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
3688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
3689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
3690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
3693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
3694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
3695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
3697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	explicit
3698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
3699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
3700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
3701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Destroy the string instance.
3704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ~basic_string() _GLIBCXX_NOEXCEPT
3706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_rep()->_M_dispose(this->get_allocator()); }
3707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
3710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const basic_string& __str)
3714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__str); }
3715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
3718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
3719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(const _CharT* __s) 
3722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__s); }
3723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
3726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Source character.
3727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
3729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (*this)[0] == @a c.
3730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(_CharT __c) 
3733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
3734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(1, __c); 
3735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
3736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 279


3740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
3741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string.
3742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
3744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
3745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        **/
3746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(basic_string&& __str)
3748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value)
3749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// NB: DR 1204.
3751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->swap(__str);
3752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
3753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
3757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
3758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
3760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
3761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
3763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
3764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
3766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
3768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
3770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __svt An object convertible to  string_view.
3771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
3773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
3774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	operator=(const _Tp& __svt)
3775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return this->assign(__svt); }
3776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Convert to a string_view.
3779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return A string_view.
3780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator __sv_type() const noexcept
3782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(data(), size()); }
3783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
3784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Iterators:
3786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
3788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string.  Unshares the string.
3789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() // FIXME C++11: should be noexcept.
3792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
3794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data());
3795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 280


3797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
3800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
3803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data()); }
3804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
3807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.  Unshares the string.
3808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
3810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() // FIXME C++11: should be noexcept.
3811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
3813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + this->size());
3814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
3819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
3822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
3823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
3826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
3827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  order.  Unshares the string.
3828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
3830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() // FIXME C++11: should be noexcept.
3831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
3832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
3837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
3840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
3844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
3845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element order.  Unshares the string.
3846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reverse_iterator
3848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() // FIXME C++11: should be noexcept.
3849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
3850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
ARM GAS  /tmp/ccszdRNt.s 			page 281


3854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
3855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
3858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
3863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character in the %string.
3864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cbegin() const noexcept
3867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
3868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
3871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last character in the %string.
3872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_iterator
3874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       cend() const noexcept
3875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
3876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
3880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  reverse element order.
3881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crbegin() const noexcept
3884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
3885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
3888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
3889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is done in reverse element order.
3890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reverse_iterator
3892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       crend() const noexcept
3893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
3894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
3897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Capacity:
3898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
3900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
3902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
3905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  null-termination.
3906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
3908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_rep()->_M_length; }
3909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
ARM GAS  /tmp/ccszdRNt.s 			page 282


3911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
3913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _Rep::_S_max_size; }
3914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
3919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will %resize the %string to the specified
3921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
3922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
3923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
3924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
3927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
3930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
3931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
3933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
3934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
3935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
3936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  setting them to 0.
3937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       resize(size_type __n)
3940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
3941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
3943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
3944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       shrink_to_fit() _GLIBCXX_NOEXCEPT
3946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_exceptions
3948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (capacity() > size())
3949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
3950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    try
3951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { reserve(0); }
3952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    catch(...)
3953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      { }
3954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
3955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
3957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
3958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
3961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  before needing to allocate more memory.
3962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
3964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
3965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_rep()->_M_capacity; }
3966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 283


3968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
3969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *          characters.
3970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
3971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
3972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
3974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
3975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
3976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
3977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
3978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
3979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
3980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
3981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
3982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  data.
3983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reserve(size_type __res_arg = 0);
3986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
3987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
3988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Erases the string, making it empty.
3989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
3990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
3991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
3992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
3993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
3994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (_M_rep()->_M_is_shared())
3995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
3996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_rep()->_M_dispose(this->get_allocator());
3997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    _M_data(_S_empty_rep()._M_refdata());
3998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  }
3999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	else
4000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_rep()->_M_set_length_and_sharable(0);
4001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
4003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // PR 56166: this should not throw.
4004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       clear()
4006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_mutate(0, this->size(), 0); }
4007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
4008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
4011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  <code>*this == ""</code>.
4012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NODISCARD bool
4014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
4015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->size() == 0; }
4016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Element access:
4018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
4022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
ARM GAS  /tmp/ccszdRNt.s 			page 284


4025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)
4027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
4030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
4033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
4037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
4038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
4039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
4041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
4042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
4043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  see at().)  Unshares the string.
4044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
4046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator[](size_type __pos)
4047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
4049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	// and in C++11 mode.
4050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
4051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
4052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
4053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
4054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__pos];
4055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
4060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
4061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.
4066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n) const
4069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= this->size())
4071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
4074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
4075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
4076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
4080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n The index of the character to access.
4081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Read/write reference to the character.
ARM GAS  /tmp/ccszdRNt.s 			page 285


4082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
4083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
4085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
4086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  throws out_of_range if the check fails.  Success results in
4087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  unsharing the string.
4088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
4090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       at(size_type __n)
4091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__n >= size())
4093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
4094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
4095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "(which is %zu)"),
4096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   __n, this->size());
4097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
4098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data()[__n];
4099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
4104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
4105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
4107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front()
4108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
4111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
4115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
4116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       front() const noexcept
4119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](0);
4122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
4126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  element of the %string.
4127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       reference
4129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back()
4130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
4133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
4137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  last element of the %string.
4138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccszdRNt.s 			page 286


4139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const_reference
4140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       back() const noexcept
4141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return operator[](this->size() - 1);
4144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
4146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Modifiers:
4148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
4150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
4151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const basic_string& __str)
4155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
4156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
4159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(const _CharT* __s)
4164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__s); }
4165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a character.
4168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to append.
4169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(_CharT __c)
4173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
4174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->push_back(__c);
4175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
4176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
4182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
4186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
4192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
ARM GAS  /tmp/ccszdRNt.s 			page 287


4196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
4198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{ return this->append(__svt); }
4199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string to this string.
4203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
4204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str);
4208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a substring.
4211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to append.
4212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
4213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
4216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
4218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
4219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
4220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  remainder of @a __str is appended.
4221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos);
4224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C substring.
4227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s, size_type __n);
4233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a C string.
4236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to append.
4237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(const _CharT* __s)
4241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->append(__s, traits_type::length(__s));
4244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append multiple characters.
4248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to append.
4249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
4250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
ARM GAS  /tmp/ccszdRNt.s 			page 288


4253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(size_type __n, _CharT __c);
4256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
4260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
4261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
4265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
4266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters.
4270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
4275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
4277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
4278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
4279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(_M_iend(), _M_iend(), __first, __last); }
4280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a string_view.
4284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended.
4285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	append(const _Tp& __svt)
4290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->append(__sv.data(), __sv.size());
4293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
4297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The object convertible to string_view to be appended
4298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *               from.
4299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
4300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
4301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
4306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return append(__sv.data()
4309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
ARM GAS  /tmp/ccszdRNt.s 			page 289


4310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Append a single character.
4316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to append.
4317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       push_back(_CharT __c)
4320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
4321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __len = 1 + this->size();
4322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (__len > this->capacity() || _M_rep()->_M_is_shared())
4323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->reserve(__len);
4324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	traits_type::assign(_M_data()[this->size()], __c);
4325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_rep()->_M_set_length_and_sharable(__len);
4326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
4331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str);
4335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
4339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param  __str  Source string to use.
4340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
4343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
4344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(basic_string&& __str)
4347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(allocator_traits<_Alloc>::is_always_equal::value)
4348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->swap(__str);
4350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
4351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
4356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to use.
4357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
4358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
4361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
4363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
4364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is larger than the number of available characters in @a
4365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
4366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
ARM GAS  /tmp/ccszdRNt.s 			page 290


4367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
4369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__str._M_data()
4370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::assign"),
4371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
4372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a C substring.
4375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
4376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to use.
4377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
4380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
4381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
4382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n);
4385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
4388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to use.
4389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
4392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
4393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function returns.
4394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(const _CharT* __s)
4397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->assign(__s, traits_type::length(__s));
4400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
4404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
4405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to use.
4406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
4409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  character @a __c.
4410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
4413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
4414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
4417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
4418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
4419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
4422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
ARM GAS  /tmp/ccszdRNt.s 			page 291


4424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
4425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         assign(_InputIterator __first, _InputIterator __last)
4426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return this->replace(_M_ibegin(), _M_iend(), __first, __last); }
4427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
4431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
4432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
4436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->assign(__l.begin(), __l.size()); }
4437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a string_view.
4442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt The source object convertible to string_view.
4443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	assign(const _Tp& __svt)
4448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
4451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
4455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
4456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
4457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
4458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
4463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return assign(__sv.data()
4466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
4467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
4468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
4479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
4480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
ARM GAS  /tmp/ccszdRNt.s 			page 292


4481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
4486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
4487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a range of characters.
4490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __beg  Start of range.
4492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __end  End of range.
4493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
4496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
4501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         void
4502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
4503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
4504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
4508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
4509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
4510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
4514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	this->insert(__p - _M_ibegin(), __l.begin(), __l.size());
4517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert value of a string.
4522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
4524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
4528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
4529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
4534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->insert(__pos1, __str, size_type(0), __str.size()); }
4535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a substring.
ARM GAS  /tmp/ccszdRNt.s 			page 293


4538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Iterator referencing location in string to insert at.
4539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  The string to insert.
4540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
4541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
4545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
4546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
4548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
4549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
4550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
4551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
4552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
4556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
4557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->insert(__pos1, __str._M_data()
4558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    + __str._M_check(__pos2, "basic_string::insert"),
4559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    __str._M_limit(__pos2, __n)); }
4560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C substring.
4563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
4565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
4566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
4572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
4573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
4574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
4575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  doesn't change if an error is thrown.
4576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n);
4579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a C string.
4582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing location in string to insert at.
4583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  The C string to insert.
4584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
4590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
4591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
4592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
4593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
4594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
ARM GAS  /tmp/ccszdRNt.s 			page 294


4595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
4597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->insert(__pos, __s, traits_type::length(__s));
4600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert multiple characters.
4604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
4605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert
4606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
4610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
4613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
4614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
4615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
4620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
4621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      size_type(0), __n, __c); }
4622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert one character.
4625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
4626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  The character to insert.
4627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
4628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
4631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
4632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
4633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
4637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       insert(iterator __p, _CharT __c)
4638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= _M_ibegin() && __p <= _M_iend());
4640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __p - _M_ibegin();
4641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
4642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
4647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
4649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
4651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
ARM GAS  /tmp/ccszdRNt.s 			page 295


4652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
4655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
4656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
4659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Insert a string_view.
4663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string to insert at.
4664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert from.
4665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Iterator referencing position in string_view to insert
4666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from.
4667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
4668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
4671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
4672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         insert(size_type __pos1, const _Tp& __svt,
4673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
4674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
4675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
4676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0), __sv.data()
4677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
4678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
4679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
4681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove characters.
4684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
4685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
4686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
4691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
4692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
4693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
4694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
4695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
4699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { 
4700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_mutate(_M_check(__pos, "basic_string::erase"),
4701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  _M_limit(__pos, __n), size_type(0));
4702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
4703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove one character.
4707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
4708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
ARM GAS  /tmp/ccszdRNt.s 			page 296


4709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
4711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
4712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
4714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(iterator __position)
4715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= _M_ibegin()
4717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __position < _M_iend());
4718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __pos = __position - _M_ibegin();
4719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_mutate(__pos, size_type(1), size_type(0));
4720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_rep()->_M_set_leaked();
4721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
4722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove a range of characters.
4726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
4727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
4728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
4729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
4731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
4732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       iterator
4734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       erase(iterator __first, iterator __last);
4735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****  
4736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
4737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Remove the last character.
4739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The string must be non-empty.
4741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
4742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
4743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       pop_back() // FIXME C++11: should be noexcept.
4744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_assert(!empty());
4746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	erase(size() - 1, 1);
4747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
4749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
4754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
4755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
4757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.
4758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
4761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
4762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
4764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
4765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  error is thrown.
ARM GAS  /tmp/ccszdRNt.s 			page 297


4766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
4769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
4770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
4773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
4774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to insert.
4776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
4777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
4778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
4780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.size().
4781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
4784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
4785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
4786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
4787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
4788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
4791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
4792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
4793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
4794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
4795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
4798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
4801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
4802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
4804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
4808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
4809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
4810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
4811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
4813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
4816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2);
4817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
4820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to insert.
ARM GAS  /tmp/ccszdRNt.s 			page 298


4823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
4825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
4828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
4829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
4830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
4831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
4832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  change if an error is thrown.
4833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
4836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
4839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
4843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
4844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
4845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
4846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
4847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
4849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
4852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
4853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
4854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
4855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
4856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is thrown.
4857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
4860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
4861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
4862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
4865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String value to insert.
4868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
4873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
4874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
4875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const basic_string& __str)
4878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
4879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 299


4880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
4882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
4885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
4886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
4891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
4894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s, size_type __n)
4897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1, __s, __n);
4901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
4905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string value to insert.
4908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
4913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, const _CharT* __s)
4918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
4920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
4921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
4925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
4928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to insert.
4929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
4934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
4935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
4936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
ARM GAS  /tmp/ccszdRNt.s 			page 300


4937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, size_type __n, _CharT __c)
4939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __c);
4943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
4946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
4947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
4948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
4949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
4950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
4951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
4952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
4953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
4954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
4955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
4956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
4957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
4958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
4959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
4960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
4961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         basic_string&
4962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
4963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
4964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         {
4965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				   && __i2 <= _M_iend());
4967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
4968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
4969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
4970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
4971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
4973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
4974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, _CharT* __k1, _CharT* __k2)
4976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
4983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
4986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
4987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
4990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
4991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
4992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1, __k2 - __k1);
4993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 301


4994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
4995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
4996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2, iterator __k1, iterator __k2)
4997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
4998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
4999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
5006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       replace(iterator __i1, iterator __i2,
5007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
5008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(_M_ibegin() <= __i1 && __i1 <= __i2
5010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				 && __i2 <= _M_iend());
5011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
5012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->replace(__i1 - _M_ibegin(), __i2 - __i1,
5013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
5014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
5017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
5019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
5020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
5021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
5022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
5024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
5026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
5027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
5028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
5029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  thrown.
5030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string& replace(iterator __i1, iterator __i2,
5032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
5033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.end()); }
5034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++11
5035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  The position to replace at.
5040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
5041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
5042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
5047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
5050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 302


5051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
5055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
5056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
5058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
5059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
5063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         replace(size_type __pos1, size_type __n1, const _Tp& __svt,
5064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
5065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
5068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      __sv.data()
5069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
5070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
5071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
5075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
5076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           to replace at.
5077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
5078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           for the replace.
5079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
5080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Reference to this string.
5081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
5084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
5085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
5088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     private:
5092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Integer>
5093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
5094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _Integer __n,
5095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _Integer __val, __true_type)
5096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return _M_replace_aux(__i1 - _M_ibegin(), __i2 - __i1, __n, __val); }
5097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InputIterator>
5099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	basic_string&
5100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_replace_dispatch(iterator __i1, iterator __i2, _InputIterator __k1,
5101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _InputIterator __k2, __false_type);
5102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
5104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
5105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     _CharT __c);
5106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string&
ARM GAS  /tmp/ccszdRNt.s 			page 303


5108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _M_replace_safe(size_type __pos1, size_type __n1, const _CharT* __s,
5109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		      size_type __n2);
5110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _S_construct_aux is used to implement the 21.3.1 para 15 which
5112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // requires special behaviour if _InIter is an integral type
5113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InIterator>
5114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct_aux(_InIterator __beg, _InIterator __end,
5116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 const _Alloc& __a, __false_type)
5117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
5119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****           return _S_construct(__beg, __end, __a, _Tag());
5120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
5124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _Integer>
5125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct_aux(_Integer __beg, _Integer __end,
5127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 const _Alloc& __a, __true_type)
5128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         { return _S_construct_aux_2(static_cast<size_type>(__beg),
5129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				    __end, __a); }
5130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static _CharT*
5132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_construct_aux_2(size_type __req, _CharT __c, const _Alloc& __a)
5133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _S_construct(__req, __c, __a); }
5134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InIterator>
5136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a)
5138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InIterator>::__type _Integral;
5140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return _S_construct_aux(__beg, __end, __a, _Integral());
5141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         }
5142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
5144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _InIterator>
5145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****          _S_construct(_InIterator __beg, _InIterator __end, const _Alloc& __a,
5147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		      input_iterator_tag);
5148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
5150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
5151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<class _FwdIterator>
5152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         static _CharT*
5153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****         _S_construct(_FwdIterator __beg, _FwdIterator __end, const _Alloc& __a,
5154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     forward_iterator_tag);
5155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       static _CharT*
5157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _S_construct(size_type __req, _CharT __c, const _Alloc& __a);
5158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     public:
5160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Copy substring into C string.
5163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to copy value into.
5164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
ARM GAS  /tmp/ccszdRNt.s 			page 304


5165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
5166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Number of characters actually copied
5167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
5170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
5171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  out_of_range is thrown.
5172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
5175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Swap contents with another string.
5178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String to swap with.
5179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
5181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  time.
5182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       void
5184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       swap(basic_string& __s)
5185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(allocator_traits<_Alloc>::is_always_equal::value);
5186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // String operations:
5188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
5190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
5192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  happen.
5193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
5195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
5196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
5197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
5200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
5202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
5203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
5204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
5205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const _CharT*
5207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
5208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
5209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
5213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
5215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
5216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _CharT*
5218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       data() noexcept
5219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_M_leak();
5221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return _M_data();
ARM GAS  /tmp/ccszdRNt.s 			page 305


5222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
5224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
5227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       allocator_type
5229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
5230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
5231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C substring.
5234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
5237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
5240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
5246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string.
5250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
5251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
5255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
5256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns npos.
5257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
5260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
5262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a C string.
5265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
5270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
5271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
5278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 306


5279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
5282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
5287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
5292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a string_view.
5296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
5299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
5303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
5307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string.
5312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to locate.
5313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
5317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
5318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
5319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
5322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
5324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
5327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
5333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
5334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
5335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
ARM GAS  /tmp/ccszdRNt.s 			page 307


5336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
5339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a C string.
5343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to locate.
5344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
5345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
5346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
5348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
5349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
5350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
5356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
5360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
5370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
5374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
5375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
5377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
5381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
5385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of string.
5390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
ARM GAS  /tmp/ccszdRNt.s 			page 308


5393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
5401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
5403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
5406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
5415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
5418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
5422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
5423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
5427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
5432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
5436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character.
5440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
5445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
5446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
5447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
5449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
ARM GAS  /tmp/ccszdRNt.s 			page 309


5450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
5452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find(__c, __pos); }
5453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
5457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
5459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
5465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
5469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
5475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
5480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
5485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
5487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
5490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
5491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
5493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
5497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
5498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
5499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
5502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
5506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
ARM GAS  /tmp/ccszdRNt.s 			page 310


5507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
5511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
5512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
5516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
5520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character.
5524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to locate.
5525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
5529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
5533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
5536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
5537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
5541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to locate.
5543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
5549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
5553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
5558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5560:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5561:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5562:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
5563:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
ARM GAS  /tmp/ccszdRNt.s 			page 311


5564:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  was found.  If not found, returns npos.
5565:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5566:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5567:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
5568:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5569:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
5570:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5571:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5572:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
5573:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5574:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
5575:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
5576:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5577:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5578:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5579:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
5580:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
5581:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5582:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5583:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5584:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
5585:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
5586:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5587:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5588:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
5589:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5590:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5591:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5592:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5593:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
5594:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
5595:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
5596:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5597:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5598:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
5599:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5600:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5601:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5602:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
5603:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5604:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5605:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5606:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a different character.
5607:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
5608:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5609:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5610:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5611:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
5612:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
5613:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
5614:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5615:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5616:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
5617:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5618:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5619:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5620:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
ARM GAS  /tmp/ccszdRNt.s 			page 312


5621:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
5622:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5623:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
5624:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
5625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of first occurrence.
5626:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5627:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5628:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5629:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
5630:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5631:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5632:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5633:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
5634:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5636:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5637:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5638:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
5639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
5640:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5641:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5642:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5643:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5644:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
5645:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5646:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
5647:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5648:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5649:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
5650:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5651:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
5652:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5653:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5654:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
5655:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5656:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
5657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
5658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5659:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5660:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
5661:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
5662:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
5663:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns npos.
5664:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5666:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
5667:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
5668:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5669:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
5670:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
5671:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5672:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5673:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5674:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
5675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
5676:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
5677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  npos.
ARM GAS  /tmp/ccszdRNt.s 			page 313


5678:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5679:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5680:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
5681:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
5682:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5683:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
5684:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
5685:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5686:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5687:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5688:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a different character.
5689:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __c  Character to avoid.
5690:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5691:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5692:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5693:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
5694:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
5695:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  found.  If not found, returns npos.
5696:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5697:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       size_type
5698:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
5699:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
5700:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5701:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5702:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5703:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
5704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
5705:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                characters to avoid.
5706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
5707:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Index of last occurrence.
5708:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5709:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5710:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
5711:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
5712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5713:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5714:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5715:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
5716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5717:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5718:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5719:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Get a substring.
5721:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
5722:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
5723:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  The new string.
5724:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
5725:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5726:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
5727:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
5728:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
5729:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
5730:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5731:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string
5732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
5733:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
5734:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
ARM GAS  /tmp/ccszdRNt.s 			page 314


5735:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5736:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5737:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string.
5738:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5739:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5740:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5741:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
5742:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
5743:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
5744:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
5745:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
5746:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
5747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5748:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5749:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5751:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const basic_string& __str) const
5752:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
5753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __size = this->size();
5754:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __osize = __str.size();
5755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
5756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5757:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
5758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	if (!__r)
5759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
5760:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __r;
5761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
5762:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5763:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201703L
5764:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5765:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5766:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
5767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5768:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5769:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5770:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5771:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(const _Tp& __svt) const
5772:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5773:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5774:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   __sv_type __sv = __svt;
5775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __size = this->size();
5776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
5777:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
5778:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5779:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
5780:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  if (!__r)
5781:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
5782:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __r;
5783:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5784:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5785:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5786:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5787:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
5788:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
5789:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
5790:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                against.
5791:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
ARM GAS  /tmp/ccszdRNt.s 			page 315


5792:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5793:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5794:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5795:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
5796:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5797:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5798:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5799:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
5800:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5801:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5802:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5803:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a string_view.
5804:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
5805:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
5806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __svt   An object convertible to string_view to compare
5807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *                 against.
5808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
5809:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
5810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        */
5812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       template<typename _Tp>
5813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	_If_sv<_Tp, int>
5814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
5815:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
5816:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
5817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
5818:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __sv_type __sv = __svt;
5819:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  return __sv_type(*this)
5820:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
5821:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
5822:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++17
5823:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5824:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5825:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a string.
5826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
5828:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5830:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5831:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
5832:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
5833:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
5834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
5835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
5836:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
5837:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
5838:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings by calling
5839:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
5840:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
5841:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the shorter one is ordered first.
5842:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5843:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5844:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const;
5845:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5846:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5847:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
5848:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
ARM GAS  /tmp/ccszdRNt.s 			page 316


5849:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5850:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __str  String to compare against.
5851:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
5852:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
5853:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5854:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5855:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5856:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
5857:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
5858:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
5859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
5860:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
5861:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
5862:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
5863:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
5864:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  calling
5865:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
5866:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
5867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
5868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5869:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5870:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
5871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const;
5872:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5873:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5874:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare to a C string.
5875:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
5876:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5877:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5878:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
5879:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
5880:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
5881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
5882:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
5883:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
5884:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
5885:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  ordered first.
5886:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5887:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5888:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT;
5889:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5890:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
5891:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 5 String::compare specification questionable
5892:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5893:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
5894:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5895:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5896:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  C string to compare against.
5897:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5898:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5899:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5900:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
5901:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
5902:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
5903:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
5904:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
5905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
ARM GAS  /tmp/ccszdRNt.s 			page 317


5906:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two string by calling
5907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
5908:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5909:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
5910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5911:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5912:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const;
5913:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5914:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       /**
5915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
5916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
5917:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
5918:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __s  character %array to compare against.
5919:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
5920:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
5921:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5922:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
5923:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
5924:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
5925:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
5926:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
5927:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
5928:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
5929:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
5930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  function then compares the two strings by calling
5931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
5932:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
5933:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  one is ordered first.
5934:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *
5935:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
5936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****        *  no special meaning.
5937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       */
5938:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       int
5939:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
5940:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2) const;
5941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5942:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus > 201703L
5943:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5944:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5945:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5946:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5947:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
5949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5950:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5951:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5952:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
5953:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
5954:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5955:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5956:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
5957:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5958:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5959:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5960:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
5961:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5962:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 318


5963:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       bool
5964:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
5965:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
5966:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // C++20
5967:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5968:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** # ifdef _GLIBCXX_TM_TS_INTERNAL
5969:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend void
5970:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_C1_for_exceptions(void* that, const char* s,
5971:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					    void* exc);
5972:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend const char*
5973:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_c_str(const void *that);
5974:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend void
5975:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_D1(void *that);
5976:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       friend void
5977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       ::_txnal_cow_string_D1_commit(void *that);
5978:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** # endif
5979:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   };
5980:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif  // !_GLIBCXX_USE_CXX11_ABI
5981:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5982:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
5983:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
5984:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
5985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
5986:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5987:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
5988:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
5990:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
5991:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
5992:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
5993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
5994:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
5995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
5996:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
5997:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
5998:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
5999:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6000:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
6001:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
6002:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
6003:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
6004:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6005:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
6006:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
6007:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
6008:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
6009:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
6010:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6011:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator+
6012:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6013:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate two strings.
6014:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6015:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6016:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6017:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6018:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6019:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string<_CharT, _Traits, _Alloc>
ARM GAS  /tmp/ccszdRNt.s 			page 319


6020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6021:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6022:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6024:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __str.append(__rhs);
6025:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __str;
6026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6027:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6028:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6029:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
6030:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6031:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6032:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
6033:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6034:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6035:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6036:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6037:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6038:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6039:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate character and string.
6041:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6042:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6044:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6045:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6046:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_string<_CharT,_Traits,_Alloc>
6047:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs);
6048:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6049:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6050:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
6051:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6052:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6053:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6054:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6055:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6056:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6058:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6059:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6060:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       basic_string<_CharT, _Traits, _Alloc> __str(__lhs);
6061:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __str.append(__rhs);
6062:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __str;
6063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6064:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6065:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6066:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Concatenate string and character.
6067:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6068:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Last string.
6069:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
6070:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6071:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6072:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6073:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
6074:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6075:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc>	__string_type;
6076:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       typedef typename __string_type::size_type		__size_type;
ARM GAS  /tmp/ccszdRNt.s 			page 320


6077:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __string_type __str(__lhs);
6078:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       __str.append(__size_type(1), __rhs);
6079:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __str;
6080:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6081:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6082:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
6083:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6084:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6086:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6087:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6088:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6089:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6090:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6091:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6092:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6093:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6094:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6095:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6096:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6098:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6099:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const auto __size = __lhs.size() + __rhs.size();
6101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
6102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			   && __size <= __rhs.capacity());
6103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
6104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	            : std::move(__lhs.append(__rhs));
6105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(const _CharT* __lhs,
6110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
6112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(_CharT __lhs,
6116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
6117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
6118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
6124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
6127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
6128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      _CharT __rhs)
6129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
6130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
6131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator ==
6133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
ARM GAS  /tmp/ccszdRNt.s 			page 321


6134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
6135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
6145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT>
6147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline
6148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, bool>::__type
6149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const basic_string<_CharT>& __lhs,
6150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
6151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return (__lhs.size() == __rhs.size()
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      && !std::char_traits<_CharT>::compare(__lhs.data(), __rhs.data(),
6153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
6154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
6157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
6160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const _CharT* __lhs,
6164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) == 0; }
6166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
6169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
6172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
 3478              		.loc 5 6175 5 is_stmt 1 view .LVU815
 3479              	.LBB5279:
6176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) == 0; }
 3480              		.loc 5 6177 35 is_stmt 0 view .LVU816
 3481 000a 0749     		ldr	r1, .L115
 3482              	.LVL330:
 3483              		.loc 5 6177 35 view .LVU817
 3484 000c FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 3485              	.LVL331:
 3486              		.loc 5 6177 35 view .LVU818
 3487              	.LBE5279:
 3488              	.LBE5278:
 166:alohal/cli/cli.cpp ****         Stop_foreground_application();
 3489              		.loc 2 166 5 view .LVU819
ARM GAS  /tmp/ccszdRNt.s 			page 322


 3490 0010 0028     		cmp	r0, #0
 3491 0012 05D0     		beq	.L114
 169:alohal/cli/cli.cpp ****     }
 3492              		.loc 2 169 9 is_stmt 1 view .LVU820
 3493 0014 E86F     		ldr	r0, [r5, #124]
 169:alohal/cli/cli.cpp ****     }
 3494              		.loc 2 169 41 is_stmt 0 view .LVU821
 3495 0016 0368     		ldr	r3, [r0]
 3496 0018 9B68     		ldr	r3, [r3, #8]
 169:alohal/cli/cli.cpp ****     }
 3497              		.loc 2 169 36 view .LVU822
 3498 001a 2100     		movs	r1, r4
 3499 001c 9847     		blx	r3
 3500              	.LVL332:
 3501              	.L111:
 171:alohal/cli/cli.cpp **** 
 3502              		.loc 2 171 1 view .LVU823
 3503              		@ sp needed
 3504              	.LVL333:
 3505              	.LVL334:
 171:alohal/cli/cli.cpp **** 
 3506              		.loc 2 171 1 view .LVU824
 3507 001e 70BD     		pop	{r4, r5, r6, pc}
 3508              	.LVL335:
 3509              	.L114:
 167:alohal/cli/cli.cpp ****     } else {
 3510              		.loc 2 167 9 is_stmt 1 view .LVU825
 167:alohal/cli/cli.cpp ****     } else {
 3511              		.loc 2 167 36 is_stmt 0 view .LVU826
 3512 0020 2800     		movs	r0, r5
 3513 0022 FFF7FEFF 		bl	_ZN3CLI27Stop_foreground_applicationEv
 3514              	.LVL336:
 3515 0026 FAE7     		b	.L111
 3516              	.L116:
 3517              		.align	2
 3518              	.L115:
 3519 0028 00000000 		.word	.LC15
 3520              		.cfi_endproc
 3521              	.LFE3868:
 3523              		.section	.text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20f
 3524              		.align	1
 3525              		.weak	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_it
 3526              		.syntax unified
 3527              		.code	16
 3528              		.thumb_func
 3529              		.fpu softvfp
 3531              	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_
 3532              	.LVL337:
 3533              	.LFB4636:
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3534              		.loc 3 206 7 is_stmt 1 view -0
 3535              		.cfi_startproc
 3536              		@ args = 0, pretend = 0, frame = 8
 3537              		@ frame_needed = 0, uses_anonymous_args = 0
 206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       _M_construct(_InIterator __beg, _InIterator __end,
 3538              		.loc 3 206 7 is_stmt 0 view .LVU828
 3539 0000 70B5     		push	{r4, r5, r6, lr}
ARM GAS  /tmp/ccszdRNt.s 			page 323


 3540              	.LCFI22:
 3541              		.cfi_def_cfa_offset 16
 3542              		.cfi_offset 4, -16
 3543              		.cfi_offset 5, -12
 3544              		.cfi_offset 6, -8
 3545              		.cfi_offset 14, -4
 3546 0002 82B0     		sub	sp, sp, #8
 3547              	.LCFI23:
 3548              		.cfi_def_cfa_offset 24
 3549 0004 0500     		movs	r5, r0
 3550 0006 0E1E     		subs	r6, r1, #0
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3551              		.loc 3 211 42 view .LVU829
 3552 0008 0DD0     		beq	.L122
 3553              	.L118:
 3554              	.LVL338:
 3555              	.LBB5280:
 3556              	.LBI5280:
 3557              		.loc 16 138 5 is_stmt 1 view .LVU830
 3558              	.LBB5281:
 3559              	.LBI5281:
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****                random_access_iterator_tag)
 3560              		.loc 16 98 5 view .LVU831
 3561              	.LBB5282:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 3562              		.loc 16 104 23 is_stmt 0 view .LVU832
 3563 000a 941B     		subs	r4, r2, r6
 3564              	.LVL339:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_funcs.h ****     }
 3565              		.loc 16 104 23 view .LVU833
 3566              	.LBE5282:
 3567              	.LBE5281:
 3568              	.LBE5280:
 215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 3569              		.loc 3 215 12 view .LVU834
 3570 000c 0194     		str	r4, [sp, #4]
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  {
 3571              		.loc 3 217 2 view .LVU835
 3572 000e 0F2C     		cmp	r4, #15
 3573 0010 0ED8     		bhi	.L123
 3574              	.LVL340:
 3575              	.L119:
 3576              	.LBB5283:
 3577              	.LBI5283:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3578              		.loc 5 186 7 is_stmt 1 view .LVU836
 3579              	.LBB5284:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3580              		.loc 5 187 28 is_stmt 0 view .LVU837
 3581 0012 2868     		ldr	r0, [r5]
 3582              	.LVL341:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3583              		.loc 5 187 28 view .LVU838
 3584              	.LBE5284:
 3585              	.LBE5283:
 3586              	.LBB5285:
 3587              	.LBI5285:
ARM GAS  /tmp/ccszdRNt.s 			page 324


 392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 3588              		.loc 5 392 7 is_stmt 1 view .LVU839
 3589              	.LBB5286:
 3590              	.LBI5286:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3591              		.loc 5 346 7 view .LVU840
 3592              	.LBB5287:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 3593              		.loc 5 348 2 is_stmt 0 view .LVU841
 3594 0014 012C     		cmp	r4, #1
 3595 0016 14D0     		beq	.L124
 3596              	.LVL342:
 3597              	.LBB5288:
 3598              	.LBI5288:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 3599              		.loc 4 361 7 is_stmt 1 view .LVU842
 3600              	.LBB5289:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 3601              		.loc 4 363 2 view .LVU843
 3602 0018 002C     		cmp	r4, #0
 3603 001a 14D0     		beq	.L121
 3604              		.loc 4 365 2 view .LVU844
 3605              		.loc 4 365 49 is_stmt 0 view .LVU845
 3606 001c 2200     		movs	r2, r4
 3607 001e 3100     		movs	r1, r6
 3608 0020 FFF7FEFF 		bl	memcpy
 3609              	.LVL343:
 3610              		.loc 4 365 66 view .LVU846
 3611 0024 0FE0     		b	.L121
 3612              	.LVL344:
 3613              	.L122:
 3614              		.loc 4 365 66 view .LVU847
 3615              	.LBE5289:
 3616              	.LBE5288:
 3617              	.LBE5287:
 3618              	.LBE5286:
 3619              	.LBE5285:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	  std::__throw_logic_error(__N("basic_string::"
 3620              		.loc 3 211 42 discriminator 1 view .LVU848
 3621 0026 9142     		cmp	r1, r2
 3622 0028 EFD0     		beq	.L118
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3623              		.loc 3 212 28 view .LVU849
 3624 002a 0B48     		ldr	r0, .L125
 3625              	.LVL345:
 212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 				       "_M_construct null not valid"));
 3626              		.loc 3 212 28 view .LVU850
 3627 002c FFF7FEFF 		bl	_ZSt19__throw_logic_errorPKc
 3628              	.LVL346:
 3629              	.L123:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3630              		.loc 3 219 6 view .LVU851
 3631 0030 0022     		movs	r2, #0
 3632              	.LVL347:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3633              		.loc 3 219 6 view .LVU852
 3634 0032 01A9     		add	r1, sp, #4
ARM GAS  /tmp/ccszdRNt.s 			page 325


 3635              	.LVL348:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3636              		.loc 3 219 6 view .LVU853
 3637 0034 2800     		movs	r0, r5
 3638              	.LVL349:
 219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 	    _M_capacity(__dnew);
 3639              		.loc 3 219 6 view .LVU854
 3640 0036 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
 3641              	.LVL350:
 3642              	.LBB5294:
 3643              	.LBI5294:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 3644              		.loc 5 178 7 is_stmt 1 view .LVU855
 3645              	.LBB5295:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3646              		.loc 5 179 9 is_stmt 0 view .LVU856
 3647 003a 2860     		str	r0, [r5]
 3648              	.LVL351:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3649              		.loc 5 179 9 view .LVU857
 3650              	.LBE5295:
 3651              	.LBE5294:
 3652              	.LBB5296:
 3653              	.LBI5296:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 3654              		.loc 5 210 7 is_stmt 1 view .LVU858
 3655              	.LBB5297:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3656              		.loc 5 211 9 is_stmt 0 view .LVU859
 3657 003c 019B     		ldr	r3, [sp, #4]
 3658 003e AB60     		str	r3, [r5, #8]
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3659              		.loc 5 211 45 view .LVU860
 3660 0040 E7E7     		b	.L119
 3661              	.LVL352:
 3662              	.L124:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3663              		.loc 5 211 45 view .LVU861
 3664              	.LBE5297:
 3665              	.LBE5296:
 3666              	.LBB5298:
 3667              	.LBB5293:
 3668              	.LBB5292:
 3669              	.LBB5290:
 3670              	.LBI5290:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 3671              		.loc 4 299 7 is_stmt 1 view .LVU862
 3672              	.LBB5291:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3673              		.loc 4 300 9 view .LVU863
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3674              		.loc 4 300 16 is_stmt 0 view .LVU864
 3675 0042 3378     		ldrb	r3, [r6]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3676              		.loc 4 300 14 view .LVU865
 3677 0044 0370     		strb	r3, [r0]
 3678              	.LVL353:
ARM GAS  /tmp/ccszdRNt.s 			page 326


 3679              	.L121:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3680              		.loc 4 300 14 view .LVU866
 3681              	.LBE5291:
 3682              	.LBE5290:
 3683              	.LBE5292:
 3684              	.LBE5293:
 3685              	.LBE5298:
 232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc ****       }
 3686              		.loc 3 232 2 view .LVU867
 3687 0046 019A     		ldr	r2, [sp, #4]
 3688              	.LVL354:
 3689              	.LBB5299:
 3690              	.LBI5299:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3691              		.loc 5 214 7 is_stmt 1 view .LVU868
 3692              	.LBB5300:
 3693              	.LBB5301:
 3694              	.LBI5301:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 3695              		.loc 5 182 7 view .LVU869
 3696              	.LBB5302:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3697              		.loc 5 183 9 is_stmt 0 view .LVU870
 3698 0048 6A60     		str	r2, [r5, #4]
 3699              	.LVL355:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3700              		.loc 5 183 9 view .LVU871
 3701              	.LBE5302:
 3702              	.LBE5301:
 3703              	.LBB5303:
 3704              	.LBI5303:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3705              		.loc 5 186 7 is_stmt 1 view .LVU872
 3706              	.LBB5304:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3707              		.loc 5 187 28 is_stmt 0 view .LVU873
 3708 004a 2B68     		ldr	r3, [r5]
 3709              	.LVL356:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3710              		.loc 5 187 28 view .LVU874
 3711              	.LBE5304:
 3712              	.LBE5303:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 3713              		.loc 5 217 31 view .LVU875
 3714 004c 9B18     		adds	r3, r3, r2
 3715              	.LVL357:
 3716              	.LBB5305:
 3717              	.LBI5305:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 3718              		.loc 4 299 7 is_stmt 1 view .LVU876
 3719              	.LBB5306:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3720              		.loc 4 300 9 view .LVU877
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3721              		.loc 4 300 14 is_stmt 0 view .LVU878
 3722 004e 0022     		movs	r2, #0
ARM GAS  /tmp/ccszdRNt.s 			page 327


 3723              	.LVL358:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3724              		.loc 4 300 14 view .LVU879
 3725 0050 1A70     		strb	r2, [r3]
 3726              	.LVL359:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 3727              		.loc 4 300 14 view .LVU880
 3728              	.LBE5306:
 3729              	.LBE5305:
 3730              	.LBE5300:
 3731              	.LBE5299:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 3732              		.loc 3 233 7 view .LVU881
 3733 0052 02B0     		add	sp, sp, #8
 3734              		@ sp needed
 3735              	.LVL360:
 3736              	.LVL361:
 233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.tcc **** 
 3737              		.loc 3 233 7 view .LVU882
 3738 0054 70BD     		pop	{r4, r5, r6, pc}
 3739              	.L126:
 3740 0056 C046     		.align	2
 3741              	.L125:
 3742 0058 00000000 		.word	.LC5
 3743              		.cfi_endproc
 3744              	.LFE4636:
 3746              		.section	.text._ZN7CommandI3CLIE8Get_helpB5cxx11Ev,"axG",%progbits,_ZN7CommandI3CLIE8Get_helpB5cxx
 3747              		.align	1
 3748              		.weak	_ZN7CommandI3CLIE8Get_helpB5cxx11Ev
 3749              		.syntax unified
 3750              		.code	16
 3751              		.thumb_func
 3752              		.fpu softvfp
 3754              	_ZN7CommandI3CLIE8Get_helpB5cxx11Ev:
 3755              	.LVL362:
 3756              	.LFB4925:
 3757              		.file 19 "alohal/cli/command.hpp"
   1:alohal/cli/command.hpp **** #pragma once
   2:alohal/cli/command.hpp **** 
   3:alohal/cli/command.hpp **** #include <string>
   4:alohal/cli/command.hpp **** #include <vector>
   5:alohal/cli/command.hpp **** 
   6:alohal/cli/command.hpp **** using namespace std;
   7:alohal/cli/command.hpp **** 
   8:alohal/cli/command.hpp **** /**
   9:alohal/cli/command.hpp ****  * @brief   Base class that allows to store all derivated Commands in one vector
  10:alohal/cli/command.hpp ****  *          Event when Commands tamplates are based on different classes
  11:alohal/cli/command.hpp ****  */
  12:alohal/cli/command.hpp **** class Command_base
  13:alohal/cli/command.hpp **** {
  14:alohal/cli/command.hpp **** private:
  15:alohal/cli/command.hpp **** public:
  16:alohal/cli/command.hpp ****     Command_base() = default;
  17:alohal/cli/command.hpp ****     ~Command_base() = default;
  18:alohal/cli/command.hpp **** 
  19:alohal/cli/command.hpp ****     virtual const int Invoke(vector<string> &args) = 0;
  20:alohal/cli/command.hpp ****     virtual const string Get_command() = 0;
ARM GAS  /tmp/ccszdRNt.s 			page 328


  21:alohal/cli/command.hpp ****     virtual const string Get_help() = 0;
  22:alohal/cli/command.hpp **** };
  23:alohal/cli/command.hpp **** 
  24:alohal/cli/command.hpp **** /**
  25:alohal/cli/command.hpp ****  * @brief   Contain one command for CLI
  26:alohal/cli/command.hpp ****  *          Command can be executed from every place in CLi
  27:alohal/cli/command.hpp ****  */
  28:alohal/cli/command.hpp **** template<typename template_class>
  29:alohal/cli/command.hpp **** class Command : public Command_base{
  30:alohal/cli/command.hpp **** private:
  31:alohal/cli/command.hpp ****     /**
  32:alohal/cli/command.hpp ****      * @brief Name of command, like 'ls'
  33:alohal/cli/command.hpp ****      */
  34:alohal/cli/command.hpp ****     string command;
  35:alohal/cli/command.hpp **** 
  36:alohal/cli/command.hpp ****     /**
  37:alohal/cli/command.hpp ****      * @brief Helping string, description of command
  38:alohal/cli/command.hpp ****      */
  39:alohal/cli/command.hpp ****     string help;
  40:alohal/cli/command.hpp **** 
  41:alohal/cli/command.hpp ****     /**
  42:alohal/cli/command.hpp ****      * @brief Pointer to object which is responsible for command
  43:alohal/cli/command.hpp ****      */
  44:alohal/cli/command.hpp ****     template_class * object_ptr = nullptr;
  45:alohal/cli/command.hpp **** 
  46:alohal/cli/command.hpp ****     /**
  47:alohal/cli/command.hpp ****      * @brief Pointer to method of object, which is performing a command
  48:alohal/cli/command.hpp ****      */
  49:alohal/cli/command.hpp ****     int (template_class::*method_pointer)(vector<string> args);
  50:alohal/cli/command.hpp **** 
  51:alohal/cli/command.hpp ****     /**
  52:alohal/cli/command.hpp ****      * @brief Pointer to function which perform command
  53:alohal/cli/command.hpp ****      */
  54:alohal/cli/command.hpp ****     int (*function)(vector<string> args) = nullptr;
  55:alohal/cli/command.hpp **** 
  56:alohal/cli/command.hpp **** public:
  57:alohal/cli/command.hpp ****     /**
  58:alohal/cli/command.hpp ****      * @brief Construct a new Command object
  59:alohal/cli/command.hpp ****      */
  60:alohal/cli/command.hpp ****     Command() =default;
  61:alohal/cli/command.hpp ****     ~Command() =default;
  62:alohal/cli/command.hpp **** 
  63:alohal/cli/command.hpp ****     /**
  64:alohal/cli/command.hpp ****      * @brief   Construct a new Command object based on object and his method
  65:alohal/cli/command.hpp ****      *
  66:alohal/cli/command.hpp ****      * @param command   Name of command, like 'ls'
  67:alohal/cli/command.hpp ****      * @param help      Helping string, description of command
  68:alohal/cli/command.hpp ****      * @param object    Object which is responsible for command
  69:alohal/cli/command.hpp ****      * @param method    Method of object which is executed
  70:alohal/cli/command.hpp ****      */
  71:alohal/cli/command.hpp ****     Command(string command, string help, template_class *object, int (template_class::*method)(vect
  72:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
  73:alohal/cli/command.hpp ****     {}
  74:alohal/cli/command.hpp **** 
  75:alohal/cli/command.hpp ****     /**
  76:alohal/cli/command.hpp ****      * @brief   Construct a new Command object based on function
  77:alohal/cli/command.hpp ****      *
ARM GAS  /tmp/ccszdRNt.s 			page 329


  78:alohal/cli/command.hpp ****      * @param command   Name of command, like 'ls'
  79:alohal/cli/command.hpp ****      * @param help      Helping string, description of command
  80:alohal/cli/command.hpp ****      * @param function_pointer_set  Pointer to function which perform command
  81:alohal/cli/command.hpp ****      */
  82:alohal/cli/command.hpp ****     Command(string command, string help,int (*function_pointer_set)(vector<string> args))
  83:alohal/cli/command.hpp ****         :command(command), help(help), function(function)
  84:alohal/cli/command.hpp ****     {}
  85:alohal/cli/command.hpp **** 
  86:alohal/cli/command.hpp ****     /**
  87:alohal/cli/command.hpp ****      * @brief Invoke command encapsulated inside command
  88:alohal/cli/command.hpp ****      *
  89:alohal/cli/command.hpp ****      * @param args          Arguments of command
  90:alohal/cli/command.hpp ****      * @return const int    Return code of command
  91:alohal/cli/command.hpp ****      */
  92:alohal/cli/command.hpp ****     const int Invoke(vector<string> &args) final override {
  93:alohal/cli/command.hpp ****         if (function) {
  94:alohal/cli/command.hpp ****             return (*(function))(args);
  95:alohal/cli/command.hpp ****         } else if (object_ptr){
  96:alohal/cli/command.hpp ****             return (*object_ptr.*method_pointer)(args);
  97:alohal/cli/command.hpp ****         }
  98:alohal/cli/command.hpp ****         return -1;
  99:alohal/cli/command.hpp ****     }
 100:alohal/cli/command.hpp **** 
 101:alohal/cli/command.hpp ****     /**
 102:alohal/cli/command.hpp ****      * @brief Gettor for command name
 103:alohal/cli/command.hpp ****      *
 104:alohal/cli/command.hpp ****      * @return const string Command name
 105:alohal/cli/command.hpp ****      */
 106:alohal/cli/command.hpp ****     inline const string Get_command() final override {return command;};
 107:alohal/cli/command.hpp **** 
 108:alohal/cli/command.hpp ****     /**
 109:alohal/cli/command.hpp ****      * @brief Gettor for command help string
 110:alohal/cli/command.hpp ****      *
 111:alohal/cli/command.hpp ****      * @return const string Command help
 112:alohal/cli/command.hpp ****      */
 113:alohal/cli/command.hpp ****     inline const string Get_help() final override {return help;};
 3758              		.loc 19 113 25 is_stmt 1 view -0
 3759              		.cfi_startproc
 3760              		@ args = 0, pretend = 0, frame = 0
 3761              		@ frame_needed = 0, uses_anonymous_args = 0
 3762              		.loc 19 113 25 is_stmt 0 view .LVU884
 3763 0000 10B5     		push	{r4, lr}
 3764              	.LCFI24:
 3765              		.cfi_def_cfa_offset 8
 3766              		.cfi_offset 4, -8
 3767              		.cfi_offset 14, -4
 3768 0002 0400     		movs	r4, r0
 3769 0004 0B00     		movs	r3, r1
 3770              	.LVL363:
 3771              	.LBB5307:
 3772              	.LBI5307:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 3773              		.loc 5 448 7 is_stmt 1 view .LVU885
 3774              	.LBB5308:
 3775              	.LBB5309:
 3776              	.LBI5309:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 330


 3777              		.loc 5 190 7 view .LVU886
 3778              	.LBB5310:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3779              		.loc 5 193 51 is_stmt 0 view .LVU887
 3780 0006 0200     		movs	r2, r0
 3781 0008 0832     		adds	r2, r2, #8
 3782              	.LVL364:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3783              		.loc 5 193 51 view .LVU888
 3784              	.LBE5310:
 3785              	.LBE5309:
 3786              	.LBB5311:
 3787              	.LBI5311:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 3788              		.loc 5 290 7 is_stmt 1 view .LVU889
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 3789              		.loc 5 290 7 is_stmt 0 view .LVU890
 3790              	.LBE5311:
 3791              	.LBB5312:
 3792              	.LBI5312:
 3793              		.file 20 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Allocator traits -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Copyright (C) 2011-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** /** @file ext/alloc_traits.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  */
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #ifndef _EXT_ALLOC_TRAITS_H
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #define _EXT_ALLOC_TRAITS_H 1
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #pragma GCC system_header
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** # include <bits/move.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** # include <bits/alloc_traits.h>
ARM GAS  /tmp/ccszdRNt.s 			page 331


  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #else
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** # include <bits/allocator.h>  // for __alloc_swap
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #endif
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** {
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** /**
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  * @brief  Uniform interface to C++98 and C++11 allocators.
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****  * @ingroup allocators
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** */
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** template<typename _Alloc, typename = typename _Alloc::value_type>
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   struct __alloc_traits
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   : std::allocator_traits<_Alloc>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #endif
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   {
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef _Alloc allocator_type;
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** #if __cplusplus >= 201103L
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef std::allocator_traits<_Alloc>           _Base_type;
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::value_type         value_type;
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::pointer            pointer;
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::const_pointer      const_pointer;
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::size_type          size_type;
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef typename _Base_type::difference_type    difference_type;
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     // C++11 allocators do not define reference or const_reference
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef value_type&                             reference;
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     typedef const value_type&                       const_reference;
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::allocate;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::deallocate;
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::construct;
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::destroy;
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     using _Base_type::max_size;
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   private:
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     template<typename _Ptr>
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       using __is_custom_pointer
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 	= std::__and_<std::is_same<pointer, _Ptr>,
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 		      std::__not_<std::is_pointer<_Ptr>>>;
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****   public:
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     // overload construct for non-standard pointer types
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     template<typename _Ptr, typename... _Args>
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       construct(_Alloc& __a, _Ptr __p, _Args&&... __args)
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::construct(__a, std::__to_address(__p),
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 					      std::forward<_Args>(__args)...)))
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       {
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 	_Base_type::construct(__a, std::__to_address(__p),
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 			      std::forward<_Args>(__args)...);
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       }
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     // overload destroy for non-standard pointer types
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     template<typename _Ptr>
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       static typename std::enable_if<__is_custom_pointer<_Ptr>::value>::type
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       destroy(_Alloc& __a, _Ptr __p)
ARM GAS  /tmp/ccszdRNt.s 			page 332


  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       noexcept(noexcept(_Base_type::destroy(__a, std::__to_address(__p))))
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****       { _Base_type::destroy(__a, std::__to_address(__p)); }
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h **** 
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/alloc_traits.h ****     static _Alloc _S_select_on_copy(const _Alloc& __a)
 3794              		.loc 20 97 19 is_stmt 1 view .LVU891
 3795              	.LBB5313:
 3796              	.LBI5313:
 483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.construct(__p, std::forward<_Args>(__args)...); }
 485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Destroy an object of type @a _Up
 488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __p  Pointer to the object to destroy
 490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *
 491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  Calls @c __a.destroy(__p).
 492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       template<typename _Up>
 494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	static void
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	destroy(allocator_type& __a, _Up* __p)
 496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	{ __a.destroy(__p); }
 498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  The maximum supported allocation size
 501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __a  An allocator.
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __a.max_size()
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static size_type
 505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       max_size(const allocator_type& __a) noexcept
 506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.max_size(); }
 507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       /**
 509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @brief  Obtain an allocator to use when copying a container.
 510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @param  __rhs  An allocator.
 511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****        *  @return @c __rhs
 512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       */
 513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       static allocator_type
 514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       select_on_container_copy_construction(const allocator_type& __rhs)
 3797              		.loc 10 514 7 view .LVU892
 3798              	.LBB5314:
 3799              	.LBI5314:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3800              		.loc 6 141 7 view .LVU893
 3801              	.LBB5315:
 3802              	.LBI5315:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3803              		.loc 7 83 7 view .LVU894
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3804              		.loc 7 83 7 is_stmt 0 view .LVU895
 3805              	.LBE5315:
 3806              	.LBE5314:
 3807              	.LBE5313:
 3808              	.LBE5312:
 3809              	.LBB5316:
 3810              	.LBI5316:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
ARM GAS  /tmp/ccszdRNt.s 			page 333


 3811              		.loc 5 159 2 is_stmt 1 view .LVU896
 3812              	.LBB5317:
 3813              	.LBB5318:
 3814              	.LBI5318:
 3815              		.loc 8 99 5 view .LVU897
 3816              		.loc 8 99 5 is_stmt 0 view .LVU898
 3817              	.LBE5318:
 3818              	.LBB5319:
 3819              	.LBI5319:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3820              		.loc 6 141 7 is_stmt 1 view .LVU899
 3821              	.LBB5320:
 3822              	.LBI5320:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3823              		.loc 7 83 7 view .LVU900
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3824              		.loc 7 83 7 is_stmt 0 view .LVU901
 3825              	.LBE5320:
 3826              	.LBE5319:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 3827              		.loc 5 160 46 view .LVU902
 3828 000a 0260     		str	r2, [r0]
 3829              	.LVL365:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 3830              		.loc 5 160 46 view .LVU903
 3831              	.LBE5317:
 3832              	.LBE5316:
 3833              	.LBB5321:
 3834              	.LBI5321:
 3835              		.loc 6 153 7 is_stmt 1 view .LVU904
 3836              	.LBB5322:
 3837              	.LBI5322:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3838              		.loc 7 89 7 view .LVU905
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3839              		.loc 7 89 7 is_stmt 0 view .LVU906
 3840              	.LBE5322:
 3841              	.LBE5321:
 3842              	.LBB5323:
 3843              	.LBI5323:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3844              		.loc 5 186 7 is_stmt 1 view .LVU907
 3845              	.LBB5324:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3846              		.loc 5 187 28 is_stmt 0 view .LVU908
 3847 000c C969     		ldr	r1, [r1, #28]
 3848              	.LVL366:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3849              		.loc 5 187 28 view .LVU909
 3850              	.LBE5324:
 3851              	.LBE5323:
 3852              	.LBB5325:
 3853              	.LBI5325:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3854              		.loc 5 186 7 is_stmt 1 view .LVU910
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3855              		.loc 5 186 7 is_stmt 0 view .LVU911
ARM GAS  /tmp/ccszdRNt.s 			page 334


 3856              	.LBE5325:
 3857              	.LBB5326:
 3858              	.LBI5326:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 3859              		.loc 5 936 7 is_stmt 1 view .LVU912
 3860              	.LBB5327:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3861              		.loc 5 937 16 is_stmt 0 view .LVU913
 3862 000e 1A6A     		ldr	r2, [r3, #32]
 3863              	.LVL367:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3864              		.loc 5 937 16 view .LVU914
 3865              	.LBE5327:
 3866              	.LBE5326:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3867              		.loc 5 451 9 view .LVU915
 3868 0010 8A18     		adds	r2, r1, r2
 3869              	.LVL368:
 3870              	.LBB5328:
 3871              	.LBI5328:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 3872              		.loc 5 263 9 is_stmt 1 view .LVU916
 3873              	.LBB5329:
 3874              	.LBB5330:
 3875              	.LBI5330:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 3876              		.loc 5 243 9 view .LVU917
 3877              	.LBB5331:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3878              		.loc 5 247 11 is_stmt 0 view .LVU918
 3879 0012 0023     		movs	r3, #0
 3880              	.LVL369:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3881              		.loc 5 247 11 view .LVU919
 3882 0014 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 3883              	.LVL370:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 3884              		.loc 5 247 11 view .LVU920
 3885              	.LBE5331:
 3886              	.LBE5330:
 3887              	.LBE5329:
 3888              	.LBE5328:
 3889              	.LBE5308:
 3890              	.LBE5307:
 3891              		.loc 19 113 64 view .LVU921
 3892 0018 2000     		movs	r0, r4
 3893              		@ sp needed
 3894              	.LVL371:
 3895              		.loc 19 113 64 view .LVU922
 3896 001a 10BD     		pop	{r4, pc}
 3897              		.cfi_endproc
 3898              	.LFE4925:
 3900              		.section	.text._ZN7CommandI3CLIE11Get_commandB5cxx11Ev,"axG",%progbits,_ZN7CommandI3CLIE11Get_comm
 3901              		.align	1
 3902              		.weak	_ZN7CommandI3CLIE11Get_commandB5cxx11Ev
 3903              		.syntax unified
 3904              		.code	16
ARM GAS  /tmp/ccszdRNt.s 			page 335


 3905              		.thumb_func
 3906              		.fpu softvfp
 3908              	_ZN7CommandI3CLIE11Get_commandB5cxx11Ev:
 3909              	.LVL372:
 3910              	.LFB4924:
 106:alohal/cli/command.hpp **** 
 3911              		.loc 19 106 25 is_stmt 1 view -0
 3912              		.cfi_startproc
 3913              		@ args = 0, pretend = 0, frame = 0
 3914              		@ frame_needed = 0, uses_anonymous_args = 0
 106:alohal/cli/command.hpp **** 
 3915              		.loc 19 106 25 is_stmt 0 view .LVU924
 3916 0000 10B5     		push	{r4, lr}
 3917              	.LCFI25:
 3918              		.cfi_def_cfa_offset 8
 3919              		.cfi_offset 4, -8
 3920              		.cfi_offset 14, -4
 3921 0002 0400     		movs	r4, r0
 3922 0004 0B00     		movs	r3, r1
 3923              	.LVL373:
 3924              	.LBB5332:
 3925              	.LBI5332:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 3926              		.loc 5 448 7 is_stmt 1 view .LVU925
 3927              	.LBB5333:
 3928              	.LBB5334:
 3929              	.LBI5334:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 3930              		.loc 5 190 7 view .LVU926
 3931              	.LBB5335:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3932              		.loc 5 193 51 is_stmt 0 view .LVU927
 3933 0006 0200     		movs	r2, r0
 3934 0008 0832     		adds	r2, r2, #8
 3935              	.LVL374:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 3936              		.loc 5 193 51 view .LVU928
 3937              	.LBE5335:
 3938              	.LBE5334:
 3939              	.LBB5336:
 3940              	.LBI5336:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 3941              		.loc 5 290 7 is_stmt 1 view .LVU929
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 3942              		.loc 5 290 7 is_stmt 0 view .LVU930
 3943              	.LBE5336:
 3944              	.LBB5337:
 3945              	.LBI5337:
 3946              		.loc 20 97 19 is_stmt 1 view .LVU931
 3947              	.LBB5338:
 3948              	.LBI5338:
 3949              		.loc 10 514 7 view .LVU932
 3950              	.LBB5339:
 3951              	.LBI5339:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3952              		.loc 6 141 7 view .LVU933
 3953              	.LBB5340:
ARM GAS  /tmp/ccszdRNt.s 			page 336


 3954              	.LBI5340:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3955              		.loc 7 83 7 view .LVU934
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3956              		.loc 7 83 7 is_stmt 0 view .LVU935
 3957              	.LBE5340:
 3958              	.LBE5339:
 3959              	.LBE5338:
 3960              	.LBE5337:
 3961              	.LBB5341:
 3962              	.LBI5341:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 3963              		.loc 5 159 2 is_stmt 1 view .LVU936
 3964              	.LBB5342:
 3965              	.LBB5343:
 3966              	.LBI5343:
 3967              		.loc 8 99 5 view .LVU937
 3968              		.loc 8 99 5 is_stmt 0 view .LVU938
 3969              	.LBE5343:
 3970              	.LBB5344:
 3971              	.LBI5344:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 3972              		.loc 6 141 7 is_stmt 1 view .LVU939
 3973              	.LBB5345:
 3974              	.LBI5345:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3975              		.loc 7 83 7 view .LVU940
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3976              		.loc 7 83 7 is_stmt 0 view .LVU941
 3977              	.LBE5345:
 3978              	.LBE5344:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 3979              		.loc 5 160 46 view .LVU942
 3980 000a 0260     		str	r2, [r0]
 3981              	.LVL375:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 3982              		.loc 5 160 46 view .LVU943
 3983              	.LBE5342:
 3984              	.LBE5341:
 3985              	.LBB5346:
 3986              	.LBI5346:
 3987              		.loc 6 153 7 is_stmt 1 view .LVU944
 3988              	.LBB5347:
 3989              	.LBI5347:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3990              		.loc 7 89 7 view .LVU945
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 3991              		.loc 7 89 7 is_stmt 0 view .LVU946
 3992              	.LBE5347:
 3993              	.LBE5346:
 3994              	.LBB5348:
 3995              	.LBI5348:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 3996              		.loc 5 186 7 is_stmt 1 view .LVU947
 3997              	.LBB5349:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 3998              		.loc 5 187 28 is_stmt 0 view .LVU948
ARM GAS  /tmp/ccszdRNt.s 			page 337


 3999 000c 4968     		ldr	r1, [r1, #4]
 4000              	.LVL376:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4001              		.loc 5 187 28 view .LVU949
 4002              	.LBE5349:
 4003              	.LBE5348:
 4004              	.LBB5350:
 4005              	.LBI5350:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4006              		.loc 5 186 7 is_stmt 1 view .LVU950
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4007              		.loc 5 186 7 is_stmt 0 view .LVU951
 4008              	.LBE5350:
 4009              	.LBB5351:
 4010              	.LBI5351:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4011              		.loc 5 936 7 is_stmt 1 view .LVU952
 4012              	.LBB5352:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4013              		.loc 5 937 16 is_stmt 0 view .LVU953
 4014 000e 9A68     		ldr	r2, [r3, #8]
 4015              	.LVL377:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4016              		.loc 5 937 16 view .LVU954
 4017              	.LBE5352:
 4018              	.LBE5351:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4019              		.loc 5 451 9 view .LVU955
 4020 0010 8A18     		adds	r2, r1, r2
 4021              	.LVL378:
 4022              	.LBB5353:
 4023              	.LBI5353:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 4024              		.loc 5 263 9 is_stmt 1 view .LVU956
 4025              	.LBB5354:
 4026              	.LBB5355:
 4027              	.LBI5355:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 4028              		.loc 5 243 9 view .LVU957
 4029              	.LBB5356:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4030              		.loc 5 247 11 is_stmt 0 view .LVU958
 4031 0012 0023     		movs	r3, #0
 4032              	.LVL379:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4033              		.loc 5 247 11 view .LVU959
 4034 0014 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 4035              	.LVL380:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4036              		.loc 5 247 11 view .LVU960
 4037              	.LBE5356:
 4038              	.LBE5355:
 4039              	.LBE5354:
 4040              	.LBE5353:
 4041              	.LBE5333:
 4042              	.LBE5332:
 106:alohal/cli/command.hpp **** 
ARM GAS  /tmp/ccszdRNt.s 			page 338


 4043              		.loc 19 106 70 view .LVU961
 4044 0018 2000     		movs	r0, r4
 4045              		@ sp needed
 4046              	.LVL381:
 106:alohal/cli/command.hpp **** 
 4047              		.loc 19 106 70 view .LVU962
 4048 001a 10BD     		pop	{r4, pc}
 4049              		.cfi_endproc
 4050              	.LFE4924:
 4052              		.section	.text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_,"axG",
 4053              		.align	1
 4054              		.weak	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
 4055              		.syntax unified
 4056              		.code	16
 4057              		.thumb_func
 4058              		.fpu softvfp
 4060              	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_:
 4061              	.LVL382:
 4062              	.LFB4203:
6020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 4063              		.loc 5 6020 5 is_stmt 1 view -0
 4064              		.cfi_startproc
 4065              		@ args = 0, pretend = 0, frame = 0
 4066              		@ frame_needed = 0, uses_anonymous_args = 0
6020:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 4067              		.loc 5 6020 5 is_stmt 0 view .LVU964
 4068 0000 70B5     		push	{r4, r5, r6, lr}
 4069              	.LCFI26:
 4070              		.cfi_def_cfa_offset 16
 4071              		.cfi_offset 4, -16
 4072              		.cfi_offset 5, -12
 4073              		.cfi_offset 6, -8
 4074              		.cfi_offset 14, -4
 4075 0002 0400     		movs	r4, r0
 4076 0004 0B00     		movs	r3, r1
 4077 0006 1500     		movs	r5, r2
 4078              	.LVL383:
 4079              	.LBB5357:
 4080              	.LBI5357:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 4081              		.loc 5 448 7 is_stmt 1 view .LVU965
 4082              	.LBB5358:
 4083              	.LBB5359:
 4084              	.LBI5359:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4085              		.loc 5 190 7 view .LVU966
 4086              	.LBB5360:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4087              		.loc 5 193 51 is_stmt 0 view .LVU967
 4088 0008 0200     		movs	r2, r0
 4089              	.LVL384:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4090              		.loc 5 193 51 view .LVU968
 4091 000a 0832     		adds	r2, r2, #8
 4092              	.LVL385:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4093              		.loc 5 193 51 view .LVU969
ARM GAS  /tmp/ccszdRNt.s 			page 339


 4094              	.LBE5360:
 4095              	.LBE5359:
 4096              	.LBB5361:
 4097              	.LBI5361:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4098              		.loc 5 290 7 is_stmt 1 view .LVU970
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4099              		.loc 5 290 7 is_stmt 0 view .LVU971
 4100              	.LBE5361:
 4101              	.LBB5362:
 4102              	.LBI5362:
 4103              		.loc 20 97 19 is_stmt 1 view .LVU972
 4104              	.LBB5363:
 4105              	.LBI5363:
 4106              		.loc 10 514 7 view .LVU973
 4107              	.LBB5364:
 4108              	.LBI5364:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4109              		.loc 6 141 7 view .LVU974
 4110              	.LBB5365:
 4111              	.LBI5365:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4112              		.loc 7 83 7 view .LVU975
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4113              		.loc 7 83 7 is_stmt 0 view .LVU976
 4114              	.LBE5365:
 4115              	.LBE5364:
 4116              	.LBE5363:
 4117              	.LBE5362:
 4118              	.LBB5366:
 4119              	.LBI5366:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 4120              		.loc 5 159 2 is_stmt 1 view .LVU977
 4121              	.LBB5367:
 4122              	.LBB5368:
 4123              	.LBI5368:
 4124              		.loc 8 99 5 view .LVU978
 4125              		.loc 8 99 5 is_stmt 0 view .LVU979
 4126              	.LBE5368:
 4127              	.LBB5369:
 4128              	.LBI5369:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4129              		.loc 6 141 7 is_stmt 1 view .LVU980
 4130              	.LBB5370:
 4131              	.LBI5370:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4132              		.loc 7 83 7 view .LVU981
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4133              		.loc 7 83 7 is_stmt 0 view .LVU982
 4134              	.LBE5370:
 4135              	.LBE5369:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4136              		.loc 5 160 46 view .LVU983
 4137 000c 0260     		str	r2, [r0]
 4138              	.LVL386:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4139              		.loc 5 160 46 view .LVU984
ARM GAS  /tmp/ccszdRNt.s 			page 340


 4140              	.LBE5367:
 4141              	.LBE5366:
 4142              	.LBB5371:
 4143              	.LBI5371:
 4144              		.loc 6 153 7 is_stmt 1 view .LVU985
 4145              	.LBB5372:
 4146              	.LBI5372:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4147              		.loc 7 89 7 view .LVU986
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4148              		.loc 7 89 7 is_stmt 0 view .LVU987
 4149              	.LBE5372:
 4150              	.LBE5371:
 4151              	.LBB5373:
 4152              	.LBI5373:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4153              		.loc 5 186 7 is_stmt 1 view .LVU988
 4154              	.LBB5374:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4155              		.loc 5 187 28 is_stmt 0 view .LVU989
 4156 000e 0968     		ldr	r1, [r1]
 4157              	.LVL387:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4158              		.loc 5 187 28 view .LVU990
 4159              	.LBE5374:
 4160              	.LBE5373:
 4161              	.LBB5375:
 4162              	.LBI5375:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4163              		.loc 5 186 7 is_stmt 1 view .LVU991
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4164              		.loc 5 186 7 is_stmt 0 view .LVU992
 4165              	.LBE5375:
 4166              	.LBB5376:
 4167              	.LBI5376:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4168              		.loc 5 936 7 is_stmt 1 view .LVU993
 4169              	.LBB5377:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4170              		.loc 5 937 16 is_stmt 0 view .LVU994
 4171 0010 5A68     		ldr	r2, [r3, #4]
 4172              	.LVL388:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4173              		.loc 5 937 16 view .LVU995
 4174              	.LBE5377:
 4175              	.LBE5376:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4176              		.loc 5 451 9 view .LVU996
 4177 0012 8A18     		adds	r2, r1, r2
 4178              	.LVL389:
 4179              	.LBB5378:
 4180              	.LBI5378:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 4181              		.loc 5 263 9 is_stmt 1 view .LVU997
 4182              	.LBB5379:
 4183              	.LBB5380:
 4184              	.LBI5380:
ARM GAS  /tmp/ccszdRNt.s 			page 341


 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 4185              		.loc 5 243 9 view .LVU998
 4186              	.LBB5381:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4187              		.loc 5 247 11 is_stmt 0 view .LVU999
 4188 0014 0023     		movs	r3, #0
 4189              	.LVL390:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4190              		.loc 5 247 11 view .LVU1000
 4191 0016 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 4192              	.LVL391:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 4193              		.loc 5 247 11 view .LVU1001
 4194              	.LBE5381:
 4195              	.LBE5380:
 4196              	.LBE5379:
 4197              	.LBE5378:
 4198              	.LBE5358:
 4199              	.LBE5357:
 4200              	.LBB5382:
 4201              	.LBI5382:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 4202              		.loc 5 1221 7 is_stmt 1 view .LVU1002
 4203              	.LBB5383:
 4204              	.LBB5384:
 4205              	.LBI5384:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4206              		.loc 5 186 7 view .LVU1003
 4207              	.LBB5385:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4208              		.loc 5 187 28 is_stmt 0 view .LVU1004
 4209 001a 2968     		ldr	r1, [r5]
 4210              	.LVL392:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4211              		.loc 5 187 28 view .LVU1005
 4212              	.LBE5385:
 4213              	.LBE5384:
 4214              	.LBB5386:
 4215              	.LBI5386:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4216              		.loc 5 930 7 is_stmt 1 view .LVU1006
 4217              	.LBB5387:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4218              		.loc 5 931 16 is_stmt 0 view .LVU1007
 4219 001c 6A68     		ldr	r2, [r5, #4]
 4220              	.LVL393:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4221              		.loc 5 931 16 view .LVU1008
 4222              	.LBE5387:
 4223              	.LBE5386:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4224              		.loc 5 1222 55 view .LVU1009
 4225 001e 2000     		movs	r0, r4
 4226 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 4227              	.LVL394:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4228              		.loc 5 1222 55 view .LVU1010
ARM GAS  /tmp/ccszdRNt.s 			page 342


 4229              	.LBE5383:
 4230              	.LBE5382:
6026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4231              		.loc 5 6026 5 view .LVU1011
 4232 0024 2000     		movs	r0, r4
 4233              		@ sp needed
 4234              	.LVL395:
 4235              	.LVL396:
6026:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4236              		.loc 5 6026 5 view .LVU1012
 4237 0026 70BD     		pop	{r4, r5, r6, pc}
 4238              		.cfi_endproc
 4239              	.LFE4203:
 4241              		.section	.text._ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"ax",%progbit
 4242              		.align	1
 4243              		.global	_ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 4244              		.syntax unified
 4245              		.code	16
 4246              		.thumb_func
 4247              		.fpu softvfp
 4249              	_ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 4250              	.LVL397:
 4251              	.LFB3871:
 194:alohal/cli/cli.cpp ****     actual_line = line_prefix + line_opening + text;
 4252              		.loc 2 194 31 is_stmt 1 view -0
 4253              		.cfi_startproc
 4254              		@ args = 0, pretend = 0, frame = 56
 4255              		@ frame_needed = 0, uses_anonymous_args = 0
 194:alohal/cli/cli.cpp ****     actual_line = line_prefix + line_opening + text;
 4256              		.loc 2 194 31 is_stmt 0 view .LVU1014
 4257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4258              	.LCFI27:
 4259              		.cfi_def_cfa_offset 20
 4260              		.cfi_offset 4, -20
 4261              		.cfi_offset 5, -16
 4262              		.cfi_offset 6, -12
 4263              		.cfi_offset 7, -8
 4264              		.cfi_offset 14, -4
 4265 0002 8FB0     		sub	sp, sp, #60
 4266              	.LCFI28:
 4267              		.cfi_def_cfa_offset 80
 4268 0004 0400     		movs	r4, r0
 4269 0006 0D00     		movs	r5, r1
 195:alohal/cli/cli.cpp ****     return actual_line.size();
 4270              		.loc 2 195 5 is_stmt 1 view .LVU1015
 195:alohal/cli/cli.cpp ****     return actual_line.size();
 4271              		.loc 2 195 19 is_stmt 0 view .LVU1016
 4272 0008 0100     		movs	r1, r0
 4273              	.LVL398:
 195:alohal/cli/cli.cpp ****     return actual_line.size();
 4274              		.loc 2 195 19 view .LVU1017
 4275 000a 5031     		adds	r1, r1, #80
 195:alohal/cli/cli.cpp ****     return actual_line.size();
 4276              		.loc 2 195 33 view .LVU1018
 4277 000c 0200     		movs	r2, r0
 4278 000e 3432     		adds	r2, r2, #52
 195:alohal/cli/cli.cpp ****     return actual_line.size();
ARM GAS  /tmp/ccszdRNt.s 			page 343


 4279              		.loc 2 195 31 view .LVU1019
 4280 0010 08A8     		add	r0, sp, #32
 4281              	.LVL399:
 195:alohal/cli/cli.cpp ****     return actual_line.size();
 4282              		.loc 2 195 31 view .LVU1020
 4283 0012 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
 4284              	.LVL400:
 4285              	.LBB5519:
 4286              	.LBI5519:
6085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 4287              		.loc 5 6085 5 is_stmt 1 view .LVU1021
 4288              	.LBB5520:
 4289              	.LBI5520:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 4290              		.loc 5 1221 7 view .LVU1022
 4291              	.LBB5521:
 4292              	.LBB5522:
 4293              	.LBI5522:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4294              		.loc 5 186 7 view .LVU1023
 4295              	.LBB5523:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4296              		.loc 5 187 28 is_stmt 0 view .LVU1024
 4297 0016 2968     		ldr	r1, [r5]
 4298              	.LVL401:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4299              		.loc 5 187 28 view .LVU1025
 4300              	.LBE5523:
 4301              	.LBE5522:
 4302              	.LBB5524:
 4303              	.LBI5524:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4304              		.loc 5 930 7 is_stmt 1 view .LVU1026
 4305              	.LBB5525:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4306              		.loc 5 931 16 is_stmt 0 view .LVU1027
 4307 0018 6A68     		ldr	r2, [r5, #4]
 4308              	.LVL402:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4309              		.loc 5 931 16 view .LVU1028
 4310              	.LBE5525:
 4311              	.LBE5524:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4312              		.loc 5 1222 55 view .LVU1029
 4313 001a 08A8     		add	r0, sp, #32
 4314              	.LVL403:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4315              		.loc 5 1222 55 view .LVU1030
 4316 001c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 4317              	.LVL404:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4318              		.loc 5 1222 55 view .LVU1031
 4319 0020 0500     		movs	r5, r0
 4320              	.LVL405:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4321              		.loc 5 1222 55 view .LVU1032
 4322              	.LBE5521:
ARM GAS  /tmp/ccszdRNt.s 			page 344


 4323              	.LBE5520:
 4324              	.LBB5526:
 4325              	.LBI5526:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 4326              		.loc 5 552 7 is_stmt 1 view .LVU1033
 4327              	.LBB5527:
 4328              	.LBB5528:
 4329              	.LBB5529:
 4330              	.LBI5529:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4331              		.loc 5 190 7 view .LVU1034
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4332              		.loc 5 190 7 is_stmt 0 view .LVU1035
 4333              	.LBE5529:
 4334              	.LBB5530:
 4335              	.LBI5530:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4336              		.loc 5 286 7 is_stmt 1 view .LVU1036
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 4337              		.loc 5 286 7 is_stmt 0 view .LVU1037
 4338              	.LBE5530:
 4339              	.LBB5531:
 4340              	.LBI5531:
 4341              		.loc 8 99 5 is_stmt 1 view .LVU1038
 4342              		.loc 8 99 5 is_stmt 0 view .LVU1039
 4343              	.LBE5531:
 4344              	.LBB5532:
 4345              	.LBI5532:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 4346              		.loc 5 159 2 is_stmt 1 view .LVU1040
 4347              	.LBB5533:
 4348              	.LBB5534:
 4349              	.LBB5535:
 4350              	.LBI5535:
 4351              		.loc 8 99 5 view .LVU1041
 4352              		.loc 8 99 5 is_stmt 0 view .LVU1042
 4353              	.LBE5535:
 4354              	.LBB5536:
 4355              	.LBI5536:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 4356              		.loc 6 141 7 is_stmt 1 view .LVU1043
 4357              	.LBB5537:
 4358              	.LBI5537:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4359              		.loc 7 83 7 view .LVU1044
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4360              		.loc 7 83 7 is_stmt 0 view .LVU1045
 4361              	.LBE5537:
 4362              	.LBE5536:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4363              		.loc 5 160 46 view .LVU1046
 4364 0022 04AB     		add	r3, sp, #16
 4365              	.LVL406:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4366              		.loc 5 160 46 view .LVU1047
 4367 0024 0293     		str	r3, [sp, #8]
 4368              	.LVL407:
ARM GAS  /tmp/ccszdRNt.s 			page 345


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 4369              		.loc 5 160 46 view .LVU1048
 4370              	.LBE5534:
 4371              	.LBE5533:
 4372              	.LBE5532:
 4373              	.LBB5538:
 4374              	.LBI5538:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4375              		.loc 5 221 7 is_stmt 1 view .LVU1049
 4376              	.LBB5539:
 4377              	.LBI5539:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4378              		.loc 5 186 7 view .LVU1050
 4379              	.LBB5540:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4380              		.loc 5 187 28 is_stmt 0 view .LVU1051
 4381 0026 0368     		ldr	r3, [r0]
 4382              	.LVL408:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4383              		.loc 5 187 28 view .LVU1052
 4384              	.LBE5540:
 4385              	.LBE5539:
 4386              	.LBB5541:
 4387              	.LBI5541:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4388              		.loc 5 200 7 is_stmt 1 view .LVU1053
 4389              	.LBB5542:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4390              		.loc 5 203 57 is_stmt 0 view .LVU1054
 4391 0028 0700     		movs	r7, r0
 4392 002a 0837     		adds	r7, r7, #8
 4393              	.LVL409:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4394              		.loc 5 203 57 view .LVU1055
 4395              	.LBE5542:
 4396              	.LBE5541:
 4397              	.LBE5538:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 4398              		.loc 5 555 2 view .LVU1056
 4399 002c BB42     		cmp	r3, r7
 4400 002e 30D0     		beq	.L142
 4401              	.LVL410:
 4402              	.LBB5543:
 4403              	.LBI5543:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4404              		.loc 5 186 7 is_stmt 1 view .LVU1057
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4405              		.loc 5 186 7 is_stmt 0 view .LVU1058
 4406              	.LBE5543:
 4407              	.LBB5544:
 4408              	.LBI5544:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4409              		.loc 5 178 7 is_stmt 1 view .LVU1059
 4410              	.LBB5545:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4411              		.loc 5 179 9 is_stmt 0 view .LVU1060
 4412 0030 0293     		str	r3, [sp, #8]
ARM GAS  /tmp/ccszdRNt.s 			page 346


 4413              	.LVL411:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4414              		.loc 5 179 9 view .LVU1061
 4415              	.LBE5545:
 4416              	.LBE5544:
 4417              	.LBB5546:
 4418              	.LBI5546:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 4419              		.loc 5 210 7 is_stmt 1 view .LVU1062
 4420              	.LBB5547:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4421              		.loc 5 211 9 is_stmt 0 view .LVU1063
 4422 0032 8368     		ldr	r3, [r0, #8]
 4423 0034 0493     		str	r3, [sp, #16]
 4424              	.LVL412:
 4425              	.L132:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4426              		.loc 5 211 9 view .LVU1064
 4427              	.LBE5547:
 4428              	.LBE5546:
 4429              	.LBB5548:
 4430              	.LBI5548:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4431              		.loc 5 936 7 is_stmt 1 view .LVU1065
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4432              		.loc 5 936 7 is_stmt 0 view .LVU1066
 4433              	.LBE5548:
 4434              	.LBB5549:
 4435              	.LBI5549:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4436              		.loc 5 182 7 is_stmt 1 view .LVU1067
 4437              	.LBB5550:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4438              		.loc 5 183 9 is_stmt 0 view .LVU1068
 4439 0036 6B68     		ldr	r3, [r5, #4]
 4440 0038 0393     		str	r3, [sp, #12]
 4441              	.LVL413:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4442              		.loc 5 183 9 view .LVU1069
 4443              	.LBE5550:
 4444              	.LBE5549:
 4445              	.LBB5551:
 4446              	.LBI5551:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4447              		.loc 5 190 7 is_stmt 1 view .LVU1070
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4448              		.loc 5 190 7 is_stmt 0 view .LVU1071
 4449              	.LBE5551:
 4450              	.LBB5552:
 4451              	.LBI5552:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4452              		.loc 5 178 7 is_stmt 1 view .LVU1072
 4453              	.LBB5553:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4454              		.loc 5 179 9 is_stmt 0 view .LVU1073
 4455 003a 2F60     		str	r7, [r5]
 4456              	.LVL414:
ARM GAS  /tmp/ccszdRNt.s 			page 347


 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4457              		.loc 5 179 9 view .LVU1074
 4458              	.LBE5553:
 4459              	.LBE5552:
 4460              	.LBB5554:
 4461              	.LBI5554:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4462              		.loc 5 214 7 is_stmt 1 view .LVU1075
 4463              	.LBB5555:
 4464              	.LBI5555:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4465              		.loc 5 182 7 view .LVU1076
 4466              	.LBB5556:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4467              		.loc 5 183 9 is_stmt 0 view .LVU1077
 4468 003c 0023     		movs	r3, #0
 4469 003e 6B60     		str	r3, [r5, #4]
 4470              	.LVL415:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4471              		.loc 5 183 9 view .LVU1078
 4472              	.LBE5556:
 4473              	.LBE5555:
 4474              	.LBB5557:
 4475              	.LBI5557:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 4476              		.loc 4 299 7 is_stmt 1 view .LVU1079
 4477              	.LBB5558:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4478              		.loc 4 300 9 view .LVU1080
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4479              		.loc 4 300 14 is_stmt 0 view .LVU1081
 4480 0040 2B72     		strb	r3, [r5, #8]
 4481              	.LVL416:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4482              		.loc 4 300 14 view .LVU1082
 4483              	.LBE5558:
 4484              	.LBE5557:
 4485              	.LBE5554:
 4486              	.LBE5528:
 4487              	.LBE5527:
 4488              	.LBE5526:
 4489              	.LBE5519:
 195:alohal/cli/cli.cpp ****     return actual_line.size();
 4490              		.loc 2 195 48 view .LVU1083
 4491 0042 251D     		adds	r5, r4, #4
 4492              	.LVL417:
 4493              	.LBB5564:
 4494              	.LBI5564:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 4495              		.loc 5 732 7 is_stmt 1 view .LVU1084
 4496              	.LBB5565:
 4497              	.LBI5565:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4498              		.loc 5 221 7 view .LVU1085
 4499              	.LBB5566:
 4500              	.LBI5566:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 348


 4501              		.loc 5 186 7 view .LVU1086
 4502              	.LBB5567:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4503              		.loc 5 187 28 is_stmt 0 view .LVU1087
 4504 0044 6068     		ldr	r0, [r4, #4]
 4505              	.LVL418:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4506              		.loc 5 187 28 view .LVU1088
 4507              	.LBE5567:
 4508              	.LBE5566:
 4509              	.LBB5568:
 4510              	.LBI5568:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4511              		.loc 5 200 7 is_stmt 1 view .LVU1089
 4512              	.LBB5569:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4513              		.loc 5 203 57 is_stmt 0 view .LVU1090
 4514 0046 2200     		movs	r2, r4
 4515 0048 0C32     		adds	r2, r2, #12
 4516              	.LVL419:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 4517              		.loc 5 203 57 view .LVU1091
 4518              	.LBE5569:
 4519              	.LBE5568:
 4520              	.LBE5565:
 4521              	.LBB5570:
 4522              	.LBB5571:
 4523              	.LBI5571:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4524              		.loc 5 221 7 is_stmt 1 view .LVU1092
 4525              	.LBB5572:
 4526              	.LBI5572:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4527              		.loc 5 186 7 view .LVU1093
 4528              	.LBB5573:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4529              		.loc 5 187 28 is_stmt 0 view .LVU1094
 4530 004a 0299     		ldr	r1, [sp, #8]
 4531              	.LVL420:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4532              		.loc 5 187 28 view .LVU1095
 4533              	.LBE5573:
 4534              	.LBE5572:
 4535              	.LBB5574:
 4536              	.LBI5574:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4537              		.loc 5 200 7 is_stmt 1 view .LVU1096
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4538              		.loc 5 200 7 is_stmt 0 view .LVU1097
 4539              	.LBE5574:
 4540              	.LBE5571:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 4541              		.loc 5 747 2 view .LVU1098
 4542 004c 04AB     		add	r3, sp, #16
 4543 004e 9942     		cmp	r1, r3
 4544 0050 25D0     		beq	.L143
 4545              	.LVL421:
ARM GAS  /tmp/ccszdRNt.s 			page 349


 4546              	.LBB5575:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 4547              		.loc 5 761 6 view .LVU1099
 4548 0052 9042     		cmp	r0, r2
 4549 0054 35D0     		beq	.L141
 4550              	.LVL422:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 4551              		.loc 5 767 7 view .LVU1100
 4552 0056 AE68     		ldr	r6, [r5, #8]
 4553              	.LVL423:
 4554              	.L137:
 4555              	.LBB5576:
 4556              	.LBI5576:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4557              		.loc 5 178 7 is_stmt 1 view .LVU1101
 4558              	.LBB5577:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4559              		.loc 5 179 9 is_stmt 0 view .LVU1102
 4560 0058 6160     		str	r1, [r4, #4]
 4561              	.LVL424:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4562              		.loc 5 179 9 view .LVU1103
 4563              	.LBE5577:
 4564              	.LBE5576:
 4565              	.LBB5578:
 4566              	.LBI5578:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4567              		.loc 5 936 7 is_stmt 1 view .LVU1104
 4568              	.LBB5579:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4569              		.loc 5 937 16 is_stmt 0 view .LVU1105
 4570 005a 039B     		ldr	r3, [sp, #12]
 4571 005c 0193     		str	r3, [sp, #4]
 4572              	.LVL425:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4573              		.loc 5 937 16 view .LVU1106
 4574              	.LBE5579:
 4575              	.LBE5578:
 4576              	.LBB5580:
 4577              	.LBI5580:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4578              		.loc 5 182 7 is_stmt 1 view .LVU1107
 4579              	.LBB5581:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4580              		.loc 5 183 9 is_stmt 0 view .LVU1108
 4581 005e 6B60     		str	r3, [r5, #4]
 4582              	.LVL426:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4583              		.loc 5 183 9 view .LVU1109
 4584              	.LBE5581:
 4585              	.LBE5580:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 4586              		.loc 5 775 6 view .LVU1110
 4587 0060 049B     		ldr	r3, [sp, #16]
 4588 0062 AB60     		str	r3, [r5, #8]
 4589              	.LVL427:
 4590              	.LBB5582:
ARM GAS  /tmp/ccszdRNt.s 			page 350


 4591              	.LBI5582:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 4592              		.loc 5 210 7 is_stmt 1 view .LVU1111
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 4593              		.loc 5 210 7 is_stmt 0 view .LVU1112
 4594              	.LBE5582:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 4595              		.loc 5 776 6 view .LVU1113
 4596 0064 0028     		cmp	r0, #0
 4597 0066 2ED0     		beq	.L138
 4598              	.LVL428:
 4599              	.LBB5583:
 4600              	.LBI5583:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4601              		.loc 5 178 7 is_stmt 1 view .LVU1114
 4602              	.LBB5584:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4603              		.loc 5 179 9 is_stmt 0 view .LVU1115
 4604 0068 0290     		str	r0, [sp, #8]
 4605              	.LVL429:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4606              		.loc 5 179 9 view .LVU1116
 4607              	.LBE5584:
 4608              	.LBE5583:
 4609              	.LBB5585:
 4610              	.LBI5585:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 4611              		.loc 5 210 7 is_stmt 1 view .LVU1117
 4612              	.LBB5586:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4613              		.loc 5 211 9 is_stmt 0 view .LVU1118
 4614 006a 0496     		str	r6, [sp, #16]
 4615              	.LVL430:
 4616              	.L136:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4617              		.loc 5 211 9 view .LVU1119
 4618              	.LBE5586:
 4619              	.LBE5585:
 4620              	.LBE5575:
 4621              	.LBE5570:
 4622              	.LBB5609:
 4623              	.LBI5609:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 4624              		.loc 5 1023 7 is_stmt 1 view .LVU1120
 4625              	.LBB5610:
 4626              	.LBI5610:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4627              		.loc 5 214 7 view .LVU1121
 4628              	.LBB5611:
 4629              	.LBI5611:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4630              		.loc 5 182 7 view .LVU1122
 4631              	.LBB5612:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4632              		.loc 5 183 9 is_stmt 0 view .LVU1123
 4633 006c 0023     		movs	r3, #0
 4634 006e 0393     		str	r3, [sp, #12]
ARM GAS  /tmp/ccszdRNt.s 			page 351


 4635              	.LVL431:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4636              		.loc 5 183 9 view .LVU1124
 4637              	.LBE5612:
 4638              	.LBE5611:
 4639              	.LBB5613:
 4640              	.LBI5613:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4641              		.loc 5 186 7 is_stmt 1 view .LVU1125
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4642              		.loc 5 186 7 is_stmt 0 view .LVU1126
 4643              	.LBE5613:
 4644              	.LBB5614:
 4645              	.LBI5614:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 4646              		.loc 4 299 7 is_stmt 1 view .LVU1127
 4647              	.LBB5615:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4648              		.loc 4 300 9 view .LVU1128
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4649              		.loc 4 300 14 is_stmt 0 view .LVU1129
 4650 0070 029A     		ldr	r2, [sp, #8]
 4651 0072 1370     		strb	r3, [r2]
 4652              	.LVL432:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4653              		.loc 4 300 14 view .LVU1130
 4654              	.LBE5615:
 4655              	.LBE5614:
 4656              	.LBE5610:
 4657              	.LBE5609:
 4658              	.LBE5564:
 4659              	.LBB5617:
 4660              	.LBI5617:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 4661              		.loc 5 657 7 is_stmt 1 view .LVU1131
 4662              	.LBB5618:
 4663              	.LBI5618:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4664              		.loc 5 229 7 view .LVU1132
 4665              	.LBB5619:
 4666              	.LBB5620:
 4667              	.LBI5620:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4668              		.loc 5 221 7 view .LVU1133
 4669              	.LBB5621:
 4670              	.LBI5621:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4671              		.loc 5 186 7 view .LVU1134
 4672              	.LBB5622:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4673              		.loc 5 187 28 is_stmt 0 view .LVU1135
 4674 0074 0298     		ldr	r0, [sp, #8]
 4675              	.LVL433:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4676              		.loc 5 187 28 view .LVU1136
 4677              	.LBE5622:
 4678              	.LBE5621:
ARM GAS  /tmp/ccszdRNt.s 			page 352


 4679              	.LBB5623:
 4680              	.LBI5623:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4681              		.loc 5 200 7 is_stmt 1 view .LVU1137
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4682              		.loc 5 200 7 is_stmt 0 view .LVU1138
 4683              	.LBE5623:
 4684              	.LBE5620:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4685              		.loc 5 231 2 view .LVU1139
 4686 0076 04AB     		add	r3, sp, #16
 4687 0078 9842     		cmp	r0, r3
 4688 007a 01D0     		beq	.L139
 4689              	.LVL434:
 4690              	.LBB5624:
 4691              	.LBI5624:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4692              		.loc 5 236 7 is_stmt 1 view .LVU1140
 4693              	.LBB5625:
 4694              	.LBB5626:
 4695              	.LBI5626:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4696              		.loc 10 469 7 view .LVU1141
 4697              	.LBB5627:
 4698              	.LBI5627:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 4699              		.loc 7 119 7 view .LVU1142
 4700              	.LBB5628:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 4701              		.loc 7 128 19 is_stmt 0 view .LVU1143
 4702 007c FFF7FEFF 		bl	_ZdlPv
 4703              	.LVL435:
 4704              	.L139:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 4705              		.loc 7 128 19 view .LVU1144
 4706              	.LBE5628:
 4707              	.LBE5627:
 4708              	.LBE5626:
 4709              	.LBE5625:
 4710              	.LBE5624:
 4711              	.LBE5619:
 4712              	.LBE5618:
 4713              	.LBB5629:
 4714              	.LBI5629:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4715              		.loc 5 150 14 is_stmt 1 view .LVU1145
 4716              	.LBB5630:
 4717              	.LBI5630:
 4718              		.loc 6 153 7 view .LVU1146
 4719              	.LBB5631:
 4720              	.LBI5631:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4721              		.loc 7 89 7 view .LVU1147
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4722              		.loc 7 89 7 is_stmt 0 view .LVU1148
 4723              	.LBE5631:
 4724              	.LBE5630:
ARM GAS  /tmp/ccszdRNt.s 			page 353


 4725              	.LBE5629:
 4726              	.LBE5617:
 4727              	.LBB5632:
 4728              	.LBI5632:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 4729              		.loc 5 657 7 is_stmt 1 view .LVU1149
 4730              	.LBB5633:
 4731              	.LBI5633:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4732              		.loc 5 229 7 view .LVU1150
 4733              	.LBB5634:
 4734              	.LBB5635:
 4735              	.LBI5635:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 4736              		.loc 5 221 7 view .LVU1151
 4737              	.LBB5636:
 4738              	.LBI5636:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4739              		.loc 5 186 7 view .LVU1152
 4740              	.LBB5637:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4741              		.loc 5 187 28 is_stmt 0 view .LVU1153
 4742 0080 0898     		ldr	r0, [sp, #32]
 4743              	.LVL436:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4744              		.loc 5 187 28 view .LVU1154
 4745              	.LBE5637:
 4746              	.LBE5636:
 4747              	.LBB5638:
 4748              	.LBI5638:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4749              		.loc 5 200 7 is_stmt 1 view .LVU1155
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4750              		.loc 5 200 7 is_stmt 0 view .LVU1156
 4751              	.LBE5638:
 4752              	.LBE5635:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 4753              		.loc 5 231 2 view .LVU1157
 4754 0082 0AAB     		add	r3, sp, #40
 4755 0084 9842     		cmp	r0, r3
 4756 0086 01D0     		beq	.L140
 4757              	.LVL437:
 4758              	.LBB5639:
 4759              	.LBI5639:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 4760              		.loc 5 236 7 is_stmt 1 view .LVU1158
 4761              	.LBB5640:
 4762              	.LBB5641:
 4763              	.LBI5641:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 4764              		.loc 10 469 7 view .LVU1159
 4765              	.LBB5642:
 4766              	.LBI5642:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 4767              		.loc 7 119 7 view .LVU1160
 4768              	.LBB5643:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 354


 4769              		.loc 7 128 19 is_stmt 0 view .LVU1161
 4770 0088 FFF7FEFF 		bl	_ZdlPv
 4771              	.LVL438:
 4772              	.L140:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 4773              		.loc 7 128 19 view .LVU1162
 4774              	.LBE5643:
 4775              	.LBE5642:
 4776              	.LBE5641:
 4777              	.LBE5640:
 4778              	.LBE5639:
 4779              	.LBE5634:
 4780              	.LBE5633:
 4781              	.LBB5644:
 4782              	.LBI5644:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4783              		.loc 5 150 14 is_stmt 1 view .LVU1163
 4784              	.LBB5645:
 4785              	.LBI5645:
 4786              		.loc 6 153 7 view .LVU1164
 4787              	.LBB5646:
 4788              	.LBI5646:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4789              		.loc 7 89 7 view .LVU1165
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 4790              		.loc 7 89 7 is_stmt 0 view .LVU1166
 4791              	.LBE5646:
 4792              	.LBE5645:
 4793              	.LBE5644:
 4794              	.LBE5632:
 196:alohal/cli/cli.cpp **** }
 4795              		.loc 2 196 5 is_stmt 1 view .LVU1167
 4796              	.LBB5647:
 4797              	.LBI5647:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4798              		.loc 5 930 7 view .LVU1168
 4799              	.LBB5648:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4800              		.loc 5 931 16 is_stmt 0 view .LVU1169
 4801 008c A068     		ldr	r0, [r4, #8]
 4802              	.LVL439:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4803              		.loc 5 931 16 view .LVU1170
 4804              	.LBE5648:
 4805              	.LBE5647:
 197:alohal/cli/cli.cpp **** 
 4806              		.loc 2 197 1 view .LVU1171
 4807 008e 0FB0     		add	sp, sp, #60
 4808              		@ sp needed
 4809              	.LVL440:
 4810              	.LVL441:
 197:alohal/cli/cli.cpp **** 
 4811              		.loc 2 197 1 view .LVU1172
 4812 0090 F0BD     		pop	{r4, r5, r6, r7, pc}
 4813              	.LVL442:
 4814              	.L142:
 4815              	.LBB5649:
ARM GAS  /tmp/ccszdRNt.s 			page 355


 4816              	.LBB5563:
 4817              	.LBB5562:
 4818              	.LBB5561:
 4819              	.LBB5559:
 4820              	.LBI5559:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 4821              		.loc 4 361 7 is_stmt 1 view .LVU1173
 4822              	.LBB5560:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 4823              		.loc 4 363 2 view .LVU1174
 4824              		.loc 4 365 2 view .LVU1175
 4825              		.loc 4 365 49 is_stmt 0 view .LVU1176
 4826 0092 1022     		movs	r2, #16
 4827 0094 3900     		movs	r1, r7
 4828 0096 04A8     		add	r0, sp, #16
 4829              	.LVL443:
 4830              		.loc 4 365 49 view .LVU1177
 4831 0098 FFF7FEFF 		bl	memcpy
 4832              	.LVL444:
 4833              		.loc 4 365 49 view .LVU1178
 4834 009c CBE7     		b	.L132
 4835              	.LVL445:
 4836              	.L143:
 4837              		.loc 4 365 49 view .LVU1179
 4838              	.LBE5560:
 4839              	.LBE5559:
 4840              	.LBE5561:
 4841              	.LBE5562:
 4842              	.LBE5563:
 4843              	.LBE5649:
 4844              	.LBB5650:
 4845              	.LBB5616:
 4846              	.LBB5589:
 4847              	.LBI5589:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4848              		.loc 5 930 7 is_stmt 1 view .LVU1180
 4849              	.LBB5590:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4850              		.loc 5 931 16 is_stmt 0 view .LVU1181
 4851 009e 039A     		ldr	r2, [sp, #12]
 4852              	.LVL446:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4853              		.loc 5 931 16 view .LVU1182
 4854              	.LBE5590:
 4855              	.LBE5589:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 4856              		.loc 5 750 6 view .LVU1183
 4857 00a0 002A     		cmp	r2, #0
 4858 00a2 03D0     		beq	.L134
 4859              	.LVL447:
 4860              	.LBB5591:
 4861              	.LBI5591:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4862              		.loc 5 346 7 is_stmt 1 view .LVU1184
 4863              	.LBB5592:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 4864              		.loc 5 348 2 is_stmt 0 view .LVU1185
ARM GAS  /tmp/ccszdRNt.s 			page 356


 4865 00a4 012A     		cmp	r2, #1
 4866 00a6 09D0     		beq	.L144
 4867              	.LVL448:
 4868              	.LBB5593:
 4869              	.LBI5593:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 4870              		.loc 4 361 7 is_stmt 1 view .LVU1186
 4871              	.LBB5594:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 4872              		.loc 4 363 2 view .LVU1187
 4873              		.loc 4 365 2 view .LVU1188
 4874              		.loc 4 365 49 is_stmt 0 view .LVU1189
 4875 00a8 FFF7FEFF 		bl	memcpy
 4876              	.LVL449:
 4877              	.L134:
 4878              		.loc 4 365 49 view .LVU1190
 4879              	.LBE5594:
 4880              	.LBE5593:
 4881              	.LBE5592:
 4882              	.LBE5591:
 4883              	.LBB5598:
 4884              	.LBI5598:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 4885              		.loc 5 930 7 is_stmt 1 view .LVU1191
 4886              	.LBB5599:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4887              		.loc 5 931 16 is_stmt 0 view .LVU1192
 4888 00ac 039B     		ldr	r3, [sp, #12]
 4889              	.LVL450:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4890              		.loc 5 931 16 view .LVU1193
 4891              	.LBE5599:
 4892              	.LBE5598:
 4893              	.LBB5600:
 4894              	.LBI5600:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 4895              		.loc 5 214 7 is_stmt 1 view .LVU1194
 4896              	.LBB5601:
 4897              	.LBB5602:
 4898              	.LBI5602:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 4899              		.loc 5 182 7 view .LVU1195
 4900              	.LBB5603:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4901              		.loc 5 183 9 is_stmt 0 view .LVU1196
 4902 00ae 6B60     		str	r3, [r5, #4]
 4903              	.LVL451:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4904              		.loc 5 183 9 view .LVU1197
 4905              	.LBE5603:
 4906              	.LBE5602:
 4907              	.LBB5604:
 4908              	.LBI5604:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4909              		.loc 5 186 7 is_stmt 1 view .LVU1198
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 4910              		.loc 5 186 7 is_stmt 0 view .LVU1199
ARM GAS  /tmp/ccszdRNt.s 			page 357


 4911              	.LBE5604:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 4912              		.loc 5 217 31 view .LVU1200
 4913 00b0 6268     		ldr	r2, [r4, #4]
 4914 00b2 9446     		mov	ip, r2
 4915 00b4 6344     		add	r3, r3, ip
 4916              	.LVL452:
 4917              	.LBB5605:
 4918              	.LBI5605:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 4919              		.loc 4 299 7 is_stmt 1 view .LVU1201
 4920              	.LBB5606:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4921              		.loc 4 300 9 view .LVU1202
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4922              		.loc 4 300 14 is_stmt 0 view .LVU1203
 4923 00b6 0022     		movs	r2, #0
 4924 00b8 1A70     		strb	r2, [r3]
 4925              	.LVL453:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4926              		.loc 4 300 14 view .LVU1204
 4927              	.LBE5606:
 4928              	.LBE5605:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4929              		.loc 5 218 7 view .LVU1205
 4930 00ba D7E7     		b	.L136
 4931              	.LVL454:
 4932              	.L144:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4933              		.loc 5 218 7 view .LVU1206
 4934              	.LBE5601:
 4935              	.LBE5600:
 4936              	.LBB5607:
 4937              	.LBB5597:
 4938              	.LBB5595:
 4939              	.LBI5595:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 4940              		.loc 4 299 7 is_stmt 1 view .LVU1207
 4941              	.LBB5596:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4942              		.loc 4 300 9 view .LVU1208
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4943              		.loc 4 300 16 is_stmt 0 view .LVU1209
 4944 00bc 0B78     		ldrb	r3, [r1]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4945              		.loc 4 300 14 view .LVU1210
 4946 00be 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4947              		.loc 4 300 22 view .LVU1211
 4948 00c0 F4E7     		b	.L134
 4949              	.LVL455:
 4950              	.L141:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 4951              		.loc 4 300 22 view .LVU1212
 4952              	.LBE5596:
 4953              	.LBE5595:
 4954              	.LBE5597:
ARM GAS  /tmp/ccszdRNt.s 			page 358


 4955              	.LBE5607:
 4956              	.LBB5608:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 4957              		.loc 5 759 14 view .LVU1213
 4958 00c2 0020     		movs	r0, #0
 4959 00c4 C8E7     		b	.L137
 4960              	.LVL456:
 4961              	.L138:
 4962              	.LBB5587:
 4963              	.LBI5587:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 4964              		.loc 5 178 7 is_stmt 1 view .LVU1214
 4965              	.LBB5588:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4966              		.loc 5 179 9 is_stmt 0 view .LVU1215
 4967 00c6 04AB     		add	r3, sp, #16
 4968              	.LVL457:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4969              		.loc 5 179 9 view .LVU1216
 4970 00c8 0293     		str	r3, [sp, #8]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 4971              		.loc 5 179 33 view .LVU1217
 4972 00ca CFE7     		b	.L136
 4973              	.LBE5588:
 4974              	.LBE5587:
 4975              	.LBE5608:
 4976              	.LBE5616:
 4977              	.LBE5650:
 4978              		.cfi_endproc
 4979              	.LFE3871:
 4981              		.section	.text._ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"ax",%progbits
 4982              		.align	1
 4983              		.global	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 4984              		.syntax unified
 4985              		.code	16
 4986              		.thumb_func
 4987              		.fpu softvfp
 4989              	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 4990              	.LVL458:
 4991              	.LFB3874:
 213:alohal/cli/cli.cpp ****     serial_connection->Send(text);
 4992              		.loc 2 213 34 is_stmt 1 view -0
 4993              		.cfi_startproc
 4994              		@ args = 0, pretend = 0, frame = 24
 4995              		@ frame_needed = 0, uses_anonymous_args = 0
 213:alohal/cli/cli.cpp ****     serial_connection->Send(text);
 4996              		.loc 2 213 34 is_stmt 0 view .LVU1219
 4997 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 4998              	.LCFI29:
 4999              		.cfi_def_cfa_offset 20
 5000              		.cfi_offset 4, -20
 5001              		.cfi_offset 5, -16
 5002              		.cfi_offset 6, -12
 5003              		.cfi_offset 7, -8
 5004              		.cfi_offset 14, -4
 5005 0002 87B0     		sub	sp, sp, #28
 5006              	.LCFI30:
ARM GAS  /tmp/ccszdRNt.s 			page 359


 5007              		.cfi_def_cfa_offset 48
 5008 0004 0C00     		movs	r4, r1
 214:alohal/cli/cli.cpp ****     return text.length();
 5009              		.loc 2 214 5 is_stmt 1 view .LVU1220
 5010 0006 0668     		ldr	r6, [r0]
 214:alohal/cli/cli.cpp ****     return text.length();
 5011              		.loc 2 214 33 is_stmt 0 view .LVU1221
 5012 0008 3368     		ldr	r3, [r6]
 5013 000a 1F68     		ldr	r7, [r3]
 5014              	.LVL459:
 5015              	.LBB5651:
 5016              	.LBI5651:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 5017              		.loc 5 448 7 is_stmt 1 view .LVU1222
 5018              	.LBB5652:
 5019              	.LBB5653:
 5020              	.LBB5654:
 5021              	.LBI5654:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5022              		.loc 5 190 7 view .LVU1223
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5023              		.loc 5 190 7 is_stmt 0 view .LVU1224
 5024              	.LBE5654:
 5025              	.LBB5655:
 5026              	.LBI5655:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5027              		.loc 5 290 7 is_stmt 1 view .LVU1225
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5028              		.loc 5 290 7 is_stmt 0 view .LVU1226
 5029              	.LBE5655:
 5030              	.LBB5656:
 5031              	.LBI5656:
 5032              		.loc 20 97 19 is_stmt 1 view .LVU1227
 5033              	.LBB5657:
 5034              	.LBI5657:
 5035              		.loc 10 514 7 view .LVU1228
 5036              	.LBB5658:
 5037              	.LBI5658:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5038              		.loc 6 141 7 view .LVU1229
 5039              	.LBB5659:
 5040              	.LBI5659:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5041              		.loc 7 83 7 view .LVU1230
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5042              		.loc 7 83 7 is_stmt 0 view .LVU1231
 5043              	.LBE5659:
 5044              	.LBE5658:
 5045              	.LBE5657:
 5046              	.LBE5656:
 5047              	.LBB5660:
 5048              	.LBI5660:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5049              		.loc 5 159 2 is_stmt 1 view .LVU1232
 5050              	.LBB5661:
 5051              	.LBB5662:
 5052              	.LBB5663:
ARM GAS  /tmp/ccszdRNt.s 			page 360


 5053              	.LBI5663:
 5054              		.loc 8 99 5 view .LVU1233
 5055              		.loc 8 99 5 is_stmt 0 view .LVU1234
 5056              	.LBE5663:
 5057              	.LBB5664:
 5058              	.LBI5664:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5059              		.loc 6 141 7 is_stmt 1 view .LVU1235
 5060              	.LBB5665:
 5061              	.LBI5665:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5062              		.loc 7 83 7 view .LVU1236
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5063              		.loc 7 83 7 is_stmt 0 view .LVU1237
 5064              	.LBE5665:
 5065              	.LBE5664:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5066              		.loc 5 160 46 view .LVU1238
 5067 000c 02AD     		add	r5, sp, #8
 5068              	.LVL460:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5069              		.loc 5 160 46 view .LVU1239
 5070 000e 0095     		str	r5, [sp]
 5071              	.LVL461:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5072              		.loc 5 160 46 view .LVU1240
 5073              	.LBE5662:
 5074              	.LBE5661:
 5075              	.LBE5660:
 5076              	.LBB5666:
 5077              	.LBI5666:
 5078              		.loc 6 153 7 is_stmt 1 view .LVU1241
 5079              	.LBB5667:
 5080              	.LBI5667:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5081              		.loc 7 89 7 view .LVU1242
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5082              		.loc 7 89 7 is_stmt 0 view .LVU1243
 5083              	.LBE5667:
 5084              	.LBE5666:
 5085              	.LBB5668:
 5086              	.LBI5668:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5087              		.loc 5 186 7 is_stmt 1 view .LVU1244
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5088              		.loc 5 186 7 is_stmt 0 view .LVU1245
 5089              	.LBE5668:
 5090              	.LBB5669:
 5091              	.LBI5669:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5092              		.loc 5 186 7 is_stmt 1 view .LVU1246
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5093              		.loc 5 186 7 is_stmt 0 view .LVU1247
 5094              	.LBE5669:
 5095              	.LBB5670:
 5096              	.LBI5670:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
ARM GAS  /tmp/ccszdRNt.s 			page 361


 5097              		.loc 5 936 7 is_stmt 1 view .LVU1248
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5098              		.loc 5 936 7 is_stmt 0 view .LVU1249
 5099              	.LBE5670:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5100              		.loc 5 451 9 view .LVU1250
 5101 0010 0B68     		ldr	r3, [r1]
 5102 0012 4968     		ldr	r1, [r1, #4]
 5103              	.LVL462:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5104              		.loc 5 451 9 view .LVU1251
 5105 0014 8C46     		mov	ip, r1
 5106 0016 6344     		add	r3, r3, ip
 5107 0018 1A00     		movs	r2, r3
 5108              	.LVL463:
 5109              	.LBB5671:
 5110              	.LBI5671:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 5111              		.loc 5 263 9 is_stmt 1 view .LVU1252
 5112              	.LBB5672:
 5113              	.LBB5673:
 5114              	.LBI5673:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 5115              		.loc 5 243 9 view .LVU1253
 5116              	.LBB5674:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5117              		.loc 5 247 11 is_stmt 0 view .LVU1254
 5118 001a 0023     		movs	r3, #0
 5119 001c 2168     		ldr	r1, [r4]
 5120 001e 6846     		mov	r0, sp
 5121              	.LVL464:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5122              		.loc 5 247 11 view .LVU1255
 5123 0020 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 5124              	.LVL465:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 5125              		.loc 5 247 11 view .LVU1256
 5126              	.LBE5674:
 5127              	.LBE5673:
 5128              	.LBE5672:
 5129              	.LBE5671:
 5130              	.LBE5653:
 5131              	.LBE5652:
 5132              	.LBE5651:
 214:alohal/cli/cli.cpp ****     return text.length();
 5133              		.loc 2 214 28 view .LVU1257
 5134 0024 6946     		mov	r1, sp
 5135 0026 3000     		movs	r0, r6
 5136 0028 B847     		blx	r7
 5137              	.LVL466:
 5138              	.LBB5675:
 5139              	.LBI5675:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 5140              		.loc 5 657 7 is_stmt 1 view .LVU1258
 5141              	.LBB5676:
 5142              	.LBI5676:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 362


 5143              		.loc 5 229 7 view .LVU1259
 5144              	.LBB5677:
 5145              	.LBB5678:
 5146              	.LBI5678:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5147              		.loc 5 221 7 view .LVU1260
 5148              	.LBB5679:
 5149              	.LBI5679:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5150              		.loc 5 186 7 view .LVU1261
 5151              	.LBB5680:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5152              		.loc 5 187 28 is_stmt 0 view .LVU1262
 5153 002a 0098     		ldr	r0, [sp]
 5154              	.LVL467:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5155              		.loc 5 187 28 view .LVU1263
 5156              	.LBE5680:
 5157              	.LBE5679:
 5158              	.LBB5681:
 5159              	.LBI5681:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5160              		.loc 5 200 7 is_stmt 1 view .LVU1264
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5161              		.loc 5 200 7 is_stmt 0 view .LVU1265
 5162              	.LBE5681:
 5163              	.LBE5678:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 5164              		.loc 5 231 2 view .LVU1266
 5165 002c A842     		cmp	r0, r5
 5166 002e 01D0     		beq	.L146
 5167              	.LVL468:
 5168              	.LBB5682:
 5169              	.LBI5682:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 5170              		.loc 5 236 7 is_stmt 1 view .LVU1267
 5171              	.LBB5683:
 5172              	.LBB5684:
 5173              	.LBI5684:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 5174              		.loc 10 469 7 view .LVU1268
 5175              	.LBB5685:
 5176              	.LBI5685:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 5177              		.loc 7 119 7 view .LVU1269
 5178              	.LBB5686:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 5179              		.loc 7 128 19 is_stmt 0 view .LVU1270
 5180 0030 FFF7FEFF 		bl	_ZdlPv
 5181              	.LVL469:
 5182              	.L146:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 5183              		.loc 7 128 19 view .LVU1271
 5184              	.LBE5686:
 5185              	.LBE5685:
 5186              	.LBE5684:
 5187              	.LBE5683:
ARM GAS  /tmp/ccszdRNt.s 			page 363


 5188              	.LBE5682:
 5189              	.LBE5677:
 5190              	.LBE5676:
 5191              	.LBB5687:
 5192              	.LBI5687:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5193              		.loc 5 150 14 is_stmt 1 view .LVU1272
 5194              	.LBB5688:
 5195              	.LBI5688:
 5196              		.loc 6 153 7 view .LVU1273
 5197              	.LBB5689:
 5198              	.LBI5689:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5199              		.loc 7 89 7 view .LVU1274
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5200              		.loc 7 89 7 is_stmt 0 view .LVU1275
 5201              	.LBE5689:
 5202              	.LBE5688:
 5203              	.LBE5687:
 5204              	.LBE5675:
 215:alohal/cli/cli.cpp **** }
 5205              		.loc 2 215 5 is_stmt 1 view .LVU1276
 5206              	.LBB5690:
 5207              	.LBI5690:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5208              		.loc 5 936 7 view .LVU1277
 5209              	.LBB5691:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5210              		.loc 5 937 16 is_stmt 0 view .LVU1278
 5211 0034 6068     		ldr	r0, [r4, #4]
 5212              	.LVL470:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5213              		.loc 5 937 16 view .LVU1279
 5214              	.LBE5691:
 5215              	.LBE5690:
 216:alohal/cli/cli.cpp **** 
 5216              		.loc 2 216 1 view .LVU1280
 5217 0036 07B0     		add	sp, sp, #28
 5218              		@ sp needed
 5219              	.LVL471:
 216:alohal/cli/cli.cpp **** 
 5220              		.loc 2 216 1 view .LVU1281
 5221 0038 F0BD     		pop	{r4, r5, r6, r7, pc}
 5222              		.cfi_endproc
 5223              	.LFE3874:
 5225              		.section	.rodata._ZN3CLI11Redraw_lineEv.str1.4,"aMS",%progbits,1
 5226              		.align	2
 5227              	.LC18:
 5228 0000 0D00     		.ascii	"\015\000"
 5229              		.section	.text._ZN3CLI11Redraw_lineEv,"ax",%progbits
 5230              		.align	1
 5231              		.global	_ZN3CLI11Redraw_lineEv
 5232              		.syntax unified
 5233              		.code	16
 5234              		.thumb_func
 5235              		.fpu softvfp
 5237              	_ZN3CLI11Redraw_lineEv:
ARM GAS  /tmp/ccszdRNt.s 			page 364


 5238              	.LVL472:
 5239              	.LFB3870:
 182:alohal/cli/cli.cpp ****     // Actual_line is text which will be now printed
 5240              		.loc 2 182 23 is_stmt 1 view -0
 5241              		.cfi_startproc
 5242              		@ args = 0, pretend = 0, frame = 120
 5243              		@ frame_needed = 0, uses_anonymous_args = 0
 182:alohal/cli/cli.cpp ****     // Actual_line is text which will be now printed
 5244              		.loc 2 182 23 is_stmt 0 view .LVU1283
 5245 0000 70B5     		push	{r4, r5, r6, lr}
 5246              	.LCFI31:
 5247              		.cfi_def_cfa_offset 16
 5248              		.cfi_offset 4, -16
 5249              		.cfi_offset 5, -12
 5250              		.cfi_offset 6, -8
 5251              		.cfi_offset 14, -4
 5252 0002 A0B0     		sub	sp, sp, #128
 5253              	.LCFI32:
 5254              		.cfi_def_cfa_offset 144
 5255 0004 0400     		movs	r4, r0
 184:alohal/cli/cli.cpp ****     if (missing_spaces > 0) {
 5256              		.loc 2 184 5 is_stmt 1 view .LVU1284
 5257              	.LVL473:
 5258              	.LBB5932:
 5259              	.LBI5932:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5260              		.loc 5 936 7 view .LVU1285
 5261              	.LBB5933:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5262              		.loc 5 937 16 is_stmt 0 view .LVU1286
 5263 0006 016A     		ldr	r1, [r0, #32]
 5264              	.LVL474:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5265              		.loc 5 937 16 view .LVU1287
 5266              	.LBE5933:
 5267              	.LBE5932:
 5268              	.LBB5934:
 5269              	.LBI5934:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5270              		.loc 5 936 7 is_stmt 1 view .LVU1288
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5271              		.loc 5 936 7 is_stmt 0 view .LVU1289
 5272              	.LBE5934:
 184:alohal/cli/cli.cpp ****     if (missing_spaces > 0) {
 5273              		.loc 2 184 53 view .LVU1290
 5274 0008 8368     		ldr	r3, [r0, #8]
 5275 000a CB1A     		subs	r3, r1, r3
 5276              	.LVL475:
 185:alohal/cli/cli.cpp ****         Print("\r" + string(last_printed_line.length(), ' ') + "\r" + actual_line);
 5277              		.loc 2 185 5 is_stmt 1 view .LVU1291
 5278 000c 002B     		cmp	r3, #0
 5279 000e 00DC     		bgt	.LCB5950
 5280 0010 8AE0     		b	.L148	@long jump
 5281              	.LCB5950:
 186:alohal/cli/cli.cpp ****     } else {
 5282              		.loc 2 186 9 view .LVU1292
 5283              	.LVL476:
ARM GAS  /tmp/ccszdRNt.s 			page 365


 5284              	.LBB5935:
 5285              	.LBI5935:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 5286              		.loc 6 138 7 view .LVU1293
 5287              	.LBB5936:
 5288              	.LBI5936:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5289              		.loc 7 80 7 view .LVU1294
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5290              		.loc 7 80 7 is_stmt 0 view .LVU1295
 5291              	.LBE5936:
 5292              	.LBE5935:
 5293              	.LBB5937:
 5294              	.LBI5937:
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 5295              		.loc 5 540 7 is_stmt 1 view .LVU1296
 5296              	.LBB5938:
 5297              	.LBB5939:
 5298              	.LBB5940:
 5299              	.LBI5940:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5300              		.loc 5 190 7 view .LVU1297
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5301              		.loc 5 190 7 is_stmt 0 view .LVU1298
 5302              	.LBE5940:
 5303              	.LBB5941:
 5304              	.LBI5941:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 5305              		.loc 5 156 2 is_stmt 1 view .LVU1299
 5306              	.LBB5942:
 5307              	.LBB5943:
 5308              	.LBB5944:
 5309              	.LBI5944:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5310              		.loc 6 141 7 view .LVU1300
 5311              	.LBB5945:
 5312              	.LBI5945:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5313              		.loc 7 83 7 view .LVU1301
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5314              		.loc 7 83 7 is_stmt 0 view .LVU1302
 5315              	.LBE5945:
 5316              	.LBE5944:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5317              		.loc 5 157 35 view .LVU1303
 5318 0012 16AB     		add	r3, sp, #88
 5319              	.LVL477:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5320              		.loc 5 157 35 view .LVU1304
 5321 0014 1493     		str	r3, [sp, #80]
 5322              	.LVL478:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5323              		.loc 5 157 35 view .LVU1305
 5324              	.LBE5943:
 5325              	.LBE5942:
 5326              	.LBE5941:
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 366


 5327              		.loc 5 542 9 view .LVU1306
 5328 0016 2022     		movs	r2, #32
 5329 0018 14A8     		add	r0, sp, #80
 5330              	.LVL479:
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5331              		.loc 5 542 9 view .LVU1307
 5332 001a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc
 5333              	.LVL480:
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5334              		.loc 5 542 9 view .LVU1308
 5335              	.LBE5939:
 5336              	.LBE5938:
 5337              	.LBE5937:
 5338              	.LBB5946:
 5339              	.LBI5946:
6109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
 5340              		.loc 5 6109 5 is_stmt 1 view .LVU1309
 5341              	.LBB5947:
 5342              	.LBI5947:
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5343              		.loc 5 1704 7 view .LVU1310
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5344              		.loc 5 1704 7 is_stmt 0 view .LVU1311
 5345              	.LBE5947:
 5346              	.LBE5946:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 5347              		.loc 4 332 2 is_stmt 1 view .LVU1312
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 5348              		.loc 4 335 2 view .LVU1313
 5349              	.LBB5994:
 5350              	.LBB5955:
 5351              	.LBB5948:
 5352              	.LBI5948:
1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
 5353              		.loc 5 1936 7 view .LVU1314
 5354              	.LBB5949:
 5355              	.LBB5950:
 5356              	.LBI5950:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5357              		.loc 5 310 7 view .LVU1315
 5358              	.LBB5951:
 5359              	.LBI5951:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5360              		.loc 5 930 7 view .LVU1316
 5361              	.LBB5952:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5362              		.loc 5 931 16 is_stmt 0 view .LVU1317
 5363 001e 159A     		ldr	r2, [sp, #84]
 5364              	.LVL481:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5365              		.loc 5 931 16 view .LVU1318
 5366              	.LBE5952:
 5367              	.LBE5951:
 5368              	.LBE5950:
 5369              	.LBB5953:
 5370              	.LBI5953:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 367


 5371              		.loc 5 329 7 is_stmt 1 view .LVU1319
 5372              	.LBB5954:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5373              		.loc 5 332 19 is_stmt 0 view .LVU1320
 5374 0020 002A     		cmp	r2, #0
 5375 0022 00D0     		beq	.L149
 5376 0024 0022     		movs	r2, #0
 5377              	.LVL482:
 5378              	.L149:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5379              		.loc 5 332 19 view .LVU1321
 5380              	.LBE5954:
 5381              	.LBE5953:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5382              		.loc 5 1941 38 view .LVU1322
 5383 0026 0123     		movs	r3, #1
 5384 0028 0093     		str	r3, [sp]
 5385 002a 474B     		ldr	r3, .L167
 5386 002c 0021     		movs	r1, #0
 5387 002e 14A8     		add	r0, sp, #80
 5388              	.LVL483:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5389              		.loc 5 1941 38 view .LVU1323
 5390 0030 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 5391              	.LVL484:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5392              		.loc 5 1941 38 view .LVU1324
 5393 0034 0500     		movs	r5, r0
 5394              	.LVL485:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5395              		.loc 5 1941 38 view .LVU1325
 5396              	.LBE5949:
 5397              	.LBE5948:
 5398              	.LBE5955:
 5399              	.LBB5956:
 5400              	.LBI5956:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 5401              		.loc 5 552 7 is_stmt 1 view .LVU1326
 5402              	.LBB5957:
 5403              	.LBB5958:
 5404              	.LBB5959:
 5405              	.LBI5959:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5406              		.loc 5 190 7 view .LVU1327
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5407              		.loc 5 190 7 is_stmt 0 view .LVU1328
 5408              	.LBE5959:
 5409              	.LBB5960:
 5410              	.LBI5960:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5411              		.loc 5 286 7 is_stmt 1 view .LVU1329
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5412              		.loc 5 286 7 is_stmt 0 view .LVU1330
 5413              	.LBE5960:
 5414              	.LBB5961:
 5415              	.LBI5961:
 5416              		.loc 8 99 5 is_stmt 1 view .LVU1331
ARM GAS  /tmp/ccszdRNt.s 			page 368


 5417              		.loc 8 99 5 is_stmt 0 view .LVU1332
 5418              	.LBE5961:
 5419              	.LBB5962:
 5420              	.LBI5962:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5421              		.loc 5 159 2 is_stmt 1 view .LVU1333
 5422              	.LBB5963:
 5423              	.LBB5964:
 5424              	.LBB5965:
 5425              	.LBI5965:
 5426              		.loc 8 99 5 view .LVU1334
 5427              		.loc 8 99 5 is_stmt 0 view .LVU1335
 5428              	.LBE5965:
 5429              	.LBB5966:
 5430              	.LBI5966:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5431              		.loc 6 141 7 is_stmt 1 view .LVU1336
 5432              	.LBB5967:
 5433              	.LBI5967:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5434              		.loc 7 83 7 view .LVU1337
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5435              		.loc 7 83 7 is_stmt 0 view .LVU1338
 5436              	.LBE5967:
 5437              	.LBE5966:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5438              		.loc 5 160 46 view .LVU1339
 5439 0036 10AB     		add	r3, sp, #64
 5440              	.LVL486:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5441              		.loc 5 160 46 view .LVU1340
 5442 0038 0E93     		str	r3, [sp, #56]
 5443              	.LVL487:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5444              		.loc 5 160 46 view .LVU1341
 5445              	.LBE5964:
 5446              	.LBE5963:
 5447              	.LBE5962:
 5448              	.LBB5968:
 5449              	.LBI5968:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5450              		.loc 5 221 7 is_stmt 1 view .LVU1342
 5451              	.LBB5969:
 5452              	.LBI5969:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5453              		.loc 5 186 7 view .LVU1343
 5454              	.LBB5970:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5455              		.loc 5 187 28 is_stmt 0 view .LVU1344
 5456 003a 0368     		ldr	r3, [r0]
 5457              	.LVL488:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5458              		.loc 5 187 28 view .LVU1345
 5459              	.LBE5970:
 5460              	.LBE5969:
 5461              	.LBB5971:
 5462              	.LBI5971:
ARM GAS  /tmp/ccszdRNt.s 			page 369


 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5463              		.loc 5 200 7 is_stmt 1 view .LVU1346
 5464              	.LBB5972:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5465              		.loc 5 203 57 is_stmt 0 view .LVU1347
 5466 003c 0600     		movs	r6, r0
 5467 003e 0836     		adds	r6, r6, #8
 5468              	.LVL489:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5469              		.loc 5 203 57 view .LVU1348
 5470              	.LBE5972:
 5471              	.LBE5971:
 5472              	.LBE5968:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 5473              		.loc 5 555 2 view .LVU1349
 5474 0040 B342     		cmp	r3, r6
 5475 0042 5CD0     		beq	.L163
 5476              	.LVL490:
 5477              	.LBB5973:
 5478              	.LBI5973:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5479              		.loc 5 186 7 is_stmt 1 view .LVU1350
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5480              		.loc 5 186 7 is_stmt 0 view .LVU1351
 5481              	.LBE5973:
 5482              	.LBB5974:
 5483              	.LBI5974:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5484              		.loc 5 178 7 is_stmt 1 view .LVU1352
 5485              	.LBB5975:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5486              		.loc 5 179 9 is_stmt 0 view .LVU1353
 5487 0044 0E93     		str	r3, [sp, #56]
 5488              	.LVL491:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5489              		.loc 5 179 9 view .LVU1354
 5490              	.LBE5975:
 5491              	.LBE5974:
 5492              	.LBB5976:
 5493              	.LBI5976:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 5494              		.loc 5 210 7 is_stmt 1 view .LVU1355
 5495              	.LBB5977:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5496              		.loc 5 211 9 is_stmt 0 view .LVU1356
 5497 0046 8368     		ldr	r3, [r0, #8]
 5498 0048 1093     		str	r3, [sp, #64]
 5499              	.LVL492:
 5500              	.L151:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5501              		.loc 5 211 9 view .LVU1357
 5502              	.LBE5977:
 5503              	.LBE5976:
 5504              	.LBB5978:
 5505              	.LBI5978:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5506              		.loc 5 936 7 is_stmt 1 view .LVU1358
ARM GAS  /tmp/ccszdRNt.s 			page 370


 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5507              		.loc 5 936 7 is_stmt 0 view .LVU1359
 5508              	.LBE5978:
 5509              	.LBB5979:
 5510              	.LBI5979:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5511              		.loc 5 182 7 is_stmt 1 view .LVU1360
 5512              	.LBB5980:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5513              		.loc 5 183 9 is_stmt 0 view .LVU1361
 5514 004a 6B68     		ldr	r3, [r5, #4]
 5515 004c 0F93     		str	r3, [sp, #60]
 5516              	.LVL493:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5517              		.loc 5 183 9 view .LVU1362
 5518              	.LBE5980:
 5519              	.LBE5979:
 5520              	.LBB5981:
 5521              	.LBI5981:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5522              		.loc 5 190 7 is_stmt 1 view .LVU1363
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5523              		.loc 5 190 7 is_stmt 0 view .LVU1364
 5524              	.LBE5981:
 5525              	.LBB5982:
 5526              	.LBI5982:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5527              		.loc 5 178 7 is_stmt 1 view .LVU1365
 5528              	.LBB5983:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5529              		.loc 5 179 9 is_stmt 0 view .LVU1366
 5530 004e 2E60     		str	r6, [r5]
 5531              	.LVL494:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5532              		.loc 5 179 9 view .LVU1367
 5533              	.LBE5983:
 5534              	.LBE5982:
 5535              	.LBB5984:
 5536              	.LBI5984:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5537              		.loc 5 214 7 is_stmt 1 view .LVU1368
 5538              	.LBB5985:
 5539              	.LBI5985:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5540              		.loc 5 182 7 view .LVU1369
 5541              	.LBB5986:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5542              		.loc 5 183 9 is_stmt 0 view .LVU1370
 5543 0050 0023     		movs	r3, #0
 5544 0052 6B60     		str	r3, [r5, #4]
 5545              	.LVL495:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5546              		.loc 5 183 9 view .LVU1371
 5547              	.LBE5986:
 5548              	.LBE5985:
 5549              	.LBB5987:
 5550              	.LBI5987:
ARM GAS  /tmp/ccszdRNt.s 			page 371


 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 5551              		.loc 4 299 7 is_stmt 1 view .LVU1372
 5552              	.LBB5988:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5553              		.loc 4 300 9 view .LVU1373
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5554              		.loc 4 300 14 is_stmt 0 view .LVU1374
 5555 0054 2B72     		strb	r3, [r5, #8]
 5556              	.LVL496:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5557              		.loc 4 300 14 view .LVU1375
 5558              	.LBE5988:
 5559              	.LBE5987:
 5560              	.LBE5984:
 5561              	.LBE5958:
 5562              	.LBE5957:
 5563              	.LBE5956:
 5564              	.LBE5994:
 5565              	.LBB5995:
 5566              	.LBI5995:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 5567              		.loc 5 6121 5 is_stmt 1 view .LVU1376
 5568              	.LBB5996:
 5569              	.LBI5996:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5570              		.loc 5 1263 7 view .LVU1377
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5571              		.loc 5 1263 7 is_stmt 0 view .LVU1378
 5572              	.LBE5996:
 5573              	.LBE5995:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 5574              		.loc 4 332 2 is_stmt 1 view .LVU1379
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 5575              		.loc 4 335 2 view .LVU1380
 5576              	.LBB6045:
 5577              	.LBB6005:
 5578              	.LBB5997:
 5579              	.LBB5998:
 5580              	.LBI5998:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5581              		.loc 5 320 7 view .LVU1381
 5582              	.LBB5999:
 5583              	.LBB6000:
 5584              	.LBI6000:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5585              		.loc 5 930 7 view .LVU1382
 5586              	.LBB6001:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5587              		.loc 5 931 16 is_stmt 0 view .LVU1383
 5588 0056 0F9A     		ldr	r2, [sp, #60]
 5589              	.LVL497:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5590              		.loc 5 931 16 view .LVU1384
 5591              	.LBE6001:
 5592              	.LBE6000:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5593              		.loc 5 322 2 view .LVU1385
ARM GAS  /tmp/ccszdRNt.s 			page 372


 5594 0058 3C4B     		ldr	r3, .L167+4
 5595 005a 9A42     		cmp	r2, r3
 5596 005c 55D0     		beq	.L164
 5597              	.LVL498:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 5598              		.loc 5 322 2 view .LVU1386
 5599              	.LBE5999:
 5600              	.LBE5998:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5601              		.loc 5 1268 27 view .LVU1387
 5602 005e 0122     		movs	r2, #1
 5603 0060 3949     		ldr	r1, .L167
 5604 0062 0EA8     		add	r0, sp, #56
 5605              	.LVL499:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5606              		.loc 5 1268 27 view .LVU1388
 5607 0064 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 5608              	.LVL500:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5609              		.loc 5 1268 27 view .LVU1389
 5610 0068 0500     		movs	r5, r0
 5611              	.LVL501:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 5612              		.loc 5 1268 27 view .LVU1390
 5613              	.LBE5997:
 5614              	.LBE6005:
 5615              	.LBB6006:
 5616              	.LBI6006:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 5617              		.loc 5 552 7 is_stmt 1 view .LVU1391
 5618              	.LBB6007:
 5619              	.LBB6008:
 5620              	.LBB6009:
 5621              	.LBI6009:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5622              		.loc 5 190 7 view .LVU1392
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5623              		.loc 5 190 7 is_stmt 0 view .LVU1393
 5624              	.LBE6009:
 5625              	.LBB6010:
 5626              	.LBI6010:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5627              		.loc 5 286 7 is_stmt 1 view .LVU1394
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5628              		.loc 5 286 7 is_stmt 0 view .LVU1395
 5629              	.LBE6010:
 5630              	.LBB6011:
 5631              	.LBI6011:
 5632              		.loc 8 99 5 is_stmt 1 view .LVU1396
 5633              		.loc 8 99 5 is_stmt 0 view .LVU1397
 5634              	.LBE6011:
 5635              	.LBB6012:
 5636              	.LBI6012:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5637              		.loc 5 159 2 is_stmt 1 view .LVU1398
 5638              	.LBB6013:
 5639              	.LBB6014:
ARM GAS  /tmp/ccszdRNt.s 			page 373


 5640              	.LBB6015:
 5641              	.LBI6015:
 5642              		.loc 8 99 5 view .LVU1399
 5643              		.loc 8 99 5 is_stmt 0 view .LVU1400
 5644              	.LBE6015:
 5645              	.LBB6016:
 5646              	.LBI6016:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5647              		.loc 6 141 7 is_stmt 1 view .LVU1401
 5648              	.LBB6017:
 5649              	.LBI6017:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5650              		.loc 7 83 7 view .LVU1402
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5651              		.loc 7 83 7 is_stmt 0 view .LVU1403
 5652              	.LBE6017:
 5653              	.LBE6016:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5654              		.loc 5 160 46 view .LVU1404
 5655 006a 0AAB     		add	r3, sp, #40
 5656              	.LVL502:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5657              		.loc 5 160 46 view .LVU1405
 5658 006c 0893     		str	r3, [sp, #32]
 5659              	.LVL503:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5660              		.loc 5 160 46 view .LVU1406
 5661              	.LBE6014:
 5662              	.LBE6013:
 5663              	.LBE6012:
 5664              	.LBB6018:
 5665              	.LBI6018:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5666              		.loc 5 221 7 is_stmt 1 view .LVU1407
 5667              	.LBB6019:
 5668              	.LBI6019:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5669              		.loc 5 186 7 view .LVU1408
 5670              	.LBB6020:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5671              		.loc 5 187 28 is_stmt 0 view .LVU1409
 5672 006e 0368     		ldr	r3, [r0]
 5673              	.LVL504:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5674              		.loc 5 187 28 view .LVU1410
 5675              	.LBE6020:
 5676              	.LBE6019:
 5677              	.LBB6021:
 5678              	.LBI6021:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5679              		.loc 5 200 7 is_stmt 1 view .LVU1411
 5680              	.LBB6022:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5681              		.loc 5 203 57 is_stmt 0 view .LVU1412
 5682 0070 0600     		movs	r6, r0
 5683 0072 0836     		adds	r6, r6, #8
 5684              	.LVL505:
ARM GAS  /tmp/ccszdRNt.s 			page 374


 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5685              		.loc 5 203 57 view .LVU1413
 5686              	.LBE6022:
 5687              	.LBE6021:
 5688              	.LBE6018:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 5689              		.loc 5 555 2 view .LVU1414
 5690 0074 B342     		cmp	r3, r6
 5691 0076 4BD0     		beq	.L165
 5692              	.LVL506:
 5693              	.LBB6023:
 5694              	.LBI6023:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5695              		.loc 5 186 7 is_stmt 1 view .LVU1415
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5696              		.loc 5 186 7 is_stmt 0 view .LVU1416
 5697              	.LBE6023:
 5698              	.LBB6024:
 5699              	.LBI6024:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5700              		.loc 5 178 7 is_stmt 1 view .LVU1417
 5701              	.LBB6025:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5702              		.loc 5 179 9 is_stmt 0 view .LVU1418
 5703 0078 0893     		str	r3, [sp, #32]
 5704              	.LVL507:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5705              		.loc 5 179 9 view .LVU1419
 5706              	.LBE6025:
 5707              	.LBE6024:
 5708              	.LBB6026:
 5709              	.LBI6026:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 5710              		.loc 5 210 7 is_stmt 1 view .LVU1420
 5711              	.LBB6027:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5712              		.loc 5 211 9 is_stmt 0 view .LVU1421
 5713 007a 8368     		ldr	r3, [r0, #8]
 5714 007c 0A93     		str	r3, [sp, #40]
 5715              	.LVL508:
 5716              	.L154:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5717              		.loc 5 211 9 view .LVU1422
 5718              	.LBE6027:
 5719              	.LBE6026:
 5720              	.LBB6028:
 5721              	.LBI6028:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5722              		.loc 5 936 7 is_stmt 1 view .LVU1423
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5723              		.loc 5 936 7 is_stmt 0 view .LVU1424
 5724              	.LBE6028:
 5725              	.LBB6029:
 5726              	.LBI6029:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5727              		.loc 5 182 7 is_stmt 1 view .LVU1425
 5728              	.LBB6030:
ARM GAS  /tmp/ccszdRNt.s 			page 375


 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5729              		.loc 5 183 9 is_stmt 0 view .LVU1426
 5730 007e 6B68     		ldr	r3, [r5, #4]
 5731 0080 0993     		str	r3, [sp, #36]
 5732              	.LVL509:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5733              		.loc 5 183 9 view .LVU1427
 5734              	.LBE6030:
 5735              	.LBE6029:
 5736              	.LBB6031:
 5737              	.LBI6031:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5738              		.loc 5 190 7 is_stmt 1 view .LVU1428
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5739              		.loc 5 190 7 is_stmt 0 view .LVU1429
 5740              	.LBE6031:
 5741              	.LBB6032:
 5742              	.LBI6032:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5743              		.loc 5 178 7 is_stmt 1 view .LVU1430
 5744              	.LBB6033:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5745              		.loc 5 179 9 is_stmt 0 view .LVU1431
 5746 0082 2E60     		str	r6, [r5]
 5747              	.LVL510:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5748              		.loc 5 179 9 view .LVU1432
 5749              	.LBE6033:
 5750              	.LBE6032:
 5751              	.LBB6034:
 5752              	.LBI6034:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5753              		.loc 5 214 7 is_stmt 1 view .LVU1433
 5754              	.LBB6035:
 5755              	.LBI6035:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5756              		.loc 5 182 7 view .LVU1434
 5757              	.LBB6036:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5758              		.loc 5 183 9 is_stmt 0 view .LVU1435
 5759 0084 0023     		movs	r3, #0
 5760 0086 6B60     		str	r3, [r5, #4]
 5761              	.LVL511:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5762              		.loc 5 183 9 view .LVU1436
 5763              	.LBE6036:
 5764              	.LBE6035:
 5765              	.LBB6037:
 5766              	.LBI6037:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 5767              		.loc 4 299 7 is_stmt 1 view .LVU1437
 5768              	.LBB6038:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5769              		.loc 4 300 9 view .LVU1438
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5770              		.loc 4 300 14 is_stmt 0 view .LVU1439
 5771 0088 2B72     		strb	r3, [r5, #8]
ARM GAS  /tmp/ccszdRNt.s 			page 376


 5772              	.LVL512:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5773              		.loc 4 300 14 view .LVU1440
 5774              	.LBE6038:
 5775              	.LBE6037:
 5776              	.LBE6034:
 5777              	.LBE6008:
 5778              	.LBE6007:
 5779              	.LBE6006:
 5780              	.LBE6045:
 5781              	.LBB6046:
 5782              	.LBI6046:
6085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 5783              		.loc 5 6085 5 is_stmt 1 view .LVU1441
 5784              	.LBB6047:
 5785              	.LBI6047:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 5786              		.loc 5 1221 7 view .LVU1442
 5787              	.LBB6048:
 5788              	.LBB6049:
 5789              	.LBI6049:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5790              		.loc 5 186 7 view .LVU1443
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5791              		.loc 5 186 7 is_stmt 0 view .LVU1444
 5792              	.LBE6049:
 5793              	.LBB6050:
 5794              	.LBI6050:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5795              		.loc 5 930 7 is_stmt 1 view .LVU1445
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5796              		.loc 5 930 7 is_stmt 0 view .LVU1446
 5797              	.LBE6050:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5798              		.loc 5 1222 55 view .LVU1447
 5799 008a A268     		ldr	r2, [r4, #8]
 5800 008c 6168     		ldr	r1, [r4, #4]
 5801 008e 08A8     		add	r0, sp, #32
 5802              	.LVL513:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5803              		.loc 5 1222 55 view .LVU1448
 5804 0090 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 5805              	.LVL514:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5806              		.loc 5 1222 55 view .LVU1449
 5807 0094 0500     		movs	r5, r0
 5808              	.LVL515:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5809              		.loc 5 1222 55 view .LVU1450
 5810              	.LBE6048:
 5811              	.LBE6047:
 5812              	.LBB6051:
 5813              	.LBI6051:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 5814              		.loc 5 552 7 is_stmt 1 view .LVU1451
 5815              	.LBB6052:
 5816              	.LBB6053:
ARM GAS  /tmp/ccszdRNt.s 			page 377


 5817              	.LBB6054:
 5818              	.LBI6054:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5819              		.loc 5 190 7 view .LVU1452
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5820              		.loc 5 190 7 is_stmt 0 view .LVU1453
 5821              	.LBE6054:
 5822              	.LBB6055:
 5823              	.LBI6055:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5824              		.loc 5 286 7 is_stmt 1 view .LVU1454
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 5825              		.loc 5 286 7 is_stmt 0 view .LVU1455
 5826              	.LBE6055:
 5827              	.LBB6056:
 5828              	.LBI6056:
 5829              		.loc 8 99 5 is_stmt 1 view .LVU1456
 5830              		.loc 8 99 5 is_stmt 0 view .LVU1457
 5831              	.LBE6056:
 5832              	.LBB6057:
 5833              	.LBI6057:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 5834              		.loc 5 159 2 is_stmt 1 view .LVU1458
 5835              	.LBB6058:
 5836              	.LBB6059:
 5837              	.LBB6060:
 5838              	.LBI6060:
 5839              		.loc 8 99 5 view .LVU1459
 5840              		.loc 8 99 5 is_stmt 0 view .LVU1460
 5841              	.LBE6060:
 5842              	.LBB6061:
 5843              	.LBI6061:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 5844              		.loc 6 141 7 is_stmt 1 view .LVU1461
 5845              	.LBB6062:
 5846              	.LBI6062:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5847              		.loc 7 83 7 view .LVU1462
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 5848              		.loc 7 83 7 is_stmt 0 view .LVU1463
 5849              	.LBE6062:
 5850              	.LBE6061:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5851              		.loc 5 160 46 view .LVU1464
 5852 0096 04AB     		add	r3, sp, #16
 5853              	.LVL516:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5854              		.loc 5 160 46 view .LVU1465
 5855 0098 0293     		str	r3, [sp, #8]
 5856              	.LVL517:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 5857              		.loc 5 160 46 view .LVU1466
 5858              	.LBE6059:
 5859              	.LBE6058:
 5860              	.LBE6057:
 5861              	.LBB6063:
 5862              	.LBI6063:
ARM GAS  /tmp/ccszdRNt.s 			page 378


 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5863              		.loc 5 221 7 is_stmt 1 view .LVU1467
 5864              	.LBB6064:
 5865              	.LBI6064:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5866              		.loc 5 186 7 view .LVU1468
 5867              	.LBB6065:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5868              		.loc 5 187 28 is_stmt 0 view .LVU1469
 5869 009a 0368     		ldr	r3, [r0]
 5870              	.LVL518:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5871              		.loc 5 187 28 view .LVU1470
 5872              	.LBE6065:
 5873              	.LBE6064:
 5874              	.LBB6066:
 5875              	.LBI6066:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5876              		.loc 5 200 7 is_stmt 1 view .LVU1471
 5877              	.LBB6067:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5878              		.loc 5 203 57 is_stmt 0 view .LVU1472
 5879 009c 0600     		movs	r6, r0
 5880 009e 0836     		adds	r6, r6, #8
 5881              	.LVL519:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 5882              		.loc 5 203 57 view .LVU1473
 5883              	.LBE6067:
 5884              	.LBE6066:
 5885              	.LBE6063:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 5886              		.loc 5 555 2 view .LVU1474
 5887 00a0 B342     		cmp	r3, r6
 5888 00a2 3BD0     		beq	.L166
 5889              	.LVL520:
 5890              	.LBB6068:
 5891              	.LBI6068:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5892              		.loc 5 186 7 is_stmt 1 view .LVU1475
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 5893              		.loc 5 186 7 is_stmt 0 view .LVU1476
 5894              	.LBE6068:
 5895              	.LBB6069:
 5896              	.LBI6069:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5897              		.loc 5 178 7 is_stmt 1 view .LVU1477
 5898              	.LBB6070:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5899              		.loc 5 179 9 is_stmt 0 view .LVU1478
 5900 00a4 0293     		str	r3, [sp, #8]
 5901              	.LVL521:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5902              		.loc 5 179 9 view .LVU1479
 5903              	.LBE6070:
 5904              	.LBE6069:
 5905              	.LBB6071:
 5906              	.LBI6071:
ARM GAS  /tmp/ccszdRNt.s 			page 379


 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 5907              		.loc 5 210 7 is_stmt 1 view .LVU1480
 5908              	.LBB6072:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5909              		.loc 5 211 9 is_stmt 0 view .LVU1481
 5910 00a6 8368     		ldr	r3, [r0, #8]
 5911 00a8 0493     		str	r3, [sp, #16]
 5912              	.LVL522:
 5913              	.L156:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5914              		.loc 5 211 9 view .LVU1482
 5915              	.LBE6072:
 5916              	.LBE6071:
 5917              	.LBB6073:
 5918              	.LBI6073:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5919              		.loc 5 936 7 is_stmt 1 view .LVU1483
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 5920              		.loc 5 936 7 is_stmt 0 view .LVU1484
 5921              	.LBE6073:
 5922              	.LBB6074:
 5923              	.LBI6074:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5924              		.loc 5 182 7 is_stmt 1 view .LVU1485
 5925              	.LBB6075:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5926              		.loc 5 183 9 is_stmt 0 view .LVU1486
 5927 00aa 6B68     		ldr	r3, [r5, #4]
 5928 00ac 0393     		str	r3, [sp, #12]
 5929              	.LVL523:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5930              		.loc 5 183 9 view .LVU1487
 5931              	.LBE6075:
 5932              	.LBE6074:
 5933              	.LBB6076:
 5934              	.LBI6076:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5935              		.loc 5 190 7 is_stmt 1 view .LVU1488
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5936              		.loc 5 190 7 is_stmt 0 view .LVU1489
 5937              	.LBE6076:
 5938              	.LBB6077:
 5939              	.LBI6077:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 5940              		.loc 5 178 7 is_stmt 1 view .LVU1490
 5941              	.LBB6078:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5942              		.loc 5 179 9 is_stmt 0 view .LVU1491
 5943 00ae 2E60     		str	r6, [r5]
 5944              	.LVL524:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5945              		.loc 5 179 9 view .LVU1492
 5946              	.LBE6078:
 5947              	.LBE6077:
 5948              	.LBB6079:
 5949              	.LBI6079:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 380


 5950              		.loc 5 214 7 is_stmt 1 view .LVU1493
 5951              	.LBB6080:
 5952              	.LBI6080:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 5953              		.loc 5 182 7 view .LVU1494
 5954              	.LBB6081:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5955              		.loc 5 183 9 is_stmt 0 view .LVU1495
 5956 00b0 0023     		movs	r3, #0
 5957 00b2 6B60     		str	r3, [r5, #4]
 5958              	.LVL525:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5959              		.loc 5 183 9 view .LVU1496
 5960              	.LBE6081:
 5961              	.LBE6080:
 5962              	.LBB6082:
 5963              	.LBI6082:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 5964              		.loc 4 299 7 is_stmt 1 view .LVU1497
 5965              	.LBB6083:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5966              		.loc 4 300 9 view .LVU1498
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5967              		.loc 4 300 14 is_stmt 0 view .LVU1499
 5968 00b4 2B72     		strb	r3, [r5, #8]
 5969              	.LVL526:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 5970              		.loc 4 300 14 view .LVU1500
 5971              	.LBE6083:
 5972              	.LBE6082:
 5973              	.LBE6079:
 5974              	.LBE6053:
 5975              	.LBE6052:
 5976              	.LBE6051:
 5977              	.LBE6046:
 186:alohal/cli/cli.cpp ****     } else {
 5978              		.loc 2 186 14 view .LVU1501
 5979 00b6 02A9     		add	r1, sp, #8
 5980 00b8 2000     		movs	r0, r4
 5981 00ba FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 5982              	.LVL527:
 5983              	.LBB6089:
 5984              	.LBI6089:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 5985              		.loc 5 657 7 is_stmt 1 view .LVU1502
 5986              	.LBB6090:
 5987              	.LBI6090:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 5988              		.loc 5 229 7 view .LVU1503
 5989              	.LBB6091:
 5990              	.LBB6092:
 5991              	.LBI6092:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 5992              		.loc 5 221 7 view .LVU1504
 5993              	.LBB6093:
 5994              	.LBI6093:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 381


 5995              		.loc 5 186 7 view .LVU1505
 5996              	.LBB6094:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 5997              		.loc 5 187 28 is_stmt 0 view .LVU1506
 5998 00be 0298     		ldr	r0, [sp, #8]
 5999              	.LVL528:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6000              		.loc 5 187 28 view .LVU1507
 6001              	.LBE6094:
 6002              	.LBE6093:
 6003              	.LBB6095:
 6004              	.LBI6095:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6005              		.loc 5 200 7 is_stmt 1 view .LVU1508
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6006              		.loc 5 200 7 is_stmt 0 view .LVU1509
 6007              	.LBE6095:
 6008              	.LBE6092:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6009              		.loc 5 231 2 view .LVU1510
 6010 00c0 04AB     		add	r3, sp, #16
 6011 00c2 9842     		cmp	r0, r3
 6012 00c4 01D0     		beq	.L157
 6013              	.LVL529:
 6014              	.LBB6096:
 6015              	.LBI6096:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6016              		.loc 5 236 7 is_stmt 1 view .LVU1511
 6017              	.LBB6097:
 6018              	.LBB6098:
 6019              	.LBI6098:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6020              		.loc 10 469 7 view .LVU1512
 6021              	.LBB6099:
 6022              	.LBI6099:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6023              		.loc 7 119 7 view .LVU1513
 6024              	.LBB6100:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6025              		.loc 7 128 19 is_stmt 0 view .LVU1514
 6026 00c6 FFF7FEFF 		bl	_ZdlPv
 6027              	.LVL530:
 6028              	.L157:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6029              		.loc 7 128 19 view .LVU1515
 6030              	.LBE6100:
 6031              	.LBE6099:
 6032              	.LBE6098:
 6033              	.LBE6097:
 6034              	.LBE6096:
 6035              	.LBE6091:
 6036              	.LBE6090:
 6037              	.LBB6101:
 6038              	.LBI6101:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6039              		.loc 5 150 14 is_stmt 1 view .LVU1516
 6040              	.LBB6102:
ARM GAS  /tmp/ccszdRNt.s 			page 382


 6041              	.LBI6102:
 6042              		.loc 6 153 7 view .LVU1517
 6043              	.LBB6103:
 6044              	.LBI6103:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6045              		.loc 7 89 7 view .LVU1518
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6046              		.loc 7 89 7 is_stmt 0 view .LVU1519
 6047              	.LBE6103:
 6048              	.LBE6102:
 6049              	.LBE6101:
 6050              	.LBE6089:
 6051              	.LBB6104:
 6052              	.LBI6104:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 6053              		.loc 5 657 7 is_stmt 1 view .LVU1520
 6054              	.LBB6105:
 6055              	.LBI6105:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6056              		.loc 5 229 7 view .LVU1521
 6057              	.LBB6106:
 6058              	.LBB6107:
 6059              	.LBI6107:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6060              		.loc 5 221 7 view .LVU1522
 6061              	.LBB6108:
 6062              	.LBI6108:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6063              		.loc 5 186 7 view .LVU1523
 6064              	.LBB6109:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6065              		.loc 5 187 28 is_stmt 0 view .LVU1524
 6066 00ca 0898     		ldr	r0, [sp, #32]
 6067              	.LVL531:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6068              		.loc 5 187 28 view .LVU1525
 6069              	.LBE6109:
 6070              	.LBE6108:
 6071              	.LBB6110:
 6072              	.LBI6110:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6073              		.loc 5 200 7 is_stmt 1 view .LVU1526
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6074              		.loc 5 200 7 is_stmt 0 view .LVU1527
 6075              	.LBE6110:
 6076              	.LBE6107:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6077              		.loc 5 231 2 view .LVU1528
 6078 00cc 0AAB     		add	r3, sp, #40
 6079 00ce 9842     		cmp	r0, r3
 6080 00d0 01D0     		beq	.L158
 6081              	.LVL532:
 6082              	.LBB6111:
 6083              	.LBI6111:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6084              		.loc 5 236 7 is_stmt 1 view .LVU1529
 6085              	.LBB6112:
ARM GAS  /tmp/ccszdRNt.s 			page 383


 6086              	.LBB6113:
 6087              	.LBI6113:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6088              		.loc 10 469 7 view .LVU1530
 6089              	.LBB6114:
 6090              	.LBI6114:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6091              		.loc 7 119 7 view .LVU1531
 6092              	.LBB6115:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6093              		.loc 7 128 19 is_stmt 0 view .LVU1532
 6094 00d2 FFF7FEFF 		bl	_ZdlPv
 6095              	.LVL533:
 6096              	.L158:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6097              		.loc 7 128 19 view .LVU1533
 6098              	.LBE6115:
 6099              	.LBE6114:
 6100              	.LBE6113:
 6101              	.LBE6112:
 6102              	.LBE6111:
 6103              	.LBE6106:
 6104              	.LBE6105:
 6105              	.LBB6116:
 6106              	.LBI6116:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6107              		.loc 5 150 14 is_stmt 1 view .LVU1534
 6108              	.LBB6117:
 6109              	.LBI6117:
 6110              		.loc 6 153 7 view .LVU1535
 6111              	.LBB6118:
 6112              	.LBI6118:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6113              		.loc 7 89 7 view .LVU1536
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6114              		.loc 7 89 7 is_stmt 0 view .LVU1537
 6115              	.LBE6118:
 6116              	.LBE6117:
 6117              	.LBE6116:
 6118              	.LBE6104:
 6119              	.LBB6119:
 6120              	.LBI6119:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 6121              		.loc 5 657 7 is_stmt 1 view .LVU1538
 6122              	.LBB6120:
 6123              	.LBI6120:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6124              		.loc 5 229 7 view .LVU1539
 6125              	.LBB6121:
 6126              	.LBB6122:
 6127              	.LBI6122:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6128              		.loc 5 221 7 view .LVU1540
 6129              	.LBB6123:
 6130              	.LBI6123:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6131              		.loc 5 186 7 view .LVU1541
ARM GAS  /tmp/ccszdRNt.s 			page 384


 6132              	.LBB6124:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6133              		.loc 5 187 28 is_stmt 0 view .LVU1542
 6134 00d6 0E98     		ldr	r0, [sp, #56]
 6135              	.LVL534:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6136              		.loc 5 187 28 view .LVU1543
 6137              	.LBE6124:
 6138              	.LBE6123:
 6139              	.LBB6125:
 6140              	.LBI6125:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6141              		.loc 5 200 7 is_stmt 1 view .LVU1544
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6142              		.loc 5 200 7 is_stmt 0 view .LVU1545
 6143              	.LBE6125:
 6144              	.LBE6122:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6145              		.loc 5 231 2 view .LVU1546
 6146 00d8 10AB     		add	r3, sp, #64
 6147 00da 9842     		cmp	r0, r3
 6148 00dc 01D0     		beq	.L159
 6149              	.LVL535:
 6150              	.LBB6126:
 6151              	.LBI6126:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6152              		.loc 5 236 7 is_stmt 1 view .LVU1547
 6153              	.LBB6127:
 6154              	.LBB6128:
 6155              	.LBI6128:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6156              		.loc 10 469 7 view .LVU1548
 6157              	.LBB6129:
 6158              	.LBI6129:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6159              		.loc 7 119 7 view .LVU1549
 6160              	.LBB6130:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6161              		.loc 7 128 19 is_stmt 0 view .LVU1550
 6162 00de FFF7FEFF 		bl	_ZdlPv
 6163              	.LVL536:
 6164              	.L159:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6165              		.loc 7 128 19 view .LVU1551
 6166              	.LBE6130:
 6167              	.LBE6129:
 6168              	.LBE6128:
 6169              	.LBE6127:
 6170              	.LBE6126:
 6171              	.LBE6121:
 6172              	.LBE6120:
 6173              	.LBB6131:
 6174              	.LBI6131:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6175              		.loc 5 150 14 is_stmt 1 view .LVU1552
 6176              	.LBB6132:
 6177              	.LBI6132:
ARM GAS  /tmp/ccszdRNt.s 			page 385


 6178              		.loc 6 153 7 view .LVU1553
 6179              	.LBB6133:
 6180              	.LBI6133:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6181              		.loc 7 89 7 view .LVU1554
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6182              		.loc 7 89 7 is_stmt 0 view .LVU1555
 6183              	.LBE6133:
 6184              	.LBE6132:
 6185              	.LBE6131:
 6186              	.LBE6119:
 6187              	.LBB6134:
 6188              	.LBI6134:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 6189              		.loc 5 657 7 is_stmt 1 view .LVU1556
 6190              	.LBB6135:
 6191              	.LBI6135:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6192              		.loc 5 229 7 view .LVU1557
 6193              	.LBB6136:
 6194              	.LBB6137:
 6195              	.LBI6137:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6196              		.loc 5 221 7 view .LVU1558
 6197              	.LBB6138:
 6198              	.LBI6138:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6199              		.loc 5 186 7 view .LVU1559
 6200              	.LBB6139:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6201              		.loc 5 187 28 is_stmt 0 view .LVU1560
 6202 00e2 1498     		ldr	r0, [sp, #80]
 6203              	.LVL537:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6204              		.loc 5 187 28 view .LVU1561
 6205              	.LBE6139:
 6206              	.LBE6138:
 6207              	.LBB6140:
 6208              	.LBI6140:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6209              		.loc 5 200 7 is_stmt 1 view .LVU1562
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6210              		.loc 5 200 7 is_stmt 0 view .LVU1563
 6211              	.LBE6140:
 6212              	.LBE6137:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6213              		.loc 5 231 2 view .LVU1564
 6214 00e4 16AB     		add	r3, sp, #88
 6215 00e6 9842     		cmp	r0, r3
 6216 00e8 01D0     		beq	.L161
 6217              	.LVL538:
 6218              	.LBB6141:
 6219              	.LBI6141:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6220              		.loc 5 236 7 is_stmt 1 view .LVU1565
 6221              	.LBB6142:
 6222              	.LBB6143:
ARM GAS  /tmp/ccszdRNt.s 			page 386


 6223              	.LBI6143:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6224              		.loc 10 469 7 view .LVU1566
 6225              	.LBB6144:
 6226              	.LBI6144:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6227              		.loc 7 119 7 view .LVU1567
 6228              	.LBB6145:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6229              		.loc 7 128 19 is_stmt 0 view .LVU1568
 6230 00ea FFF7FEFF 		bl	_ZdlPv
 6231              	.LVL539:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6232              		.loc 7 128 19 view .LVU1569
 6233              	.LBE6145:
 6234              	.LBE6144:
 6235              	.LBE6143:
 6236              	.LBE6142:
 6237              	.LBE6141:
 6238              	.LBE6136:
 6239              	.LBE6135:
 6240              	.LBB6146:
 6241              	.LBI6146:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6242              		.loc 5 150 14 is_stmt 1 view .LVU1570
 6243              	.LBB6147:
 6244              	.LBI6147:
 6245              		.loc 6 153 7 view .LVU1571
 6246              	.LBB6148:
 6247              	.LBI6148:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6248              		.loc 7 89 7 view .LVU1572
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6249              		.loc 7 89 7 is_stmt 0 view .LVU1573
 6250              	.LBE6148:
 6251              	.LBE6147:
 6252              	.LBE6146:
 6253              	.LBE6134:
 6254              	.LBB6149:
 6255              	.LBI6149:
 6256              		.loc 6 153 7 is_stmt 1 view .LVU1574
 6257              	.LBB6150:
 6258              	.LBI6150:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6259              		.loc 7 89 7 view .LVU1575
 6260              	.L161:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6261              		.loc 7 89 7 is_stmt 0 view .LVU1576
 6262              	.LBE6150:
 6263              	.LBE6149:
 190:alohal/cli/cli.cpp ****     return actual_line.length();
 6264              		.loc 2 190 5 is_stmt 1 view .LVU1577
 190:alohal/cli/cli.cpp ****     return actual_line.length();
 6265              		.loc 2 190 25 is_stmt 0 view .LVU1578
 6266 00ee 211D     		adds	r1, r4, #4
 6267 00f0 2000     		movs	r0, r4
 6268 00f2 1C30     		adds	r0, r0, #28
ARM GAS  /tmp/ccszdRNt.s 			page 387


 6269              	.LVL540:
 6270              	.LBB6151:
 6271              	.LBI6151:
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6272              		.loc 5 665 7 is_stmt 1 view .LVU1579
 6273              	.LBB6152:
 6274              	.LBI6152:
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6275              		.loc 5 1364 7 view .LVU1580
 6276              	.LBB6153:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 6277              		.loc 5 1366 2 is_stmt 0 view .LVU1581
 6278 00f4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 6279              	.LVL541:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 6280              		.loc 5 1366 2 view .LVU1582
 6281              	.LBE6153:
 6282              	.LBE6152:
 6283              	.LBE6151:
 191:alohal/cli/cli.cpp **** }
 6284              		.loc 2 191 5 is_stmt 1 view .LVU1583
 6285              	.LBB6154:
 6286              	.LBI6154:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6287              		.loc 5 936 7 view .LVU1584
 6288              	.LBB6155:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6289              		.loc 5 937 16 is_stmt 0 view .LVU1585
 6290 00f8 A068     		ldr	r0, [r4, #8]
 6291              	.LVL542:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6292              		.loc 5 937 16 view .LVU1586
 6293              	.LBE6155:
 6294              	.LBE6154:
 192:alohal/cli/cli.cpp **** 
 6295              		.loc 2 192 1 view .LVU1587
 6296 00fa 20B0     		add	sp, sp, #128
 6297              		@ sp needed
 6298              	.LVL543:
 192:alohal/cli/cli.cpp **** 
 6299              		.loc 2 192 1 view .LVU1588
 6300 00fc 70BD     		pop	{r4, r5, r6, pc}
 6301              	.LVL544:
 6302              	.L163:
 6303              	.LBB6156:
 6304              	.LBB5993:
 6305              	.LBB5992:
 6306              	.LBB5991:
 6307              	.LBB5989:
 6308              	.LBI5989:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6309              		.loc 4 361 7 is_stmt 1 view .LVU1589
 6310              	.LBB5990:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6311              		.loc 4 363 2 view .LVU1590
 6312              		.loc 4 365 2 view .LVU1591
 6313              		.loc 4 365 49 is_stmt 0 view .LVU1592
ARM GAS  /tmp/ccszdRNt.s 			page 388


 6314 00fe 1022     		movs	r2, #16
 6315 0100 3100     		movs	r1, r6
 6316 0102 10A8     		add	r0, sp, #64
 6317              	.LVL545:
 6318              		.loc 4 365 49 view .LVU1593
 6319 0104 FFF7FEFF 		bl	memcpy
 6320              	.LVL546:
 6321              		.loc 4 365 49 view .LVU1594
 6322 0108 9FE7     		b	.L151
 6323              	.LVL547:
 6324              	.L164:
 6325              		.loc 4 365 49 view .LVU1595
 6326              	.LBE5990:
 6327              	.LBE5989:
 6328              	.LBE5991:
 6329              	.LBE5992:
 6330              	.LBE5993:
 6331              	.LBE6156:
 6332              	.LBB6157:
 6333              	.LBB6043:
 6334              	.LBB6004:
 6335              	.LBB6003:
 6336              	.LBB6002:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 6337              		.loc 5 323 24 view .LVU1596
 6338 010a 1148     		ldr	r0, .L167+8
 6339 010c FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 6340              	.LVL548:
 6341              	.L165:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 6342              		.loc 5 323 24 view .LVU1597
 6343              	.LBE6002:
 6344              	.LBE6003:
 6345              	.LBE6004:
 6346              	.LBE6043:
 6347              	.LBB6044:
 6348              	.LBB6042:
 6349              	.LBB6041:
 6350              	.LBB6039:
 6351              	.LBI6039:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6352              		.loc 4 361 7 is_stmt 1 view .LVU1598
 6353              	.LBB6040:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6354              		.loc 4 363 2 view .LVU1599
 6355              		.loc 4 365 2 view .LVU1600
 6356              		.loc 4 365 49 is_stmt 0 view .LVU1601
 6357 0110 1022     		movs	r2, #16
 6358 0112 3100     		movs	r1, r6
 6359 0114 0AA8     		add	r0, sp, #40
 6360              	.LVL549:
 6361              		.loc 4 365 49 view .LVU1602
 6362 0116 FFF7FEFF 		bl	memcpy
 6363              	.LVL550:
 6364              		.loc 4 365 49 view .LVU1603
 6365 011a B0E7     		b	.L154
 6366              	.LVL551:
ARM GAS  /tmp/ccszdRNt.s 			page 389


 6367              	.L166:
 6368              		.loc 4 365 49 view .LVU1604
 6369              	.LBE6040:
 6370              	.LBE6039:
 6371              	.LBE6041:
 6372              	.LBE6042:
 6373              	.LBE6044:
 6374              	.LBE6157:
 6375              	.LBB6158:
 6376              	.LBB6088:
 6377              	.LBB6087:
 6378              	.LBB6086:
 6379              	.LBB6084:
 6380              	.LBI6084:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6381              		.loc 4 361 7 is_stmt 1 view .LVU1605
 6382              	.LBB6085:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6383              		.loc 4 363 2 view .LVU1606
 6384              		.loc 4 365 2 view .LVU1607
 6385              		.loc 4 365 49 is_stmt 0 view .LVU1608
 6386 011c 1022     		movs	r2, #16
 6387 011e 3100     		movs	r1, r6
 6388 0120 04A8     		add	r0, sp, #16
 6389              	.LVL552:
 6390              		.loc 4 365 49 view .LVU1609
 6391 0122 FFF7FEFF 		bl	memcpy
 6392              	.LVL553:
 6393              		.loc 4 365 49 view .LVU1610
 6394 0126 C0E7     		b	.L156
 6395              	.LVL554:
 6396              	.L148:
 6397              		.loc 4 365 49 view .LVU1611
 6398              	.LBE6085:
 6399              	.LBE6084:
 6400              	.LBE6086:
 6401              	.LBE6087:
 6402              	.LBE6088:
 6403              	.LBE6158:
 188:alohal/cli/cli.cpp ****     }
 6404              		.loc 2 188 9 is_stmt 1 view .LVU1612
 188:alohal/cli/cli.cpp ****     }
 6405              		.loc 2 188 22 is_stmt 0 view .LVU1613
 6406 0128 021D     		adds	r2, r0, #4
 188:alohal/cli/cli.cpp ****     }
 6407              		.loc 2 188 20 view .LVU1614
 6408 012a 0749     		ldr	r1, .L167
 6409 012c 1AA8     		add	r0, sp, #104
 6410              	.LVL555:
 188:alohal/cli/cli.cpp ****     }
 6411              		.loc 2 188 20 view .LVU1615
 6412 012e FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 6413              	.LVL556:
 188:alohal/cli/cli.cpp ****     }
 6414              		.loc 2 188 14 view .LVU1616
 6415 0132 1AA9     		add	r1, sp, #104
 6416 0134 2000     		movs	r0, r4
ARM GAS  /tmp/ccszdRNt.s 			page 390


 6417 0136 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 6418              	.LVL557:
 6419              	.LBB6159:
 6420              	.LBI6159:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 6421              		.loc 5 657 7 is_stmt 1 view .LVU1617
 6422              	.LBB6160:
 6423              	.LBI6160:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6424              		.loc 5 229 7 view .LVU1618
 6425              	.LBB6161:
 6426              	.LBB6162:
 6427              	.LBI6162:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6428              		.loc 5 221 7 view .LVU1619
 6429              	.LBB6163:
 6430              	.LBI6163:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6431              		.loc 5 186 7 view .LVU1620
 6432              	.LBB6164:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6433              		.loc 5 187 28 is_stmt 0 view .LVU1621
 6434 013a 1A98     		ldr	r0, [sp, #104]
 6435              	.LVL558:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6436              		.loc 5 187 28 view .LVU1622
 6437              	.LBE6164:
 6438              	.LBE6163:
 6439              	.LBB6165:
 6440              	.LBI6165:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6441              		.loc 5 200 7 is_stmt 1 view .LVU1623
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6442              		.loc 5 200 7 is_stmt 0 view .LVU1624
 6443              	.LBE6165:
 6444              	.LBE6162:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6445              		.loc 5 231 2 view .LVU1625
 6446 013c 1CAB     		add	r3, sp, #112
 6447 013e 9842     		cmp	r0, r3
 6448 0140 D5D0     		beq	.L161
 6449              	.LVL559:
 6450              	.LBB6166:
 6451              	.LBI6166:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6452              		.loc 5 236 7 is_stmt 1 view .LVU1626
 6453              	.LBB6167:
 6454              	.LBB6168:
 6455              	.LBI6168:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6456              		.loc 10 469 7 view .LVU1627
 6457              	.LBB6169:
 6458              	.LBI6169:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6459              		.loc 7 119 7 view .LVU1628
 6460              	.LBB6170:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 391


 6461              		.loc 7 128 19 is_stmt 0 view .LVU1629
 6462 0142 FFF7FEFF 		bl	_ZdlPv
 6463              	.LVL560:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6464              		.loc 7 128 19 view .LVU1630
 6465              	.LBE6170:
 6466              	.LBE6169:
 6467              	.LBE6168:
 6468              	.LBE6167:
 6469              	.LBE6166:
 6470              	.LBE6161:
 6471              	.LBE6160:
 6472              	.LBB6174:
 6473              	.LBI6174:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6474              		.loc 5 150 14 is_stmt 1 view .LVU1631
 6475              	.LBB6175:
 6476              	.LBI6175:
 6477              		.loc 6 153 7 view .LVU1632
 6478              	.LBB6176:
 6479              	.LBI6176:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6480              		.loc 7 89 7 view .LVU1633
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6481              		.loc 7 89 7 is_stmt 0 view .LVU1634
 6482              	.LBE6176:
 6483              	.LBE6175:
 6484              	.LBE6174:
 6485              	.LBB6177:
 6486              	.LBB6173:
 6487              	.LBB6172:
 6488              	.LBB6171:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6489              		.loc 5 237 79 view .LVU1635
 6490 0146 D2E7     		b	.L161
 6491              	.L168:
 6492              		.align	2
 6493              	.L167:
 6494 0148 00000000 		.word	.LC18
 6495 014c FFFFFF3F 		.word	1073741823
 6496 0150 00000000 		.word	.LC0
 6497              	.LBE6171:
 6498              	.LBE6172:
 6499              	.LBE6173:
 6500              	.LBE6177:
 6501              	.LBE6159:
 6502              		.cfi_endproc
 6503              	.LFE3870:
 6505              		.section	.text._ZN3CLI10Clear_lineEv,"ax",%progbits
 6506              		.align	1
 6507              		.global	_ZN3CLI10Clear_lineEv
 6508              		.syntax unified
 6509              		.code	16
 6510              		.thumb_func
 6511              		.fpu softvfp
 6513              	_ZN3CLI10Clear_lineEv:
 6514              	.LVL561:
ARM GAS  /tmp/ccszdRNt.s 			page 392


 6515              	.LFB3873:
 208:alohal/cli/cli.cpp ****     actual_line = line_prefix + line_opening;
 6516              		.loc 2 208 23 is_stmt 1 view -0
 6517              		.cfi_startproc
 6518              		@ args = 0, pretend = 0, frame = 32
 6519              		@ frame_needed = 0, uses_anonymous_args = 0
 208:alohal/cli/cli.cpp ****     actual_line = line_prefix + line_opening;
 6520              		.loc 2 208 23 is_stmt 0 view .LVU1637
 6521 0000 70B5     		push	{r4, r5, r6, lr}
 6522              	.LCFI33:
 6523              		.cfi_def_cfa_offset 16
 6524              		.cfi_offset 4, -16
 6525              		.cfi_offset 5, -12
 6526              		.cfi_offset 6, -8
 6527              		.cfi_offset 14, -4
 6528 0002 88B0     		sub	sp, sp, #32
 6529              	.LCFI34:
 6530              		.cfi_def_cfa_offset 48
 6531 0004 0400     		movs	r4, r0
 209:alohal/cli/cli.cpp ****     Redraw_line();
 6532              		.loc 2 209 5 is_stmt 1 view .LVU1638
 209:alohal/cli/cli.cpp ****     Redraw_line();
 6533              		.loc 2 209 19 is_stmt 0 view .LVU1639
 6534 0006 0100     		movs	r1, r0
 6535 0008 5031     		adds	r1, r1, #80
 209:alohal/cli/cli.cpp ****     Redraw_line();
 6536              		.loc 2 209 33 view .LVU1640
 6537 000a 0200     		movs	r2, r0
 6538 000c 3432     		adds	r2, r2, #52
 209:alohal/cli/cli.cpp ****     Redraw_line();
 6539              		.loc 2 209 31 view .LVU1641
 6540 000e 02A8     		add	r0, sp, #8
 6541              	.LVL562:
 209:alohal/cli/cli.cpp ****     Redraw_line();
 6542              		.loc 2 209 31 view .LVU1642
 6543 0010 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
 6544              	.LVL563:
 209:alohal/cli/cli.cpp ****     Redraw_line();
 6545              		.loc 2 209 33 view .LVU1643
 6546 0014 251D     		adds	r5, r4, #4
 6547              	.LVL564:
 6548              	.LBB6247:
 6549              	.LBI6247:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 6550              		.loc 5 732 7 is_stmt 1 view .LVU1644
 6551              	.LBB6248:
 6552              	.LBI6248:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6553              		.loc 5 221 7 view .LVU1645
 6554              	.LBB6249:
 6555              	.LBI6249:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6556              		.loc 5 186 7 view .LVU1646
 6557              	.LBB6250:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6558              		.loc 5 187 28 is_stmt 0 view .LVU1647
 6559 0016 6068     		ldr	r0, [r4, #4]
ARM GAS  /tmp/ccszdRNt.s 			page 393


 6560              	.LVL565:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6561              		.loc 5 187 28 view .LVU1648
 6562              	.LBE6250:
 6563              	.LBE6249:
 6564              	.LBB6251:
 6565              	.LBI6251:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6566              		.loc 5 200 7 is_stmt 1 view .LVU1649
 6567              	.LBB6252:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 6568              		.loc 5 203 57 is_stmt 0 view .LVU1650
 6569 0018 2200     		movs	r2, r4
 6570 001a 0C32     		adds	r2, r2, #12
 6571              	.LVL566:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 6572              		.loc 5 203 57 view .LVU1651
 6573              	.LBE6252:
 6574              	.LBE6251:
 6575              	.LBE6248:
 6576              	.LBB6253:
 6577              	.LBB6254:
 6578              	.LBI6254:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6579              		.loc 5 221 7 is_stmt 1 view .LVU1652
 6580              	.LBB6255:
 6581              	.LBI6255:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6582              		.loc 5 186 7 view .LVU1653
 6583              	.LBB6256:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6584              		.loc 5 187 28 is_stmt 0 view .LVU1654
 6585 001c 0299     		ldr	r1, [sp, #8]
 6586              	.LVL567:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6587              		.loc 5 187 28 view .LVU1655
 6588              	.LBE6256:
 6589              	.LBE6255:
 6590              	.LBB6257:
 6591              	.LBI6257:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6592              		.loc 5 200 7 is_stmt 1 view .LVU1656
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6593              		.loc 5 200 7 is_stmt 0 view .LVU1657
 6594              	.LBE6257:
 6595              	.LBE6254:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 6596              		.loc 5 747 2 view .LVU1658
 6597 001e 04AB     		add	r3, sp, #16
 6598 0020 9942     		cmp	r1, r3
 6599 0022 1BD0     		beq	.L178
 6600              	.LVL568:
 6601              	.LBB6258:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 6602              		.loc 5 761 6 view .LVU1659
 6603 0024 9042     		cmp	r0, r2
 6604 0026 2BD0     		beq	.L177
ARM GAS  /tmp/ccszdRNt.s 			page 394


 6605              	.LVL569:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 6606              		.loc 5 767 7 view .LVU1660
 6607 0028 AE68     		ldr	r6, [r5, #8]
 6608              	.LVL570:
 6609              	.L174:
 6610              	.LBB6259:
 6611              	.LBI6259:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 6612              		.loc 5 178 7 is_stmt 1 view .LVU1661
 6613              	.LBB6260:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6614              		.loc 5 179 9 is_stmt 0 view .LVU1662
 6615 002a 6160     		str	r1, [r4, #4]
 6616              	.LVL571:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6617              		.loc 5 179 9 view .LVU1663
 6618              	.LBE6260:
 6619              	.LBE6259:
 6620              	.LBB6261:
 6621              	.LBI6261:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6622              		.loc 5 936 7 is_stmt 1 view .LVU1664
 6623              	.LBB6262:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6624              		.loc 5 937 16 is_stmt 0 view .LVU1665
 6625 002c 039B     		ldr	r3, [sp, #12]
 6626 002e 0193     		str	r3, [sp, #4]
 6627              	.LVL572:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6628              		.loc 5 937 16 view .LVU1666
 6629              	.LBE6262:
 6630              	.LBE6261:
 6631              	.LBB6263:
 6632              	.LBI6263:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6633              		.loc 5 182 7 is_stmt 1 view .LVU1667
 6634              	.LBB6264:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6635              		.loc 5 183 9 is_stmt 0 view .LVU1668
 6636 0030 6B60     		str	r3, [r5, #4]
 6637              	.LVL573:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6638              		.loc 5 183 9 view .LVU1669
 6639              	.LBE6264:
 6640              	.LBE6263:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 6641              		.loc 5 775 6 view .LVU1670
 6642 0032 049B     		ldr	r3, [sp, #16]
 6643 0034 AB60     		str	r3, [r5, #8]
 6644              	.LVL574:
 6645              	.LBB6265:
 6646              	.LBI6265:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 6647              		.loc 5 210 7 is_stmt 1 view .LVU1671
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 6648              		.loc 5 210 7 is_stmt 0 view .LVU1672
ARM GAS  /tmp/ccszdRNt.s 			page 395


 6649              	.LBE6265:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 6650              		.loc 5 776 6 view .LVU1673
 6651 0036 0028     		cmp	r0, #0
 6652 0038 24D0     		beq	.L175
 6653              	.LVL575:
 6654              	.LBB6266:
 6655              	.LBI6266:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 6656              		.loc 5 178 7 is_stmt 1 view .LVU1674
 6657              	.LBB6267:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6658              		.loc 5 179 9 is_stmt 0 view .LVU1675
 6659 003a 0290     		str	r0, [sp, #8]
 6660              	.LVL576:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6661              		.loc 5 179 9 view .LVU1676
 6662              	.LBE6267:
 6663              	.LBE6266:
 6664              	.LBB6268:
 6665              	.LBI6268:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 6666              		.loc 5 210 7 is_stmt 1 view .LVU1677
 6667              	.LBB6269:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6668              		.loc 5 211 9 is_stmt 0 view .LVU1678
 6669 003c 0496     		str	r6, [sp, #16]
 6670              	.LVL577:
 6671              	.L173:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6672              		.loc 5 211 9 view .LVU1679
 6673              	.LBE6269:
 6674              	.LBE6268:
 6675              	.LBE6258:
 6676              	.LBE6253:
 6677              	.LBB6292:
 6678              	.LBI6292:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 6679              		.loc 5 1023 7 is_stmt 1 view .LVU1680
 6680              	.LBB6293:
 6681              	.LBI6293:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6682              		.loc 5 214 7 view .LVU1681
 6683              	.LBB6294:
 6684              	.LBI6294:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6685              		.loc 5 182 7 view .LVU1682
 6686              	.LBB6295:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6687              		.loc 5 183 9 is_stmt 0 view .LVU1683
 6688 003e 0023     		movs	r3, #0
 6689 0040 0393     		str	r3, [sp, #12]
 6690              	.LVL578:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6691              		.loc 5 183 9 view .LVU1684
 6692              	.LBE6295:
 6693              	.LBE6294:
ARM GAS  /tmp/ccszdRNt.s 			page 396


 6694              	.LBB6296:
 6695              	.LBI6296:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6696              		.loc 5 186 7 is_stmt 1 view .LVU1685
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6697              		.loc 5 186 7 is_stmt 0 view .LVU1686
 6698              	.LBE6296:
 6699              	.LBB6297:
 6700              	.LBI6297:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6701              		.loc 4 299 7 is_stmt 1 view .LVU1687
 6702              	.LBB6298:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6703              		.loc 4 300 9 view .LVU1688
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6704              		.loc 4 300 14 is_stmt 0 view .LVU1689
 6705 0042 029A     		ldr	r2, [sp, #8]
 6706 0044 1370     		strb	r3, [r2]
 6707              	.LVL579:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6708              		.loc 4 300 14 view .LVU1690
 6709              	.LBE6298:
 6710              	.LBE6297:
 6711              	.LBE6293:
 6712              	.LBE6292:
 6713              	.LBE6247:
 6714              	.LBB6300:
 6715              	.LBI6300:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 6716              		.loc 5 657 7 is_stmt 1 view .LVU1691
 6717              	.LBB6301:
 6718              	.LBI6301:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6719              		.loc 5 229 7 view .LVU1692
 6720              	.LBB6302:
 6721              	.LBB6303:
 6722              	.LBI6303:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 6723              		.loc 5 221 7 view .LVU1693
 6724              	.LBB6304:
 6725              	.LBI6304:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6726              		.loc 5 186 7 view .LVU1694
 6727              	.LBB6305:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6728              		.loc 5 187 28 is_stmt 0 view .LVU1695
 6729 0046 0298     		ldr	r0, [sp, #8]
 6730              	.LVL580:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6731              		.loc 5 187 28 view .LVU1696
 6732              	.LBE6305:
 6733              	.LBE6304:
 6734              	.LBB6306:
 6735              	.LBI6306:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6736              		.loc 5 200 7 is_stmt 1 view .LVU1697
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 397


 6737              		.loc 5 200 7 is_stmt 0 view .LVU1698
 6738              	.LBE6306:
 6739              	.LBE6303:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 6740              		.loc 5 231 2 view .LVU1699
 6741 0048 04AB     		add	r3, sp, #16
 6742 004a 9842     		cmp	r0, r3
 6743 004c 01D0     		beq	.L176
 6744              	.LVL581:
 6745              	.LBB6307:
 6746              	.LBI6307:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 6747              		.loc 5 236 7 is_stmt 1 view .LVU1700
 6748              	.LBB6308:
 6749              	.LBB6309:
 6750              	.LBI6309:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 6751              		.loc 10 469 7 view .LVU1701
 6752              	.LBB6310:
 6753              	.LBI6310:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 6754              		.loc 7 119 7 view .LVU1702
 6755              	.LBB6311:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6756              		.loc 7 128 19 is_stmt 0 view .LVU1703
 6757 004e FFF7FEFF 		bl	_ZdlPv
 6758              	.LVL582:
 6759              	.L176:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 6760              		.loc 7 128 19 view .LVU1704
 6761              	.LBE6311:
 6762              	.LBE6310:
 6763              	.LBE6309:
 6764              	.LBE6308:
 6765              	.LBE6307:
 6766              	.LBE6302:
 6767              	.LBE6301:
 6768              	.LBB6312:
 6769              	.LBI6312:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6770              		.loc 5 150 14 is_stmt 1 view .LVU1705
 6771              	.LBB6313:
 6772              	.LBI6313:
 6773              		.loc 6 153 7 view .LVU1706
 6774              	.LBB6314:
 6775              	.LBI6314:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6776              		.loc 7 89 7 view .LVU1707
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 6777              		.loc 7 89 7 is_stmt 0 view .LVU1708
 6778              	.LBE6314:
 6779              	.LBE6313:
 6780              	.LBE6312:
 6781              	.LBE6300:
 210:alohal/cli/cli.cpp **** }
 6782              		.loc 2 210 5 is_stmt 1 view .LVU1709
 210:alohal/cli/cli.cpp **** }
ARM GAS  /tmp/ccszdRNt.s 			page 398


 6783              		.loc 2 210 16 is_stmt 0 view .LVU1710
 6784 0052 2000     		movs	r0, r4
 6785 0054 FFF7FEFF 		bl	_ZN3CLI11Redraw_lineEv
 6786              	.LVL583:
 211:alohal/cli/cli.cpp **** 
 6787              		.loc 2 211 1 view .LVU1711
 6788 0058 08B0     		add	sp, sp, #32
 6789              		@ sp needed
 6790              	.LVL584:
 6791              	.LVL585:
 211:alohal/cli/cli.cpp **** 
 6792              		.loc 2 211 1 view .LVU1712
 6793 005a 70BD     		pop	{r4, r5, r6, pc}
 6794              	.LVL586:
 6795              	.L178:
 6796              	.LBB6315:
 6797              	.LBB6299:
 6798              	.LBB6272:
 6799              	.LBI6272:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6800              		.loc 5 930 7 is_stmt 1 view .LVU1713
 6801              	.LBB6273:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6802              		.loc 5 931 16 is_stmt 0 view .LVU1714
 6803 005c 039A     		ldr	r2, [sp, #12]
 6804              	.LVL587:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6805              		.loc 5 931 16 view .LVU1715
 6806              	.LBE6273:
 6807              	.LBE6272:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 6808              		.loc 5 750 6 view .LVU1716
 6809 005e 002A     		cmp	r2, #0
 6810 0060 03D0     		beq	.L171
 6811              	.LVL588:
 6812              	.LBB6274:
 6813              	.LBI6274:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6814              		.loc 5 346 7 is_stmt 1 view .LVU1717
 6815              	.LBB6275:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 6816              		.loc 5 348 2 is_stmt 0 view .LVU1718
 6817 0062 012A     		cmp	r2, #1
 6818 0064 09D0     		beq	.L179
 6819              	.LVL589:
 6820              	.LBB6276:
 6821              	.LBI6276:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 6822              		.loc 4 361 7 is_stmt 1 view .LVU1719
 6823              	.LBB6277:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 6824              		.loc 4 363 2 view .LVU1720
 6825              		.loc 4 365 2 view .LVU1721
 6826              		.loc 4 365 49 is_stmt 0 view .LVU1722
 6827 0066 FFF7FEFF 		bl	memcpy
 6828              	.LVL590:
 6829              	.L171:
ARM GAS  /tmp/ccszdRNt.s 			page 399


 6830              		.loc 4 365 49 view .LVU1723
 6831              	.LBE6277:
 6832              	.LBE6276:
 6833              	.LBE6275:
 6834              	.LBE6274:
 6835              	.LBB6281:
 6836              	.LBI6281:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 6837              		.loc 5 930 7 is_stmt 1 view .LVU1724
 6838              	.LBB6282:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6839              		.loc 5 931 16 is_stmt 0 view .LVU1725
 6840 006a 039B     		ldr	r3, [sp, #12]
 6841              	.LVL591:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6842              		.loc 5 931 16 view .LVU1726
 6843              	.LBE6282:
 6844              	.LBE6281:
 6845              	.LBB6283:
 6846              	.LBI6283:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6847              		.loc 5 214 7 is_stmt 1 view .LVU1727
 6848              	.LBB6284:
 6849              	.LBB6285:
 6850              	.LBI6285:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 6851              		.loc 5 182 7 view .LVU1728
 6852              	.LBB6286:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6853              		.loc 5 183 9 is_stmt 0 view .LVU1729
 6854 006c 6B60     		str	r3, [r5, #4]
 6855              	.LVL592:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6856              		.loc 5 183 9 view .LVU1730
 6857              	.LBE6286:
 6858              	.LBE6285:
 6859              	.LBB6287:
 6860              	.LBI6287:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6861              		.loc 5 186 7 is_stmt 1 view .LVU1731
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 6862              		.loc 5 186 7 is_stmt 0 view .LVU1732
 6863              	.LBE6287:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 6864              		.loc 5 217 31 view .LVU1733
 6865 006e 6268     		ldr	r2, [r4, #4]
 6866 0070 9446     		mov	ip, r2
 6867 0072 6344     		add	r3, r3, ip
 6868              	.LVL593:
 6869              	.LBB6288:
 6870              	.LBI6288:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6871              		.loc 4 299 7 is_stmt 1 view .LVU1734
 6872              	.LBB6289:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6873              		.loc 4 300 9 view .LVU1735
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 400


 6874              		.loc 4 300 14 is_stmt 0 view .LVU1736
 6875 0074 0022     		movs	r2, #0
 6876 0076 1A70     		strb	r2, [r3]
 6877              	.LVL594:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6878              		.loc 4 300 14 view .LVU1737
 6879              	.LBE6289:
 6880              	.LBE6288:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6881              		.loc 5 218 7 view .LVU1738
 6882 0078 E1E7     		b	.L173
 6883              	.LVL595:
 6884              	.L179:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6885              		.loc 5 218 7 view .LVU1739
 6886              	.LBE6284:
 6887              	.LBE6283:
 6888              	.LBB6290:
 6889              	.LBB6280:
 6890              	.LBB6278:
 6891              	.LBI6278:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 6892              		.loc 4 299 7 is_stmt 1 view .LVU1740
 6893              	.LBB6279:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6894              		.loc 4 300 9 view .LVU1741
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6895              		.loc 4 300 16 is_stmt 0 view .LVU1742
 6896 007a 0B78     		ldrb	r3, [r1]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6897              		.loc 4 300 14 view .LVU1743
 6898 007c 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6899              		.loc 4 300 22 view .LVU1744
 6900 007e F4E7     		b	.L171
 6901              	.LVL596:
 6902              	.L177:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 6903              		.loc 4 300 22 view .LVU1745
 6904              	.LBE6279:
 6905              	.LBE6278:
 6906              	.LBE6280:
 6907              	.LBE6290:
 6908              	.LBB6291:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 6909              		.loc 5 759 14 view .LVU1746
 6910 0080 0020     		movs	r0, #0
 6911 0082 D2E7     		b	.L174
 6912              	.LVL597:
 6913              	.L175:
 6914              	.LBB6270:
 6915              	.LBI6270:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 6916              		.loc 5 178 7 is_stmt 1 view .LVU1747
 6917              	.LBB6271:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6918              		.loc 5 179 9 is_stmt 0 view .LVU1748
ARM GAS  /tmp/ccszdRNt.s 			page 401


 6919 0084 04AB     		add	r3, sp, #16
 6920              	.LVL598:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6921              		.loc 5 179 9 view .LVU1749
 6922 0086 0293     		str	r3, [sp, #8]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 6923              		.loc 5 179 33 view .LVU1750
 6924 0088 D9E7     		b	.L173
 6925              	.LBE6271:
 6926              	.LBE6270:
 6927              	.LBE6291:
 6928              	.LBE6299:
 6929              	.LBE6315:
 6930              		.cfi_endproc
 6931              	.LFE3873:
 6933              		.section	.rodata._ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str
 6934              		.align	2
 6935              	.LC21:
 6936 0000 62617369 		.ascii	"basic_string::erase\000"
 6936      635F7374 
 6936      72696E67 
 6936      3A3A6572 
 6936      61736500 
 6937              		.align	2
 6938              	.LC23:
 6939 0014 25733A20 		.ascii	"%s: __pos (which is %zu) > this->size() (which is %"
 6939      5F5F706F 
 6939      73202877 
 6939      68696368 
 6939      20697320 
 6940 0047 7A752900 		.ascii	"zu)\000"
 6941 004b 00       		.align	2
 6942              	.LC25:
 6943 004c 1B5B3334 		.ascii	"\033[34;1m\000"
 6943      3B316D00 
 6944              		.align	2
 6945              	.LC28:
 6946 0054 1B5B306D 		.ascii	"\033[0m\000"
 6946      00
 6947              		.section	.text._ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"ax",
 6948              		.align	1
 6949              		.global	_ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 6950              		.syntax unified
 6951              		.code	16
 6952              		.thumb_func
 6953              		.fpu softvfp
 6955              	_ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 6956              	.LVL599:
 6957              	.LFB3872:
 199:alohal/cli/cli.cpp ****     line_prefix = prefix;
 6958              		.loc 2 199 47 is_stmt 1 view -0
 6959              		.cfi_startproc
 6960              		@ args = 0, pretend = 0, frame = 56
 6961              		@ frame_needed = 0, uses_anonymous_args = 0
 199:alohal/cli/cli.cpp ****     line_prefix = prefix;
 6962              		.loc 2 199 47 is_stmt 0 view .LVU1752
 6963 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  /tmp/ccszdRNt.s 			page 402


 6964              	.LCFI35:
 6965              		.cfi_def_cfa_offset 20
 6966              		.cfi_offset 4, -20
 6967              		.cfi_offset 5, -16
 6968              		.cfi_offset 6, -12
 6969              		.cfi_offset 7, -8
 6970              		.cfi_offset 14, -4
 6971 0002 C646     		mov	lr, r8
 6972 0004 00B5     		push	{lr}
 6973              	.LCFI36:
 6974              		.cfi_def_cfa_offset 24
 6975              		.cfi_offset 8, -24
 6976 0006 8EB0     		sub	sp, sp, #56
 6977              	.LCFI37:
 6978              		.cfi_def_cfa_offset 80
 6979 0008 0500     		movs	r5, r0
 200:alohal/cli/cli.cpp ****     if (line_prefix.back() == '/' && line_prefix.length() > 1) {
 6980              		.loc 2 200 5 is_stmt 1 view .LVU1753
 200:alohal/cli/cli.cpp ****     if (line_prefix.back() == '/' && line_prefix.length() > 1) {
 6981              		.loc 2 200 19 is_stmt 0 view .LVU1754
 6982 000a 0600     		movs	r6, r0
 6983 000c 5036     		adds	r6, r6, #80
 6984              	.LVL600:
 6985              	.LBB6474:
 6986              	.LBI6474:
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6987              		.loc 5 665 7 is_stmt 1 view .LVU1755
 6988              	.LBB6475:
 6989              	.LBI6475:
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 6990              		.loc 5 1364 7 view .LVU1756
 6991              	.LBB6476:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 6992              		.loc 5 1366 2 is_stmt 0 view .LVU1757
 6993 000e 3000     		movs	r0, r6
 6994              	.LVL601:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 6995              		.loc 5 1366 2 view .LVU1758
 6996 0010 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 6997              	.LVL602:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 6998              		.loc 5 1366 2 view .LVU1759
 6999              	.LBE6476:
 7000              	.LBE6475:
 7001              	.LBE6474:
 201:alohal/cli/cli.cpp ****         line_prefix.erase(line_prefix.length() - 1);
 7002              		.loc 2 201 5 is_stmt 1 view .LVU1760
 7003              	.LBB6477:
 7004              	.LBI6477:
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7005              		.loc 5 1143 7 view .LVU1761
 7006              	.LBB6478:
 7007              	.LBB6479:
 7008              	.LBI6479:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7009              		.loc 5 930 7 view .LVU1762
 7010              	.LBB6480:
ARM GAS  /tmp/ccszdRNt.s 			page 403


 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7011              		.loc 5 931 16 is_stmt 0 view .LVU1763
 7012 0014 6B6D     		ldr	r3, [r5, #84]
 7013              	.LVL603:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7014              		.loc 5 931 16 view .LVU1764
 7015              	.LBE6480:
 7016              	.LBE6479:
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7017              		.loc 5 1146 36 view .LVU1765
 7018 0016 5A1E     		subs	r2, r3, #1
 7019              	.LVL604:
 7020              	.LBB6481:
 7021              	.LBI6481:
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7022              		.loc 5 1063 7 is_stmt 1 view .LVU1766
 7023              	.LBB6482:
 7024              	.LBB6483:
 7025              	.LBI6483:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7026              		.loc 5 186 7 view .LVU1767
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7027              		.loc 5 186 7 is_stmt 0 view .LVU1768
 7028              	.LBE6483:
 7029              	.LBE6482:
 7030              	.LBE6481:
 7031              	.LBE6478:
 7032              	.LBE6477:
 201:alohal/cli/cli.cpp ****         line_prefix.erase(line_prefix.length() - 1);
 7033              		.loc 2 201 25 view .LVU1769
 7034 0018 296D     		ldr	r1, [r5, #80]
 7035 001a 895C     		ldrb	r1, [r1, r2]
 201:alohal/cli/cli.cpp ****         line_prefix.erase(line_prefix.length() - 1);
 7036              		.loc 2 201 35 view .LVU1770
 7037 001c 2F29     		cmp	r1, #47
 7038 001e 4CD0     		beq	.L195
 7039              	.L181:
 204:alohal/cli/cli.cpp ****     Clear_line();
 7040              		.loc 2 204 5 is_stmt 1 view .LVU1771
 204:alohal/cli/cli.cpp ****     Clear_line();
 7041              		.loc 2 204 34 is_stmt 0 view .LVU1772
 7042 0020 3200     		movs	r2, r6
 7043 0022 3E49     		ldr	r1, .L201
 7044 0024 08A8     		add	r0, sp, #32
 7045 0026 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 7046              	.LVL605:
 7047              	.LBB6484:
 7048              	.LBI6484:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 7049              		.loc 5 6121 5 is_stmt 1 view .LVU1773
 7050              	.LBB6485:
 7051              	.LBI6485:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7052              		.loc 5 1263 7 view .LVU1774
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7053              		.loc 5 1263 7 is_stmt 0 view .LVU1775
 7054              	.LBE6485:
ARM GAS  /tmp/ccszdRNt.s 			page 404


 7055              	.LBE6484:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 7056              		.loc 4 332 2 is_stmt 1 view .LVU1776
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 7057              		.loc 4 335 2 view .LVU1777
 7058              	.LBB6534:
 7059              	.LBB6494:
 7060              	.LBB6486:
 7061              	.LBB6487:
 7062              	.LBI6487:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7063              		.loc 5 320 7 view .LVU1778
 7064              	.LBB6488:
 7065              	.LBB6489:
 7066              	.LBI6489:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7067              		.loc 5 930 7 view .LVU1779
 7068              	.LBB6490:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7069              		.loc 5 931 16 is_stmt 0 view .LVU1780
 7070 002a 099A     		ldr	r2, [sp, #36]
 7071              	.LVL606:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7072              		.loc 5 931 16 view .LVU1781
 7073              	.LBE6490:
 7074              	.LBE6489:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 7075              		.loc 5 322 2 view .LVU1782
 7076 002c 3C4B     		ldr	r3, .L201+4
 7077 002e 9B1A     		subs	r3, r3, r2
 7078 0030 032B     		cmp	r3, #3
 7079 0032 52D9     		bls	.L196
 7080              	.LVL607:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 7081              		.loc 5 322 2 view .LVU1783
 7082              	.LBE6488:
 7083              	.LBE6487:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7084              		.loc 5 1268 27 view .LVU1784
 7085 0034 0422     		movs	r2, #4
 7086 0036 3B49     		ldr	r1, .L201+8
 7087 0038 08A8     		add	r0, sp, #32
 7088              	.LVL608:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7089              		.loc 5 1268 27 view .LVU1785
 7090 003a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 7091              	.LVL609:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7092              		.loc 5 1268 27 view .LVU1786
 7093 003e 0400     		movs	r4, r0
 7094              	.LVL610:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7095              		.loc 5 1268 27 view .LVU1787
 7096              	.LBE6486:
 7097              	.LBE6494:
 7098              	.LBB6495:
 7099              	.LBI6495:
ARM GAS  /tmp/ccszdRNt.s 			page 405


 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 7100              		.loc 5 552 7 is_stmt 1 view .LVU1788
 7101              	.LBB6496:
 7102              	.LBB6497:
 7103              	.LBB6498:
 7104              	.LBI6498:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7105              		.loc 5 190 7 view .LVU1789
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7106              		.loc 5 190 7 is_stmt 0 view .LVU1790
 7107              	.LBE6498:
 7108              	.LBB6499:
 7109              	.LBI6499:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 7110              		.loc 5 286 7 is_stmt 1 view .LVU1791
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 7111              		.loc 5 286 7 is_stmt 0 view .LVU1792
 7112              	.LBE6499:
 7113              	.LBB6500:
 7114              	.LBI6500:
 7115              		.loc 8 99 5 is_stmt 1 view .LVU1793
 7116              		.loc 8 99 5 is_stmt 0 view .LVU1794
 7117              	.LBE6500:
 7118              	.LBB6501:
 7119              	.LBI6501:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 7120              		.loc 5 159 2 is_stmt 1 view .LVU1795
 7121              	.LBB6502:
 7122              	.LBB6503:
 7123              	.LBB6504:
 7124              	.LBI6504:
 7125              		.loc 8 99 5 view .LVU1796
 7126              		.loc 8 99 5 is_stmt 0 view .LVU1797
 7127              	.LBE6504:
 7128              	.LBB6505:
 7129              	.LBI6505:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7130              		.loc 6 141 7 is_stmt 1 view .LVU1798
 7131              	.LBB6506:
 7132              	.LBI6506:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7133              		.loc 7 83 7 view .LVU1799
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7134              		.loc 7 83 7 is_stmt 0 view .LVU1800
 7135              	.LBE6506:
 7136              	.LBE6505:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7137              		.loc 5 160 46 view .LVU1801
 7138 0040 04AB     		add	r3, sp, #16
 7139              	.LVL611:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7140              		.loc 5 160 46 view .LVU1802
 7141 0042 0293     		str	r3, [sp, #8]
 7142              	.LVL612:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 7143              		.loc 5 160 46 view .LVU1803
 7144              	.LBE6503:
ARM GAS  /tmp/ccszdRNt.s 			page 406


 7145              	.LBE6502:
 7146              	.LBE6501:
 7147              	.LBB6507:
 7148              	.LBI6507:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7149              		.loc 5 221 7 is_stmt 1 view .LVU1804
 7150              	.LBB6508:
 7151              	.LBI6508:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7152              		.loc 5 186 7 view .LVU1805
 7153              	.LBB6509:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7154              		.loc 5 187 28 is_stmt 0 view .LVU1806
 7155 0044 0368     		ldr	r3, [r0]
 7156              	.LVL613:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7157              		.loc 5 187 28 view .LVU1807
 7158              	.LBE6509:
 7159              	.LBE6508:
 7160              	.LBB6510:
 7161              	.LBI6510:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7162              		.loc 5 200 7 is_stmt 1 view .LVU1808
 7163              	.LBB6511:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7164              		.loc 5 203 57 is_stmt 0 view .LVU1809
 7165 0046 0700     		movs	r7, r0
 7166 0048 0837     		adds	r7, r7, #8
 7167              	.LVL614:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7168              		.loc 5 203 57 view .LVU1810
 7169              	.LBE6511:
 7170              	.LBE6510:
 7171              	.LBE6507:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 7172              		.loc 5 555 2 view .LVU1811
 7173 004a BB42     		cmp	r3, r7
 7174 004c 48D0     		beq	.L197
 7175              	.LVL615:
 7176              	.LBB6512:
 7177              	.LBI6512:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7178              		.loc 5 186 7 is_stmt 1 view .LVU1812
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7179              		.loc 5 186 7 is_stmt 0 view .LVU1813
 7180              	.LBE6512:
 7181              	.LBB6513:
 7182              	.LBI6513:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7183              		.loc 5 178 7 is_stmt 1 view .LVU1814
 7184              	.LBB6514:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7185              		.loc 5 179 9 is_stmt 0 view .LVU1815
 7186 004e 0293     		str	r3, [sp, #8]
 7187              	.LVL616:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7188              		.loc 5 179 9 view .LVU1816
ARM GAS  /tmp/ccszdRNt.s 			page 407


 7189              	.LBE6514:
 7190              	.LBE6513:
 7191              	.LBB6515:
 7192              	.LBI6515:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 7193              		.loc 5 210 7 is_stmt 1 view .LVU1817
 7194              	.LBB6516:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7195              		.loc 5 211 9 is_stmt 0 view .LVU1818
 7196 0050 8368     		ldr	r3, [r0, #8]
 7197 0052 0493     		str	r3, [sp, #16]
 7198              	.LVL617:
 7199              	.L185:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7200              		.loc 5 211 9 view .LVU1819
 7201              	.LBE6516:
 7202              	.LBE6515:
 7203              	.LBB6517:
 7204              	.LBI6517:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7205              		.loc 5 936 7 is_stmt 1 view .LVU1820
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7206              		.loc 5 936 7 is_stmt 0 view .LVU1821
 7207              	.LBE6517:
 7208              	.LBB6518:
 7209              	.LBI6518:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7210              		.loc 5 182 7 is_stmt 1 view .LVU1822
 7211              	.LBB6519:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7212              		.loc 5 183 9 is_stmt 0 view .LVU1823
 7213 0054 6368     		ldr	r3, [r4, #4]
 7214 0056 0393     		str	r3, [sp, #12]
 7215              	.LVL618:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7216              		.loc 5 183 9 view .LVU1824
 7217              	.LBE6519:
 7218              	.LBE6518:
 7219              	.LBB6520:
 7220              	.LBI6520:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7221              		.loc 5 190 7 is_stmt 1 view .LVU1825
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7222              		.loc 5 190 7 is_stmt 0 view .LVU1826
 7223              	.LBE6520:
 7224              	.LBB6521:
 7225              	.LBI6521:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7226              		.loc 5 178 7 is_stmt 1 view .LVU1827
 7227              	.LBB6522:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7228              		.loc 5 179 9 is_stmt 0 view .LVU1828
 7229 0058 2760     		str	r7, [r4]
 7230              	.LVL619:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7231              		.loc 5 179 9 view .LVU1829
 7232              	.LBE6522:
ARM GAS  /tmp/ccszdRNt.s 			page 408


 7233              	.LBE6521:
 7234              	.LBB6523:
 7235              	.LBI6523:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7236              		.loc 5 214 7 is_stmt 1 view .LVU1830
 7237              	.LBB6524:
 7238              	.LBI6524:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7239              		.loc 5 182 7 view .LVU1831
 7240              	.LBB6525:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7241              		.loc 5 183 9 is_stmt 0 view .LVU1832
 7242 005a 0023     		movs	r3, #0
 7243 005c 6360     		str	r3, [r4, #4]
 7244              	.LVL620:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7245              		.loc 5 183 9 view .LVU1833
 7246              	.LBE6525:
 7247              	.LBE6524:
 7248              	.LBB6526:
 7249              	.LBI6526:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 7250              		.loc 4 299 7 is_stmt 1 view .LVU1834
 7251              	.LBB6527:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7252              		.loc 4 300 9 view .LVU1835
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7253              		.loc 4 300 14 is_stmt 0 view .LVU1836
 7254 005e 2372     		strb	r3, [r4, #8]
 7255              	.LVL621:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7256              		.loc 4 300 14 view .LVU1837
 7257              	.LBE6527:
 7258              	.LBE6526:
 7259              	.LBE6523:
 7260              	.LBE6497:
 7261              	.LBE6496:
 7262              	.LBE6495:
 7263              	.LBE6534:
 7264              	.LBB6535:
 7265              	.LBI6535:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 7266              		.loc 5 732 7 is_stmt 1 view .LVU1838
 7267              	.LBB6536:
 7268              	.LBI6536:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7269              		.loc 5 221 7 view .LVU1839
 7270              	.LBB6537:
 7271              	.LBI6537:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7272              		.loc 5 186 7 view .LVU1840
 7273              	.LBB6538:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7274              		.loc 5 187 28 is_stmt 0 view .LVU1841
 7275 0060 286D     		ldr	r0, [r5, #80]
 7276              	.LVL622:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 409


 7277              		.loc 5 187 28 view .LVU1842
 7278              	.LBE6538:
 7279              	.LBE6537:
 7280              	.LBB6539:
 7281              	.LBI6539:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7282              		.loc 5 200 7 is_stmt 1 view .LVU1843
 7283              	.LBB6540:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7284              		.loc 5 203 57 is_stmt 0 view .LVU1844
 7285 0062 3200     		movs	r2, r6
 7286 0064 0832     		adds	r2, r2, #8
 7287              	.LVL623:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7288              		.loc 5 203 57 view .LVU1845
 7289              	.LBE6540:
 7290              	.LBE6539:
 7291              	.LBE6536:
 7292              	.LBB6541:
 7293              	.LBB6542:
 7294              	.LBI6542:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7295              		.loc 5 221 7 is_stmt 1 view .LVU1846
 7296              	.LBB6543:
 7297              	.LBI6543:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7298              		.loc 5 186 7 view .LVU1847
 7299              	.LBB6544:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7300              		.loc 5 187 28 is_stmt 0 view .LVU1848
 7301 0066 0299     		ldr	r1, [sp, #8]
 7302              	.LVL624:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7303              		.loc 5 187 28 view .LVU1849
 7304              	.LBE6544:
 7305              	.LBE6543:
 7306              	.LBB6545:
 7307              	.LBI6545:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7308              		.loc 5 200 7 is_stmt 1 view .LVU1850
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7309              		.loc 5 200 7 is_stmt 0 view .LVU1851
 7310              	.LBE6545:
 7311              	.LBE6542:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 7312              		.loc 5 747 2 view .LVU1852
 7313 0068 04AB     		add	r3, sp, #16
 7314 006a 9942     		cmp	r1, r3
 7315 006c 3ED0     		beq	.L198
 7316              	.LVL625:
 7317              	.LBB6546:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 7318              		.loc 5 761 6 view .LVU1853
 7319 006e 9042     		cmp	r0, r2
 7320 0070 4ED0     		beq	.L194
 7321              	.LVL626:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
ARM GAS  /tmp/ccszdRNt.s 			page 410


 7322              		.loc 5 767 7 view .LVU1854
 7323 0072 B368     		ldr	r3, [r6, #8]
 7324 0074 9846     		mov	r8, r3
 7325              	.LVL627:
 7326              	.L190:
 7327              	.LBB6547:
 7328              	.LBI6547:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7329              		.loc 5 178 7 is_stmt 1 view .LVU1855
 7330              	.LBB6548:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7331              		.loc 5 179 9 is_stmt 0 view .LVU1856
 7332 0076 2965     		str	r1, [r5, #80]
 7333              	.LVL628:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7334              		.loc 5 179 9 view .LVU1857
 7335              	.LBE6548:
 7336              	.LBE6547:
 7337              	.LBB6549:
 7338              	.LBI6549:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7339              		.loc 5 936 7 is_stmt 1 view .LVU1858
 7340              	.LBB6550:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7341              		.loc 5 937 16 is_stmt 0 view .LVU1859
 7342 0078 039B     		ldr	r3, [sp, #12]
 7343 007a 0193     		str	r3, [sp, #4]
 7344              	.LVL629:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7345              		.loc 5 937 16 view .LVU1860
 7346              	.LBE6550:
 7347              	.LBE6549:
 7348              	.LBB6551:
 7349              	.LBI6551:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7350              		.loc 5 182 7 is_stmt 1 view .LVU1861
 7351              	.LBB6552:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7352              		.loc 5 183 9 is_stmt 0 view .LVU1862
 7353 007c 7360     		str	r3, [r6, #4]
 7354              	.LVL630:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7355              		.loc 5 183 9 view .LVU1863
 7356              	.LBE6552:
 7357              	.LBE6551:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 7358              		.loc 5 775 6 view .LVU1864
 7359 007e 049B     		ldr	r3, [sp, #16]
 7360 0080 B360     		str	r3, [r6, #8]
 7361              	.LVL631:
 7362              	.LBB6553:
 7363              	.LBI6553:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 7364              		.loc 5 210 7 is_stmt 1 view .LVU1865
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 7365              		.loc 5 210 7 is_stmt 0 view .LVU1866
 7366              	.LBE6553:
ARM GAS  /tmp/ccszdRNt.s 			page 411


 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 7367              		.loc 5 776 6 view .LVU1867
 7368 0082 0028     		cmp	r0, #0
 7369 0084 46D0     		beq	.L191
 7370              	.LVL632:
 7371              	.LBB6554:
 7372              	.LBI6554:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7373              		.loc 5 178 7 is_stmt 1 view .LVU1868
 7374              	.LBB6555:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7375              		.loc 5 179 9 is_stmt 0 view .LVU1869
 7376 0086 0290     		str	r0, [sp, #8]
 7377              	.LVL633:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7378              		.loc 5 179 9 view .LVU1870
 7379              	.LBE6555:
 7380              	.LBE6554:
 7381              	.LBB6556:
 7382              	.LBI6556:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 7383              		.loc 5 210 7 is_stmt 1 view .LVU1871
 7384              	.LBB6557:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7385              		.loc 5 211 9 is_stmt 0 view .LVU1872
 7386 0088 4346     		mov	r3, r8
 7387 008a 0493     		str	r3, [sp, #16]
 7388              	.LVL634:
 7389              	.L189:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7390              		.loc 5 211 9 view .LVU1873
 7391              	.LBE6557:
 7392              	.LBE6556:
 7393              	.LBE6546:
 7394              	.LBE6541:
 7395              	.LBB6580:
 7396              	.LBI6580:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 7397              		.loc 5 1023 7 is_stmt 1 view .LVU1874
 7398              	.LBB6581:
 7399              	.LBI6581:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7400              		.loc 5 214 7 view .LVU1875
 7401              	.LBB6582:
 7402              	.LBI6582:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7403              		.loc 5 182 7 view .LVU1876
 7404              	.LBB6583:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7405              		.loc 5 183 9 is_stmt 0 view .LVU1877
 7406 008c 0023     		movs	r3, #0
 7407 008e 0393     		str	r3, [sp, #12]
 7408              	.LVL635:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7409              		.loc 5 183 9 view .LVU1878
 7410              	.LBE6583:
 7411              	.LBE6582:
ARM GAS  /tmp/ccszdRNt.s 			page 412


 7412              	.LBB6584:
 7413              	.LBI6584:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7414              		.loc 5 186 7 is_stmt 1 view .LVU1879
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7415              		.loc 5 186 7 is_stmt 0 view .LVU1880
 7416              	.LBE6584:
 7417              	.LBB6585:
 7418              	.LBI6585:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 7419              		.loc 4 299 7 is_stmt 1 view .LVU1881
 7420              	.LBB6586:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7421              		.loc 4 300 9 view .LVU1882
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7422              		.loc 4 300 14 is_stmt 0 view .LVU1883
 7423 0090 029A     		ldr	r2, [sp, #8]
 7424 0092 1370     		strb	r3, [r2]
 7425              	.LVL636:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7426              		.loc 4 300 14 view .LVU1884
 7427              	.LBE6586:
 7428              	.LBE6585:
 7429              	.LBE6581:
 7430              	.LBE6580:
 7431              	.LBE6535:
 7432              	.LBB6588:
 7433              	.LBI6588:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 7434              		.loc 5 657 7 is_stmt 1 view .LVU1885
 7435              	.LBB6589:
 7436              	.LBI6589:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7437              		.loc 5 229 7 view .LVU1886
 7438              	.LBB6590:
 7439              	.LBB6591:
 7440              	.LBI6591:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7441              		.loc 5 221 7 view .LVU1887
 7442              	.LBB6592:
 7443              	.LBI6592:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7444              		.loc 5 186 7 view .LVU1888
 7445              	.LBB6593:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7446              		.loc 5 187 28 is_stmt 0 view .LVU1889
 7447 0094 0298     		ldr	r0, [sp, #8]
 7448              	.LVL637:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7449              		.loc 5 187 28 view .LVU1890
 7450              	.LBE6593:
 7451              	.LBE6592:
 7452              	.LBB6594:
 7453              	.LBI6594:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7454              		.loc 5 200 7 is_stmt 1 view .LVU1891
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 413


 7455              		.loc 5 200 7 is_stmt 0 view .LVU1892
 7456              	.LBE6594:
 7457              	.LBE6591:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7458              		.loc 5 231 2 view .LVU1893
 7459 0096 04AB     		add	r3, sp, #16
 7460 0098 9842     		cmp	r0, r3
 7461 009a 01D0     		beq	.L192
 7462              	.LVL638:
 7463              	.LBB6595:
 7464              	.LBI6595:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7465              		.loc 5 236 7 is_stmt 1 view .LVU1894
 7466              	.LBB6596:
 7467              	.LBB6597:
 7468              	.LBI6597:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7469              		.loc 10 469 7 view .LVU1895
 7470              	.LBB6598:
 7471              	.LBI6598:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 7472              		.loc 7 119 7 view .LVU1896
 7473              	.LBB6599:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7474              		.loc 7 128 19 is_stmt 0 view .LVU1897
 7475 009c FFF7FEFF 		bl	_ZdlPv
 7476              	.LVL639:
 7477              	.L192:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7478              		.loc 7 128 19 view .LVU1898
 7479              	.LBE6599:
 7480              	.LBE6598:
 7481              	.LBE6597:
 7482              	.LBE6596:
 7483              	.LBE6595:
 7484              	.LBE6590:
 7485              	.LBE6589:
 7486              	.LBB6600:
 7487              	.LBI6600:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7488              		.loc 5 150 14 is_stmt 1 view .LVU1899
 7489              	.LBB6601:
 7490              	.LBI6601:
 7491              		.loc 6 153 7 view .LVU1900
 7492              	.LBB6602:
 7493              	.LBI6602:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7494              		.loc 7 89 7 view .LVU1901
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7495              		.loc 7 89 7 is_stmt 0 view .LVU1902
 7496              	.LBE6602:
 7497              	.LBE6601:
 7498              	.LBE6600:
 7499              	.LBE6588:
 7500              	.LBB6603:
 7501              	.LBI6603:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
ARM GAS  /tmp/ccszdRNt.s 			page 414


 7502              		.loc 5 657 7 is_stmt 1 view .LVU1903
 7503              	.LBB6604:
 7504              	.LBI6604:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7505              		.loc 5 229 7 view .LVU1904
 7506              	.LBB6605:
 7507              	.LBB6606:
 7508              	.LBI6606:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 7509              		.loc 5 221 7 view .LVU1905
 7510              	.LBB6607:
 7511              	.LBI6607:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7512              		.loc 5 186 7 view .LVU1906
 7513              	.LBB6608:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7514              		.loc 5 187 28 is_stmt 0 view .LVU1907
 7515 00a0 0898     		ldr	r0, [sp, #32]
 7516              	.LVL640:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7517              		.loc 5 187 28 view .LVU1908
 7518              	.LBE6608:
 7519              	.LBE6607:
 7520              	.LBB6609:
 7521              	.LBI6609:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7522              		.loc 5 200 7 is_stmt 1 view .LVU1909
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7523              		.loc 5 200 7 is_stmt 0 view .LVU1910
 7524              	.LBE6609:
 7525              	.LBE6606:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 7526              		.loc 5 231 2 view .LVU1911
 7527 00a2 0AAB     		add	r3, sp, #40
 7528 00a4 9842     		cmp	r0, r3
 7529 00a6 01D0     		beq	.L193
 7530              	.LVL641:
 7531              	.LBB6610:
 7532              	.LBI6610:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 7533              		.loc 5 236 7 is_stmt 1 view .LVU1912
 7534              	.LBB6611:
 7535              	.LBB6612:
 7536              	.LBI6612:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 7537              		.loc 10 469 7 view .LVU1913
 7538              	.LBB6613:
 7539              	.LBI6613:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 7540              		.loc 7 119 7 view .LVU1914
 7541              	.LBB6614:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 7542              		.loc 7 128 19 is_stmt 0 view .LVU1915
 7543 00a8 FFF7FEFF 		bl	_ZdlPv
 7544              	.LVL642:
 7545              	.L193:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 415


 7546              		.loc 7 128 19 view .LVU1916
 7547              	.LBE6614:
 7548              	.LBE6613:
 7549              	.LBE6612:
 7550              	.LBE6611:
 7551              	.LBE6610:
 7552              	.LBE6605:
 7553              	.LBE6604:
 7554              	.LBB6615:
 7555              	.LBI6615:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7556              		.loc 5 150 14 is_stmt 1 view .LVU1917
 7557              	.LBB6616:
 7558              	.LBI6616:
 7559              		.loc 6 153 7 view .LVU1918
 7560              	.LBB6617:
 7561              	.LBI6617:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7562              		.loc 7 89 7 view .LVU1919
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7563              		.loc 7 89 7 is_stmt 0 view .LVU1920
 7564              	.LBE6617:
 7565              	.LBE6616:
 7566              	.LBE6615:
 7567              	.LBE6603:
 205:alohal/cli/cli.cpp **** }
 7568              		.loc 2 205 5 is_stmt 1 view .LVU1921
 205:alohal/cli/cli.cpp **** }
 7569              		.loc 2 205 15 is_stmt 0 view .LVU1922
 7570 00ac 2800     		movs	r0, r5
 7571 00ae FFF7FEFF 		bl	_ZN3CLI10Clear_lineEv
 7572              	.LVL643:
 206:alohal/cli/cli.cpp **** 
 7573              		.loc 2 206 1 view .LVU1923
 7574 00b2 0EB0     		add	sp, sp, #56
 7575              		@ sp needed
 7576              	.LVL644:
 7577              	.LVL645:
 206:alohal/cli/cli.cpp **** 
 7578              		.loc 2 206 1 view .LVU1924
 7579 00b4 80BC     		pop	{r7}
 7580 00b6 B846     		mov	r8, r7
 7581 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 7582              	.LVL646:
 7583              	.L195:
 201:alohal/cli/cli.cpp ****         line_prefix.erase(line_prefix.length() - 1);
 7584              		.loc 2 201 35 discriminator 1 view .LVU1925
 7585 00ba 012B     		cmp	r3, #1
 7586 00bc B0D9     		bls	.L181
 202:alohal/cli/cli.cpp ****     }
 7587              		.loc 2 202 9 is_stmt 1 view .LVU1926
 7588              	.LVL647:
 7589              	.LBB6618:
 7590              	.LBI6618:
1807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7591              		.loc 5 1807 7 view .LVU1927
 7592              	.LBB6619:
ARM GAS  /tmp/ccszdRNt.s 			page 416


 7593              	.LBB6620:
 7594              	.LBI6620:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7595              		.loc 5 310 7 view .LVU1928
 7596              	.LBB6621:
 7597              	.LBB6622:
 7598              	.LBI6622:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7599              		.loc 5 930 7 view .LVU1929
 7600              	.LBB6623:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7601              		.loc 5 931 16 is_stmt 0 view .LVU1930
 7602 00be 7368     		ldr	r3, [r6, #4]
 7603              	.LVL648:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7604              		.loc 5 931 16 view .LVU1931
 7605              	.LBE6623:
 7606              	.LBE6622:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 7607              		.loc 5 312 2 view .LVU1932
 7608 00c0 9A42     		cmp	r2, r3
 7609 00c2 06D8     		bhi	.L199
 7610              	.LVL649:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 7611              		.loc 5 312 2 view .LVU1933
 7612              	.LBE6621:
 7613              	.LBE6620:
 7614              	.LBB6625:
 7615              	.LBI6625:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7616              		.loc 5 214 7 is_stmt 1 view .LVU1934
 7617              	.LBB6626:
 7618              	.LBB6627:
 7619              	.LBI6627:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7620              		.loc 5 182 7 view .LVU1935
 7621              	.LBB6628:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7622              		.loc 5 183 9 is_stmt 0 view .LVU1936
 7623 00c4 7260     		str	r2, [r6, #4]
 7624              	.LVL650:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7625              		.loc 5 183 9 view .LVU1937
 7626              	.LBE6628:
 7627              	.LBE6627:
 7628              	.LBB6629:
 7629              	.LBI6629:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7630              		.loc 5 186 7 is_stmt 1 view .LVU1938
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7631              		.loc 5 186 7 is_stmt 0 view .LVU1939
 7632              	.LBE6629:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7633              		.loc 5 217 31 view .LVU1940
 7634 00c6 2B6D     		ldr	r3, [r5, #80]
 7635 00c8 9C46     		mov	ip, r3
 7636 00ca 6244     		add	r2, r2, ip
ARM GAS  /tmp/ccszdRNt.s 			page 417


 7637              	.LVL651:
 7638              	.LBB6630:
 7639              	.LBI6630:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 7640              		.loc 4 299 7 is_stmt 1 view .LVU1941
 7641              	.LBB6631:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7642              		.loc 4 300 9 view .LVU1942
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7643              		.loc 4 300 14 is_stmt 0 view .LVU1943
 7644 00cc 0023     		movs	r3, #0
 7645 00ce 1370     		strb	r3, [r2]
 7646              	.LVL652:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7647              		.loc 4 300 14 view .LVU1944
 7648              	.LBE6631:
 7649              	.LBE6630:
 7650              	.LBE6626:
 7651              	.LBE6625:
1814:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7652              		.loc 5 1814 10 view .LVU1945
 7653 00d0 A6E7     		b	.L181
 7654              	.LVL653:
 7655              	.L199:
 7656              	.LBB6632:
 7657              	.LBB6624:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 7658              		.loc 5 313 28 view .LVU1946
 7659 00d2 1549     		ldr	r1, .L201+12
 7660 00d4 1548     		ldr	r0, .L201+16
 7661 00d6 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 7662              	.LVL654:
 7663              	.L196:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 7664              		.loc 5 313 28 view .LVU1947
 7665              	.LBE6624:
 7666              	.LBE6632:
 7667              	.LBE6619:
 7668              	.LBE6618:
 7669              	.LBB6633:
 7670              	.LBB6532:
 7671              	.LBB6493:
 7672              	.LBB6492:
 7673              	.LBB6491:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7674              		.loc 5 323 24 view .LVU1948
 7675 00da 1548     		ldr	r0, .L201+20
 7676 00dc FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 7677              	.LVL655:
 7678              	.L197:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7679              		.loc 5 323 24 view .LVU1949
 7680              	.LBE6491:
 7681              	.LBE6492:
 7682              	.LBE6493:
 7683              	.LBE6532:
 7684              	.LBB6533:
ARM GAS  /tmp/ccszdRNt.s 			page 418


 7685              	.LBB6531:
 7686              	.LBB6530:
 7687              	.LBB6528:
 7688              	.LBI6528:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 7689              		.loc 4 361 7 is_stmt 1 view .LVU1950
 7690              	.LBB6529:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 7691              		.loc 4 363 2 view .LVU1951
 7692              		.loc 4 365 2 view .LVU1952
 7693              		.loc 4 365 49 is_stmt 0 view .LVU1953
 7694 00e0 1022     		movs	r2, #16
 7695 00e2 3900     		movs	r1, r7
 7696 00e4 04A8     		add	r0, sp, #16
 7697              	.LVL656:
 7698              		.loc 4 365 49 view .LVU1954
 7699 00e6 FFF7FEFF 		bl	memcpy
 7700              	.LVL657:
 7701              		.loc 4 365 49 view .LVU1955
 7702 00ea B3E7     		b	.L185
 7703              	.LVL658:
 7704              	.L198:
 7705              		.loc 4 365 49 view .LVU1956
 7706              	.LBE6529:
 7707              	.LBE6528:
 7708              	.LBE6530:
 7709              	.LBE6531:
 7710              	.LBE6533:
 7711              	.LBE6633:
 7712              	.LBB6634:
 7713              	.LBB6587:
 7714              	.LBB6560:
 7715              	.LBI6560:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7716              		.loc 5 930 7 is_stmt 1 view .LVU1957
 7717              	.LBB6561:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7718              		.loc 5 931 16 is_stmt 0 view .LVU1958
 7719 00ec 039A     		ldr	r2, [sp, #12]
 7720              	.LVL659:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7721              		.loc 5 931 16 view .LVU1959
 7722              	.LBE6561:
 7723              	.LBE6560:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 7724              		.loc 5 750 6 view .LVU1960
 7725 00ee 002A     		cmp	r2, #0
 7726 00f0 03D0     		beq	.L187
 7727              	.LVL660:
 7728              	.LBB6562:
 7729              	.LBI6562:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7730              		.loc 5 346 7 is_stmt 1 view .LVU1961
 7731              	.LBB6563:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 7732              		.loc 5 348 2 is_stmt 0 view .LVU1962
 7733 00f2 012A     		cmp	r2, #1
ARM GAS  /tmp/ccszdRNt.s 			page 419


 7734 00f4 09D0     		beq	.L200
 7735              	.LVL661:
 7736              	.LBB6564:
 7737              	.LBI6564:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 7738              		.loc 4 361 7 is_stmt 1 view .LVU1963
 7739              	.LBB6565:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 7740              		.loc 4 363 2 view .LVU1964
 7741              		.loc 4 365 2 view .LVU1965
 7742              		.loc 4 365 49 is_stmt 0 view .LVU1966
 7743 00f6 FFF7FEFF 		bl	memcpy
 7744              	.LVL662:
 7745              	.L187:
 7746              		.loc 4 365 49 view .LVU1967
 7747              	.LBE6565:
 7748              	.LBE6564:
 7749              	.LBE6563:
 7750              	.LBE6562:
 7751              	.LBB6569:
 7752              	.LBI6569:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 7753              		.loc 5 930 7 is_stmt 1 view .LVU1968
 7754              	.LBB6570:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7755              		.loc 5 931 16 is_stmt 0 view .LVU1969
 7756 00fa 039B     		ldr	r3, [sp, #12]
 7757              	.LVL663:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7758              		.loc 5 931 16 view .LVU1970
 7759              	.LBE6570:
 7760              	.LBE6569:
 7761              	.LBB6571:
 7762              	.LBI6571:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7763              		.loc 5 214 7 is_stmt 1 view .LVU1971
 7764              	.LBB6572:
 7765              	.LBB6573:
 7766              	.LBI6573:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 7767              		.loc 5 182 7 view .LVU1972
 7768              	.LBB6574:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7769              		.loc 5 183 9 is_stmt 0 view .LVU1973
 7770 00fc 7360     		str	r3, [r6, #4]
 7771              	.LVL664:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7772              		.loc 5 183 9 view .LVU1974
 7773              	.LBE6574:
 7774              	.LBE6573:
 7775              	.LBB6575:
 7776              	.LBI6575:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7777              		.loc 5 186 7 is_stmt 1 view .LVU1975
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 7778              		.loc 5 186 7 is_stmt 0 view .LVU1976
 7779              	.LBE6575:
ARM GAS  /tmp/ccszdRNt.s 			page 420


 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 7780              		.loc 5 217 31 view .LVU1977
 7781 00fe 2A6D     		ldr	r2, [r5, #80]
 7782 0100 9446     		mov	ip, r2
 7783 0102 6344     		add	r3, r3, ip
 7784              	.LVL665:
 7785              	.LBB6576:
 7786              	.LBI6576:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 7787              		.loc 4 299 7 is_stmt 1 view .LVU1978
 7788              	.LBB6577:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7789              		.loc 4 300 9 view .LVU1979
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7790              		.loc 4 300 14 is_stmt 0 view .LVU1980
 7791 0104 0022     		movs	r2, #0
 7792 0106 1A70     		strb	r2, [r3]
 7793              	.LVL666:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7794              		.loc 4 300 14 view .LVU1981
 7795              	.LBE6577:
 7796              	.LBE6576:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7797              		.loc 5 218 7 view .LVU1982
 7798 0108 C0E7     		b	.L189
 7799              	.LVL667:
 7800              	.L200:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7801              		.loc 5 218 7 view .LVU1983
 7802              	.LBE6572:
 7803              	.LBE6571:
 7804              	.LBB6578:
 7805              	.LBB6568:
 7806              	.LBB6566:
 7807              	.LBI6566:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 7808              		.loc 4 299 7 is_stmt 1 view .LVU1984
 7809              	.LBB6567:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7810              		.loc 4 300 9 view .LVU1985
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7811              		.loc 4 300 16 is_stmt 0 view .LVU1986
 7812 010a 0B78     		ldrb	r3, [r1]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7813              		.loc 4 300 14 view .LVU1987
 7814 010c 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7815              		.loc 4 300 22 view .LVU1988
 7816 010e F4E7     		b	.L187
 7817              	.LVL668:
 7818              	.L194:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 7819              		.loc 4 300 22 view .LVU1989
 7820              	.LBE6567:
 7821              	.LBE6566:
 7822              	.LBE6568:
 7823              	.LBE6578:
ARM GAS  /tmp/ccszdRNt.s 			page 421


 7824              	.LBB6579:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 7825              		.loc 5 759 14 view .LVU1990
 7826 0110 0020     		movs	r0, #0
 7827 0112 B0E7     		b	.L190
 7828              	.LVL669:
 7829              	.L191:
 7830              	.LBB6558:
 7831              	.LBI6558:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 7832              		.loc 5 178 7 is_stmt 1 view .LVU1991
 7833              	.LBB6559:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7834              		.loc 5 179 9 is_stmt 0 view .LVU1992
 7835 0114 04AB     		add	r3, sp, #16
 7836              	.LVL670:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7837              		.loc 5 179 9 view .LVU1993
 7838 0116 0293     		str	r3, [sp, #8]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7839              		.loc 5 179 33 view .LVU1994
 7840 0118 B8E7     		b	.L189
 7841              	.L202:
 7842 011a C046     		.align	2
 7843              	.L201:
 7844 011c 4C000000 		.word	.LC25
 7845 0120 FFFFFF3F 		.word	1073741823
 7846 0124 54000000 		.word	.LC28
 7847 0128 00000000 		.word	.LC21
 7848 012c 14000000 		.word	.LC23
 7849 0130 00000000 		.word	.LC0
 7850              	.LBE6559:
 7851              	.LBE6558:
 7852              	.LBE6579:
 7853              	.LBE6587:
 7854              	.LBE6634:
 7855              		.cfi_endproc
 7856              	.LFE3872:
 7858              		.section	.text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEE
 7859              		.align	1
 7860              		.weak	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_
 7861              		.syntax unified
 7862              		.code	16
 7863              		.thumb_func
 7864              		.fpu softvfp
 7866              	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_S
 7867              	.LVL671:
 7868              	.LFB3966:
 7869              		.file 21 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // String Conversions -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // Copyright (C) 2008-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // Free Software Foundation; either version 3, or (at your option)
ARM GAS  /tmp/ccszdRNt.s 			page 422


   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** /** @file ext/string_conversions.h
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****  *  This file is a GNU extension to the Standard C++ Library.
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****  */
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #ifndef _STRING_CONVERSIONS_H
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #define _STRING_CONVERSIONS_H 1
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #pragma GCC system_header
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #if __cplusplus < 201103L
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** # include <bits/c++0x_warning.h>
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #else
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <bits/c++config.h>
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <ext/numeric_traits.h>
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <bits/functexcept.h>
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cstdlib>
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cwchar>
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cstdio>
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** #include <cerrno>
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** {
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   // Helper for all the sto* functions.
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   template<typename _TRet, typename _Ret = _TRet, typename _CharT,
  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	   typename... _Base>
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     _Ret
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     __stoa(_TRet (*__convf) (const _CharT*, _CharT**, _Base...),
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	   const char* __name, const _CharT* __str, std::size_t* __idx,
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	   _Base... __base)
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     {
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       _Ret __ret;
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       _CharT* __endptr;
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       struct _Save_errno {
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	_Save_errno() : _M_errno(errno) { errno = 0; }
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	~_Save_errno() { if (errno == 0) errno = _M_errno; }
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	int _M_errno;
ARM GAS  /tmp/ccszdRNt.s 			page 423


  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       } const __save_errno;
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       struct _Range_chk {
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  static bool
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  _S_chk(_TRet, std::false_type) { return false; }
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  static bool
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  _S_chk(_TRet __val, std::true_type) // only called when _Ret is int
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  {
  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	    return __val < _TRet(__numeric_traits<int>::__min)
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	      || __val > _TRet(__numeric_traits<int>::__max);
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  }
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       };
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       const _TRet __tmp = __convf(__str, &__endptr, __base...);
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       if (__endptr == __str)
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	std::__throw_invalid_argument(__name);
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       else if (errno == ERANGE
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	  || _Range_chk::_S_chk(__tmp, std::is_same<_Ret, int>{}))
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	std::__throw_out_of_range(__name);
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       else
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	__ret = __tmp;
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       if (__idx)
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 	*__idx = __endptr - __str;
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       return __ret;
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     }
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   // Helper for the to_string / to_wstring functions.
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****   template<typename _String, typename _CharT = typename _String::value_type>
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     _String
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     __to_xstring(int (*__convf) (_CharT*, std::size_t, const _CharT*,
 7870              		.loc 21 99 5 is_stmt 1 view -0
 7871              		.cfi_startproc
 7872              		@ args = 4, pretend = 4, frame = 8
 7873              		@ frame_needed = 1, uses_anonymous_args = 1
 7874              		.loc 21 99 5 is_stmt 0 view .LVU1996
 7875 0000 08B4     		push	{r3}
 7876              	.LCFI38:
 7877              		.cfi_def_cfa_offset 4
 7878              	.LVL672:
 7879              		.loc 21 99 5 view .LVU1997
 7880 0002 F0B5     		push	{r4, r5, r6, r7, lr}
 7881              	.LCFI39:
 7882              		.cfi_def_cfa_offset 24
 7883              		.cfi_offset 4, -24
 7884              		.cfi_offset 5, -20
 7885              		.cfi_offset 6, -16
 7886              		.cfi_offset 7, -12
 7887              		.cfi_offset 14, -8
 7888              	.LVL673:
 7889              		.loc 21 99 5 view .LVU1998
 7890 0004 82B0     		sub	sp, sp, #8
 7891              	.LCFI40:
 7892              		.cfi_def_cfa_offset 32
ARM GAS  /tmp/ccszdRNt.s 			page 424


 7893              	.LVL674:
 7894              		.loc 21 99 5 view .LVU1999
 7895 0006 00AF     		add	r7, sp, #0
 7896              	.LCFI41:
 7897              		.cfi_def_cfa_register 7
 7898 0008 0400     		movs	r4, r0
 7899 000a 0D00     		movs	r5, r1
 7900 000c 1100     		movs	r1, r2
 7901              	.LVL675:
 7902              		.loc 21 99 5 view .LVU2000
 7903 000e 1C23     		movs	r3, #28
 7904 0010 FB18     		adds	r3, r7, r3
 7905 0012 04CB     		ldmia	r3!, {r2}
 7906              	.LVL676:
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 				 __builtin_va_list), std::size_t __n,
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 		 const _CharT* __fmt, ...)
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     {
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       // XXX Eventually the result should be constructed in-place in
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       // the __cxx11 string, likely with the help of internal hooks.
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       _CharT* __s = static_cast<_CharT*>(__builtin_alloca(sizeof(_CharT)
 7907              		.loc 21 105 58 view .LVU2001
 7908 0014 C81D     		adds	r0, r1, #7
 7909              	.LVL677:
 7910              		.loc 21 105 58 view .LVU2002
 7911 0016 C008     		lsrs	r0, r0, #3
 7912 0018 C000     		lsls	r0, r0, #3
 7913 001a 6E46     		mov	r6, sp
 7914 001c 301A     		subs	r0, r6, r0
 7915 001e 8546     		mov	sp, r0
 7916              	.LVL678:
 7917              		.loc 21 105 58 view .LVU2003
 7918 0020 6E46     		mov	r6, sp
 7919              	.LVL679:
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 							  * __n));
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       __builtin_va_list __args;
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       __builtin_va_start(__args, __fmt);
 7920              		.loc 21 109 25 view .LVU2004
 7921 0022 7B60     		str	r3, [r7, #4]
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       const int __len = __convf(__s, __n, __fmt, __args);
 7922              		.loc 21 111 32 view .LVU2005
 7923 0024 A847     		blx	r5
 7924              	.LVL680:
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       __builtin_va_end(__args);
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h **** 
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****       return _String(__s, __s + __len);
 7925              		.loc 21 115 38 view .LVU2006
 7926 0026 3218     		adds	r2, r6, r0
 7927              	.LVL681:
 7928              	.LBB6635:
 7929              	.LBI6635:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 7930              		.loc 6 138 7 is_stmt 1 view .LVU2007
 7931              	.LBB6636:
 7932              	.LBI6636:
ARM GAS  /tmp/ccszdRNt.s 			page 425


  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7933              		.loc 7 80 7 view .LVU2008
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7934              		.loc 7 80 7 is_stmt 0 view .LVU2009
 7935              	.LBE6636:
 7936              	.LBE6635:
 7937              	.LBB6637:
 7938              	.LBI6637:
 625:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 7939              		.loc 5 625 9 is_stmt 1 view .LVU2010
 7940              	.LBB6638:
 7941              	.LBI6638:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 7942              		.loc 5 190 7 view .LVU2011
 7943              	.LBB6639:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7944              		.loc 5 193 51 is_stmt 0 view .LVU2012
 7945 0028 2300     		movs	r3, r4
 7946 002a 0833     		adds	r3, r3, #8
 7947              	.LVL682:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 7948              		.loc 5 193 51 view .LVU2013
 7949              	.LBE6639:
 7950              	.LBE6638:
 7951              	.LBB6640:
 7952              	.LBI6640:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 7953              		.loc 5 156 2 is_stmt 1 view .LVU2014
 7954              	.LBB6641:
 7955              	.LBB6642:
 7956              	.LBI6642:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 7957              		.loc 6 141 7 view .LVU2015
 7958              	.LBB6643:
 7959              	.LBI6643:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7960              		.loc 7 83 7 view .LVU2016
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7961              		.loc 7 83 7 is_stmt 0 view .LVU2017
 7962              	.LBE6643:
 7963              	.LBE6642:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7964              		.loc 5 157 35 view .LVU2018
 7965 002c 2360     		str	r3, [r4]
 7966              	.LVL683:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 7967              		.loc 5 157 35 view .LVU2019
 7968              	.LBE6641:
 7969              	.LBE6640:
 7970              	.LBB6644:
 7971              	.LBI6644:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 7972              		.loc 5 263 9 is_stmt 1 view .LVU2020
 7973              	.LBB6645:
 7974              	.LBB6646:
 7975              	.LBI6646:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
ARM GAS  /tmp/ccszdRNt.s 			page 426


 7976              		.loc 5 243 9 view .LVU2021
 7977              	.LBB6647:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7978              		.loc 5 247 11 is_stmt 0 view .LVU2022
 7979 002e 0023     		movs	r3, #0
 7980 0030 3100     		movs	r1, r6
 7981 0032 2000     		movs	r0, r4
 7982              	.LVL684:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7983              		.loc 5 247 11 view .LVU2023
 7984 0034 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 7985              	.LVL685:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 7986              		.loc 5 247 11 view .LVU2024
 7987              	.LBE6647:
 7988              	.LBE6646:
 7989              	.LBE6645:
 7990              	.LBE6644:
 7991              	.LBE6637:
 7992              	.LBB6648:
 7993              	.LBI6648:
 7994              		.loc 6 153 7 is_stmt 1 view .LVU2025
 7995              	.LBB6649:
 7996              	.LBI6649:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7997              		.loc 7 89 7 view .LVU2026
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 7998              		.loc 7 89 7 is_stmt 0 view .LVU2027
 7999              	.LBE6649:
 8000              	.LBE6648:
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/string_conversions.h ****     }
 8001              		.loc 21 116 5 view .LVU2028
 8002 0038 2000     		movs	r0, r4
 8003 003a BD46     		mov	sp, r7
 8004              	.LVL686:
 8005              		.loc 21 116 5 view .LVU2029
 8006 003c 02B0     		add	sp, sp, #8
 8007              	.LVL687:
 8008              		.loc 21 116 5 view .LVU2030
 8009              		@ sp needed
 8010              	.LVL688:
 8011              	.LVL689:
 8012              	.LVL690:
 8013              		.loc 21 116 5 view .LVU2031
 8014 003e F0BC     		pop	{r4, r5, r6, r7}
 8015 0040 08BC     		pop	{r3}
 8016 0042 01B0     		add	sp, sp, #4
 8017 0044 1847     		bx	r3
 8018              		.cfi_endproc
 8019              	.LFE3966:
 8021              		.section	.rodata._ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsI
 8022              		.align	2
 8023              	.LC30:
 8024 0000 2400     		.ascii	"$\000"
 8025              		.section	.text._ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcE
 8026              		.align	1
 8027              		.global	_ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
ARM GAS  /tmp/ccszdRNt.s 			page 427


 8028              		.syntax unified
 8029              		.code	16
 8030              		.thumb_func
 8031              		.fpu softvfp
 8033              	_ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 8034              	.LVL691:
 8035              	.LFB3866:
 146:alohal/cli/cli.cpp ****     if (fs and fs->Entry_exists(path_to_application)) {
 8036              		.loc 2 146 67 is_stmt 1 view -0
 8037              		.cfi_startproc
 8038              		@ args = 0, pretend = 0, frame = 120
 8039              		@ frame_needed = 0, uses_anonymous_args = 0
 146:alohal/cli/cli.cpp ****     if (fs and fs->Entry_exists(path_to_application)) {
 8040              		.loc 2 146 67 is_stmt 0 view .LVU2033
 8041 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 8042              	.LCFI42:
 8043              		.cfi_def_cfa_offset 20
 8044              		.cfi_offset 4, -20
 8045              		.cfi_offset 5, -16
 8046              		.cfi_offset 6, -12
 8047              		.cfi_offset 7, -8
 8048              		.cfi_offset 14, -4
 8049 0002 C646     		mov	lr, r8
 8050 0004 00B5     		push	{lr}
 8051              	.LCFI43:
 8052              		.cfi_def_cfa_offset 24
 8053              		.cfi_offset 8, -24
 8054 0006 9EB0     		sub	sp, sp, #120
 8055              	.LCFI44:
 8056              		.cfi_def_cfa_offset 144
 8057 0008 0600     		movs	r6, r0
 8058 000a 0D00     		movs	r5, r1
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8059              		.loc 2 147 5 is_stmt 1 view .LVU2034
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8060              		.loc 2 147 9 is_stmt 0 view .LVU2035
 8061 000c C46C     		ldr	r4, [r0, #76]
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8062              		.loc 2 147 12 view .LVU2036
 8063 000e 002C     		cmp	r4, #0
 8064 0010 13D0     		beq	.L214
 8065              	.LVL692:
 8066              	.LBB6650:
 8067              	.LBI6650:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 8068              		.loc 5 448 7 is_stmt 1 discriminator 1 view .LVU2037
 8069              	.LBB6651:
 8070              	.LBB6652:
 8071              	.LBB6653:
 8072              	.LBI6653:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8073              		.loc 5 190 7 discriminator 1 view .LVU2038
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8074              		.loc 5 190 7 is_stmt 0 discriminator 1 view .LVU2039
 8075              	.LBE6653:
 8076              	.LBB6654:
 8077              	.LBI6654:
ARM GAS  /tmp/ccszdRNt.s 			page 428


 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8078              		.loc 5 290 7 is_stmt 1 discriminator 1 view .LVU2040
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8079              		.loc 5 290 7 is_stmt 0 discriminator 1 view .LVU2041
 8080              	.LBE6654:
 8081              	.LBB6655:
 8082              	.LBI6655:
 8083              		.loc 20 97 19 is_stmt 1 discriminator 1 view .LVU2042
 8084              	.LBB6656:
 8085              	.LBI6656:
 8086              		.loc 10 514 7 discriminator 1 view .LVU2043
 8087              	.LBB6657:
 8088              	.LBI6657:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8089              		.loc 6 141 7 discriminator 1 view .LVU2044
 8090              	.LBB6658:
 8091              	.LBI6658:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8092              		.loc 7 83 7 discriminator 1 view .LVU2045
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8093              		.loc 7 83 7 is_stmt 0 discriminator 1 view .LVU2046
 8094              	.LBE6658:
 8095              	.LBE6657:
 8096              	.LBE6656:
 8097              	.LBE6655:
 8098              	.LBB6659:
 8099              	.LBI6659:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 8100              		.loc 5 159 2 is_stmt 1 discriminator 1 view .LVU2047
 8101              	.LBB6660:
 8102              	.LBB6661:
 8103              	.LBB6662:
 8104              	.LBI6662:
 8105              		.loc 8 99 5 discriminator 1 view .LVU2048
 8106              		.loc 8 99 5 is_stmt 0 discriminator 1 view .LVU2049
 8107              	.LBE6662:
 8108              	.LBB6663:
 8109              	.LBI6663:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8110              		.loc 6 141 7 is_stmt 1 discriminator 1 view .LVU2050
 8111              	.LBB6664:
 8112              	.LBI6664:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8113              		.loc 7 83 7 discriminator 1 view .LVU2051
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8114              		.loc 7 83 7 is_stmt 0 discriminator 1 view .LVU2052
 8115              	.LBE6664:
 8116              	.LBE6663:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8117              		.loc 5 160 46 discriminator 1 view .LVU2053
 8118 0012 02AB     		add	r3, sp, #8
 8119              	.LVL693:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8120              		.loc 5 160 46 discriminator 1 view .LVU2054
 8121 0014 0093     		str	r3, [sp]
 8122              	.LVL694:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccszdRNt.s 			page 429


 8123              		.loc 5 160 46 discriminator 1 view .LVU2055
 8124              	.LBE6661:
 8125              	.LBE6660:
 8126              	.LBE6659:
 8127              	.LBB6665:
 8128              	.LBI6665:
 8129              		.loc 6 153 7 is_stmt 1 discriminator 1 view .LVU2056
 8130              	.LBB6666:
 8131              	.LBI6666:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8132              		.loc 7 89 7 discriminator 1 view .LVU2057
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8133              		.loc 7 89 7 is_stmt 0 discriminator 1 view .LVU2058
 8134              	.LBE6666:
 8135              	.LBE6665:
 8136              	.LBB6667:
 8137              	.LBI6667:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8138              		.loc 5 186 7 is_stmt 1 discriminator 1 view .LVU2059
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8139              		.loc 5 186 7 is_stmt 0 discriminator 1 view .LVU2060
 8140              	.LBE6667:
 8141              	.LBB6668:
 8142              	.LBI6668:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8143              		.loc 5 186 7 is_stmt 1 discriminator 1 view .LVU2061
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8144              		.loc 5 186 7 is_stmt 0 discriminator 1 view .LVU2062
 8145              	.LBE6668:
 8146              	.LBB6669:
 8147              	.LBI6669:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8148              		.loc 5 936 7 is_stmt 1 discriminator 1 view .LVU2063
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8149              		.loc 5 936 7 is_stmt 0 discriminator 1 view .LVU2064
 8150              	.LBE6669:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8151              		.loc 5 451 9 discriminator 1 view .LVU2065
 8152 0016 0B68     		ldr	r3, [r1]
 8153 0018 4968     		ldr	r1, [r1, #4]
 8154              	.LVL695:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8155              		.loc 5 451 9 discriminator 1 view .LVU2066
 8156 001a 8C46     		mov	ip, r1
 8157 001c 6344     		add	r3, r3, ip
 8158 001e 1A00     		movs	r2, r3
 8159              	.LVL696:
 8160              	.LBB6670:
 8161              	.LBI6670:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 8162              		.loc 5 263 9 is_stmt 1 discriminator 1 view .LVU2067
 8163              	.LBB6671:
 8164              	.LBB6672:
 8165              	.LBI6672:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 8166              		.loc 5 243 9 discriminator 1 view .LVU2068
 8167              	.LBB6673:
ARM GAS  /tmp/ccszdRNt.s 			page 430


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8168              		.loc 5 247 11 is_stmt 0 discriminator 1 view .LVU2069
 8169 0020 0023     		movs	r3, #0
 8170 0022 2968     		ldr	r1, [r5]
 8171 0024 6846     		mov	r0, sp
 8172              	.LVL697:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8173              		.loc 5 247 11 discriminator 1 view .LVU2070
 8174 0026 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 8175              	.LVL698:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8176              		.loc 5 247 11 discriminator 1 view .LVU2071
 8177              	.LBE6673:
 8178              	.LBE6672:
 8179              	.LBE6671:
 8180              	.LBE6670:
 8181              	.LBE6652:
 8182              	.LBE6651:
 8183              	.LBE6650:
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8184              		.loc 2 147 32 discriminator 1 view .LVU2072
 8185 002a 6946     		mov	r1, sp
 8186 002c 2000     		movs	r0, r4
 8187 002e FFF7FEFF 		bl	_ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 8188              	.LVL699:
 8189 0032 041E     		subs	r4, r0, #0
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8190              		.loc 2 147 12 discriminator 1 view .LVU2073
 8191 0034 05D1     		bne	.L206
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8192              		.loc 2 147 12 view .LVU2074
 8193 0036 0134     		adds	r4, r4, #1
 8194 0038 00E0     		b	.L205
 8195              	.LVL700:
 8196              	.L214:
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8197              		.loc 2 147 12 view .LVU2075
 8198 003a 0024     		movs	r4, #0
 8199              	.LVL701:
 8200              	.L205:
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8201              		.loc 2 147 32 discriminator 4 view .LVU2076
 8202 003c 002C     		cmp	r4, #0
 8203 003e 06D0     		beq	.L207
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8204              		.loc 2 147 12 view .LVU2077
 8205 0040 0024     		movs	r4, #0
 8206              	.L206:
 8207              	.LVL702:
 8208              	.LBB6674:
 8209              	.LBI6674:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 8210              		.loc 5 657 7 is_stmt 1 view .LVU2078
 8211              	.LBB6675:
 8212              	.LBB6676:
 8213              	.LBI6676:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 431


 8214              		.loc 5 229 7 view .LVU2079
 8215              	.LBB6677:
 8216              	.LBB6678:
 8217              	.LBI6678:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8218              		.loc 5 221 7 view .LVU2080
 8219              	.LBB6679:
 8220              	.LBI6679:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8221              		.loc 5 186 7 view .LVU2081
 8222              	.LBB6680:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8223              		.loc 5 187 28 is_stmt 0 view .LVU2082
 8224 0042 0098     		ldr	r0, [sp]
 8225              	.LVL703:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8226              		.loc 5 187 28 view .LVU2083
 8227              	.LBE6680:
 8228              	.LBE6679:
 8229              	.LBB6681:
 8230              	.LBI6681:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8231              		.loc 5 200 7 is_stmt 1 view .LVU2084
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8232              		.loc 5 200 7 is_stmt 0 view .LVU2085
 8233              	.LBE6681:
 8234              	.LBE6678:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8235              		.loc 5 231 2 view .LVU2086
 8236 0044 02AB     		add	r3, sp, #8
 8237 0046 9842     		cmp	r0, r3
 8238 0048 01D0     		beq	.L207
 8239              	.LVL704:
 8240              	.LBB6682:
 8241              	.LBI6682:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8242              		.loc 5 236 7 is_stmt 1 view .LVU2087
 8243              	.LBB6683:
 8244              	.LBB6684:
 8245              	.LBI6684:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8246              		.loc 10 469 7 view .LVU2088
 8247              	.LBB6685:
 8248              	.LBI6685:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8249              		.loc 7 119 7 view .LVU2089
 8250              	.LBB6686:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8251              		.loc 7 128 19 is_stmt 0 view .LVU2090
 8252 004a FFF7FEFF 		bl	_ZdlPv
 8253              	.LVL705:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8254              		.loc 7 128 19 view .LVU2091
 8255              	.LBE6686:
 8256              	.LBE6685:
 8257              	.LBE6684:
 8258              	.LBE6683:
ARM GAS  /tmp/ccszdRNt.s 			page 432


 8259              	.LBE6682:
 8260              	.LBE6677:
 8261              	.LBE6676:
 8262              	.LBB6687:
 8263              	.LBI6687:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8264              		.loc 5 150 14 is_stmt 1 view .LVU2092
 8265              	.LBB6688:
 8266              	.LBI6688:
 8267              		.loc 6 153 7 view .LVU2093
 8268              	.LBB6689:
 8269              	.LBI6689:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8270              		.loc 7 89 7 view .LVU2094
 8271              	.L207:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8272              		.loc 7 89 7 is_stmt 0 view .LVU2095
 8273              	.LBE6689:
 8274              	.LBE6688:
 8275              	.LBE6687:
 8276              	.LBE6675:
 8277              	.LBE6674:
 147:alohal/cli/cli.cpp ****         if (fs->Entry_type(path_to_application) == FS_entry::Type::Executable) {
 8278              		.loc 2 147 5 discriminator 9 view .LVU2096
 8279 004e 002C     		cmp	r4, #0
 8280 0050 04D1     		bne	.L216
 8281              	.L209:
 155:alohal/cli/cli.cpp **** 
 8282              		.loc 2 155 1 view .LVU2097
 8283 0052 2000     		movs	r0, r4
 8284 0054 1EB0     		add	sp, sp, #120
 8285              		@ sp needed
 8286              	.LVL706:
 8287              	.LVL707:
 155:alohal/cli/cli.cpp **** 
 8288              		.loc 2 155 1 view .LVU2098
 8289 0056 80BC     		pop	{r7}
 8290 0058 B846     		mov	r8, r7
 8291 005a F0BD     		pop	{r4, r5, r6, r7, pc}
 8292              	.LVL708:
 8293              	.L216:
 148:alohal/cli/cli.cpp ****             foreground_application = static_cast<Executable *>(fs->Get_entry(path_to_application));
 8294              		.loc 2 148 9 is_stmt 1 view .LVU2099
 148:alohal/cli/cli.cpp ****             foreground_application = static_cast<Executable *>(fs->Get_entry(path_to_application));
 8295              		.loc 2 148 13 is_stmt 0 view .LVU2100
 8296 005c F76C     		ldr	r7, [r6, #76]
 8297              	.LVL709:
 8298              	.LBB6690:
 8299              	.LBI6690:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 8300              		.loc 5 448 7 is_stmt 1 view .LVU2101
 8301              	.LBB6691:
 8302              	.LBB6692:
 8303              	.LBB6693:
 8304              	.LBI6693:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8305              		.loc 5 190 7 view .LVU2102
ARM GAS  /tmp/ccszdRNt.s 			page 433


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8306              		.loc 5 190 7 is_stmt 0 view .LVU2103
 8307              	.LBE6693:
 8308              	.LBB6694:
 8309              	.LBI6694:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8310              		.loc 5 290 7 is_stmt 1 view .LVU2104
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8311              		.loc 5 290 7 is_stmt 0 view .LVU2105
 8312              	.LBE6694:
 8313              	.LBB6695:
 8314              	.LBI6695:
 8315              		.loc 20 97 19 is_stmt 1 view .LVU2106
 8316              	.LBB6696:
 8317              	.LBI6696:
 8318              		.loc 10 514 7 view .LVU2107
 8319              	.LBB6697:
 8320              	.LBI6697:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8321              		.loc 6 141 7 view .LVU2108
 8322              	.LBB6698:
 8323              	.LBI6698:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8324              		.loc 7 83 7 view .LVU2109
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8325              		.loc 7 83 7 is_stmt 0 view .LVU2110
 8326              	.LBE6698:
 8327              	.LBE6697:
 8328              	.LBE6696:
 8329              	.LBE6695:
 8330              	.LBB6699:
 8331              	.LBI6699:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 8332              		.loc 5 159 2 is_stmt 1 view .LVU2111
 8333              	.LBB6700:
 8334              	.LBB6701:
 8335              	.LBB6702:
 8336              	.LBI6702:
 8337              		.loc 8 99 5 view .LVU2112
 8338              		.loc 8 99 5 is_stmt 0 view .LVU2113
 8339              	.LBE6702:
 8340              	.LBB6703:
 8341              	.LBI6703:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8342              		.loc 6 141 7 is_stmt 1 view .LVU2114
 8343              	.LBB6704:
 8344              	.LBI6704:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8345              		.loc 7 83 7 view .LVU2115
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8346              		.loc 7 83 7 is_stmt 0 view .LVU2116
 8347              	.LBE6704:
 8348              	.LBE6703:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8349              		.loc 5 160 46 view .LVU2117
 8350 005e 08AB     		add	r3, sp, #32
 8351              	.LVL710:
ARM GAS  /tmp/ccszdRNt.s 			page 434


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8352              		.loc 5 160 46 view .LVU2118
 8353 0060 9846     		mov	r8, r3
 8354 0062 0693     		str	r3, [sp, #24]
 8355              	.LVL711:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8356              		.loc 5 160 46 view .LVU2119
 8357              	.LBE6701:
 8358              	.LBE6700:
 8359              	.LBE6699:
 8360              	.LBB6705:
 8361              	.LBI6705:
 8362              		.loc 6 153 7 is_stmt 1 view .LVU2120
 8363              	.LBB6706:
 8364              	.LBI6706:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8365              		.loc 7 89 7 view .LVU2121
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8366              		.loc 7 89 7 is_stmt 0 view .LVU2122
 8367              	.LBE6706:
 8368              	.LBE6705:
 8369              	.LBB6707:
 8370              	.LBI6707:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8371              		.loc 5 186 7 is_stmt 1 view .LVU2123
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8372              		.loc 5 186 7 is_stmt 0 view .LVU2124
 8373              	.LBE6707:
 8374              	.LBB6708:
 8375              	.LBI6708:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8376              		.loc 5 186 7 is_stmt 1 view .LVU2125
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8377              		.loc 5 186 7 is_stmt 0 view .LVU2126
 8378              	.LBE6708:
 8379              	.LBB6709:
 8380              	.LBI6709:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8381              		.loc 5 936 7 is_stmt 1 view .LVU2127
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8382              		.loc 5 936 7 is_stmt 0 view .LVU2128
 8383              	.LBE6709:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8384              		.loc 5 451 9 view .LVU2129
 8385 0064 2B68     		ldr	r3, [r5]
 8386 0066 6968     		ldr	r1, [r5, #4]
 8387 0068 8C46     		mov	ip, r1
 8388 006a 6344     		add	r3, r3, ip
 8389 006c 1A00     		movs	r2, r3
 8390              	.LVL712:
 8391              	.LBB6710:
 8392              	.LBI6710:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 8393              		.loc 5 263 9 is_stmt 1 view .LVU2130
 8394              	.LBB6711:
 8395              	.LBB6712:
 8396              	.LBI6712:
ARM GAS  /tmp/ccszdRNt.s 			page 435


 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 8397              		.loc 5 243 9 view .LVU2131
 8398              	.LBB6713:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8399              		.loc 5 247 11 is_stmt 0 view .LVU2132
 8400 006e 0023     		movs	r3, #0
 8401 0070 2968     		ldr	r1, [r5]
 8402 0072 06A8     		add	r0, sp, #24
 8403              	.LVL713:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8404              		.loc 5 247 11 view .LVU2133
 8405 0074 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 8406              	.LVL714:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8407              		.loc 5 247 11 view .LVU2134
 8408              	.LBE6713:
 8409              	.LBE6712:
 8410              	.LBE6711:
 8411              	.LBE6710:
 8412              	.LBE6692:
 8413              	.LBE6691:
 8414              	.LBE6690:
 148:alohal/cli/cli.cpp ****             foreground_application = static_cast<Executable *>(fs->Get_entry(path_to_application));
 8415              		.loc 2 148 27 view .LVU2135
 8416 0078 06A9     		add	r1, sp, #24
 8417 007a 3800     		movs	r0, r7
 8418 007c FFF7FEFF 		bl	_ZNK10Filesystem10Entry_typeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 8419              	.LVL715:
 8420 0080 0700     		movs	r7, r0
 8421              	.LVL716:
 8422              	.LBB6714:
 8423              	.LBI6714:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 8424              		.loc 5 657 7 is_stmt 1 view .LVU2136
 8425              	.LBB6715:
 8426              	.LBI6715:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8427              		.loc 5 229 7 view .LVU2137
 8428              	.LBB6716:
 8429              	.LBB6717:
 8430              	.LBI6717:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8431              		.loc 5 221 7 view .LVU2138
 8432              	.LBB6718:
 8433              	.LBI6718:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8434              		.loc 5 186 7 view .LVU2139
 8435              	.LBB6719:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8436              		.loc 5 187 28 is_stmt 0 view .LVU2140
 8437 0082 0698     		ldr	r0, [sp, #24]
 8438              	.LVL717:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8439              		.loc 5 187 28 view .LVU2141
 8440              	.LBE6719:
 8441              	.LBE6718:
 8442              	.LBB6720:
ARM GAS  /tmp/ccszdRNt.s 			page 436


 8443              	.LBI6720:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8444              		.loc 5 200 7 is_stmt 1 view .LVU2142
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8445              		.loc 5 200 7 is_stmt 0 view .LVU2143
 8446              	.LBE6720:
 8447              	.LBE6717:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8448              		.loc 5 231 2 view .LVU2144
 8449 0084 4045     		cmp	r0, r8
 8450 0086 01D0     		beq	.L210
 8451              	.LVL718:
 8452              	.LBB6721:
 8453              	.LBI6721:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8454              		.loc 5 236 7 is_stmt 1 view .LVU2145
 8455              	.LBB6722:
 8456              	.LBB6723:
 8457              	.LBI6723:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8458              		.loc 10 469 7 view .LVU2146
 8459              	.LBB6724:
 8460              	.LBI6724:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8461              		.loc 7 119 7 view .LVU2147
 8462              	.LBB6725:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8463              		.loc 7 128 19 is_stmt 0 view .LVU2148
 8464 0088 FFF7FEFF 		bl	_ZdlPv
 8465              	.LVL719:
 8466              	.L210:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8467              		.loc 7 128 19 view .LVU2149
 8468              	.LBE6725:
 8469              	.LBE6724:
 8470              	.LBE6723:
 8471              	.LBE6722:
 8472              	.LBE6721:
 8473              	.LBE6716:
 8474              	.LBE6715:
 8475              	.LBB6726:
 8476              	.LBI6726:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8477              		.loc 5 150 14 is_stmt 1 view .LVU2150
 8478              	.LBB6727:
 8479              	.LBI6727:
 8480              		.loc 6 153 7 view .LVU2151
 8481              	.LBB6728:
 8482              	.LBI6728:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8483              		.loc 7 89 7 view .LVU2152
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8484              		.loc 7 89 7 is_stmt 0 view .LVU2153
 8485              	.LBE6728:
 8486              	.LBE6727:
 8487              	.LBE6726:
 8488              	.LBE6714:
ARM GAS  /tmp/ccszdRNt.s 			page 437


 148:alohal/cli/cli.cpp ****             foreground_application = static_cast<Executable *>(fs->Get_entry(path_to_application));
 8489              		.loc 2 148 9 view .LVU2154
 8490 008c 032F     		cmp	r7, #3
 8491 008e 01D0     		beq	.L217
 154:alohal/cli/cli.cpp **** }
 8492              		.loc 2 154 12 view .LVU2155
 8493 0090 0024     		movs	r4, #0
 8494 0092 DEE7     		b	.L209
 8495              	.L217:
 149:alohal/cli/cli.cpp ****             Set_line_prefix("$" + foreground_application->Name());
 8496              		.loc 2 149 13 is_stmt 1 view .LVU2156
 149:alohal/cli/cli.cpp ****             Set_line_prefix("$" + foreground_application->Name());
 8497              		.loc 2 149 64 is_stmt 0 view .LVU2157
 8498 0094 F36C     		ldr	r3, [r6, #76]
 8499 0096 9846     		mov	r8, r3
 8500              	.LVL720:
 8501              	.LBB6729:
 8502              	.LBI6729:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 8503              		.loc 5 448 7 is_stmt 1 view .LVU2158
 8504              	.LBB6730:
 8505              	.LBB6731:
 8506              	.LBB6732:
 8507              	.LBI6732:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8508              		.loc 5 190 7 view .LVU2159
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8509              		.loc 5 190 7 is_stmt 0 view .LVU2160
 8510              	.LBE6732:
 8511              	.LBB6733:
 8512              	.LBI6733:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8513              		.loc 5 290 7 is_stmt 1 view .LVU2161
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8514              		.loc 5 290 7 is_stmt 0 view .LVU2162
 8515              	.LBE6733:
 8516              	.LBB6734:
 8517              	.LBI6734:
 8518              		.loc 20 97 19 is_stmt 1 view .LVU2163
 8519              	.LBB6735:
 8520              	.LBI6735:
 8521              		.loc 10 514 7 view .LVU2164
 8522              	.LBB6736:
 8523              	.LBI6736:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8524              		.loc 6 141 7 view .LVU2165
 8525              	.LBB6737:
 8526              	.LBI6737:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8527              		.loc 7 83 7 view .LVU2166
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8528              		.loc 7 83 7 is_stmt 0 view .LVU2167
 8529              	.LBE6737:
 8530              	.LBE6736:
 8531              	.LBE6735:
 8532              	.LBE6734:
 8533              	.LBB6738:
ARM GAS  /tmp/ccszdRNt.s 			page 438


 8534              	.LBI6738:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 8535              		.loc 5 159 2 is_stmt 1 view .LVU2168
 8536              	.LBB6739:
 8537              	.LBB6740:
 8538              	.LBB6741:
 8539              	.LBI6741:
 8540              		.loc 8 99 5 view .LVU2169
 8541              		.loc 8 99 5 is_stmt 0 view .LVU2170
 8542              	.LBE6741:
 8543              	.LBB6742:
 8544              	.LBI6742:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8545              		.loc 6 141 7 is_stmt 1 view .LVU2171
 8546              	.LBB6743:
 8547              	.LBI6743:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8548              		.loc 7 83 7 view .LVU2172
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8549              		.loc 7 83 7 is_stmt 0 view .LVU2173
 8550              	.LBE6743:
 8551              	.LBE6742:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8552              		.loc 5 160 46 view .LVU2174
 8553 0098 0EAF     		add	r7, sp, #56
 8554              	.LVL721:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8555              		.loc 5 160 46 view .LVU2175
 8556 009a 0C97     		str	r7, [sp, #48]
 8557              	.LVL722:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8558              		.loc 5 160 46 view .LVU2176
 8559              	.LBE6740:
 8560              	.LBE6739:
 8561              	.LBE6738:
 8562              	.LBB6744:
 8563              	.LBI6744:
 8564              		.loc 6 153 7 is_stmt 1 view .LVU2177
 8565              	.LBB6745:
 8566              	.LBI6745:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8567              		.loc 7 89 7 view .LVU2178
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8568              		.loc 7 89 7 is_stmt 0 view .LVU2179
 8569              	.LBE6745:
 8570              	.LBE6744:
 8571              	.LBB6746:
 8572              	.LBI6746:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8573              		.loc 5 186 7 is_stmt 1 view .LVU2180
 8574              	.LBB6747:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8575              		.loc 5 187 28 is_stmt 0 view .LVU2181
 8576 009c 2968     		ldr	r1, [r5]
 8577              	.LVL723:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8578              		.loc 5 187 28 view .LVU2182
ARM GAS  /tmp/ccszdRNt.s 			page 439


 8579              	.LBE6747:
 8580              	.LBE6746:
 8581              	.LBB6748:
 8582              	.LBI6748:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8583              		.loc 5 186 7 is_stmt 1 view .LVU2183
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8584              		.loc 5 186 7 is_stmt 0 view .LVU2184
 8585              	.LBE6748:
 8586              	.LBB6749:
 8587              	.LBI6749:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8588              		.loc 5 936 7 is_stmt 1 view .LVU2185
 8589              	.LBB6750:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8590              		.loc 5 937 16 is_stmt 0 view .LVU2186
 8591 009e 6A68     		ldr	r2, [r5, #4]
 8592              	.LVL724:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8593              		.loc 5 937 16 view .LVU2187
 8594              	.LBE6750:
 8595              	.LBE6749:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8596              		.loc 5 451 9 view .LVU2188
 8597 00a0 8A18     		adds	r2, r1, r2
 8598              	.LVL725:
 8599              	.LBB6751:
 8600              	.LBI6751:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 8601              		.loc 5 263 9 is_stmt 1 view .LVU2189
 8602              	.LBB6752:
 8603              	.LBB6753:
 8604              	.LBI6753:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 8605              		.loc 5 243 9 view .LVU2190
 8606              	.LBB6754:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8607              		.loc 5 247 11 is_stmt 0 view .LVU2191
 8608 00a2 0023     		movs	r3, #0
 8609 00a4 0CA8     		add	r0, sp, #48
 8610              	.LVL726:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8611              		.loc 5 247 11 view .LVU2192
 8612 00a6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 8613              	.LVL727:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8614              		.loc 5 247 11 view .LVU2193
 8615              	.LBE6754:
 8616              	.LBE6753:
 8617              	.LBE6752:
 8618              	.LBE6751:
 8619              	.LBE6731:
 8620              	.LBE6730:
 8621              	.LBE6729:
 149:alohal/cli/cli.cpp ****             Set_line_prefix("$" + foreground_application->Name());
 8622              		.loc 2 149 77 view .LVU2194
 8623 00aa 0CA9     		add	r1, sp, #48
ARM GAS  /tmp/ccszdRNt.s 			page 440


 8624 00ac 4046     		mov	r0, r8
 8625 00ae FFF7FEFF 		bl	_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 8626              	.LVL728:
 149:alohal/cli/cli.cpp ****             Set_line_prefix("$" + foreground_application->Name());
 8627              		.loc 2 149 36 view .LVU2195
 8628 00b2 F067     		str	r0, [r6, #124]
 8629              	.LVL729:
 8630              	.LBB6755:
 8631              	.LBI6755:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 8632              		.loc 5 657 7 is_stmt 1 view .LVU2196
 8633              	.LBB6756:
 8634              	.LBI6756:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8635              		.loc 5 229 7 view .LVU2197
 8636              	.LBB6757:
 8637              	.LBB6758:
 8638              	.LBI6758:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8639              		.loc 5 221 7 view .LVU2198
 8640              	.LBB6759:
 8641              	.LBI6759:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8642              		.loc 5 186 7 view .LVU2199
 8643              	.LBB6760:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8644              		.loc 5 187 28 is_stmt 0 view .LVU2200
 8645 00b4 0C98     		ldr	r0, [sp, #48]
 8646              	.LVL730:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8647              		.loc 5 187 28 view .LVU2201
 8648              	.LBE6760:
 8649              	.LBE6759:
 8650              	.LBB6761:
 8651              	.LBI6761:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8652              		.loc 5 200 7 is_stmt 1 view .LVU2202
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8653              		.loc 5 200 7 is_stmt 0 view .LVU2203
 8654              	.LBE6761:
 8655              	.LBE6758:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8656              		.loc 5 231 2 view .LVU2204
 8657 00b6 B842     		cmp	r0, r7
 8658 00b8 01D0     		beq	.L211
 8659              	.LVL731:
 8660              	.LBB6762:
 8661              	.LBI6762:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8662              		.loc 5 236 7 is_stmt 1 view .LVU2205
 8663              	.LBB6763:
 8664              	.LBB6764:
 8665              	.LBI6764:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8666              		.loc 10 469 7 view .LVU2206
 8667              	.LBB6765:
 8668              	.LBI6765:
ARM GAS  /tmp/ccszdRNt.s 			page 441


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8669              		.loc 7 119 7 view .LVU2207
 8670              	.LBB6766:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8671              		.loc 7 128 19 is_stmt 0 view .LVU2208
 8672 00ba FFF7FEFF 		bl	_ZdlPv
 8673              	.LVL732:
 8674              	.L211:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8675              		.loc 7 128 19 view .LVU2209
 8676              	.LBE6766:
 8677              	.LBE6765:
 8678              	.LBE6764:
 8679              	.LBE6763:
 8680              	.LBE6762:
 8681              	.LBE6757:
 8682              	.LBE6756:
 8683              	.LBB6767:
 8684              	.LBI6767:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8685              		.loc 5 150 14 is_stmt 1 view .LVU2210
 8686              	.LBB6768:
 8687              	.LBI6768:
 8688              		.loc 6 153 7 view .LVU2211
 8689              	.LBB6769:
 8690              	.LBI6769:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8691              		.loc 7 89 7 view .LVU2212
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8692              		.loc 7 89 7 is_stmt 0 view .LVU2213
 8693              	.LBE6769:
 8694              	.LBE6768:
 8695              	.LBE6767:
 8696              	.LBE6755:
 150:alohal/cli/cli.cpp ****             return true;
 8697              		.loc 2 150 13 is_stmt 1 view .LVU2214
 150:alohal/cli/cli.cpp ****             return true;
 8698              		.loc 2 150 35 is_stmt 0 view .LVU2215
 8699 00be F36F     		ldr	r3, [r6, #124]
 8700              	.LVL733:
 8701              	.LBB6770:
 8702              	.LBI6770:
 8703              		.file 22 "alohal/filesystem/entry.hpp"
   1:alohal/filesystem/entry.hpp **** /**
   2:alohal/filesystem/entry.hpp ****  * @file entry.hpp
   3:alohal/filesystem/entry.hpp ****  * @author Petr Malaník (TheColonelYoung(at)gmail(dot)com)
   4:alohal/filesystem/entry.hpp ****  * @version 0.1
   5:alohal/filesystem/entry.hpp ****  * @date 05.09.2019
   6:alohal/filesystem/entry.hpp ****  */
   7:alohal/filesystem/entry.hpp **** #pragma once
   8:alohal/filesystem/entry.hpp **** 
   9:alohal/filesystem/entry.hpp **** #include <string>
  10:alohal/filesystem/entry.hpp **** #include <vector>
  11:alohal/filesystem/entry.hpp **** 
  12:alohal/filesystem/entry.hpp **** using namespace std;
  13:alohal/filesystem/entry.hpp **** 
  14:alohal/filesystem/entry.hpp **** class FS_entry {
ARM GAS  /tmp/ccszdRNt.s 			page 442


  15:alohal/filesystem/entry.hpp **** public:
  16:alohal/filesystem/entry.hpp **** 
  17:alohal/filesystem/entry.hpp ****     enum class Type {
  18:alohal/filesystem/entry.hpp ****         Undefined,
  19:alohal/filesystem/entry.hpp ****         Directory,
  20:alohal/filesystem/entry.hpp ****         File,
  21:alohal/filesystem/entry.hpp ****         Executable
  22:alohal/filesystem/entry.hpp ****     };
  23:alohal/filesystem/entry.hpp **** 
  24:alohal/filesystem/entry.hpp **** protected:
  25:alohal/filesystem/entry.hpp ****     Type type = Type::Undefined;
  26:alohal/filesystem/entry.hpp **** 
  27:alohal/filesystem/entry.hpp ****     string name = "None";
  28:alohal/filesystem/entry.hpp **** 
  29:alohal/filesystem/entry.hpp ****     /**
  30:alohal/filesystem/entry.hpp ****      * @brief Pointer to directory in which ius this entry located
  31:alohal/filesystem/entry.hpp ****      */
  32:alohal/filesystem/entry.hpp ****     FS_entry *parent = nullptr;
  33:alohal/filesystem/entry.hpp **** 
  34:alohal/filesystem/entry.hpp **** public:
  35:alohal/filesystem/entry.hpp ****     FS_entry() = default;
  36:alohal/filesystem/entry.hpp **** 
  37:alohal/filesystem/entry.hpp ****     FS_entry(string name);
  38:alohal/filesystem/entry.hpp **** 
  39:alohal/filesystem/entry.hpp ****     virtual ~FS_entry() = default;
  40:alohal/filesystem/entry.hpp **** 
  41:alohal/filesystem/entry.hpp ****     /**
  42:alohal/filesystem/entry.hpp ****      * @brief Call destructor of object
  43:alohal/filesystem/entry.hpp ****      */
  44:alohal/filesystem/entry.hpp ****     void Delete();
  45:alohal/filesystem/entry.hpp **** 
  46:alohal/filesystem/entry.hpp ****     /**
  47:alohal/filesystem/entry.hpp ****      * @brief Name of actual entry, this is not a path to entry
  48:alohal/filesystem/entry.hpp ****      *
  49:alohal/filesystem/entry.hpp ****      * @return string Name of entry
  50:alohal/filesystem/entry.hpp ****      */
  51:alohal/filesystem/entry.hpp ****     const inline string Name(){ return name; };
 8704              		.loc 22 51 25 is_stmt 1 view .LVU2216
 8705              	.LBE6770:
 8706              		.loc 22 51 33 view .LVU2217
 8707              	.LBB6795:
 8708              	.LBB6771:
 8709              	.LBI6771:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 8710              		.loc 5 448 7 view .LVU2218
 8711              	.LBB6772:
 8712              	.LBB6773:
 8713              	.LBI6773:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8714              		.loc 5 190 7 view .LVU2219
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8715              		.loc 5 190 7 is_stmt 0 view .LVU2220
 8716              	.LBE6773:
 8717              	.LBB6774:
 8718              	.LBI6774:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8719              		.loc 5 290 7 is_stmt 1 view .LVU2221
ARM GAS  /tmp/ccszdRNt.s 			page 443


 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 8720              		.loc 5 290 7 is_stmt 0 view .LVU2222
 8721              	.LBE6774:
 8722              	.LBB6775:
 8723              	.LBI6775:
 8724              		.loc 20 97 19 is_stmt 1 view .LVU2223
 8725              	.LBB6776:
 8726              	.LBI6776:
 8727              		.loc 10 514 7 view .LVU2224
 8728              	.LBB6777:
 8729              	.LBI6777:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8730              		.loc 6 141 7 view .LVU2225
 8731              	.LBB6778:
 8732              	.LBI6778:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8733              		.loc 7 83 7 view .LVU2226
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8734              		.loc 7 83 7 is_stmt 0 view .LVU2227
 8735              	.LBE6778:
 8736              	.LBE6777:
 8737              	.LBE6776:
 8738              	.LBE6775:
 8739              	.LBB6779:
 8740              	.LBI6779:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 8741              		.loc 5 159 2 is_stmt 1 view .LVU2228
 8742              	.LBB6780:
 8743              	.LBB6781:
 8744              	.LBI6781:
 8745              		.loc 8 99 5 view .LVU2229
 8746              		.loc 8 99 5 is_stmt 0 view .LVU2230
 8747              	.LBE6781:
 8748              	.LBB6782:
 8749              	.LBI6782:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 8750              		.loc 6 141 7 is_stmt 1 view .LVU2231
 8751              	.LBB6783:
 8752              	.LBI6783:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8753              		.loc 7 83 7 view .LVU2232
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8754              		.loc 7 83 7 is_stmt 0 view .LVU2233
 8755              	.LBE6783:
 8756              	.LBE6782:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8757              		.loc 5 160 46 view .LVU2234
 8758 00c0 1AAA     		add	r2, sp, #104
 8759              	.LVL734:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8760              		.loc 5 160 46 view .LVU2235
 8761 00c2 1892     		str	r2, [sp, #96]
 8762              	.LVL735:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 8763              		.loc 5 160 46 view .LVU2236
 8764              	.LBE6780:
 8765              	.LBE6779:
ARM GAS  /tmp/ccszdRNt.s 			page 444


 8766              	.LBB6784:
 8767              	.LBI6784:
 8768              		.loc 6 153 7 is_stmt 1 view .LVU2237
 8769              	.LBB6785:
 8770              	.LBI6785:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8771              		.loc 7 89 7 view .LVU2238
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8772              		.loc 7 89 7 is_stmt 0 view .LVU2239
 8773              	.LBE6785:
 8774              	.LBE6784:
 8775              	.LBB6786:
 8776              	.LBI6786:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8777              		.loc 5 186 7 is_stmt 1 view .LVU2240
 8778              	.LBB6787:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8779              		.loc 5 187 28 is_stmt 0 view .LVU2241
 8780 00c4 9968     		ldr	r1, [r3, #8]
 8781              	.LVL736:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8782              		.loc 5 187 28 view .LVU2242
 8783              	.LBE6787:
 8784              	.LBE6786:
 8785              	.LBB6788:
 8786              	.LBI6788:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8787              		.loc 5 186 7 is_stmt 1 view .LVU2243
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8788              		.loc 5 186 7 is_stmt 0 view .LVU2244
 8789              	.LBE6788:
 8790              	.LBB6789:
 8791              	.LBI6789:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 8792              		.loc 5 936 7 is_stmt 1 view .LVU2245
 8793              	.LBB6790:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8794              		.loc 5 937 16 is_stmt 0 view .LVU2246
 8795 00c6 DA68     		ldr	r2, [r3, #12]
 8796              	.LVL737:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8797              		.loc 5 937 16 view .LVU2247
 8798              	.LBE6790:
 8799              	.LBE6789:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8800              		.loc 5 451 9 view .LVU2248
 8801 00c8 8A18     		adds	r2, r1, r2
 8802              	.LVL738:
 8803              	.LBB6791:
 8804              	.LBI6791:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 8805              		.loc 5 263 9 is_stmt 1 view .LVU2249
 8806              	.LBB6792:
 8807              	.LBB6793:
 8808              	.LBI6793:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 8809              		.loc 5 243 9 view .LVU2250
ARM GAS  /tmp/ccszdRNt.s 			page 445


 8810              	.LBB6794:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8811              		.loc 5 247 11 is_stmt 0 view .LVU2251
 8812 00ca 0023     		movs	r3, #0
 8813              	.LVL739:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8814              		.loc 5 247 11 view .LVU2252
 8815 00cc 18A8     		add	r0, sp, #96
 8816              	.LVL740:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8817              		.loc 5 247 11 view .LVU2253
 8818 00ce FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 8819              	.LVL741:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 8820              		.loc 5 247 11 view .LVU2254
 8821              	.LBE6794:
 8822              	.LBE6793:
 8823              	.LBE6792:
 8824              	.LBE6791:
 8825              	.LBE6772:
 8826              	.LBE6771:
 8827              	.LBE6795:
 150:alohal/cli/cli.cpp ****             return true;
 8828              		.loc 2 150 33 view .LVU2255
 8829 00d2 18AA     		add	r2, sp, #96
 8830 00d4 0A49     		ldr	r1, .L218
 8831 00d6 12A8     		add	r0, sp, #72
 8832 00d8 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 8833              	.LVL742:
 150:alohal/cli/cli.cpp ****             return true;
 8834              		.loc 2 150 28 view .LVU2256
 8835 00dc 12A9     		add	r1, sp, #72
 8836 00de 3000     		movs	r0, r6
 8837 00e0 FFF7FEFF 		bl	_ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 8838              	.LVL743:
 8839              	.LBB6796:
 8840              	.LBI6796:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 8841              		.loc 5 657 7 is_stmt 1 view .LVU2257
 8842              	.LBB6797:
 8843              	.LBI6797:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8844              		.loc 5 229 7 view .LVU2258
 8845              	.LBB6798:
 8846              	.LBB6799:
 8847              	.LBI6799:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8848              		.loc 5 221 7 view .LVU2259
 8849              	.LBB6800:
 8850              	.LBI6800:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8851              		.loc 5 186 7 view .LVU2260
 8852              	.LBB6801:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8853              		.loc 5 187 28 is_stmt 0 view .LVU2261
 8854 00e4 1298     		ldr	r0, [sp, #72]
 8855              	.LVL744:
ARM GAS  /tmp/ccszdRNt.s 			page 446


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8856              		.loc 5 187 28 view .LVU2262
 8857              	.LBE6801:
 8858              	.LBE6800:
 8859              	.LBB6802:
 8860              	.LBI6802:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8861              		.loc 5 200 7 is_stmt 1 view .LVU2263
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8862              		.loc 5 200 7 is_stmt 0 view .LVU2264
 8863              	.LBE6802:
 8864              	.LBE6799:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8865              		.loc 5 231 2 view .LVU2265
 8866 00e6 14AB     		add	r3, sp, #80
 8867 00e8 9842     		cmp	r0, r3
 8868 00ea 01D0     		beq	.L212
 8869              	.LVL745:
 8870              	.LBB6803:
 8871              	.LBI6803:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8872              		.loc 5 236 7 is_stmt 1 view .LVU2266
 8873              	.LBB6804:
 8874              	.LBB6805:
 8875              	.LBI6805:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8876              		.loc 10 469 7 view .LVU2267
 8877              	.LBB6806:
 8878              	.LBI6806:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8879              		.loc 7 119 7 view .LVU2268
 8880              	.LBB6807:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8881              		.loc 7 128 19 is_stmt 0 view .LVU2269
 8882 00ec FFF7FEFF 		bl	_ZdlPv
 8883              	.LVL746:
 8884              	.L212:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8885              		.loc 7 128 19 view .LVU2270
 8886              	.LBE6807:
 8887              	.LBE6806:
 8888              	.LBE6805:
 8889              	.LBE6804:
 8890              	.LBE6803:
 8891              	.LBE6798:
 8892              	.LBE6797:
 8893              	.LBB6808:
 8894              	.LBI6808:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8895              		.loc 5 150 14 is_stmt 1 view .LVU2271
 8896              	.LBB6809:
 8897              	.LBI6809:
 8898              		.loc 6 153 7 view .LVU2272
 8899              	.LBB6810:
 8900              	.LBI6810:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8901              		.loc 7 89 7 view .LVU2273
ARM GAS  /tmp/ccszdRNt.s 			page 447


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8902              		.loc 7 89 7 is_stmt 0 view .LVU2274
 8903              	.LBE6810:
 8904              	.LBE6809:
 8905              	.LBE6808:
 8906              	.LBE6796:
 8907              	.LBB6811:
 8908              	.LBI6811:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 8909              		.loc 5 657 7 is_stmt 1 view .LVU2275
 8910              	.LBB6812:
 8911              	.LBI6812:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8912              		.loc 5 229 7 view .LVU2276
 8913              	.LBB6813:
 8914              	.LBB6814:
 8915              	.LBI6814:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 8916              		.loc 5 221 7 view .LVU2277
 8917              	.LBB6815:
 8918              	.LBI6815:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 8919              		.loc 5 186 7 view .LVU2278
 8920              	.LBB6816:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8921              		.loc 5 187 28 is_stmt 0 view .LVU2279
 8922 00f0 1898     		ldr	r0, [sp, #96]
 8923              	.LVL747:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 8924              		.loc 5 187 28 view .LVU2280
 8925              	.LBE6816:
 8926              	.LBE6815:
 8927              	.LBB6817:
 8928              	.LBI6817:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8929              		.loc 5 200 7 is_stmt 1 view .LVU2281
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8930              		.loc 5 200 7 is_stmt 0 view .LVU2282
 8931              	.LBE6817:
 8932              	.LBE6814:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 8933              		.loc 5 231 2 view .LVU2283
 8934 00f2 1AAB     		add	r3, sp, #104
 8935 00f4 9842     		cmp	r0, r3
 8936 00f6 ACD0     		beq	.L209
 8937              	.LVL748:
 8938              	.LBB6818:
 8939              	.LBI6818:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 8940              		.loc 5 236 7 is_stmt 1 view .LVU2284
 8941              	.LBB6819:
 8942              	.LBB6820:
 8943              	.LBI6820:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 8944              		.loc 10 469 7 view .LVU2285
 8945              	.LBB6821:
 8946              	.LBI6821:
ARM GAS  /tmp/ccszdRNt.s 			page 448


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 8947              		.loc 7 119 7 view .LVU2286
 8948              	.LBB6822:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8949              		.loc 7 128 19 is_stmt 0 view .LVU2287
 8950 00f8 FFF7FEFF 		bl	_ZdlPv
 8951              	.LVL749:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 8952              		.loc 7 128 19 view .LVU2288
 8953              	.LBE6822:
 8954              	.LBE6821:
 8955              	.LBE6820:
 8956              	.LBE6819:
 8957              	.LBE6818:
 8958              	.LBE6813:
 8959              	.LBE6812:
 8960              	.LBB6823:
 8961              	.LBI6823:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 8962              		.loc 5 150 14 is_stmt 1 view .LVU2289
 8963              	.LBB6824:
 8964              	.LBI6824:
 8965              		.loc 6 153 7 view .LVU2290
 8966              	.LBB6825:
 8967              	.LBI6825:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8968              		.loc 7 89 7 view .LVU2291
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 8969              		.loc 7 89 7 is_stmt 0 view .LVU2292
 8970              	.LBE6825:
 8971              	.LBE6824:
 8972              	.LBE6823:
 8973              	.LBE6811:
 151:alohal/cli/cli.cpp ****         }
 8974              		.loc 2 151 13 is_stmt 1 view .LVU2293
 151:alohal/cli/cli.cpp ****         }
 8975              		.loc 2 151 20 is_stmt 0 view .LVU2294
 8976 00fc A9E7     		b	.L209
 8977              	.L219:
 8978 00fe C046     		.align	2
 8979              	.L218:
 8980 0100 00000000 		.word	.LC30
 8981              		.cfi_endproc
 8982              	.LFE3866:
 8984              		.section	.rodata._ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_
 8985              		.align	2
 8986              	.LC32:
 8987 0000 257500   		.ascii	"%u\000"
 8988 0003 00       		.align	2
 8989              	.LC35:
 8990 0004 41766169 		.ascii	"Available commands - \000"
 8990      6C61626C 
 8990      6520636F 
 8990      6D6D616E 
 8990      6473202D 
 8991 001a 0000     		.align	2
 8992              	.LC39:
ARM GAS  /tmp/ccszdRNt.s 			page 449


 8993 001c 202D2000 		.ascii	" - \000"
 8994              		.align	2
 8995              	.LC41:
 8996 0020 50617261 		.ascii	"Parameter was not found\015\012\000"
 8996      6D657465 
 8996      72207761 
 8996      73206E6F 
 8996      7420666F 
 8997              		.section	.text._ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 8998              		.align	1
 8999              		.global	_ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 9000              		.syntax unified
 9001              		.code	16
 9002              		.thumb_func
 9003              		.fpu softvfp
 9005              	_ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:
 9006              	.LVL750:
 9007              	.LFB3876:
 225:alohal/cli/cli.cpp **** 
 226:alohal/cli/cli.cpp **** int CLI::Help(vector<string> args){
 9008              		.loc 2 226 35 is_stmt 1 view -0
 9009              		.cfi_startproc
 9010              		@ args = 0, pretend = 0, frame = 312
 9011              		@ frame_needed = 0, uses_anonymous_args = 0
 9012              		.loc 2 226 35 is_stmt 0 view .LVU2296
 9013 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 9014              	.LCFI45:
 9015              		.cfi_def_cfa_offset 20
 9016              		.cfi_offset 4, -20
 9017              		.cfi_offset 5, -16
 9018              		.cfi_offset 6, -12
 9019              		.cfi_offset 7, -8
 9020              		.cfi_offset 14, -4
 9021 0002 C646     		mov	lr, r8
 9022 0004 00B5     		push	{lr}
 9023              	.LCFI46:
 9024              		.cfi_def_cfa_offset 24
 9025              		.cfi_offset 8, -24
 9026 0006 D0B0     		sub	sp, sp, #320
 9027              	.LCFI47:
 9028              		.cfi_def_cfa_offset 344
 9029 0008 0600     		movs	r6, r0
 9030 000a 0D00     		movs	r5, r1
 227:alohal/cli/cli.cpp ****     if (args.size() == 1) { // only help without parametr
 9031              		.loc 2 227 5 is_stmt 1 view .LVU2297
 9032              	.LVL751:
 9033              	.LBB7387:
 9034              	.LBB7388:
 9035              	.LBI7388:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9036              		.loc 13 915 7 view .LVU2298
 9037              	.LBB7389:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 9038              		.loc 13 916 50 is_stmt 0 view .LVU2299
 9039 000c 4B68     		ldr	r3, [r1, #4]
 9040 000e 0A68     		ldr	r2, [r1]
 9041 0010 9B1A     		subs	r3, r3, r2
ARM GAS  /tmp/ccszdRNt.s 			page 450


 9042              	.LVL752:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 9043              		.loc 13 916 50 view .LVU2300
 9044              	.LBE7389:
 9045              	.LBE7388:
 9046              		.loc 2 227 5 view .LVU2301
 9047 0012 182B     		cmp	r3, #24
 9048 0014 02D0     		beq	.L259
 9049              	.LBB7390:
 228:alohal/cli/cli.cpp ****         string output_line = "Available commands - " + to_string(commands.size()) + "\r\n";
 229:alohal/cli/cli.cpp ****         for (auto &cmd:commands) {
 230:alohal/cli/cli.cpp ****             output_line += cmd->Get_command() + "\r\n";
 231:alohal/cli/cli.cpp ****         }
 232:alohal/cli/cli.cpp ****         Print(output_line);
 233:alohal/cli/cli.cpp ****     } else { // help with additional command as parametr
 234:alohal/cli/cli.cpp ****         for (auto &cmd:commands) {
 9050              		.loc 2 234 9 is_stmt 1 view .LVU2302
 9051              	.LVL753:
 9052              	.LBB7391:
 9053              	.LBB7392:
 9054              	.LBI7392:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 9055              		.loc 13 808 7 view .LVU2303
 9056              	.LBB7393:
 9057              	.LBB7394:
 9058              	.LBI7394:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 9059              		.loc 14 806 7 view .LVU2304
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 9060              		.loc 14 806 7 is_stmt 0 view .LVU2305
 9061              	.LBE7394:
 9062              	.LBE7393:
 9063              	.LBE7392:
 9064              		.loc 2 234 24 view .LVU2306
 9065 0016 836E     		ldr	r3, [r0, #104]
 9066              	.LVL754:
 9067              	.LBB7395:
 9068              	.LBI7395:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 9069              		.loc 13 826 7 is_stmt 1 view .LVU2307
 9070              	.LBB7396:
 9071              	.LBI7396:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 9072              		.loc 14 806 7 view .LVU2308
 9073              	.LBB7397:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9074              		.loc 14 807 23 is_stmt 0 view .LVU2309
 9075 0018 C76E     		ldr	r7, [r0, #108]
 9076              	.LVL755:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9077              		.loc 14 807 23 view .LVU2310
 9078 001a C6E0     		b	.L254
 9079              	.LVL756:
 9080              	.L259:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9081              		.loc 14 807 23 view .LVU2311
 9082              	.LBE7397:
ARM GAS  /tmp/ccszdRNt.s 			page 451


 9083              	.LBE7396:
 9084              	.LBE7395:
 9085              	.LBE7391:
 9086              	.LBE7390:
 9087              	.LBB7690:
 228:alohal/cli/cli.cpp ****         for (auto &cmd:commands) {
 9088              		.loc 2 228 9 is_stmt 1 view .LVU2312
 9089              	.LBB7691:
 9090              	.LBI7691:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 9091              		.loc 13 915 7 view .LVU2313
 9092              	.LBB7692:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 9093              		.loc 13 916 50 is_stmt 0 view .LVU2314
 9094 001c C36E     		ldr	r3, [r0, #108]
 9095 001e 826E     		ldr	r2, [r0, #104]
 9096 0020 9B1A     		subs	r3, r3, r2
 9097 0022 9B10     		asrs	r3, r3, #2
 9098              	.LVL757:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 9099              		.loc 13 916 50 view .LVU2315
 9100              	.LBE7692:
 9101              	.LBE7691:
 9102              	.LBB7693:
 9103              	.LBI7693:
6178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator !=
6180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test difference of two strings.
6182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
6185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
6195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
6198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
6202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6204:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6205:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6206:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
6207:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6208:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6209:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
ARM GAS  /tmp/ccszdRNt.s 			page 452


6210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6212:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6213:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6215:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return !(__lhs == __rhs); }
6216:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator <
6218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6219:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string precedes string.
6220:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6223:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6224:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6225:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6226:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6230:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6232:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
6233:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6234:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6235:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6238:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6239:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6240:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6241:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
6242:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6244:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
6245:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6246:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
6248:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6249:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6250:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6251:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<(const _CharT* __lhs,
6252:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6253:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
6254:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6255:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator >
6256:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6257:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string follows string.
6258:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6259:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6260:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6261:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6262:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6264:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6265:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6266:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
ARM GAS  /tmp/ccszdRNt.s 			page 453


6267:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6269:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6270:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string follows C string.
6271:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6272:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6274:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6275:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6276:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6278:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
6279:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
6280:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6281:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6282:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string follows string.
6283:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6284:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
6286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6287:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6288:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6289:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>(const _CharT* __lhs,
6290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6291:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
6292:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6293:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator <=
6294:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6295:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
6296:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6297:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6298:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6301:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6302:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6303:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6304:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6306:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6307:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6308:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
6309:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6311:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
6312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6314:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6316:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
6318:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6319:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
6321:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
ARM GAS  /tmp/ccszdRNt.s 			page 454


6324:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6326:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6327:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
6328:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
6330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // operator >=
6332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6333:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
6334:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6336:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6337:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6338:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6339:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6341:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6342:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
6343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6344:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6345:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
6347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  String.
6348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  C string.
6349:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6351:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6352:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6353:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
6354:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
6355:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
6356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6357:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
6359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  C string.
6360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  String.
6361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
6362:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline bool
6365:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
6366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
6367:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
6368:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6369:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6370:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
6371:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __lhs  First string.
6372:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __rhs  Second string.
6373:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6374:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
6375:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6376:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6377:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline void
6378:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
6379:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
6380:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
ARM GAS  /tmp/ccszdRNt.s 			page 455


6381:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { __lhs.swap(__rhs); }
6382:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6383:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6384:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6385:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Read stream into a string.
6386:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __is  Input stream.
6387:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6388:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the input stream.
6389:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6390:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
6391:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6392:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
6393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
6394:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  contents of @a __str are erased.
6395:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6397:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6398:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
6399:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
6400:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6401:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<>
6402:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<char>&
6403:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
6404:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6405:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6406:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Write string to a stream.
6407:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __os  Output stream.
6408:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  String to write out.
6409:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the output stream.
6410:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6411:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
6412:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  writing a C string.
6413:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6414:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6415:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
6416:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
6417:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
6418:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     {
6419:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
6420:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       // 586. string inserter not a formatted function
6421:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
6422:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     }
6423:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6424:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6425:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __is  Input stream.
6427:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6428:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __delim  Character marking end of line.
6429:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the input stream.
6430:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6431:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until @a __delim is
6432:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6433:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6434:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @a __delim is encountered, it is extracted but not stored into
6435:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @a __str.
6436:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
ARM GAS  /tmp/ccszdRNt.s 			page 456


6438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
6439:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6440:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim);
6441:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6442:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /**
6443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @brief  Read a line from stream into a string.
6444:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __is  Input stream.
6445:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @param __str  Buffer to store into.
6446:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @return  Reference to the input stream.
6447:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *
6448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  Stores characters from is into @a __str until &apos;\n&apos; is
6449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
6450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  is reached.  Any previous contents of @a __str are erased.  If
6451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  end of line is encountered, it is extracted but not stored into
6452:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    *  @a __str.
6453:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****    */
6454:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6455:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6456:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>& __is,
6457:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6458:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::getline(__is, __str, __is.widen('\n')); }
6459:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6460:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
6461:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6463:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6465:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str, _CharT __delim)
6466:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::getline(__is, __str, __delim); }
6467:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6468:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   /// Read a line from an rvalue stream into a string.
6469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
6470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     inline basic_istream<_CharT, _Traits>&
6471:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<_CharT, _Traits>&& __is,
6472:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    basic_string<_CharT, _Traits, _Alloc>& __str)
6473:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     { return std::getline(__is, __str); }
6474:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
6475:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<>
6477:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<char>&
6478:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<char>& __in, basic_string<char>& __str,
6479:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    char __delim);
6480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6481:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #ifdef _GLIBCXX_USE_WCHAR_T
6482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   template<>
6483:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     basic_istream<wchar_t>&
6484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****     getline(basic_istream<wchar_t>& __in, basic_string<wchar_t>& __str,
6485:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    wchar_t __delim);
6486:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif  
6487:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6488:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
6489:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** } // namespace
6490:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6491:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if __cplusplus >= 201103L
6492:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6493:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #include <ext/string_conversions.h>
6494:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 457


6495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
6496:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** {
6497:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
6498:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
6499:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6500:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDLIB
6501:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // 21.4 Numeric Conversions [string.conversions].
6502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline int
6503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoi(const string& __str, size_t* __idx = 0, int __base = 10)
6504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa<long, int>(&std::strtol, "stoi", __str.c_str(),
6505:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					__idx, __base); }
6506:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6507:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline long
6508:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stol(const string& __str, size_t* __idx = 0, int __base = 10)
6509:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtol, "stol", __str.c_str(),
6510:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6511:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6512:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline unsigned long
6513:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoul(const string& __str, size_t* __idx = 0, int __base = 10)
6514:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoul, "stoul", __str.c_str(),
6515:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6516:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6517:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline long long
6518:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoll(const string& __str, size_t* __idx = 0, int __base = 10)
6519:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoll, "stoll", __str.c_str(),
6520:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6521:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6522:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline unsigned long long
6523:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stoull(const string& __str, size_t* __idx = 0, int __base = 10)
6524:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtoull, "stoull", __str.c_str(),
6525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			     __idx, __base); }
6526:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6527:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // NB: strtof vs strtod.
6528:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline float
6529:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stof(const string& __str, size_t* __idx = 0)
6530:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtof, "stof", __str.c_str(), __idx); }
6531:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6532:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline double
6533:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stod(const string& __str, size_t* __idx = 0)
6534:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtod, "stod", __str.c_str(), __idx); }
6535:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6536:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline long double
6537:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   stold(const string& __str, size_t* __idx = 0)
6538:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__stoa(&std::strtold, "stold", __str.c_str(), __idx); }
6539:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif // _GLIBCXX_USE_C99_STDLIB
6540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6541:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #if _GLIBCXX_USE_C99_STDIO
6542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // NB: (v)snprintf vs sprintf.
6543:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6544:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   // DR 1261.
6545:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6546:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(int __val)
6547:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(int),
6548:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%d", __val); }
6549:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6551:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(unsigned __val)
ARM GAS  /tmp/ccszdRNt.s 			page 458


 9104              		.loc 5 6551 3 is_stmt 1 view .LVU2316
 9105              	.LBB7694:
6552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf,
 9106              		.loc 5 6552 5 view .LVU2317
6553:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   4 * sizeof(unsigned),
6554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%u", __val); }
 9107              		.loc 5 6554 20 is_stmt 0 view .LVU2318
 9108 0024 0093     		str	r3, [sp]
 9109 0026 BD4B     		ldr	r3, .L271
 9110              	.LVL758:
 9111              		.loc 5 6554 20 view .LVU2319
 9112 0028 1022     		movs	r2, #16
 9113 002a BD49     		ldr	r1, .L271+4
 9114              	.LVL759:
 9115              		.loc 5 6554 20 view .LVU2320
 9116 002c 0EA8     		add	r0, sp, #56
 9117              	.LVL760:
 9118              		.loc 5 6554 20 view .LVU2321
 9119 002e FFF7FEFF 		bl	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPK
 9120              	.LVL761:
 9121              		.loc 5 6554 20 view .LVU2322
 9122              	.LBE7694:
 9123              	.LBE7693:
 9124              	.LBB7695:
 9125              	.LBI7695:
6109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
 9126              		.loc 5 6109 5 is_stmt 1 view .LVU2323
 9127              	.LBB7696:
 9128              	.LBI7696:
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9129              		.loc 5 1704 7 view .LVU2324
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9130              		.loc 5 1704 7 is_stmt 0 view .LVU2325
 9131              	.LBE7696:
 9132              	.LBE7695:
 9133              	.LBE7690:
 9134              	.LBE7387:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 9135              		.loc 4 332 2 is_stmt 1 view .LVU2326
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 9136              		.loc 4 335 2 view .LVU2327
 9137              	.LBB7982:
 9138              	.LBB7975:
 9139              	.LBB7743:
 9140              	.LBB7704:
 9141              	.LBB7697:
 9142              	.LBI7697:
1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
 9143              		.loc 5 1936 7 view .LVU2328
 9144              	.LBB7698:
 9145              	.LBB7699:
 9146              	.LBI7699:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9147              		.loc 5 310 7 view .LVU2329
 9148              	.LBB7700:
 9149              	.LBI7700:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
ARM GAS  /tmp/ccszdRNt.s 			page 459


 9150              		.loc 5 930 7 view .LVU2330
 9151              	.LBB7701:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9152              		.loc 5 931 16 is_stmt 0 view .LVU2331
 9153 0032 0F9A     		ldr	r2, [sp, #60]
 9154              	.LVL762:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9155              		.loc 5 931 16 view .LVU2332
 9156              	.LBE7701:
 9157              	.LBE7700:
 9158              	.LBE7699:
 9159              	.LBB7702:
 9160              	.LBI7702:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9161              		.loc 5 329 7 is_stmt 1 view .LVU2333
 9162              	.LBB7703:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9163              		.loc 5 332 19 is_stmt 0 view .LVU2334
 9164 0034 002A     		cmp	r2, #0
 9165 0036 00D0     		beq	.L222
 9166 0038 0022     		movs	r2, #0
 9167              	.LVL763:
 9168              	.L222:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9169              		.loc 5 332 19 view .LVU2335
 9170              	.LBE7703:
 9171              	.LBE7702:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9172              		.loc 5 1941 38 view .LVU2336
 9173 003a 1523     		movs	r3, #21
 9174 003c 0093     		str	r3, [sp]
 9175 003e B94B     		ldr	r3, .L271+8
 9176 0040 0021     		movs	r1, #0
 9177 0042 0EA8     		add	r0, sp, #56
 9178              	.LVL764:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9179              		.loc 5 1941 38 view .LVU2337
 9180 0044 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 9181              	.LVL765:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9182              		.loc 5 1941 38 view .LVU2338
 9183 0048 0400     		movs	r4, r0
 9184              	.LVL766:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9185              		.loc 5 1941 38 view .LVU2339
 9186              	.LBE7698:
 9187              	.LBE7697:
 9188              	.LBE7704:
 9189              	.LBB7705:
 9190              	.LBI7705:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 9191              		.loc 5 552 7 is_stmt 1 view .LVU2340
 9192              	.LBB7706:
 9193              	.LBB7707:
 9194              	.LBB7708:
 9195              	.LBI7708:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 460


 9196              		.loc 5 190 7 view .LVU2341
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9197              		.loc 5 190 7 is_stmt 0 view .LVU2342
 9198              	.LBE7708:
 9199              	.LBB7709:
 9200              	.LBI7709:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9201              		.loc 5 286 7 is_stmt 1 view .LVU2343
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9202              		.loc 5 286 7 is_stmt 0 view .LVU2344
 9203              	.LBE7709:
 9204              	.LBB7710:
 9205              	.LBI7710:
 9206              		.loc 8 99 5 is_stmt 1 view .LVU2345
 9207              		.loc 8 99 5 is_stmt 0 view .LVU2346
 9208              	.LBE7710:
 9209              	.LBB7711:
 9210              	.LBI7711:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9211              		.loc 5 159 2 is_stmt 1 view .LVU2347
 9212              	.LBB7712:
 9213              	.LBB7713:
 9214              	.LBB7714:
 9215              	.LBI7714:
 9216              		.loc 8 99 5 view .LVU2348
 9217              		.loc 8 99 5 is_stmt 0 view .LVU2349
 9218              	.LBE7714:
 9219              	.LBB7715:
 9220              	.LBI7715:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9221              		.loc 6 141 7 is_stmt 1 view .LVU2350
 9222              	.LBB7716:
 9223              	.LBI7716:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9224              		.loc 7 83 7 view .LVU2351
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9225              		.loc 7 83 7 is_stmt 0 view .LVU2352
 9226              	.LBE7716:
 9227              	.LBE7715:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9228              		.loc 5 160 46 view .LVU2353
 9229 004a 0AAB     		add	r3, sp, #40
 9230              	.LVL767:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9231              		.loc 5 160 46 view .LVU2354
 9232 004c 0893     		str	r3, [sp, #32]
 9233              	.LVL768:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9234              		.loc 5 160 46 view .LVU2355
 9235              	.LBE7713:
 9236              	.LBE7712:
 9237              	.LBE7711:
 9238              	.LBB7717:
 9239              	.LBI7717:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9240              		.loc 5 221 7 is_stmt 1 view .LVU2356
 9241              	.LBB7718:
ARM GAS  /tmp/ccszdRNt.s 			page 461


 9242              	.LBI7718:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9243              		.loc 5 186 7 view .LVU2357
 9244              	.LBB7719:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9245              		.loc 5 187 28 is_stmt 0 view .LVU2358
 9246 004e 0368     		ldr	r3, [r0]
 9247              	.LVL769:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9248              		.loc 5 187 28 view .LVU2359
 9249              	.LBE7719:
 9250              	.LBE7718:
 9251              	.LBB7720:
 9252              	.LBI7720:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9253              		.loc 5 200 7 is_stmt 1 view .LVU2360
 9254              	.LBB7721:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9255              		.loc 5 203 57 is_stmt 0 view .LVU2361
 9256 0050 0500     		movs	r5, r0
 9257              	.LVL770:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9258              		.loc 5 203 57 view .LVU2362
 9259 0052 0835     		adds	r5, r5, #8
 9260              	.LVL771:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9261              		.loc 5 203 57 view .LVU2363
 9262              	.LBE7721:
 9263              	.LBE7720:
 9264              	.LBE7717:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 9265              		.loc 5 555 2 view .LVU2364
 9266 0054 AB42     		cmp	r3, r5
 9267 0056 32D0     		beq	.L260
 9268              	.LVL772:
 9269              	.LBB7722:
 9270              	.LBI7722:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9271              		.loc 5 186 7 is_stmt 1 view .LVU2365
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9272              		.loc 5 186 7 is_stmt 0 view .LVU2366
 9273              	.LBE7722:
 9274              	.LBB7723:
 9275              	.LBI7723:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 9276              		.loc 5 178 7 is_stmt 1 view .LVU2367
 9277              	.LBB7724:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9278              		.loc 5 179 9 is_stmt 0 view .LVU2368
 9279 0058 0893     		str	r3, [sp, #32]
 9280              	.LVL773:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9281              		.loc 5 179 9 view .LVU2369
 9282              	.LBE7724:
 9283              	.LBE7723:
 9284              	.LBB7725:
 9285              	.LBI7725:
ARM GAS  /tmp/ccszdRNt.s 			page 462


 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 9286              		.loc 5 210 7 is_stmt 1 view .LVU2370
 9287              	.LBB7726:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9288              		.loc 5 211 9 is_stmt 0 view .LVU2371
 9289 005a 8368     		ldr	r3, [r0, #8]
 9290 005c 0A93     		str	r3, [sp, #40]
 9291              	.LVL774:
 9292              	.L224:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9293              		.loc 5 211 9 view .LVU2372
 9294              	.LBE7726:
 9295              	.LBE7725:
 9296              	.LBB7727:
 9297              	.LBI7727:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9298              		.loc 5 936 7 is_stmt 1 view .LVU2373
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9299              		.loc 5 936 7 is_stmt 0 view .LVU2374
 9300              	.LBE7727:
 9301              	.LBB7728:
 9302              	.LBI7728:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 9303              		.loc 5 182 7 is_stmt 1 view .LVU2375
 9304              	.LBB7729:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9305              		.loc 5 183 9 is_stmt 0 view .LVU2376
 9306 005e 6368     		ldr	r3, [r4, #4]
 9307 0060 0993     		str	r3, [sp, #36]
 9308              	.LVL775:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9309              		.loc 5 183 9 view .LVU2377
 9310              	.LBE7729:
 9311              	.LBE7728:
 9312              	.LBB7730:
 9313              	.LBI7730:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9314              		.loc 5 190 7 is_stmt 1 view .LVU2378
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9315              		.loc 5 190 7 is_stmt 0 view .LVU2379
 9316              	.LBE7730:
 9317              	.LBB7731:
 9318              	.LBI7731:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 9319              		.loc 5 178 7 is_stmt 1 view .LVU2380
 9320              	.LBB7732:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9321              		.loc 5 179 9 is_stmt 0 view .LVU2381
 9322 0062 2560     		str	r5, [r4]
 9323              	.LVL776:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9324              		.loc 5 179 9 view .LVU2382
 9325              	.LBE7732:
 9326              	.LBE7731:
 9327              	.LBB7733:
 9328              	.LBI7733:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 463


 9329              		.loc 5 214 7 is_stmt 1 view .LVU2383
 9330              	.LBB7734:
 9331              	.LBI7734:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 9332              		.loc 5 182 7 view .LVU2384
 9333              	.LBB7735:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9334              		.loc 5 183 9 is_stmt 0 view .LVU2385
 9335 0064 0023     		movs	r3, #0
 9336 0066 6360     		str	r3, [r4, #4]
 9337              	.LVL777:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9338              		.loc 5 183 9 view .LVU2386
 9339              	.LBE7735:
 9340              	.LBE7734:
 9341              	.LBB7736:
 9342              	.LBI7736:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 9343              		.loc 4 299 7 is_stmt 1 view .LVU2387
 9344              	.LBB7737:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 9345              		.loc 4 300 9 view .LVU2388
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 9346              		.loc 4 300 14 is_stmt 0 view .LVU2389
 9347 0068 2372     		strb	r3, [r4, #8]
 9348              	.LVL778:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 9349              		.loc 4 300 14 view .LVU2390
 9350              	.LBE7737:
 9351              	.LBE7736:
 9352              	.LBE7733:
 9353              	.LBE7707:
 9354              	.LBE7706:
 9355              	.LBE7705:
 9356              	.LBE7743:
 9357              	.LBB7744:
 9358              	.LBI7744:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 9359              		.loc 5 6121 5 is_stmt 1 view .LVU2391
 9360              	.LBB7745:
 9361              	.LBI7745:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9362              		.loc 5 1263 7 view .LVU2392
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9363              		.loc 5 1263 7 is_stmt 0 view .LVU2393
 9364              	.LBE7745:
 9365              	.LBE7744:
 9366              	.LBE7975:
 9367              	.LBE7982:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 9368              		.loc 4 332 2 is_stmt 1 view .LVU2394
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 9369              		.loc 4 335 2 view .LVU2395
 9370              	.LBB7983:
 9371              	.LBB7976:
 9372              	.LBB7794:
 9373              	.LBB7754:
ARM GAS  /tmp/ccszdRNt.s 			page 464


 9374              	.LBB7746:
 9375              	.LBB7747:
 9376              	.LBI7747:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9377              		.loc 5 320 7 view .LVU2396
 9378              	.LBB7748:
 9379              	.LBB7749:
 9380              	.LBI7749:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9381              		.loc 5 930 7 view .LVU2397
 9382              	.LBB7750:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9383              		.loc 5 931 16 is_stmt 0 view .LVU2398
 9384 006a 099A     		ldr	r2, [sp, #36]
 9385              	.LVL779:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9386              		.loc 5 931 16 view .LVU2399
 9387              	.LBE7750:
 9388              	.LBE7749:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 9389              		.loc 5 322 2 view .LVU2400
 9390 006c AE4B     		ldr	r3, .L271+12
 9391 006e 9B1A     		subs	r3, r3, r2
 9392 0070 012B     		cmp	r3, #1
 9393 0072 2AD9     		bls	.L261
 9394              	.LVL780:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 9395              		.loc 5 322 2 view .LVU2401
 9396              	.LBE7748:
 9397              	.LBE7747:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9398              		.loc 5 1268 27 view .LVU2402
 9399 0074 0222     		movs	r2, #2
 9400 0076 AD49     		ldr	r1, .L271+16
 9401 0078 08A8     		add	r0, sp, #32
 9402              	.LVL781:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9403              		.loc 5 1268 27 view .LVU2403
 9404 007a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 9405              	.LVL782:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9406              		.loc 5 1268 27 view .LVU2404
 9407 007e 0400     		movs	r4, r0
 9408              	.LVL783:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9409              		.loc 5 1268 27 view .LVU2405
 9410              	.LBE7746:
 9411              	.LBE7754:
 9412              	.LBB7755:
 9413              	.LBI7755:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 9414              		.loc 5 552 7 is_stmt 1 view .LVU2406
 9415              	.LBB7756:
 9416              	.LBB7757:
 9417              	.LBB7758:
 9418              	.LBI7758:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 465


 9419              		.loc 5 190 7 view .LVU2407
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9420              		.loc 5 190 7 is_stmt 0 view .LVU2408
 9421              	.LBE7758:
 9422              	.LBB7759:
 9423              	.LBI7759:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9424              		.loc 5 286 7 is_stmt 1 view .LVU2409
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9425              		.loc 5 286 7 is_stmt 0 view .LVU2410
 9426              	.LBE7759:
 9427              	.LBB7760:
 9428              	.LBI7760:
 9429              		.loc 8 99 5 is_stmt 1 view .LVU2411
 9430              		.loc 8 99 5 is_stmt 0 view .LVU2412
 9431              	.LBE7760:
 9432              	.LBB7761:
 9433              	.LBI7761:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9434              		.loc 5 159 2 is_stmt 1 view .LVU2413
 9435              	.LBB7762:
 9436              	.LBB7763:
 9437              	.LBB7764:
 9438              	.LBI7764:
 9439              		.loc 8 99 5 view .LVU2414
 9440              		.loc 8 99 5 is_stmt 0 view .LVU2415
 9441              	.LBE7764:
 9442              	.LBB7765:
 9443              	.LBI7765:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9444              		.loc 6 141 7 is_stmt 1 view .LVU2416
 9445              	.LBB7766:
 9446              	.LBI7766:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9447              		.loc 7 83 7 view .LVU2417
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9448              		.loc 7 83 7 is_stmt 0 view .LVU2418
 9449              	.LBE7766:
 9450              	.LBE7765:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9451              		.loc 5 160 46 view .LVU2419
 9452 0080 04AB     		add	r3, sp, #16
 9453              	.LVL784:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9454              		.loc 5 160 46 view .LVU2420
 9455 0082 0293     		str	r3, [sp, #8]
 9456              	.LVL785:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9457              		.loc 5 160 46 view .LVU2421
 9458              	.LBE7763:
 9459              	.LBE7762:
 9460              	.LBE7761:
 9461              	.LBB7767:
 9462              	.LBI7767:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9463              		.loc 5 221 7 is_stmt 1 view .LVU2422
 9464              	.LBB7768:
ARM GAS  /tmp/ccszdRNt.s 			page 466


 9465              	.LBI7768:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9466              		.loc 5 186 7 view .LVU2423
 9467              	.LBB7769:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9468              		.loc 5 187 28 is_stmt 0 view .LVU2424
 9469 0084 0368     		ldr	r3, [r0]
 9470              	.LVL786:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9471              		.loc 5 187 28 view .LVU2425
 9472              	.LBE7769:
 9473              	.LBE7768:
 9474              	.LBB7770:
 9475              	.LBI7770:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9476              		.loc 5 200 7 is_stmt 1 view .LVU2426
 9477              	.LBB7771:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9478              		.loc 5 203 57 is_stmt 0 view .LVU2427
 9479 0086 0500     		movs	r5, r0
 9480 0088 0835     		adds	r5, r5, #8
 9481              	.LVL787:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 9482              		.loc 5 203 57 view .LVU2428
 9483              	.LBE7771:
 9484              	.LBE7770:
 9485              	.LBE7767:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 9486              		.loc 5 555 2 view .LVU2429
 9487 008a AB42     		cmp	r3, r5
 9488 008c 20D0     		beq	.L262
 9489              	.LVL788:
 9490              	.LBB7772:
 9491              	.LBI7772:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9492              		.loc 5 186 7 is_stmt 1 view .LVU2430
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9493              		.loc 5 186 7 is_stmt 0 view .LVU2431
 9494              	.LBE7772:
 9495              	.LBB7773:
 9496              	.LBI7773:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 9497              		.loc 5 178 7 is_stmt 1 view .LVU2432
 9498              	.LBB7774:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9499              		.loc 5 179 9 is_stmt 0 view .LVU2433
 9500 008e 0293     		str	r3, [sp, #8]
 9501              	.LVL789:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9502              		.loc 5 179 9 view .LVU2434
 9503              	.LBE7774:
 9504              	.LBE7773:
 9505              	.LBB7775:
 9506              	.LBI7775:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 9507              		.loc 5 210 7 is_stmt 1 view .LVU2435
 9508              	.LBB7776:
ARM GAS  /tmp/ccszdRNt.s 			page 467


 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9509              		.loc 5 211 9 is_stmt 0 view .LVU2436
 9510 0090 8368     		ldr	r3, [r0, #8]
 9511 0092 0493     		str	r3, [sp, #16]
 9512              	.LVL790:
 9513              	.L227:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9514              		.loc 5 211 9 view .LVU2437
 9515              	.LBE7776:
 9516              	.LBE7775:
 9517              	.LBB7777:
 9518              	.LBI7777:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9519              		.loc 5 936 7 is_stmt 1 view .LVU2438
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9520              		.loc 5 936 7 is_stmt 0 view .LVU2439
 9521              	.LBE7777:
 9522              	.LBB7778:
 9523              	.LBI7778:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 9524              		.loc 5 182 7 is_stmt 1 view .LVU2440
 9525              	.LBB7779:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9526              		.loc 5 183 9 is_stmt 0 view .LVU2441
 9527 0094 6368     		ldr	r3, [r4, #4]
 9528 0096 0393     		str	r3, [sp, #12]
 9529              	.LVL791:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9530              		.loc 5 183 9 view .LVU2442
 9531              	.LBE7779:
 9532              	.LBE7778:
 9533              	.LBB7780:
 9534              	.LBI7780:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9535              		.loc 5 190 7 is_stmt 1 view .LVU2443
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9536              		.loc 5 190 7 is_stmt 0 view .LVU2444
 9537              	.LBE7780:
 9538              	.LBB7781:
 9539              	.LBI7781:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 9540              		.loc 5 178 7 is_stmt 1 view .LVU2445
 9541              	.LBB7782:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9542              		.loc 5 179 9 is_stmt 0 view .LVU2446
 9543 0098 2560     		str	r5, [r4]
 9544              	.LVL792:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9545              		.loc 5 179 9 view .LVU2447
 9546              	.LBE7782:
 9547              	.LBE7781:
 9548              	.LBB7783:
 9549              	.LBI7783:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9550              		.loc 5 214 7 is_stmt 1 view .LVU2448
 9551              	.LBB7784:
 9552              	.LBI7784:
ARM GAS  /tmp/ccszdRNt.s 			page 468


 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 9553              		.loc 5 182 7 view .LVU2449
 9554              	.LBB7785:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9555              		.loc 5 183 9 is_stmt 0 view .LVU2450
 9556 009a 0023     		movs	r3, #0
 9557 009c 6360     		str	r3, [r4, #4]
 9558              	.LVL793:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9559              		.loc 5 183 9 view .LVU2451
 9560              	.LBE7785:
 9561              	.LBE7784:
 9562              	.LBB7786:
 9563              	.LBI7786:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 9564              		.loc 4 299 7 is_stmt 1 view .LVU2452
 9565              	.LBB7787:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 9566              		.loc 4 300 9 view .LVU2453
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 9567              		.loc 4 300 14 is_stmt 0 view .LVU2454
 9568 009e 2372     		strb	r3, [r4, #8]
 9569              	.LVL794:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 9570              		.loc 4 300 14 view .LVU2455
 9571              	.LBE7787:
 9572              	.LBE7786:
 9573              	.LBE7783:
 9574              	.LBE7757:
 9575              	.LBE7756:
 9576              	.LBE7755:
 9577              	.LBE7794:
 9578              	.LBB7795:
 9579              	.LBI7795:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 9580              		.loc 5 657 7 is_stmt 1 view .LVU2456
 9581              	.LBB7796:
 9582              	.LBI7796:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9583              		.loc 5 229 7 view .LVU2457
 9584              	.LBB7797:
 9585              	.LBB7798:
 9586              	.LBI7798:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9587              		.loc 5 221 7 view .LVU2458
 9588              	.LBB7799:
 9589              	.LBI7799:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9590              		.loc 5 186 7 view .LVU2459
 9591              	.LBB7800:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9592              		.loc 5 187 28 is_stmt 0 view .LVU2460
 9593 00a0 0898     		ldr	r0, [sp, #32]
 9594              	.LVL795:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9595              		.loc 5 187 28 view .LVU2461
 9596              	.LBE7800:
ARM GAS  /tmp/ccszdRNt.s 			page 469


 9597              	.LBE7799:
 9598              	.LBB7801:
 9599              	.LBI7801:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9600              		.loc 5 200 7 is_stmt 1 view .LVU2462
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9601              		.loc 5 200 7 is_stmt 0 view .LVU2463
 9602              	.LBE7801:
 9603              	.LBE7798:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9604              		.loc 5 231 2 view .LVU2464
 9605 00a2 0AAB     		add	r3, sp, #40
 9606 00a4 9842     		cmp	r0, r3
 9607 00a6 01D0     		beq	.L228
 9608              	.LVL796:
 9609              	.LBB7802:
 9610              	.LBI7802:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9611              		.loc 5 236 7 is_stmt 1 view .LVU2465
 9612              	.LBB7803:
 9613              	.LBB7804:
 9614              	.LBI7804:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9615              		.loc 10 469 7 view .LVU2466
 9616              	.LBB7805:
 9617              	.LBI7805:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 9618              		.loc 7 119 7 view .LVU2467
 9619              	.LBB7806:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9620              		.loc 7 128 19 is_stmt 0 view .LVU2468
 9621 00a8 FFF7FEFF 		bl	_ZdlPv
 9622              	.LVL797:
 9623              	.L228:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9624              		.loc 7 128 19 view .LVU2469
 9625              	.LBE7806:
 9626              	.LBE7805:
 9627              	.LBE7804:
 9628              	.LBE7803:
 9629              	.LBE7802:
 9630              	.LBE7797:
 9631              	.LBE7796:
 9632              	.LBB7807:
 9633              	.LBI7807:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9634              		.loc 5 150 14 is_stmt 1 view .LVU2470
 9635              	.LBB7808:
 9636              	.LBI7808:
 9637              		.loc 6 153 7 view .LVU2471
 9638              	.LBB7809:
 9639              	.LBI7809:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9640              		.loc 7 89 7 view .LVU2472
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9641              		.loc 7 89 7 is_stmt 0 view .LVU2473
 9642              	.LBE7809:
ARM GAS  /tmp/ccszdRNt.s 			page 470


 9643              	.LBE7808:
 9644              	.LBE7807:
 9645              	.LBE7795:
 9646              	.LBB7810:
 9647              	.LBI7810:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 9648              		.loc 5 657 7 is_stmt 1 view .LVU2474
 9649              	.LBB7811:
 9650              	.LBI7811:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9651              		.loc 5 229 7 view .LVU2475
 9652              	.LBB7812:
 9653              	.LBB7813:
 9654              	.LBI7813:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 9655              		.loc 5 221 7 view .LVU2476
 9656              	.LBB7814:
 9657              	.LBI7814:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9658              		.loc 5 186 7 view .LVU2477
 9659              	.LBB7815:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9660              		.loc 5 187 28 is_stmt 0 view .LVU2478
 9661 00ac 0E98     		ldr	r0, [sp, #56]
 9662              	.LVL798:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9663              		.loc 5 187 28 view .LVU2479
 9664              	.LBE7815:
 9665              	.LBE7814:
 9666              	.LBB7816:
 9667              	.LBI7816:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9668              		.loc 5 200 7 is_stmt 1 view .LVU2480
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9669              		.loc 5 200 7 is_stmt 0 view .LVU2481
 9670              	.LBE7816:
 9671              	.LBE7813:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 9672              		.loc 5 231 2 view .LVU2482
 9673 00ae 10AB     		add	r3, sp, #64
 9674 00b0 9842     		cmp	r0, r3
 9675 00b2 01D0     		beq	.L229
 9676              	.LVL799:
 9677              	.LBB7817:
 9678              	.LBI7817:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 9679              		.loc 5 236 7 is_stmt 1 view .LVU2483
 9680              	.LBB7818:
 9681              	.LBB7819:
 9682              	.LBI7819:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 9683              		.loc 10 469 7 view .LVU2484
 9684              	.LBB7820:
 9685              	.LBI7820:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 9686              		.loc 7 119 7 view .LVU2485
 9687              	.LBB7821:
ARM GAS  /tmp/ccszdRNt.s 			page 471


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9688              		.loc 7 128 19 is_stmt 0 view .LVU2486
 9689 00b4 FFF7FEFF 		bl	_ZdlPv
 9690              	.LVL800:
 9691              	.L229:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 9692              		.loc 7 128 19 view .LVU2487
 9693              	.LBE7821:
 9694              	.LBE7820:
 9695              	.LBE7819:
 9696              	.LBE7818:
 9697              	.LBE7817:
 9698              	.LBE7812:
 9699              	.LBE7811:
 9700              	.LBB7822:
 9701              	.LBI7822:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9702              		.loc 5 150 14 is_stmt 1 view .LVU2488
 9703              	.LBB7823:
 9704              	.LBI7823:
 9705              		.loc 6 153 7 view .LVU2489
 9706              	.LBB7824:
 9707              	.LBI7824:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9708              		.loc 7 89 7 view .LVU2490
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9709              		.loc 7 89 7 is_stmt 0 view .LVU2491
 9710              	.LBE7824:
 9711              	.LBE7823:
 9712              	.LBE7822:
 9713              	.LBE7810:
 229:alohal/cli/cli.cpp ****             output_line += cmd->Get_command() + "\r\n";
 9714              		.loc 2 229 9 is_stmt 1 view .LVU2492
 9715              	.LBB7825:
 9716              	.LBB7826:
 9717              	.LBI7826:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 9718              		.loc 13 808 7 view .LVU2493
 9719              	.LBB7827:
 9720              	.LBB7828:
 9721              	.LBI7828:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 9722              		.loc 14 806 7 view .LVU2494
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 9723              		.loc 14 806 7 is_stmt 0 view .LVU2495
 9724              	.LBE7828:
 9725              	.LBE7827:
 9726              	.LBE7826:
 229:alohal/cli/cli.cpp ****             output_line += cmd->Get_command() + "\r\n";
 9727              		.loc 2 229 24 view .LVU2496
 9728 00b8 B36E     		ldr	r3, [r6, #104]
 9729              	.LVL801:
 9730              	.LBB7829:
 9731              	.LBI7829:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 9732              		.loc 13 826 7 is_stmt 1 view .LVU2497
 9733              	.LBB7830:
ARM GAS  /tmp/ccszdRNt.s 			page 472


 9734              	.LBI7830:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 9735              		.loc 14 806 7 view .LVU2498
 9736              	.LBB7831:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9737              		.loc 14 807 23 is_stmt 0 view .LVU2499
 9738 00ba F56E     		ldr	r5, [r6, #108]
 9739              	.LVL802:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9740              		.loc 14 807 23 view .LVU2500
 9741 00bc 12E0     		b	.L234
 9742              	.LVL803:
 9743              	.L260:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9744              		.loc 14 807 23 view .LVU2501
 9745              	.LBE7831:
 9746              	.LBE7830:
 9747              	.LBE7829:
 9748              	.LBE7825:
 9749              	.LBB7913:
 9750              	.LBB7742:
 9751              	.LBB7741:
 9752              	.LBB7740:
 9753              	.LBB7738:
 9754              	.LBI7738:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 9755              		.loc 4 361 7 is_stmt 1 view .LVU2502
 9756              	.LBB7739:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 9757              		.loc 4 363 2 view .LVU2503
 9758              		.loc 4 365 2 view .LVU2504
 9759              		.loc 4 365 49 is_stmt 0 view .LVU2505
 9760 00be 1022     		movs	r2, #16
 9761 00c0 2900     		movs	r1, r5
 9762 00c2 0AA8     		add	r0, sp, #40
 9763              	.LVL804:
 9764              		.loc 4 365 49 view .LVU2506
 9765 00c4 FFF7FEFF 		bl	memcpy
 9766              	.LVL805:
 9767              		.loc 4 365 49 view .LVU2507
 9768 00c8 C9E7     		b	.L224
 9769              	.LVL806:
 9770              	.L261:
 9771              		.loc 4 365 49 view .LVU2508
 9772              	.LBE7739:
 9773              	.LBE7738:
 9774              	.LBE7740:
 9775              	.LBE7741:
 9776              	.LBE7742:
 9777              	.LBE7913:
 9778              	.LBB7914:
 9779              	.LBB7792:
 9780              	.LBB7753:
 9781              	.LBB7752:
 9782              	.LBB7751:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9783              		.loc 5 323 24 view .LVU2509
ARM GAS  /tmp/ccszdRNt.s 			page 473


 9784 00ca 9948     		ldr	r0, .L271+20
 9785 00cc FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 9786              	.LVL807:
 9787              	.L262:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9788              		.loc 5 323 24 view .LVU2510
 9789              	.LBE7751:
 9790              	.LBE7752:
 9791              	.LBE7753:
 9792              	.LBE7792:
 9793              	.LBB7793:
 9794              	.LBB7791:
 9795              	.LBB7790:
 9796              	.LBB7788:
 9797              	.LBI7788:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 9798              		.loc 4 361 7 is_stmt 1 view .LVU2511
 9799              	.LBB7789:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 9800              		.loc 4 363 2 view .LVU2512
 9801              		.loc 4 365 2 view .LVU2513
 9802              		.loc 4 365 49 is_stmt 0 view .LVU2514
 9803 00d0 1022     		movs	r2, #16
 9804 00d2 2900     		movs	r1, r5
 9805 00d4 04A8     		add	r0, sp, #16
 9806              	.LVL808:
 9807              		.loc 4 365 49 view .LVU2515
 9808 00d6 FFF7FEFF 		bl	memcpy
 9809              	.LVL809:
 9810              		.loc 4 365 49 view .LVU2516
 9811 00da DBE7     		b	.L227
 9812              	.LVL810:
 9813              	.L263:
 9814              		.loc 4 365 49 view .LVU2517
 9815              	.LBE7789:
 9816              	.LBE7788:
 9817              	.LBE7790:
 9818              	.LBE7791:
 9819              	.LBE7793:
 9820              	.LBE7914:
 9821              	.LBB7915:
 9822              	.LBB7832:
 9823              	.LBB7833:
 9824              	.LBB7834:
 9825              	.LBB7835:
 9826              	.LBB7836:
 9827              	.LBB7837:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9828              		.loc 5 323 24 view .LVU2518
 9829 00dc 9448     		ldr	r0, .L271+20
 9830 00de FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 9831              	.LVL811:
 9832              	.L233:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 9833              		.loc 5 323 24 view .LVU2519
 9834              	.LBE7837:
 9835              	.LBE7836:
ARM GAS  /tmp/ccszdRNt.s 			page 474


 9836              	.LBE7835:
 9837              	.LBE7834:
 9838              	.LBE7833:
 9839              	.LBE7832:
 9840              	.LBB7870:
 9841              	.LBB7871:
 9842              	.LBI7871:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9843              		.loc 5 150 14 is_stmt 1 view .LVU2520
 9844              	.LBB7872:
 9845              	.LBI7872:
 9846              		.loc 6 153 7 view .LVU2521
 9847              	.LBB7873:
 9848              	.LBI7873:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9849              		.loc 7 89 7 view .LVU2522
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9850              		.loc 7 89 7 is_stmt 0 view .LVU2523
 9851              	.LBE7873:
 9852              	.LBE7872:
 9853              	.LBE7871:
 9854              	.LBE7870:
 229:alohal/cli/cli.cpp ****             output_line += cmd->Get_command() + "\r\n";
 9855              		.loc 2 229 9 is_stmt 1 view .LVU2524
 9856              	.LBB7885:
 9857              	.LBI7885:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 9858              		.loc 14 827 7 view .LVU2525
 9859              	.LBB7886:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 9860              		.loc 14 829 2 is_stmt 0 view .LVU2526
 9861 00e2 231D     		adds	r3, r4, #4
 9862              	.LVL812:
 9863              	.L234:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 9864              		.loc 14 829 2 view .LVU2527
 9865              	.LBE7886:
 9866              	.LBE7885:
 229:alohal/cli/cli.cpp ****             output_line += cmd->Get_command() + "\r\n";
 9867              		.loc 2 229 24 is_stmt 1 discriminator 3 view .LVU2528
 9868              	.LBB7887:
 9869              	.LBI7887:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 9870              		.loc 14 907 5 discriminator 3 view .LVU2529
 9871              	.LBB7888:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9872              		.loc 14 910 27 is_stmt 0 discriminator 3 view .LVU2530
 9873 00e4 1C00     		movs	r4, r3
 9874              	.LVL813:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 9875              		.loc 14 910 27 discriminator 3 view .LVU2531
 9876              	.LBE7888:
 9877              	.LBE7887:
 229:alohal/cli/cli.cpp ****             output_line += cmd->Get_command() + "\r\n";
 9878              		.loc 2 229 24 discriminator 3 view .LVU2532
 9879 00e6 9D42     		cmp	r5, r3
 9880 00e8 2BD0     		beq	.L230
ARM GAS  /tmp/ccszdRNt.s 			page 475


 9881              	.LVL814:
 230:alohal/cli/cli.cpp ****         }
 9882              		.loc 2 230 13 is_stmt 1 view .LVU2533
 230:alohal/cli/cli.cpp ****         }
 9883              		.loc 2 230 44 is_stmt 0 view .LVU2534
 9884 00ea 1968     		ldr	r1, [r3]
 230:alohal/cli/cli.cpp ****         }
 9885              		.loc 2 230 45 view .LVU2535
 9886 00ec 0B68     		ldr	r3, [r1]
 9887              	.LVL815:
 230:alohal/cli/cli.cpp ****         }
 9888              		.loc 2 230 45 view .LVU2536
 9889 00ee 5B68     		ldr	r3, [r3, #4]
 230:alohal/cli/cli.cpp ****         }
 9890              		.loc 2 230 44 view .LVU2537
 9891 00f0 1AA8     		add	r0, sp, #104
 9892 00f2 9847     		blx	r3
 9893              	.LVL816:
 9894              	.LBB7889:
 9895              	.LBI7832:
6057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 9896              		.loc 5 6057 5 is_stmt 1 view .LVU2538
 9897              	.LBB7868:
 9898              	.LBB7843:
 9899              	.LBI7843:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 9900              		.loc 5 448 7 view .LVU2539
 9901              	.LBB7844:
 9902              	.LBB7845:
 9903              	.LBI7845:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9904              		.loc 5 190 7 view .LVU2540
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 9905              		.loc 5 190 7 is_stmt 0 view .LVU2541
 9906              	.LBE7845:
 9907              	.LBB7846:
 9908              	.LBI7846:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9909              		.loc 5 290 7 is_stmt 1 view .LVU2542
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 9910              		.loc 5 290 7 is_stmt 0 view .LVU2543
 9911              	.LBE7846:
 9912              	.LBB7847:
 9913              	.LBI7847:
 9914              		.loc 20 97 19 is_stmt 1 view .LVU2544
 9915              	.LBB7848:
 9916              	.LBI7848:
 9917              		.loc 10 514 7 view .LVU2545
 9918              	.LBB7849:
 9919              	.LBI7849:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9920              		.loc 6 141 7 view .LVU2546
 9921              	.LBB7850:
 9922              	.LBI7850:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9923              		.loc 7 83 7 view .LVU2547
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 476


 9924              		.loc 7 83 7 is_stmt 0 view .LVU2548
 9925              	.LBE7850:
 9926              	.LBE7849:
 9927              	.LBE7848:
 9928              	.LBE7847:
 9929              	.LBB7851:
 9930              	.LBI7851:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 9931              		.loc 5 159 2 is_stmt 1 view .LVU2549
 9932              	.LBB7852:
 9933              	.LBB7853:
 9934              	.LBI7853:
 9935              		.loc 8 99 5 view .LVU2550
 9936              		.loc 8 99 5 is_stmt 0 view .LVU2551
 9937              	.LBE7853:
 9938              	.LBB7854:
 9939              	.LBI7854:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 9940              		.loc 6 141 7 is_stmt 1 view .LVU2552
 9941              	.LBB7855:
 9942              	.LBI7855:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9943              		.loc 7 83 7 view .LVU2553
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9944              		.loc 7 83 7 is_stmt 0 view .LVU2554
 9945              	.LBE7855:
 9946              	.LBE7854:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9947              		.loc 5 160 46 view .LVU2555
 9948 00f4 16AB     		add	r3, sp, #88
 9949              	.LVL817:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9950              		.loc 5 160 46 view .LVU2556
 9951 00f6 1493     		str	r3, [sp, #80]
 9952              	.LVL818:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 9953              		.loc 5 160 46 view .LVU2557
 9954              	.LBE7852:
 9955              	.LBE7851:
 9956              	.LBB7856:
 9957              	.LBI7856:
 9958              		.loc 6 153 7 is_stmt 1 view .LVU2558
 9959              	.LBB7857:
 9960              	.LBI7857:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9961              		.loc 7 89 7 view .LVU2559
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 9962              		.loc 7 89 7 is_stmt 0 view .LVU2560
 9963              	.LBE7857:
 9964              	.LBE7856:
 9965              	.LBB7858:
 9966              	.LBI7858:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9967              		.loc 5 186 7 is_stmt 1 view .LVU2561
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9968              		.loc 5 186 7 is_stmt 0 view .LVU2562
 9969              	.LBE7858:
ARM GAS  /tmp/ccszdRNt.s 			page 477


 9970              	.LBB7859:
 9971              	.LBI7859:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9972              		.loc 5 186 7 is_stmt 1 view .LVU2563
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 9973              		.loc 5 186 7 is_stmt 0 view .LVU2564
 9974              	.LBE7859:
 9975              	.LBB7860:
 9976              	.LBI7860:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 9977              		.loc 5 936 7 is_stmt 1 view .LVU2565
 9978              	.LBB7861:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9979              		.loc 5 937 16 is_stmt 0 view .LVU2566
 9980 00f8 1B9A     		ldr	r2, [sp, #108]
 9981              	.LVL819:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9982              		.loc 5 937 16 view .LVU2567
 9983              	.LBE7861:
 9984              	.LBE7860:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 9985              		.loc 5 451 9 view .LVU2568
 9986 00fa 1A9B     		ldr	r3, [sp, #104]
 9987 00fc 9C46     		mov	ip, r3
 9988 00fe 6244     		add	r2, r2, ip
 9989              	.LVL820:
 9990              	.LBB7862:
 9991              	.LBI7862:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 9992              		.loc 5 263 9 is_stmt 1 view .LVU2569
 9993              	.LBB7863:
 9994              	.LBB7864:
 9995              	.LBI7864:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 9996              		.loc 5 243 9 view .LVU2570
 9997              	.LBB7865:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 9998              		.loc 5 247 11 is_stmt 0 view .LVU2571
 9999 0100 0023     		movs	r3, #0
 10000              	.LVL821:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10001              		.loc 5 247 11 view .LVU2572
 10002 0102 6146     		mov	r1, ip
 10003 0104 14A8     		add	r0, sp, #80
 10004              	.LVL822:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10005              		.loc 5 247 11 view .LVU2573
 10006 0106 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 10007              	.LVL823:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10008              		.loc 5 247 11 view .LVU2574
 10009              	.LBE7865:
 10010              	.LBE7864:
 10011              	.LBE7863:
 10012              	.LBE7862:
 10013              	.LBE7844:
 10014              	.LBE7843:
ARM GAS  /tmp/ccszdRNt.s 			page 478


 10015              	.LBB7866:
 10016              	.LBI7834:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10017              		.loc 5 1263 7 is_stmt 1 view .LVU2575
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10018              		.loc 5 1263 7 is_stmt 0 view .LVU2576
 10019              	.LBE7866:
 10020              	.LBE7868:
 10021              	.LBE7889:
 10022              	.LBE7915:
 10023              	.LBE7976:
 10024              	.LBE7983:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 10025              		.loc 4 332 2 is_stmt 1 view .LVU2577
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 10026              		.loc 4 335 2 view .LVU2578
 10027              	.LBB7984:
 10028              	.LBB7977:
 10029              	.LBB7916:
 10030              	.LBB7890:
 10031              	.LBB7869:
 10032              	.LBB7867:
 10033              	.LBB7842:
 10034              	.LBB7841:
 10035              	.LBI7836:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10036              		.loc 5 320 7 view .LVU2579
 10037              	.LBB7840:
 10038              	.LBB7838:
 10039              	.LBI7838:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10040              		.loc 5 930 7 view .LVU2580
 10041              	.LBB7839:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10042              		.loc 5 931 16 is_stmt 0 view .LVU2581
 10043 010a 159A     		ldr	r2, [sp, #84]
 10044              	.LVL824:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10045              		.loc 5 931 16 view .LVU2582
 10046              	.LBE7839:
 10047              	.LBE7838:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 10048              		.loc 5 322 2 view .LVU2583
 10049 010c 864B     		ldr	r3, .L271+12
 10050 010e 9B1A     		subs	r3, r3, r2
 10051 0110 012B     		cmp	r3, #1
 10052 0112 E3D9     		bls	.L263
 10053              	.LVL825:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 10054              		.loc 5 322 2 view .LVU2584
 10055              	.LBE7840:
 10056              	.LBE7841:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 10057              		.loc 5 1268 27 view .LVU2585
 10058 0114 0222     		movs	r2, #2
 10059 0116 8549     		ldr	r1, .L271+16
 10060 0118 14A8     		add	r0, sp, #80
ARM GAS  /tmp/ccszdRNt.s 			page 479


 10061              	.LVL826:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 10062              		.loc 5 1268 27 view .LVU2586
 10063 011a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 10064              	.LVL827:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 10065              		.loc 5 1268 27 view .LVU2587
 10066              	.LBE7842:
 10067              	.LBE7867:
 10068              	.LBE7869:
 10069              	.LBE7890:
 10070              	.LBB7891:
 10071              	.LBI7891:
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
 10072              		.loc 5 1168 7 is_stmt 1 view .LVU2588
 10073              	.LBB7892:
 10074              	.LBI7892:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 10075              		.loc 5 1221 7 view .LVU2589
 10076              	.LBB7893:
 10077              	.LBB7894:
 10078              	.LBI7894:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10079              		.loc 5 186 7 view .LVU2590
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10080              		.loc 5 186 7 is_stmt 0 view .LVU2591
 10081              	.LBE7894:
 10082              	.LBB7895:
 10083              	.LBI7895:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10084              		.loc 5 930 7 is_stmt 1 view .LVU2592
 10085              	.LBB7896:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10086              		.loc 5 931 16 is_stmt 0 view .LVU2593
 10087 011e 159A     		ldr	r2, [sp, #84]
 10088              	.LVL828:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10089              		.loc 5 931 16 view .LVU2594
 10090              	.LBE7896:
 10091              	.LBE7895:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10092              		.loc 5 1222 55 view .LVU2595
 10093 0120 1499     		ldr	r1, [sp, #80]
 10094 0122 02A8     		add	r0, sp, #8
 10095              	.LVL829:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10096              		.loc 5 1222 55 view .LVU2596
 10097 0124 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 10098              	.LVL830:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10099              		.loc 5 1222 55 view .LVU2597
 10100              	.LBE7893:
 10101              	.LBE7892:
 10102              	.LBE7891:
 10103              	.LBB7897:
 10104              	.LBI7897:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
ARM GAS  /tmp/ccszdRNt.s 			page 480


 10105              		.loc 5 657 7 is_stmt 1 view .LVU2598
 10106              	.LBB7898:
 10107              	.LBI7898:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10108              		.loc 5 229 7 view .LVU2599
 10109              	.LBB7899:
 10110              	.LBB7900:
 10111              	.LBI7900:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10112              		.loc 5 221 7 view .LVU2600
 10113              	.LBB7901:
 10114              	.LBI7901:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10115              		.loc 5 186 7 view .LVU2601
 10116              	.LBB7902:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10117              		.loc 5 187 28 is_stmt 0 view .LVU2602
 10118 0128 1498     		ldr	r0, [sp, #80]
 10119              	.LVL831:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10120              		.loc 5 187 28 view .LVU2603
 10121              	.LBE7902:
 10122              	.LBE7901:
 10123              	.LBB7903:
 10124              	.LBI7903:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10125              		.loc 5 200 7 is_stmt 1 view .LVU2604
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10126              		.loc 5 200 7 is_stmt 0 view .LVU2605
 10127              	.LBE7903:
 10128              	.LBE7900:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10129              		.loc 5 231 2 view .LVU2606
 10130 012a 16AB     		add	r3, sp, #88
 10131 012c 9842     		cmp	r0, r3
 10132 012e 01D0     		beq	.L232
 10133              	.LVL832:
 10134              	.LBB7904:
 10135              	.LBI7904:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10136              		.loc 5 236 7 is_stmt 1 view .LVU2607
 10137              	.LBB7905:
 10138              	.LBB7906:
 10139              	.LBI7906:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10140              		.loc 10 469 7 view .LVU2608
 10141              	.LBB7907:
 10142              	.LBI7907:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10143              		.loc 7 119 7 view .LVU2609
 10144              	.LBB7908:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10145              		.loc 7 128 19 is_stmt 0 view .LVU2610
 10146 0130 FFF7FEFF 		bl	_ZdlPv
 10147              	.LVL833:
 10148              	.L232:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 481


 10149              		.loc 7 128 19 view .LVU2611
 10150              	.LBE7908:
 10151              	.LBE7907:
 10152              	.LBE7906:
 10153              	.LBE7905:
 10154              	.LBE7904:
 10155              	.LBE7899:
 10156              	.LBE7898:
 10157              	.LBB7909:
 10158              	.LBI7909:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10159              		.loc 5 150 14 is_stmt 1 view .LVU2612
 10160              	.LBB7910:
 10161              	.LBI7910:
 10162              		.loc 6 153 7 view .LVU2613
 10163              	.LBB7911:
 10164              	.LBI7911:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10165              		.loc 7 89 7 view .LVU2614
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10166              		.loc 7 89 7 is_stmt 0 view .LVU2615
 10167              	.LBE7911:
 10168              	.LBE7910:
 10169              	.LBE7909:
 10170              	.LBE7897:
 10171              	.LBB7912:
 10172              	.LBI7870:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10173              		.loc 5 657 7 is_stmt 1 view .LVU2616
 10174              	.LBB7874:
 10175              	.LBI7874:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10176              		.loc 5 229 7 view .LVU2617
 10177              	.LBB7875:
 10178              	.LBB7876:
 10179              	.LBI7876:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10180              		.loc 5 221 7 view .LVU2618
 10181              	.LBB7877:
 10182              	.LBI7877:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10183              		.loc 5 186 7 view .LVU2619
 10184              	.LBB7878:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10185              		.loc 5 187 28 is_stmt 0 view .LVU2620
 10186 0134 1A98     		ldr	r0, [sp, #104]
 10187              	.LVL834:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10188              		.loc 5 187 28 view .LVU2621
 10189              	.LBE7878:
 10190              	.LBE7877:
 10191              	.LBB7879:
 10192              	.LBI7879:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10193              		.loc 5 200 7 is_stmt 1 view .LVU2622
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10194              		.loc 5 200 7 is_stmt 0 view .LVU2623
ARM GAS  /tmp/ccszdRNt.s 			page 482


 10195              	.LBE7879:
 10196              	.LBE7876:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10197              		.loc 5 231 2 view .LVU2624
 10198 0136 1CAB     		add	r3, sp, #112
 10199 0138 9842     		cmp	r0, r3
 10200 013a D2D0     		beq	.L233
 10201              	.LVL835:
 10202              	.LBB7880:
 10203              	.LBI7880:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10204              		.loc 5 236 7 is_stmt 1 view .LVU2625
 10205              	.LBB7881:
 10206              	.LBB7882:
 10207              	.LBI7882:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10208              		.loc 10 469 7 view .LVU2626
 10209              	.LBB7883:
 10210              	.LBI7883:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10211              		.loc 7 119 7 view .LVU2627
 10212              	.LBB7884:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10213              		.loc 7 128 19 is_stmt 0 view .LVU2628
 10214 013c FFF7FEFF 		bl	_ZdlPv
 10215              	.LVL836:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10216              		.loc 7 128 19 view .LVU2629
 10217              	.LBE7884:
 10218              	.LBE7883:
 10219              	.LBE7882:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10220              		.loc 5 237 79 view .LVU2630
 10221 0140 CFE7     		b	.L233
 10222              	.LVL837:
 10223              	.L230:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10224              		.loc 5 237 79 view .LVU2631
 10225              	.LBE7881:
 10226              	.LBE7880:
 10227              	.LBE7875:
 10228              	.LBE7874:
 10229              	.LBE7912:
 10230              	.LBE7916:
 232:alohal/cli/cli.cpp ****     } else { // help with additional command as parametr
 10231              		.loc 2 232 9 is_stmt 1 view .LVU2632
 10232              	.LBB7917:
 10233              	.LBI7917:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 10234              		.loc 5 448 7 view .LVU2633
 10235              	.LBB7918:
 10236              	.LBB7919:
 10237              	.LBB7920:
 10238              	.LBI7920:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10239              		.loc 5 190 7 view .LVU2634
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 483


 10240              		.loc 5 190 7 is_stmt 0 view .LVU2635
 10241              	.LBE7920:
 10242              	.LBB7921:
 10243              	.LBI7921:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10244              		.loc 5 290 7 is_stmt 1 view .LVU2636
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10245              		.loc 5 290 7 is_stmt 0 view .LVU2637
 10246              	.LBE7921:
 10247              	.LBB7922:
 10248              	.LBI7922:
 10249              		.loc 20 97 19 is_stmt 1 view .LVU2638
 10250              	.LBB7923:
 10251              	.LBI7923:
 10252              		.loc 10 514 7 view .LVU2639
 10253              	.LBB7924:
 10254              	.LBI7924:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10255              		.loc 6 141 7 view .LVU2640
 10256              	.LBB7925:
 10257              	.LBI7925:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10258              		.loc 7 83 7 view .LVU2641
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10259              		.loc 7 83 7 is_stmt 0 view .LVU2642
 10260              	.LBE7925:
 10261              	.LBE7924:
 10262              	.LBE7923:
 10263              	.LBE7922:
 10264              	.LBB7926:
 10265              	.LBI7926:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10266              		.loc 5 159 2 is_stmt 1 view .LVU2643
 10267              	.LBB7927:
 10268              	.LBB7928:
 10269              	.LBB7929:
 10270              	.LBI7929:
 10271              		.loc 8 99 5 view .LVU2644
 10272              		.loc 8 99 5 is_stmt 0 view .LVU2645
 10273              	.LBE7929:
 10274              	.LBB7930:
 10275              	.LBI7930:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10276              		.loc 6 141 7 is_stmt 1 view .LVU2646
 10277              	.LBB7931:
 10278              	.LBI7931:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10279              		.loc 7 83 7 view .LVU2647
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10280              		.loc 7 83 7 is_stmt 0 view .LVU2648
 10281              	.LBE7931:
 10282              	.LBE7930:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10283              		.loc 5 160 46 view .LVU2649
 10284 0142 22AC     		add	r4, sp, #136
 10285              	.LVL838:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccszdRNt.s 			page 484


 10286              		.loc 5 160 46 view .LVU2650
 10287 0144 2094     		str	r4, [sp, #128]
 10288              	.LVL839:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10289              		.loc 5 160 46 view .LVU2651
 10290              	.LBE7928:
 10291              	.LBE7927:
 10292              	.LBE7926:
 10293              	.LBB7932:
 10294              	.LBI7932:
 10295              		.loc 6 153 7 is_stmt 1 view .LVU2652
 10296              	.LBB7933:
 10297              	.LBI7933:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10298              		.loc 7 89 7 view .LVU2653
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10299              		.loc 7 89 7 is_stmt 0 view .LVU2654
 10300              	.LBE7933:
 10301              	.LBE7932:
 10302              	.LBB7934:
 10303              	.LBI7934:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10304              		.loc 5 186 7 is_stmt 1 view .LVU2655
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10305              		.loc 5 186 7 is_stmt 0 view .LVU2656
 10306              	.LBE7934:
 10307              	.LBB7935:
 10308              	.LBI7935:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10309              		.loc 5 186 7 is_stmt 1 view .LVU2657
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10310              		.loc 5 186 7 is_stmt 0 view .LVU2658
 10311              	.LBE7935:
 10312              	.LBB7936:
 10313              	.LBI7936:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10314              		.loc 5 936 7 is_stmt 1 view .LVU2659
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10315              		.loc 5 936 7 is_stmt 0 view .LVU2660
 10316              	.LBE7936:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10317              		.loc 5 451 9 view .LVU2661
 10318 0146 029B     		ldr	r3, [sp, #8]
 10319 0148 0399     		ldr	r1, [sp, #12]
 10320 014a 8C46     		mov	ip, r1
 10321 014c 6344     		add	r3, r3, ip
 10322 014e 1A00     		movs	r2, r3
 10323              	.LVL840:
 10324              	.LBB7937:
 10325              	.LBI7937:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10326              		.loc 5 263 9 is_stmt 1 view .LVU2662
 10327              	.LBB7938:
 10328              	.LBB7939:
 10329              	.LBI7939:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10330              		.loc 5 243 9 view .LVU2663
ARM GAS  /tmp/ccszdRNt.s 			page 485


 10331              	.LBB7940:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10332              		.loc 5 247 11 is_stmt 0 view .LVU2664
 10333 0150 0023     		movs	r3, #0
 10334 0152 0299     		ldr	r1, [sp, #8]
 10335 0154 20A8     		add	r0, sp, #128
 10336              	.LVL841:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10337              		.loc 5 247 11 view .LVU2665
 10338 0156 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 10339              	.LVL842:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10340              		.loc 5 247 11 view .LVU2666
 10341              	.LBE7940:
 10342              	.LBE7939:
 10343              	.LBE7938:
 10344              	.LBE7937:
 10345              	.LBE7919:
 10346              	.LBE7918:
 10347              	.LBE7917:
 232:alohal/cli/cli.cpp ****     } else { // help with additional command as parametr
 10348              		.loc 2 232 14 view .LVU2667
 10349 015a 20A9     		add	r1, sp, #128
 10350 015c 3000     		movs	r0, r6
 10351 015e FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 10352              	.LVL843:
 10353              	.LBB7941:
 10354              	.LBI7941:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10355              		.loc 5 657 7 is_stmt 1 view .LVU2668
 10356              	.LBB7942:
 10357              	.LBI7942:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10358              		.loc 5 229 7 view .LVU2669
 10359              	.LBB7943:
 10360              	.LBB7944:
 10361              	.LBI7944:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10362              		.loc 5 221 7 view .LVU2670
 10363              	.LBB7945:
 10364              	.LBI7945:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10365              		.loc 5 186 7 view .LVU2671
 10366              	.LBB7946:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10367              		.loc 5 187 28 is_stmt 0 view .LVU2672
 10368 0162 2098     		ldr	r0, [sp, #128]
 10369              	.LVL844:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10370              		.loc 5 187 28 view .LVU2673
 10371              	.LBE7946:
 10372              	.LBE7945:
 10373              	.LBB7947:
 10374              	.LBI7947:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10375              		.loc 5 200 7 is_stmt 1 view .LVU2674
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 486


 10376              		.loc 5 200 7 is_stmt 0 view .LVU2675
 10377              	.LBE7947:
 10378              	.LBE7944:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10379              		.loc 5 231 2 view .LVU2676
 10380 0164 A042     		cmp	r0, r4
 10381 0166 01D0     		beq	.L235
 10382              	.LVL845:
 10383              	.LBB7948:
 10384              	.LBI7948:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10385              		.loc 5 236 7 is_stmt 1 view .LVU2677
 10386              	.LBB7949:
 10387              	.LBB7950:
 10388              	.LBI7950:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10389              		.loc 10 469 7 view .LVU2678
 10390              	.LBB7951:
 10391              	.LBI7951:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10392              		.loc 7 119 7 view .LVU2679
 10393              	.LBB7952:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10394              		.loc 7 128 19 is_stmt 0 view .LVU2680
 10395 0168 FFF7FEFF 		bl	_ZdlPv
 10396              	.LVL846:
 10397              	.L235:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10398              		.loc 7 128 19 view .LVU2681
 10399              	.LBE7952:
 10400              	.LBE7951:
 10401              	.LBE7950:
 10402              	.LBE7949:
 10403              	.LBE7948:
 10404              	.LBE7943:
 10405              	.LBE7942:
 10406              	.LBB7953:
 10407              	.LBI7953:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10408              		.loc 5 150 14 is_stmt 1 view .LVU2682
 10409              	.LBB7954:
 10410              	.LBI7954:
 10411              		.loc 6 153 7 view .LVU2683
 10412              	.LBB7955:
 10413              	.LBI7955:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10414              		.loc 7 89 7 view .LVU2684
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10415              		.loc 7 89 7 is_stmt 0 view .LVU2685
 10416              	.LBE7955:
 10417              	.LBE7954:
 10418              	.LBE7953:
 10419              	.LBE7941:
 10420              	.LBB7956:
 10421              	.LBI7956:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10422              		.loc 5 657 7 is_stmt 1 view .LVU2686
ARM GAS  /tmp/ccszdRNt.s 			page 487


 10423              	.LBB7957:
 10424              	.LBI7957:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10425              		.loc 5 229 7 view .LVU2687
 10426              	.LBB7958:
 10427              	.LBB7959:
 10428              	.LBI7959:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10429              		.loc 5 221 7 view .LVU2688
 10430              	.LBB7960:
 10431              	.LBI7960:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10432              		.loc 5 186 7 view .LVU2689
 10433              	.LBB7961:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10434              		.loc 5 187 28 is_stmt 0 view .LVU2690
 10435 016c 0298     		ldr	r0, [sp, #8]
 10436              	.LVL847:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10437              		.loc 5 187 28 view .LVU2691
 10438              	.LBE7961:
 10439              	.LBE7960:
 10440              	.LBB7962:
 10441              	.LBI7962:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10442              		.loc 5 200 7 is_stmt 1 view .LVU2692
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10443              		.loc 5 200 7 is_stmt 0 view .LVU2693
 10444              	.LBE7962:
 10445              	.LBE7959:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10446              		.loc 5 231 2 view .LVU2694
 10447 016e 04AB     		add	r3, sp, #16
 10448 0170 9842     		cmp	r0, r3
 10449 0172 00D1     		bne	.LCB11837
 10450 0174 C9E0     		b	.L237	@long jump
 10451              	.LCB11837:
 10452              	.LVL848:
 10453              	.LBB7963:
 10454              	.LBI7963:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10455              		.loc 5 236 7 is_stmt 1 view .LVU2695
 10456              	.LBB7964:
 10457              	.LBB7965:
 10458              	.LBI7965:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10459              		.loc 10 469 7 view .LVU2696
 10460              	.LBB7966:
 10461              	.LBI7966:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10462              		.loc 7 119 7 view .LVU2697
 10463              	.LBB7967:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10464              		.loc 7 128 19 is_stmt 0 view .LVU2698
 10465 0176 FFF7FEFF 		bl	_ZdlPv
 10466              	.LVL849:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 488


 10467              		.loc 7 128 19 view .LVU2699
 10468              	.LBE7967:
 10469              	.LBE7966:
 10470              	.LBE7965:
 10471              	.LBE7964:
 10472              	.LBE7963:
 10473              	.LBE7958:
 10474              	.LBE7957:
 10475              	.LBB7971:
 10476              	.LBI7971:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10477              		.loc 5 150 14 is_stmt 1 view .LVU2700
 10478              	.LBB7972:
 10479              	.LBI7972:
 10480              		.loc 6 153 7 view .LVU2701
 10481              	.LBB7973:
 10482              	.LBI7973:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10483              		.loc 7 89 7 view .LVU2702
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10484              		.loc 7 89 7 is_stmt 0 view .LVU2703
 10485              	.LBE7973:
 10486              	.LBE7972:
 10487              	.LBE7971:
 10488              	.LBB7974:
 10489              	.LBB7970:
 10490              	.LBB7969:
 10491              	.LBB7968:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10492              		.loc 5 237 79 view .LVU2704
 10493 017a C6E0     		b	.L237
 10494              	.LVL850:
 10495              	.L265:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10496              		.loc 5 237 79 view .LVU2705
 10497              	.LBE7968:
 10498              	.LBE7969:
 10499              	.LBE7970:
 10500              	.LBE7974:
 10501              	.LBE7956:
 10502              	.LBE7977:
 10503              	.LBB7978:
 10504              	.LBB7651:
 10505              	.LBB7398:
 10506              	.LBB7399:
 10507              	.LBB7400:
 10508              	.LBI7400:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 10509              		.loc 5 2312 7 is_stmt 1 view .LVU2706
 10510              	.LBB7401:
 10511              	.LBI7401:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10512              		.loc 5 186 7 view .LVU2707
 10513              	.LBB7402:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10514              		.loc 5 187 28 is_stmt 0 view .LVU2708
 10515 017c 2698     		ldr	r0, [sp, #152]
ARM GAS  /tmp/ccszdRNt.s 			page 489


 10516              	.LVL851:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10517              		.loc 5 187 28 view .LVU2709
 10518              	.LBE7402:
 10519              	.LBE7401:
 10520              	.LBE7400:
 10521              	.LBB7403:
 10522              	.LBI7403:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 10523              		.loc 5 2312 7 is_stmt 1 view .LVU2710
 10524              	.LBB7404:
 10525              	.LBI7404:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10526              		.loc 5 186 7 view .LVU2711
 10527              	.LBB7405:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10528              		.loc 5 187 28 is_stmt 0 view .LVU2712
 10529 017e 9969     		ldr	r1, [r3, #24]
 10530              	.LVL852:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10531              		.loc 5 187 28 view .LVU2713
 10532              	.LBE7405:
 10533              	.LBE7404:
 10534              	.LBE7403:
 10535              	.LBB7406:
 10536              	.LBI7406:
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 10537              		.loc 4 315 7 is_stmt 1 view .LVU2714
 10538              	.LBB7407:
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 10539              		.loc 4 317 2 view .LVU2715
 10540 0180 002A     		cmp	r2, #0
 10541 0182 06D0     		beq	.L257
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 10542              		.loc 4 320 2 view .LVU2716
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 10543              		.loc 4 325 2 view .LVU2717
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 10544              		.loc 4 325 25 is_stmt 0 view .LVU2718
 10545 0184 FFF7FEFF 		bl	memcmp
 10546              	.LVL853:
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 10547              		.loc 4 325 25 view .LVU2719
 10548              	.LBE7407:
 10549              	.LBE7406:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 10550              		.loc 5 6152 8 view .LVU2720
 10551 0188 0028     		cmp	r0, #0
 10552 018a 05D1     		bne	.L258
 10553 018c 0123     		movs	r3, #1
 10554 018e 9846     		mov	r8, r3
 10555 0190 1BE0     		b	.L239
 10556              	.LVL854:
 10557              	.L257:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 10558              		.loc 5 6152 8 view .LVU2721
 10559 0192 0123     		movs	r3, #1
ARM GAS  /tmp/ccszdRNt.s 			page 490


 10560              	.LVL855:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 10561              		.loc 5 6152 8 view .LVU2722
 10562 0194 9846     		mov	r8, r3
 10563 0196 18E0     		b	.L239
 10564              	.LVL856:
 10565              	.L258:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 10566              		.loc 5 6152 8 view .LVU2723
 10567 0198 0023     		movs	r3, #0
 10568 019a 9846     		mov	r8, r3
 10569 019c 15E0     		b	.L239
 10570              	.LVL857:
 10571              	.L266:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 10572              		.loc 5 6152 8 view .LVU2724
 10573              	.LBE7399:
 10574              	.LBE7398:
 10575              	.LBB7412:
 10576              	.LBB7413:
 10577              	.LBB7414:
 10578              	.LBB7415:
 10579              	.LBI7415:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 10580              		.loc 5 236 7 is_stmt 1 view .LVU2725
 10581              	.LBB7416:
 10582              	.LBB7417:
 10583              	.LBI7417:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 10584              		.loc 10 469 7 view .LVU2726
 10585              	.LBB7418:
 10586              	.LBI7418:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 10587              		.loc 7 119 7 view .LVU2727
 10588              	.LBB7419:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10589              		.loc 7 128 19 is_stmt 0 view .LVU2728
 10590 019e FFF7FEFF 		bl	_ZdlPv
 10591              	.LVL858:
 10592              	.L240:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 10593              		.loc 7 128 19 view .LVU2729
 10594              	.LBE7419:
 10595              	.LBE7418:
 10596              	.LBE7417:
 10597              	.LBE7416:
 10598              	.LBE7415:
 10599              	.LBE7414:
 10600              	.LBE7413:
 10601              	.LBB7425:
 10602              	.LBI7425:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10603              		.loc 5 150 14 is_stmt 1 view .LVU2730
 10604              	.LBB7426:
 10605              	.LBI7426:
 10606              		.loc 6 153 7 view .LVU2731
 10607              	.LBB7427:
ARM GAS  /tmp/ccszdRNt.s 			page 491


 10608              	.LBI7427:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10609              		.loc 7 89 7 view .LVU2732
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10610              		.loc 7 89 7 is_stmt 0 view .LVU2733
 10611              	.LBE7427:
 10612              	.LBE7426:
 10613              	.LBE7425:
 10614              	.LBE7412:
 235:alohal/cli/cli.cpp ****             if (cmd->Get_command() == args[1]) {
 10615              		.loc 2 235 13 view .LVU2734
 10616 01a2 4346     		mov	r3, r8
 10617 01a4 002B     		cmp	r3, #0
 10618 01a6 15D1     		bne	.L264
 236:alohal/cli/cli.cpp ****                 Print(cmd->Get_command() + " - " + cmd->Get_help() + "\r\n");
 237:alohal/cli/cli.cpp ****                 return commands.size();
 238:alohal/cli/cli.cpp **** 
 239:alohal/cli/cli.cpp ****                 ;
 10619              		.loc 2 239 17 is_stmt 1 view .LVU2735
 234:alohal/cli/cli.cpp ****             if (cmd->Get_command() == args[1]) {
 10620              		.loc 2 234 9 view .LVU2736
 10621              	.LVL859:
 10622              	.LBB7429:
 10623              	.LBI7429:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 10624              		.loc 14 827 7 view .LVU2737
 10625              	.LBB7430:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 10626              		.loc 14 829 2 is_stmt 0 view .LVU2738
 10627 01a8 231D     		adds	r3, r4, #4
 10628              	.LVL860:
 10629              	.L254:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 10630              		.loc 14 829 2 view .LVU2739
 10631              	.LBE7430:
 10632              	.LBE7429:
 234:alohal/cli/cli.cpp ****             if (cmd->Get_command() == args[1]) {
 10633              		.loc 2 234 24 is_stmt 1 discriminator 1 view .LVU2740
 10634              	.LBB7431:
 10635              	.LBI7431:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 10636              		.loc 14 907 5 discriminator 1 view .LVU2741
 10637              	.LBB7432:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 10638              		.loc 14 910 27 is_stmt 0 discriminator 1 view .LVU2742
 10639 01aa 1C00     		movs	r4, r3
 10640              	.LVL861:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 10641              		.loc 14 910 27 discriminator 1 view .LVU2743
 10642              	.LBE7432:
 10643              	.LBE7431:
 234:alohal/cli/cli.cpp ****             if (cmd->Get_command() == args[1]) {
 10644              		.loc 2 234 24 discriminator 1 view .LVU2744
 10645 01ac 9F42     		cmp	r7, r3
 10646 01ae 00D1     		bne	.LCB12089
 10647 01b0 99E0     		b	.L238	@long jump
 10648              	.LCB12089:
ARM GAS  /tmp/ccszdRNt.s 			page 492


 10649              	.LVL862:
 235:alohal/cli/cli.cpp ****                 Print(cmd->Get_command() + " - " + cmd->Get_help() + "\r\n");
 10650              		.loc 2 235 13 is_stmt 1 view .LVU2745
 235:alohal/cli/cli.cpp ****                 Print(cmd->Get_command() + " - " + cmd->Get_help() + "\r\n");
 10651              		.loc 2 235 33 is_stmt 0 view .LVU2746
 10652 01b2 1968     		ldr	r1, [r3]
 235:alohal/cli/cli.cpp ****                 Print(cmd->Get_command() + " - " + cmd->Get_help() + "\r\n");
 10653              		.loc 2 235 34 view .LVU2747
 10654 01b4 0B68     		ldr	r3, [r1]
 10655              	.LVL863:
 235:alohal/cli/cli.cpp ****                 Print(cmd->Get_command() + " - " + cmd->Get_help() + "\r\n");
 10656              		.loc 2 235 34 view .LVU2748
 10657 01b6 5B68     		ldr	r3, [r3, #4]
 235:alohal/cli/cli.cpp ****                 Print(cmd->Get_command() + " - " + cmd->Get_help() + "\r\n");
 10658              		.loc 2 235 33 view .LVU2749
 10659 01b8 26A8     		add	r0, sp, #152
 10660 01ba 9847     		blx	r3
 10661              	.LVL864:
 10662              	.LBB7433:
 10663              	.LBI7433:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 10664              		.loc 13 1040 7 is_stmt 1 view .LVU2750
 10665              	.LBB7434:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 10666              		.loc 13 1043 25 is_stmt 0 view .LVU2751
 10667 01bc 2B68     		ldr	r3, [r5]
 10668              	.LVL865:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 10669              		.loc 13 1043 25 view .LVU2752
 10670              	.LBE7434:
 10671              	.LBE7433:
 10672              	.LBB7435:
 10673              	.LBI7398:
6149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 10674              		.loc 5 6149 5 is_stmt 1 view .LVU2753
 10675              	.LBB7411:
 10676              	.LBB7408:
 10677              	.LBI7408:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10678              		.loc 5 930 7 view .LVU2754
 10679              	.LBB7409:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10680              		.loc 5 931 16 is_stmt 0 view .LVU2755
 10681 01be 279A     		ldr	r2, [sp, #156]
 10682              	.LVL866:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10683              		.loc 5 931 16 view .LVU2756
 10684              	.LBE7409:
 10685              	.LBE7408:
 10686              	.LBB7410:
 10687              	.LBI7410:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10688              		.loc 5 930 7 is_stmt 1 view .LVU2757
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10689              		.loc 5 930 7 is_stmt 0 view .LVU2758
 10690              	.LBE7410:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
ARM GAS  /tmp/ccszdRNt.s 			page 493


 10691              		.loc 5 6152 8 view .LVU2759
 10692 01c0 D969     		ldr	r1, [r3, #28]
 10693 01c2 8A42     		cmp	r2, r1
 10694 01c4 DAD0     		beq	.L265
 10695 01c6 0023     		movs	r3, #0
 10696              	.LVL867:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 10697              		.loc 5 6152 8 view .LVU2760
 10698 01c8 9846     		mov	r8, r3
 10699              	.LVL868:
 10700              	.L239:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 10701              		.loc 5 6152 8 view .LVU2761
 10702              	.LBE7411:
 10703              	.LBE7435:
 10704              	.LBB7436:
 10705              	.LBI7412:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 10706              		.loc 5 657 7 is_stmt 1 view .LVU2762
 10707              	.LBB7428:
 10708              	.LBI7413:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10709              		.loc 5 229 7 view .LVU2763
 10710              	.LBB7424:
 10711              	.LBB7420:
 10712              	.LBI7420:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 10713              		.loc 5 221 7 view .LVU2764
 10714              	.LBB7421:
 10715              	.LBI7421:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10716              		.loc 5 186 7 view .LVU2765
 10717              	.LBB7422:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10718              		.loc 5 187 28 is_stmt 0 view .LVU2766
 10719 01ca 2698     		ldr	r0, [sp, #152]
 10720              	.LVL869:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10721              		.loc 5 187 28 view .LVU2767
 10722              	.LBE7422:
 10723              	.LBE7421:
 10724              	.LBB7423:
 10725              	.LBI7423:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10726              		.loc 5 200 7 is_stmt 1 view .LVU2768
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10727              		.loc 5 200 7 is_stmt 0 view .LVU2769
 10728              	.LBE7423:
 10729              	.LBE7420:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10730              		.loc 5 231 2 view .LVU2770
 10731 01cc 28AB     		add	r3, sp, #160
 10732 01ce 9842     		cmp	r0, r3
 10733 01d0 E5D1     		bne	.L266
 10734 01d2 E6E7     		b	.L240
 10735              	.LVL870:
 10736              	.L264:
ARM GAS  /tmp/ccszdRNt.s 			page 494


 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 10737              		.loc 5 231 2 view .LVU2771
 10738              	.LBE7424:
 10739              	.LBE7428:
 10740              	.LBE7436:
 236:alohal/cli/cli.cpp ****                 return commands.size();
 10741              		.loc 2 236 17 is_stmt 1 view .LVU2772
 236:alohal/cli/cli.cpp ****                 return commands.size();
 10742              		.loc 2 236 39 is_stmt 0 view .LVU2773
 10743 01d4 2168     		ldr	r1, [r4]
 236:alohal/cli/cli.cpp ****                 return commands.size();
 10744              		.loc 2 236 40 view .LVU2774
 10745 01d6 0B68     		ldr	r3, [r1]
 10746 01d8 5B68     		ldr	r3, [r3, #4]
 236:alohal/cli/cli.cpp ****                 return commands.size();
 10747              		.loc 2 236 39 view .LVU2775
 10748 01da 3EA8     		add	r0, sp, #248
 10749 01dc 9847     		blx	r3
 10750              	.LVL871:
 10751              	.LBB7437:
 10752              	.LBI7437:
6057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 10753              		.loc 5 6057 5 is_stmt 1 view .LVU2776
 10754              	.LBB7438:
 10755              	.LBB7439:
 10756              	.LBI7439:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 10757              		.loc 5 448 7 view .LVU2777
 10758              	.LBB7440:
 10759              	.LBB7441:
 10760              	.LBI7441:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10761              		.loc 5 190 7 view .LVU2778
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10762              		.loc 5 190 7 is_stmt 0 view .LVU2779
 10763              	.LBE7441:
 10764              	.LBB7442:
 10765              	.LBI7442:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10766              		.loc 5 290 7 is_stmt 1 view .LVU2780
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10767              		.loc 5 290 7 is_stmt 0 view .LVU2781
 10768              	.LBE7442:
 10769              	.LBB7443:
 10770              	.LBI7443:
 10771              		.loc 20 97 19 is_stmt 1 view .LVU2782
 10772              	.LBB7444:
 10773              	.LBI7444:
 10774              		.loc 10 514 7 view .LVU2783
 10775              	.LBB7445:
 10776              	.LBI7445:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10777              		.loc 6 141 7 view .LVU2784
 10778              	.LBB7446:
 10779              	.LBI7446:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10780              		.loc 7 83 7 view .LVU2785
ARM GAS  /tmp/ccszdRNt.s 			page 495


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10781              		.loc 7 83 7 is_stmt 0 view .LVU2786
 10782              	.LBE7446:
 10783              	.LBE7445:
 10784              	.LBE7444:
 10785              	.LBE7443:
 10786              	.LBB7447:
 10787              	.LBI7447:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10788              		.loc 5 159 2 is_stmt 1 view .LVU2787
 10789              	.LBB7448:
 10790              	.LBB7449:
 10791              	.LBI7449:
 10792              		.loc 8 99 5 view .LVU2788
 10793              		.loc 8 99 5 is_stmt 0 view .LVU2789
 10794              	.LBE7449:
 10795              	.LBB7450:
 10796              	.LBI7450:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 10797              		.loc 6 141 7 is_stmt 1 view .LVU2790
 10798              	.LBB7451:
 10799              	.LBI7451:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10800              		.loc 7 83 7 view .LVU2791
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10801              		.loc 7 83 7 is_stmt 0 view .LVU2792
 10802              	.LBE7451:
 10803              	.LBE7450:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10804              		.loc 5 160 46 view .LVU2793
 10805 01de 3AAB     		add	r3, sp, #232
 10806              	.LVL872:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10807              		.loc 5 160 46 view .LVU2794
 10808 01e0 3893     		str	r3, [sp, #224]
 10809              	.LVL873:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 10810              		.loc 5 160 46 view .LVU2795
 10811              	.LBE7448:
 10812              	.LBE7447:
 10813              	.LBB7452:
 10814              	.LBI7452:
 10815              		.loc 6 153 7 is_stmt 1 view .LVU2796
 10816              	.LBB7453:
 10817              	.LBI7453:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10818              		.loc 7 89 7 view .LVU2797
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 10819              		.loc 7 89 7 is_stmt 0 view .LVU2798
 10820              	.LBE7453:
 10821              	.LBE7452:
 10822              	.LBB7454:
 10823              	.LBI7454:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10824              		.loc 5 186 7 is_stmt 1 view .LVU2799
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10825              		.loc 5 186 7 is_stmt 0 view .LVU2800
ARM GAS  /tmp/ccszdRNt.s 			page 496


 10826              	.LBE7454:
 10827              	.LBB7455:
 10828              	.LBI7455:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10829              		.loc 5 186 7 is_stmt 1 view .LVU2801
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10830              		.loc 5 186 7 is_stmt 0 view .LVU2802
 10831              	.LBE7455:
 10832              	.LBB7456:
 10833              	.LBI7456:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10834              		.loc 5 936 7 is_stmt 1 view .LVU2803
 10835              	.LBB7457:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10836              		.loc 5 937 16 is_stmt 0 view .LVU2804
 10837 01e2 3F9A     		ldr	r2, [sp, #252]
 10838              	.LVL874:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10839              		.loc 5 937 16 view .LVU2805
 10840              	.LBE7457:
 10841              	.LBE7456:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10842              		.loc 5 451 9 view .LVU2806
 10843 01e4 3E9B     		ldr	r3, [sp, #248]
 10844 01e6 9C46     		mov	ip, r3
 10845 01e8 6244     		add	r2, r2, ip
 10846              	.LVL875:
 10847              	.LBB7458:
 10848              	.LBI7458:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 10849              		.loc 5 263 9 is_stmt 1 view .LVU2807
 10850              	.LBB7459:
 10851              	.LBB7460:
 10852              	.LBI7460:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 10853              		.loc 5 243 9 view .LVU2808
 10854              	.LBB7461:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10855              		.loc 5 247 11 is_stmt 0 view .LVU2809
 10856 01ea 0023     		movs	r3, #0
 10857              	.LVL876:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10858              		.loc 5 247 11 view .LVU2810
 10859 01ec 6146     		mov	r1, ip
 10860 01ee 38A8     		add	r0, sp, #224
 10861              	.LVL877:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10862              		.loc 5 247 11 view .LVU2811
 10863 01f0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 10864              	.LVL878:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 10865              		.loc 5 247 11 view .LVU2812
 10866              	.LBE7461:
 10867              	.LBE7460:
 10868              	.LBE7459:
 10869              	.LBE7458:
 10870              	.LBE7440:
ARM GAS  /tmp/ccszdRNt.s 			page 497


 10871              	.LBE7439:
 10872              	.LBB7462:
 10873              	.LBI7462:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10874              		.loc 5 1263 7 is_stmt 1 view .LVU2813
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10875              		.loc 5 1263 7 is_stmt 0 view .LVU2814
 10876              	.LBE7462:
 10877              	.LBE7438:
 10878              	.LBE7437:
 10879              	.LBE7651:
 10880              	.LBE7978:
 10881              	.LBE7984:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 10882              		.loc 4 332 2 is_stmt 1 view .LVU2815
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 10883              		.loc 4 335 2 view .LVU2816
 10884              	.LBB7985:
 10885              	.LBB7979:
 10886              	.LBB7652:
 10887              	.LBB7475:
 10888              	.LBB7473:
 10889              	.LBB7471:
 10890              	.LBB7463:
 10891              	.LBB7464:
 10892              	.LBI7464:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10893              		.loc 5 320 7 view .LVU2817
 10894              	.LBB7465:
 10895              	.LBB7466:
 10896              	.LBI7466:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10897              		.loc 5 930 7 view .LVU2818
 10898              	.LBB7467:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10899              		.loc 5 931 16 is_stmt 0 view .LVU2819
 10900 01f4 399A     		ldr	r2, [sp, #228]
 10901              	.LVL879:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10902              		.loc 5 931 16 view .LVU2820
 10903              	.LBE7467:
 10904              	.LBE7466:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 10905              		.loc 5 322 2 view .LVU2821
 10906 01f6 4C4B     		ldr	r3, .L271+12
 10907 01f8 9B1A     		subs	r3, r3, r2
 10908 01fa 022B     		cmp	r3, #2
 10909 01fc 61D9     		bls	.L267
 10910              	.LVL880:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 10911              		.loc 5 322 2 view .LVU2822
 10912              	.LBE7465:
 10913              	.LBE7464:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 10914              		.loc 5 1268 27 view .LVU2823
 10915 01fe 0322     		movs	r2, #3
 10916 0200 4C49     		ldr	r1, .L271+24
ARM GAS  /tmp/ccszdRNt.s 			page 498


 10917 0202 38A8     		add	r0, sp, #224
 10918              	.LVL881:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 10919              		.loc 5 1268 27 view .LVU2824
 10920 0204 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 10921              	.LVL882:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 10922              		.loc 5 1268 27 view .LVU2825
 10923              	.LBE7463:
 10924              	.LBE7471:
 10925              	.LBE7473:
 10926              	.LBE7475:
 236:alohal/cli/cli.cpp ****                 return commands.size();
 10927              		.loc 2 236 65 view .LVU2826
 10928 0208 2168     		ldr	r1, [r4]
 236:alohal/cli/cli.cpp ****                 return commands.size();
 10929              		.loc 2 236 66 view .LVU2827
 10930 020a 0B68     		ldr	r3, [r1]
 10931 020c 9B68     		ldr	r3, [r3, #8]
 236:alohal/cli/cli.cpp ****                 return commands.size();
 10932              		.loc 2 236 65 view .LVU2828
 10933 020e 44A8     		add	r0, sp, #272
 10934 0210 9847     		blx	r3
 10935              	.LVL883:
 10936              	.LBB7476:
 10937              	.LBI7476:
6085:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 10938              		.loc 5 6085 5 is_stmt 1 view .LVU2829
 10939              	.LBB7477:
 10940              	.LBI7477:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 10941              		.loc 5 1221 7 view .LVU2830
 10942              	.LBB7478:
 10943              	.LBB7479:
 10944              	.LBI7479:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10945              		.loc 5 186 7 view .LVU2831
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 10946              		.loc 5 186 7 is_stmt 0 view .LVU2832
 10947              	.LBE7479:
 10948              	.LBB7480:
 10949              	.LBI7480:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 10950              		.loc 5 930 7 is_stmt 1 view .LVU2833
 10951              	.LBB7481:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10952              		.loc 5 931 16 is_stmt 0 view .LVU2834
 10953 0212 459A     		ldr	r2, [sp, #276]
 10954              	.LVL884:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10955              		.loc 5 931 16 view .LVU2835
 10956              	.LBE7481:
 10957              	.LBE7480:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10958              		.loc 5 1222 55 view .LVU2836
 10959 0214 4499     		ldr	r1, [sp, #272]
 10960 0216 38A8     		add	r0, sp, #224
ARM GAS  /tmp/ccszdRNt.s 			page 499


 10961              	.LVL885:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10962              		.loc 5 1222 55 view .LVU2837
 10963 0218 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 10964              	.LVL886:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10965              		.loc 5 1222 55 view .LVU2838
 10966 021c 0400     		movs	r4, r0
 10967              	.LVL887:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 10968              		.loc 5 1222 55 view .LVU2839
 10969              	.LBE7478:
 10970              	.LBE7477:
 10971              	.LBB7482:
 10972              	.LBI7482:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 10973              		.loc 5 552 7 is_stmt 1 view .LVU2840
 10974              	.LBB7483:
 10975              	.LBB7484:
 10976              	.LBB7485:
 10977              	.LBI7485:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10978              		.loc 5 190 7 view .LVU2841
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 10979              		.loc 5 190 7 is_stmt 0 view .LVU2842
 10980              	.LBE7485:
 10981              	.LBB7486:
 10982              	.LBI7486:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10983              		.loc 5 286 7 is_stmt 1 view .LVU2843
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 10984              		.loc 5 286 7 is_stmt 0 view .LVU2844
 10985              	.LBE7486:
 10986              	.LBB7487:
 10987              	.LBI7487:
 10988              		.loc 8 99 5 is_stmt 1 view .LVU2845
 10989              		.loc 8 99 5 is_stmt 0 view .LVU2846
 10990              	.LBE7487:
 10991              	.LBB7488:
 10992              	.LBI7488:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 10993              		.loc 5 159 2 is_stmt 1 view .LVU2847
 10994              	.LBB7489:
 10995              	.LBB7490:
 10996              	.LBB7491:
 10997              	.LBI7491:
 10998              		.loc 8 99 5 view .LVU2848
 10999              		.loc 8 99 5 is_stmt 0 view .LVU2849
 11000              	.LBE7491:
 11001              	.LBB7492:
 11002              	.LBI7492:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11003              		.loc 6 141 7 is_stmt 1 view .LVU2850
 11004              	.LBB7493:
 11005              	.LBI7493:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11006              		.loc 7 83 7 view .LVU2851
ARM GAS  /tmp/ccszdRNt.s 			page 500


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11007              		.loc 7 83 7 is_stmt 0 view .LVU2852
 11008              	.LBE7493:
 11009              	.LBE7492:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11010              		.loc 5 160 46 view .LVU2853
 11011 021e 34AB     		add	r3, sp, #208
 11012              	.LVL888:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11013              		.loc 5 160 46 view .LVU2854
 11014 0220 3293     		str	r3, [sp, #200]
 11015              	.LVL889:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11016              		.loc 5 160 46 view .LVU2855
 11017              	.LBE7490:
 11018              	.LBE7489:
 11019              	.LBE7488:
 11020              	.LBB7494:
 11021              	.LBI7494:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11022              		.loc 5 221 7 is_stmt 1 view .LVU2856
 11023              	.LBB7495:
 11024              	.LBI7495:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11025              		.loc 5 186 7 view .LVU2857
 11026              	.LBB7496:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11027              		.loc 5 187 28 is_stmt 0 view .LVU2858
 11028 0222 0368     		ldr	r3, [r0]
 11029              	.LVL890:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11030              		.loc 5 187 28 view .LVU2859
 11031              	.LBE7496:
 11032              	.LBE7495:
 11033              	.LBB7497:
 11034              	.LBI7497:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11035              		.loc 5 200 7 is_stmt 1 view .LVU2860
 11036              	.LBB7498:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11037              		.loc 5 203 57 is_stmt 0 view .LVU2861
 11038 0224 0500     		movs	r5, r0
 11039              	.LVL891:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11040              		.loc 5 203 57 view .LVU2862
 11041 0226 0835     		adds	r5, r5, #8
 11042              	.LVL892:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11043              		.loc 5 203 57 view .LVU2863
 11044              	.LBE7498:
 11045              	.LBE7497:
 11046              	.LBE7494:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 11047              		.loc 5 555 2 view .LVU2864
 11048 0228 AB42     		cmp	r3, r5
 11049 022a 4DD0     		beq	.L268
 11050              	.LVL893:
ARM GAS  /tmp/ccszdRNt.s 			page 501


 11051              	.LBB7499:
 11052              	.LBI7499:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11053              		.loc 5 186 7 is_stmt 1 view .LVU2865
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11054              		.loc 5 186 7 is_stmt 0 view .LVU2866
 11055              	.LBE7499:
 11056              	.LBB7500:
 11057              	.LBI7500:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 11058              		.loc 5 178 7 is_stmt 1 view .LVU2867
 11059              	.LBB7501:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11060              		.loc 5 179 9 is_stmt 0 view .LVU2868
 11061 022c 3293     		str	r3, [sp, #200]
 11062              	.LVL894:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11063              		.loc 5 179 9 view .LVU2869
 11064              	.LBE7501:
 11065              	.LBE7500:
 11066              	.LBB7502:
 11067              	.LBI7502:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11068              		.loc 5 210 7 is_stmt 1 view .LVU2870
 11069              	.LBB7503:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11070              		.loc 5 211 9 is_stmt 0 view .LVU2871
 11071 022e 8368     		ldr	r3, [r0, #8]
 11072 0230 3493     		str	r3, [sp, #208]
 11073              	.LVL895:
 11074              	.L244:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11075              		.loc 5 211 9 view .LVU2872
 11076              	.LBE7503:
 11077              	.LBE7502:
 11078              	.LBB7504:
 11079              	.LBI7504:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11080              		.loc 5 936 7 is_stmt 1 view .LVU2873
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11081              		.loc 5 936 7 is_stmt 0 view .LVU2874
 11082              	.LBE7504:
 11083              	.LBB7505:
 11084              	.LBI7505:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 11085              		.loc 5 182 7 is_stmt 1 view .LVU2875
 11086              	.LBB7506:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11087              		.loc 5 183 9 is_stmt 0 view .LVU2876
 11088 0232 6368     		ldr	r3, [r4, #4]
 11089 0234 3393     		str	r3, [sp, #204]
 11090              	.LVL896:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11091              		.loc 5 183 9 view .LVU2877
 11092              	.LBE7506:
 11093              	.LBE7505:
 11094              	.LBB7507:
ARM GAS  /tmp/ccszdRNt.s 			page 502


 11095              	.LBI7507:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11096              		.loc 5 190 7 is_stmt 1 view .LVU2878
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11097              		.loc 5 190 7 is_stmt 0 view .LVU2879
 11098              	.LBE7507:
 11099              	.LBB7508:
 11100              	.LBI7508:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 11101              		.loc 5 178 7 is_stmt 1 view .LVU2880
 11102              	.LBB7509:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11103              		.loc 5 179 9 is_stmt 0 view .LVU2881
 11104 0236 2560     		str	r5, [r4]
 11105              	.LVL897:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11106              		.loc 5 179 9 view .LVU2882
 11107              	.LBE7509:
 11108              	.LBE7508:
 11109              	.LBB7510:
 11110              	.LBI7510:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11111              		.loc 5 214 7 is_stmt 1 view .LVU2883
 11112              	.LBB7511:
 11113              	.LBI7511:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 11114              		.loc 5 182 7 view .LVU2884
 11115              	.LBB7512:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11116              		.loc 5 183 9 is_stmt 0 view .LVU2885
 11117 0238 0023     		movs	r3, #0
 11118 023a 6360     		str	r3, [r4, #4]
 11119              	.LVL898:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11120              		.loc 5 183 9 view .LVU2886
 11121              	.LBE7512:
 11122              	.LBE7511:
 11123              	.LBB7513:
 11124              	.LBI7513:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 11125              		.loc 4 299 7 is_stmt 1 view .LVU2887
 11126              	.LBB7514:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 11127              		.loc 4 300 9 view .LVU2888
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 11128              		.loc 4 300 14 is_stmt 0 view .LVU2889
 11129 023c 2372     		strb	r3, [r4, #8]
 11130              	.LVL899:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 11131              		.loc 4 300 14 view .LVU2890
 11132              	.LBE7514:
 11133              	.LBE7513:
 11134              	.LBE7510:
 11135              	.LBE7484:
 11136              	.LBE7483:
 11137              	.LBE7482:
 11138              	.LBE7476:
ARM GAS  /tmp/ccszdRNt.s 			page 503


 11139              	.LBB7520:
 11140              	.LBI7520:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 11141              		.loc 5 6121 5 is_stmt 1 view .LVU2891
 11142              	.LBB7521:
 11143              	.LBI7521:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11144              		.loc 5 1263 7 view .LVU2892
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11145              		.loc 5 1263 7 is_stmt 0 view .LVU2893
 11146              	.LBE7521:
 11147              	.LBE7520:
 11148              	.LBE7652:
 11149              	.LBE7979:
 11150              	.LBE7985:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 11151              		.loc 4 332 2 is_stmt 1 view .LVU2894
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 11152              		.loc 4 335 2 view .LVU2895
 11153              	.LBB7986:
 11154              	.LBB7980:
 11155              	.LBB7653:
 11156              	.LBB7570:
 11157              	.LBB7530:
 11158              	.LBB7522:
 11159              	.LBB7523:
 11160              	.LBI7523:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11161              		.loc 5 320 7 view .LVU2896
 11162              	.LBB7524:
 11163              	.LBB7525:
 11164              	.LBI7525:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11165              		.loc 5 930 7 view .LVU2897
 11166              	.LBB7526:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11167              		.loc 5 931 16 is_stmt 0 view .LVU2898
 11168 023e 339A     		ldr	r2, [sp, #204]
 11169              	.LVL900:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11170              		.loc 5 931 16 view .LVU2899
 11171              	.LBE7526:
 11172              	.LBE7525:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 11173              		.loc 5 322 2 view .LVU2900
 11174 0240 394B     		ldr	r3, .L271+12
 11175 0242 9B1A     		subs	r3, r3, r2
 11176 0244 012B     		cmp	r3, #1
 11177 0246 45D9     		bls	.L269
 11178              	.LVL901:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 11179              		.loc 5 322 2 view .LVU2901
 11180              	.LBE7524:
 11181              	.LBE7523:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11182              		.loc 5 1268 27 view .LVU2902
 11183 0248 0222     		movs	r2, #2
ARM GAS  /tmp/ccszdRNt.s 			page 504


 11184 024a 3849     		ldr	r1, .L271+16
 11185 024c 32A8     		add	r0, sp, #200
 11186              	.LVL902:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11187              		.loc 5 1268 27 view .LVU2903
 11188 024e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 11189              	.LVL903:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11190              		.loc 5 1268 27 view .LVU2904
 11191 0252 0400     		movs	r4, r0
 11192              	.LVL904:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11193              		.loc 5 1268 27 view .LVU2905
 11194              	.LBE7522:
 11195              	.LBE7530:
 11196              	.LBB7531:
 11197              	.LBI7531:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 11198              		.loc 5 552 7 is_stmt 1 view .LVU2906
 11199              	.LBB7532:
 11200              	.LBB7533:
 11201              	.LBB7534:
 11202              	.LBI7534:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11203              		.loc 5 190 7 view .LVU2907
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11204              		.loc 5 190 7 is_stmt 0 view .LVU2908
 11205              	.LBE7534:
 11206              	.LBB7535:
 11207              	.LBI7535:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11208              		.loc 5 286 7 is_stmt 1 view .LVU2909
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 11209              		.loc 5 286 7 is_stmt 0 view .LVU2910
 11210              	.LBE7535:
 11211              	.LBB7536:
 11212              	.LBI7536:
 11213              		.loc 8 99 5 is_stmt 1 view .LVU2911
 11214              		.loc 8 99 5 is_stmt 0 view .LVU2912
 11215              	.LBE7536:
 11216              	.LBB7537:
 11217              	.LBI7537:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 11218              		.loc 5 159 2 is_stmt 1 view .LVU2913
 11219              	.LBB7538:
 11220              	.LBB7539:
 11221              	.LBB7540:
 11222              	.LBI7540:
 11223              		.loc 8 99 5 view .LVU2914
 11224              		.loc 8 99 5 is_stmt 0 view .LVU2915
 11225              	.LBE7540:
 11226              	.LBB7541:
 11227              	.LBI7541:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11228              		.loc 6 141 7 is_stmt 1 view .LVU2916
 11229              	.LBB7542:
 11230              	.LBI7542:
ARM GAS  /tmp/ccszdRNt.s 			page 505


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11231              		.loc 7 83 7 view .LVU2917
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11232              		.loc 7 83 7 is_stmt 0 view .LVU2918
 11233              	.LBE7542:
 11234              	.LBE7541:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11235              		.loc 5 160 46 view .LVU2919
 11236 0254 2EAB     		add	r3, sp, #184
 11237              	.LVL905:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11238              		.loc 5 160 46 view .LVU2920
 11239 0256 2C93     		str	r3, [sp, #176]
 11240              	.LVL906:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 11241              		.loc 5 160 46 view .LVU2921
 11242              	.LBE7539:
 11243              	.LBE7538:
 11244              	.LBE7537:
 11245              	.LBB7543:
 11246              	.LBI7543:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11247              		.loc 5 221 7 is_stmt 1 view .LVU2922
 11248              	.LBB7544:
 11249              	.LBI7544:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11250              		.loc 5 186 7 view .LVU2923
 11251              	.LBB7545:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11252              		.loc 5 187 28 is_stmt 0 view .LVU2924
 11253 0258 0368     		ldr	r3, [r0]
 11254              	.LVL907:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11255              		.loc 5 187 28 view .LVU2925
 11256              	.LBE7545:
 11257              	.LBE7544:
 11258              	.LBB7546:
 11259              	.LBI7546:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11260              		.loc 5 200 7 is_stmt 1 view .LVU2926
 11261              	.LBB7547:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11262              		.loc 5 203 57 is_stmt 0 view .LVU2927
 11263 025a 0500     		movs	r5, r0
 11264 025c 0835     		adds	r5, r5, #8
 11265              	.LVL908:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 11266              		.loc 5 203 57 view .LVU2928
 11267              	.LBE7547:
 11268              	.LBE7546:
 11269              	.LBE7543:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 11270              		.loc 5 555 2 view .LVU2929
 11271 025e AB42     		cmp	r3, r5
 11272 0260 3BD0     		beq	.L270
 11273              	.LVL909:
 11274              	.LBB7548:
ARM GAS  /tmp/ccszdRNt.s 			page 506


 11275              	.LBI7548:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11276              		.loc 5 186 7 is_stmt 1 view .LVU2930
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11277              		.loc 5 186 7 is_stmt 0 view .LVU2931
 11278              	.LBE7548:
 11279              	.LBB7549:
 11280              	.LBI7549:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 11281              		.loc 5 178 7 is_stmt 1 view .LVU2932
 11282              	.LBB7550:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11283              		.loc 5 179 9 is_stmt 0 view .LVU2933
 11284 0262 2C93     		str	r3, [sp, #176]
 11285              	.LVL910:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11286              		.loc 5 179 9 view .LVU2934
 11287              	.LBE7550:
 11288              	.LBE7549:
 11289              	.LBB7551:
 11290              	.LBI7551:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 11291              		.loc 5 210 7 is_stmt 1 view .LVU2935
 11292              	.LBB7552:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11293              		.loc 5 211 9 is_stmt 0 view .LVU2936
 11294 0264 8368     		ldr	r3, [r0, #8]
 11295 0266 2E93     		str	r3, [sp, #184]
 11296              	.LVL911:
 11297              	.L247:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11298              		.loc 5 211 9 view .LVU2937
 11299              	.LBE7552:
 11300              	.LBE7551:
 11301              	.LBB7553:
 11302              	.LBI7553:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11303              		.loc 5 936 7 is_stmt 1 view .LVU2938
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 11304              		.loc 5 936 7 is_stmt 0 view .LVU2939
 11305              	.LBE7553:
 11306              	.LBB7554:
 11307              	.LBI7554:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 11308              		.loc 5 182 7 is_stmt 1 view .LVU2940
 11309              	.LBB7555:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11310              		.loc 5 183 9 is_stmt 0 view .LVU2941
 11311 0268 6368     		ldr	r3, [r4, #4]
 11312 026a 2D93     		str	r3, [sp, #180]
 11313              	.LVL912:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11314              		.loc 5 183 9 view .LVU2942
 11315              	.LBE7555:
 11316              	.LBE7554:
 11317              	.LBB7556:
 11318              	.LBI7556:
ARM GAS  /tmp/ccszdRNt.s 			page 507


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11319              		.loc 5 190 7 is_stmt 1 view .LVU2943
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11320              		.loc 5 190 7 is_stmt 0 view .LVU2944
 11321              	.LBE7556:
 11322              	.LBB7557:
 11323              	.LBI7557:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 11324              		.loc 5 178 7 is_stmt 1 view .LVU2945
 11325              	.LBB7558:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11326              		.loc 5 179 9 is_stmt 0 view .LVU2946
 11327 026c 2560     		str	r5, [r4]
 11328              	.LVL913:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11329              		.loc 5 179 9 view .LVU2947
 11330              	.LBE7558:
 11331              	.LBE7557:
 11332              	.LBB7559:
 11333              	.LBI7559:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11334              		.loc 5 214 7 is_stmt 1 view .LVU2948
 11335              	.LBB7560:
 11336              	.LBI7560:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 11337              		.loc 5 182 7 view .LVU2949
 11338              	.LBB7561:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11339              		.loc 5 183 9 is_stmt 0 view .LVU2950
 11340 026e 0023     		movs	r3, #0
 11341 0270 6360     		str	r3, [r4, #4]
 11342              	.LVL914:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11343              		.loc 5 183 9 view .LVU2951
 11344              	.LBE7561:
 11345              	.LBE7560:
 11346              	.LBB7562:
 11347              	.LBI7562:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 11348              		.loc 4 299 7 is_stmt 1 view .LVU2952
 11349              	.LBB7563:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 11350              		.loc 4 300 9 view .LVU2953
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 11351              		.loc 4 300 14 is_stmt 0 view .LVU2954
 11352 0272 2372     		strb	r3, [r4, #8]
 11353              	.LVL915:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 11354              		.loc 4 300 14 view .LVU2955
 11355              	.LBE7563:
 11356              	.LBE7562:
 11357              	.LBE7559:
 11358              	.LBE7533:
 11359              	.LBE7532:
 11360              	.LBE7531:
 11361              	.LBE7570:
 236:alohal/cli/cli.cpp ****                 return commands.size();
ARM GAS  /tmp/ccszdRNt.s 			page 508


 11362              		.loc 2 236 22 view .LVU2956
 11363 0274 2CA9     		add	r1, sp, #176
 11364 0276 3000     		movs	r0, r6
 11365 0278 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 11366              	.LVL916:
 11367              	.LBB7571:
 11368              	.LBI7571:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11369              		.loc 5 657 7 is_stmt 1 view .LVU2957
 11370              	.LBB7572:
 11371              	.LBI7572:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11372              		.loc 5 229 7 view .LVU2958
 11373              	.LBB7573:
 11374              	.LBB7574:
 11375              	.LBI7574:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11376              		.loc 5 221 7 view .LVU2959
 11377              	.LBB7575:
 11378              	.LBI7575:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11379              		.loc 5 186 7 view .LVU2960
 11380              	.LBB7576:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11381              		.loc 5 187 28 is_stmt 0 view .LVU2961
 11382 027c 2C98     		ldr	r0, [sp, #176]
 11383              	.LVL917:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11384              		.loc 5 187 28 view .LVU2962
 11385              	.LBE7576:
 11386              	.LBE7575:
 11387              	.LBB7577:
 11388              	.LBI7577:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11389              		.loc 5 200 7 is_stmt 1 view .LVU2963
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11390              		.loc 5 200 7 is_stmt 0 view .LVU2964
 11391              	.LBE7577:
 11392              	.LBE7574:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11393              		.loc 5 231 2 view .LVU2965
 11394 027e 2EAB     		add	r3, sp, #184
 11395 0280 9842     		cmp	r0, r3
 11396 0282 01D0     		beq	.L248
 11397              	.LVL918:
 11398              	.LBB7578:
 11399              	.LBI7578:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11400              		.loc 5 236 7 is_stmt 1 view .LVU2966
 11401              	.LBB7579:
 11402              	.LBB7580:
 11403              	.LBI7580:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11404              		.loc 10 469 7 view .LVU2967
 11405              	.LBB7581:
 11406              	.LBI7581:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 509


 11407              		.loc 7 119 7 view .LVU2968
 11408              	.LBB7582:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11409              		.loc 7 128 19 is_stmt 0 view .LVU2969
 11410 0284 FFF7FEFF 		bl	_ZdlPv
 11411              	.LVL919:
 11412              	.L248:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11413              		.loc 7 128 19 view .LVU2970
 11414              	.LBE7582:
 11415              	.LBE7581:
 11416              	.LBE7580:
 11417              	.LBE7579:
 11418              	.LBE7578:
 11419              	.LBE7573:
 11420              	.LBE7572:
 11421              	.LBB7583:
 11422              	.LBI7583:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11423              		.loc 5 150 14 is_stmt 1 view .LVU2971
 11424              	.LBB7584:
 11425              	.LBI7584:
 11426              		.loc 6 153 7 view .LVU2972
 11427              	.LBB7585:
 11428              	.LBI7585:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11429              		.loc 7 89 7 view .LVU2973
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11430              		.loc 7 89 7 is_stmt 0 view .LVU2974
 11431              	.LBE7585:
 11432              	.LBE7584:
 11433              	.LBE7583:
 11434              	.LBE7571:
 11435              	.LBB7586:
 11436              	.LBI7586:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11437              		.loc 5 657 7 is_stmt 1 view .LVU2975
 11438              	.LBB7587:
 11439              	.LBI7587:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11440              		.loc 5 229 7 view .LVU2976
 11441              	.LBB7588:
 11442              	.LBB7589:
 11443              	.LBI7589:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11444              		.loc 5 221 7 view .LVU2977
 11445              	.LBB7590:
 11446              	.LBI7590:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11447              		.loc 5 186 7 view .LVU2978
 11448              	.LBB7591:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11449              		.loc 5 187 28 is_stmt 0 view .LVU2979
 11450 0288 3298     		ldr	r0, [sp, #200]
 11451              	.LVL920:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11452              		.loc 5 187 28 view .LVU2980
ARM GAS  /tmp/ccszdRNt.s 			page 510


 11453              	.LBE7591:
 11454              	.LBE7590:
 11455              	.LBB7592:
 11456              	.LBI7592:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11457              		.loc 5 200 7 is_stmt 1 view .LVU2981
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11458              		.loc 5 200 7 is_stmt 0 view .LVU2982
 11459              	.LBE7592:
 11460              	.LBE7589:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11461              		.loc 5 231 2 view .LVU2983
 11462 028a 34AB     		add	r3, sp, #208
 11463 028c 9842     		cmp	r0, r3
 11464 028e 01D0     		beq	.L249
 11465              	.LVL921:
 11466              	.LBB7593:
 11467              	.LBI7593:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11468              		.loc 5 236 7 is_stmt 1 view .LVU2984
 11469              	.LBB7594:
 11470              	.LBB7595:
 11471              	.LBI7595:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11472              		.loc 10 469 7 view .LVU2985
 11473              	.LBB7596:
 11474              	.LBI7596:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11475              		.loc 7 119 7 view .LVU2986
 11476              	.LBB7597:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11477              		.loc 7 128 19 is_stmt 0 view .LVU2987
 11478 0290 FFF7FEFF 		bl	_ZdlPv
 11479              	.LVL922:
 11480              	.L249:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11481              		.loc 7 128 19 view .LVU2988
 11482              	.LBE7597:
 11483              	.LBE7596:
 11484              	.LBE7595:
 11485              	.LBE7594:
 11486              	.LBE7593:
 11487              	.LBE7588:
 11488              	.LBE7587:
 11489              	.LBB7598:
 11490              	.LBI7598:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11491              		.loc 5 150 14 is_stmt 1 view .LVU2989
 11492              	.LBB7599:
 11493              	.LBI7599:
 11494              		.loc 6 153 7 view .LVU2990
 11495              	.LBB7600:
 11496              	.LBI7600:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11497              		.loc 7 89 7 view .LVU2991
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11498              		.loc 7 89 7 is_stmt 0 view .LVU2992
ARM GAS  /tmp/ccszdRNt.s 			page 511


 11499              	.LBE7600:
 11500              	.LBE7599:
 11501              	.LBE7598:
 11502              	.LBE7586:
 11503              	.LBB7601:
 11504              	.LBI7601:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11505              		.loc 5 657 7 is_stmt 1 view .LVU2993
 11506              	.LBB7602:
 11507              	.LBI7602:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11508              		.loc 5 229 7 view .LVU2994
 11509              	.LBB7603:
 11510              	.LBB7604:
 11511              	.LBI7604:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11512              		.loc 5 221 7 view .LVU2995
 11513              	.LBB7605:
 11514              	.LBI7605:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11515              		.loc 5 186 7 view .LVU2996
 11516              	.LBB7606:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11517              		.loc 5 187 28 is_stmt 0 view .LVU2997
 11518 0294 4498     		ldr	r0, [sp, #272]
 11519              	.LVL923:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11520              		.loc 5 187 28 view .LVU2998
 11521              	.LBE7606:
 11522              	.LBE7605:
 11523              	.LBB7607:
 11524              	.LBI7607:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11525              		.loc 5 200 7 is_stmt 1 view .LVU2999
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11526              		.loc 5 200 7 is_stmt 0 view .LVU3000
 11527              	.LBE7607:
 11528              	.LBE7604:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11529              		.loc 5 231 2 view .LVU3001
 11530 0296 46AB     		add	r3, sp, #280
 11531 0298 9842     		cmp	r0, r3
 11532 029a 01D0     		beq	.L250
 11533              	.LVL924:
 11534              	.LBB7608:
 11535              	.LBI7608:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11536              		.loc 5 236 7 is_stmt 1 view .LVU3002
 11537              	.LBB7609:
 11538              	.LBB7610:
 11539              	.LBI7610:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11540              		.loc 10 469 7 view .LVU3003
 11541              	.LBB7611:
 11542              	.LBI7611:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11543              		.loc 7 119 7 view .LVU3004
ARM GAS  /tmp/ccszdRNt.s 			page 512


 11544              	.LBB7612:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11545              		.loc 7 128 19 is_stmt 0 view .LVU3005
 11546 029c FFF7FEFF 		bl	_ZdlPv
 11547              	.LVL925:
 11548              	.L250:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11549              		.loc 7 128 19 view .LVU3006
 11550              	.LBE7612:
 11551              	.LBE7611:
 11552              	.LBE7610:
 11553              	.LBE7609:
 11554              	.LBE7608:
 11555              	.LBE7603:
 11556              	.LBE7602:
 11557              	.LBB7613:
 11558              	.LBI7613:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11559              		.loc 5 150 14 is_stmt 1 view .LVU3007
 11560              	.LBB7614:
 11561              	.LBI7614:
 11562              		.loc 6 153 7 view .LVU3008
 11563              	.LBB7615:
 11564              	.LBI7615:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11565              		.loc 7 89 7 view .LVU3009
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11566              		.loc 7 89 7 is_stmt 0 view .LVU3010
 11567              	.LBE7615:
 11568              	.LBE7614:
 11569              	.LBE7613:
 11570              	.LBE7601:
 11571              	.LBB7616:
 11572              	.LBI7616:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11573              		.loc 5 657 7 is_stmt 1 view .LVU3011
 11574              	.LBB7617:
 11575              	.LBI7617:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11576              		.loc 5 229 7 view .LVU3012
 11577              	.LBB7618:
 11578              	.LBB7619:
 11579              	.LBI7619:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11580              		.loc 5 221 7 view .LVU3013
 11581              	.LBB7620:
 11582              	.LBI7620:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11583              		.loc 5 186 7 view .LVU3014
 11584              	.LBB7621:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11585              		.loc 5 187 28 is_stmt 0 view .LVU3015
 11586 02a0 3898     		ldr	r0, [sp, #224]
 11587              	.LVL926:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11588              		.loc 5 187 28 view .LVU3016
 11589              	.LBE7621:
ARM GAS  /tmp/ccszdRNt.s 			page 513


 11590              	.LBE7620:
 11591              	.LBB7622:
 11592              	.LBI7622:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11593              		.loc 5 200 7 is_stmt 1 view .LVU3017
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11594              		.loc 5 200 7 is_stmt 0 view .LVU3018
 11595              	.LBE7622:
 11596              	.LBE7619:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11597              		.loc 5 231 2 view .LVU3019
 11598 02a2 3AAB     		add	r3, sp, #232
 11599 02a4 9842     		cmp	r0, r3
 11600 02a6 01D0     		beq	.L251
 11601              	.LVL927:
 11602              	.LBB7623:
 11603              	.LBI7623:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11604              		.loc 5 236 7 is_stmt 1 view .LVU3020
 11605              	.LBB7624:
 11606              	.LBB7625:
 11607              	.LBI7625:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11608              		.loc 10 469 7 view .LVU3021
 11609              	.LBB7626:
 11610              	.LBI7626:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11611              		.loc 7 119 7 view .LVU3022
 11612              	.LBB7627:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11613              		.loc 7 128 19 is_stmt 0 view .LVU3023
 11614 02a8 FFF7FEFF 		bl	_ZdlPv
 11615              	.LVL928:
 11616              	.L251:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11617              		.loc 7 128 19 view .LVU3024
 11618              	.LBE7627:
 11619              	.LBE7626:
 11620              	.LBE7625:
 11621              	.LBE7624:
 11622              	.LBE7623:
 11623              	.LBE7618:
 11624              	.LBE7617:
 11625              	.LBB7628:
 11626              	.LBI7628:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11627              		.loc 5 150 14 is_stmt 1 view .LVU3025
 11628              	.LBB7629:
 11629              	.LBI7629:
 11630              		.loc 6 153 7 view .LVU3026
 11631              	.LBB7630:
 11632              	.LBI7630:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11633              		.loc 7 89 7 view .LVU3027
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11634              		.loc 7 89 7 is_stmt 0 view .LVU3028
 11635              	.LBE7630:
ARM GAS  /tmp/ccszdRNt.s 			page 514


 11636              	.LBE7629:
 11637              	.LBE7628:
 11638              	.LBE7616:
 11639              	.LBB7631:
 11640              	.LBI7631:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11641              		.loc 5 657 7 is_stmt 1 view .LVU3029
 11642              	.LBB7632:
 11643              	.LBI7632:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11644              		.loc 5 229 7 view .LVU3030
 11645              	.LBB7633:
 11646              	.LBB7634:
 11647              	.LBI7634:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11648              		.loc 5 221 7 view .LVU3031
 11649              	.LBB7635:
 11650              	.LBI7635:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11651              		.loc 5 186 7 view .LVU3032
 11652              	.LBB7636:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11653              		.loc 5 187 28 is_stmt 0 view .LVU3033
 11654 02ac 3E98     		ldr	r0, [sp, #248]
 11655              	.LVL929:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11656              		.loc 5 187 28 view .LVU3034
 11657              	.LBE7636:
 11658              	.LBE7635:
 11659              	.LBB7637:
 11660              	.LBI7637:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11661              		.loc 5 200 7 is_stmt 1 view .LVU3035
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11662              		.loc 5 200 7 is_stmt 0 view .LVU3036
 11663              	.LBE7637:
 11664              	.LBE7634:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11665              		.loc 5 231 2 view .LVU3037
 11666 02ae 40AB     		add	r3, sp, #256
 11667 02b0 9842     		cmp	r0, r3
 11668 02b2 01D0     		beq	.L252
 11669              	.LVL930:
 11670              	.LBB7638:
 11671              	.LBI7638:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11672              		.loc 5 236 7 is_stmt 1 view .LVU3038
 11673              	.LBB7639:
 11674              	.LBB7640:
 11675              	.LBI7640:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11676              		.loc 10 469 7 view .LVU3039
 11677              	.LBB7641:
 11678              	.LBI7641:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11679              		.loc 7 119 7 view .LVU3040
 11680              	.LBB7642:
ARM GAS  /tmp/ccszdRNt.s 			page 515


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11681              		.loc 7 128 19 is_stmt 0 view .LVU3041
 11682 02b4 FFF7FEFF 		bl	_ZdlPv
 11683              	.LVL931:
 11684              	.L252:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11685              		.loc 7 128 19 view .LVU3042
 11686              	.LBE7642:
 11687              	.LBE7641:
 11688              	.LBE7640:
 11689              	.LBE7639:
 11690              	.LBE7638:
 11691              	.LBE7633:
 11692              	.LBE7632:
 11693              	.LBB7643:
 11694              	.LBI7643:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11695              		.loc 5 150 14 is_stmt 1 view .LVU3043
 11696              	.LBB7644:
 11697              	.LBI7644:
 11698              		.loc 6 153 7 view .LVU3044
 11699              	.LBB7645:
 11700              	.LBI7645:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11701              		.loc 7 89 7 view .LVU3045
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11702              		.loc 7 89 7 is_stmt 0 view .LVU3046
 11703              	.LBE7645:
 11704              	.LBE7644:
 11705              	.LBE7643:
 11706              	.LBE7631:
 237:alohal/cli/cli.cpp **** 
 11707              		.loc 2 237 17 is_stmt 1 view .LVU3047
 11708              	.LBB7646:
 11709              	.LBI7646:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 11710              		.loc 13 915 7 view .LVU3048
 11711              	.LBB7647:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11712              		.loc 13 916 40 is_stmt 0 view .LVU3049
 11713 02b8 F06E     		ldr	r0, [r6, #108]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11714              		.loc 13 916 66 view .LVU3050
 11715 02ba B36E     		ldr	r3, [r6, #104]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11716              		.loc 13 916 50 view .LVU3051
 11717 02bc C01A     		subs	r0, r0, r3
 11718 02be 8010     		asrs	r0, r0, #2
 11719              	.LVL932:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11720              		.loc 13 916 50 view .LVU3052
 11721 02c0 27E0     		b	.L220
 11722              	.LVL933:
 11723              	.L267:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11724              		.loc 13 916 50 view .LVU3053
 11725              	.LBE7647:
ARM GAS  /tmp/ccszdRNt.s 			page 516


 11726              	.LBE7646:
 11727              	.LBB7648:
 11728              	.LBB7474:
 11729              	.LBB7472:
 11730              	.LBB7470:
 11731              	.LBB7469:
 11732              	.LBB7468:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11733              		.loc 5 323 24 view .LVU3054
 11734 02c2 1B48     		ldr	r0, .L271+20
 11735 02c4 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 11736              	.LVL934:
 11737              	.L268:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11738              		.loc 5 323 24 view .LVU3055
 11739              	.LBE7468:
 11740              	.LBE7469:
 11741              	.LBE7470:
 11742              	.LBE7472:
 11743              	.LBE7474:
 11744              	.LBE7648:
 11745              	.LBB7649:
 11746              	.LBB7519:
 11747              	.LBB7518:
 11748              	.LBB7517:
 11749              	.LBB7515:
 11750              	.LBI7515:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 11751              		.loc 4 361 7 is_stmt 1 view .LVU3056
 11752              	.LBB7516:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 11753              		.loc 4 363 2 view .LVU3057
 11754              		.loc 4 365 2 view .LVU3058
 11755              		.loc 4 365 49 is_stmt 0 view .LVU3059
 11756 02c8 1022     		movs	r2, #16
 11757 02ca 2900     		movs	r1, r5
 11758 02cc 34A8     		add	r0, sp, #208
 11759              	.LVL935:
 11760              		.loc 4 365 49 view .LVU3060
 11761 02ce FFF7FEFF 		bl	memcpy
 11762              	.LVL936:
 11763              		.loc 4 365 49 view .LVU3061
 11764 02d2 AEE7     		b	.L244
 11765              	.LVL937:
 11766              	.L269:
 11767              		.loc 4 365 49 view .LVU3062
 11768              	.LBE7516:
 11769              	.LBE7515:
 11770              	.LBE7517:
 11771              	.LBE7518:
 11772              	.LBE7519:
 11773              	.LBE7649:
 11774              	.LBB7650:
 11775              	.LBB7568:
 11776              	.LBB7529:
 11777              	.LBB7528:
 11778              	.LBB7527:
ARM GAS  /tmp/ccszdRNt.s 			page 517


 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11779              		.loc 5 323 24 view .LVU3063
 11780 02d4 1648     		ldr	r0, .L271+20
 11781 02d6 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 11782              	.LVL938:
 11783              	.L270:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 11784              		.loc 5 323 24 view .LVU3064
 11785              	.LBE7527:
 11786              	.LBE7528:
 11787              	.LBE7529:
 11788              	.LBE7568:
 11789              	.LBB7569:
 11790              	.LBB7567:
 11791              	.LBB7566:
 11792              	.LBB7564:
 11793              	.LBI7564:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 11794              		.loc 4 361 7 is_stmt 1 view .LVU3065
 11795              	.LBB7565:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 11796              		.loc 4 363 2 view .LVU3066
 11797              		.loc 4 365 2 view .LVU3067
 11798              		.loc 4 365 49 is_stmt 0 view .LVU3068
 11799 02da 1022     		movs	r2, #16
 11800 02dc 2900     		movs	r1, r5
 11801 02de 2EA8     		add	r0, sp, #184
 11802              	.LVL939:
 11803              		.loc 4 365 49 view .LVU3069
 11804 02e0 FFF7FEFF 		bl	memcpy
 11805              	.LVL940:
 11806              		.loc 4 365 49 view .LVU3070
 11807 02e4 C0E7     		b	.L247
 11808              	.LVL941:
 11809              	.L238:
 11810              		.loc 4 365 49 view .LVU3071
 11811              	.LBE7565:
 11812              	.LBE7564:
 11813              	.LBE7566:
 11814              	.LBE7567:
 11815              	.LBE7569:
 11816              	.LBE7650:
 11817              	.LBE7653:
 240:alohal/cli/cli.cpp ****             }
 241:alohal/cli/cli.cpp ****         }
 242:alohal/cli/cli.cpp ****         Print("Parameter was not found\r\n");
 11818              		.loc 2 242 9 is_stmt 1 view .LVU3072
 11819              	.LBB7654:
 11820              	.LBI7654:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 11821              		.loc 6 138 7 view .LVU3073
 11822              	.LBB7655:
 11823              	.LBI7655:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11824              		.loc 7 80 7 view .LVU3074
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11825              		.loc 7 80 7 is_stmt 0 view .LVU3075
ARM GAS  /tmp/ccszdRNt.s 			page 518


 11826              	.LBE7655:
 11827              	.LBE7654:
 11828              	.LBB7656:
 11829              	.LBI7656:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 11830              		.loc 5 525 7 is_stmt 1 view .LVU3076
 11831              	.LBB7657:
 11832              	.LBB7658:
 11833              	.LBB7659:
 11834              	.LBI7659:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11835              		.loc 5 190 7 view .LVU3077
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11836              		.loc 5 190 7 is_stmt 0 view .LVU3078
 11837              	.LBE7659:
 11838              	.LBB7660:
 11839              	.LBI7660:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 11840              		.loc 5 156 2 is_stmt 1 view .LVU3079
 11841              	.LBB7661:
 11842              	.LBB7662:
 11843              	.LBB7663:
 11844              	.LBI7663:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 11845              		.loc 6 141 7 view .LVU3080
 11846              	.LBB7664:
 11847              	.LBI7664:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11848              		.loc 7 83 7 view .LVU3081
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11849              		.loc 7 83 7 is_stmt 0 view .LVU3082
 11850              	.LBE7664:
 11851              	.LBE7663:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11852              		.loc 5 157 35 view .LVU3083
 11853 02e6 4CAC     		add	r4, sp, #304
 11854              	.LVL942:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11855              		.loc 5 157 35 view .LVU3084
 11856 02e8 4A94     		str	r4, [sp, #296]
 11857              	.LVL943:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11858              		.loc 5 157 35 view .LVU3085
 11859              	.LBE7662:
 11860              	.LBE7661:
 11861              	.LBE7660:
 11862              	.LBB7665:
 11863              	.LBI7665:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 11864              		.loc 4 329 7 is_stmt 1 view .LVU3086
 11865              	.LBE7665:
 11866              	.LBE7658:
 11867              	.LBE7657:
 11868              	.LBE7656:
 11869              	.LBE7980:
 11870              	.LBE7986:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
ARM GAS  /tmp/ccszdRNt.s 			page 519


 11871              		.loc 4 332 2 view .LVU3087
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 11872              		.loc 4 335 2 view .LVU3088
 11873              	.LBB7987:
 11874              	.LBB7981:
 11875              	.LBB7672:
 11876              	.LBB7671:
 11877              	.LBB7670:
 11878              	.LBB7666:
 11879              	.LBI7666:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 11880              		.loc 5 263 9 view .LVU3089
 11881              	.LBB7667:
 11882              	.LBB7668:
 11883              	.LBI7668:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 11884              		.loc 5 243 9 view .LVU3090
 11885              	.LBB7669:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11886              		.loc 5 247 11 is_stmt 0 view .LVU3091
 11887 02ea 134A     		ldr	r2, .L271+28
 11888              	.LVL944:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11889              		.loc 5 247 11 view .LVU3092
 11890 02ec 1100     		movs	r1, r2
 11891 02ee 1939     		subs	r1, r1, #25
 11892 02f0 0023     		movs	r3, #0
 11893 02f2 4AA8     		add	r0, sp, #296
 11894              	.LVL945:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11895              		.loc 5 247 11 view .LVU3093
 11896 02f4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 11897              	.LVL946:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 11898              		.loc 5 247 11 view .LVU3094
 11899              	.LBE7669:
 11900              	.LBE7668:
 11901              	.LBE7667:
 11902              	.LBE7666:
 11903              	.LBE7670:
 11904              	.LBE7671:
 11905              	.LBE7672:
 11906              		.loc 2 242 14 view .LVU3095
 11907 02f8 4AA9     		add	r1, sp, #296
 11908 02fa 3000     		movs	r0, r6
 11909 02fc FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 11910              	.LVL947:
 11911              	.LBB7673:
 11912              	.LBI7673:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 11913              		.loc 5 657 7 is_stmt 1 view .LVU3096
 11914              	.LBB7674:
 11915              	.LBI7674:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11916              		.loc 5 229 7 view .LVU3097
 11917              	.LBB7675:
 11918              	.LBB7676:
ARM GAS  /tmp/ccszdRNt.s 			page 520


 11919              	.LBI7676:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 11920              		.loc 5 221 7 view .LVU3098
 11921              	.LBB7677:
 11922              	.LBI7677:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 11923              		.loc 5 186 7 view .LVU3099
 11924              	.LBB7678:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11925              		.loc 5 187 28 is_stmt 0 view .LVU3100
 11926 0300 4A98     		ldr	r0, [sp, #296]
 11927              	.LVL948:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 11928              		.loc 5 187 28 view .LVU3101
 11929              	.LBE7678:
 11930              	.LBE7677:
 11931              	.LBB7679:
 11932              	.LBI7679:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11933              		.loc 5 200 7 is_stmt 1 view .LVU3102
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11934              		.loc 5 200 7 is_stmt 0 view .LVU3103
 11935              	.LBE7679:
 11936              	.LBE7676:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 11937              		.loc 5 231 2 view .LVU3104
 11938 0302 A042     		cmp	r0, r4
 11939 0304 01D0     		beq	.L237
 11940              	.LVL949:
 11941              	.LBB7680:
 11942              	.LBI7680:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 11943              		.loc 5 236 7 is_stmt 1 view .LVU3105
 11944              	.LBB7681:
 11945              	.LBB7682:
 11946              	.LBI7682:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 11947              		.loc 10 469 7 view .LVU3106
 11948              	.LBB7683:
 11949              	.LBI7683:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 11950              		.loc 7 119 7 view .LVU3107
 11951              	.LBB7684:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11952              		.loc 7 128 19 is_stmt 0 view .LVU3108
 11953 0306 FFF7FEFF 		bl	_ZdlPv
 11954              	.LVL950:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 11955              		.loc 7 128 19 view .LVU3109
 11956              	.LBE7684:
 11957              	.LBE7683:
 11958              	.LBE7682:
 11959              	.LBE7681:
 11960              	.LBE7680:
 11961              	.LBE7675:
 11962              	.LBE7674:
 11963              	.LBB7685:
ARM GAS  /tmp/ccszdRNt.s 			page 521


 11964              	.LBI7685:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 11965              		.loc 5 150 14 is_stmt 1 view .LVU3110
 11966              	.LBB7686:
 11967              	.LBI7686:
 11968              		.loc 6 153 7 view .LVU3111
 11969              	.LBB7687:
 11970              	.LBI7687:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11971              		.loc 7 89 7 view .LVU3112
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11972              		.loc 7 89 7 is_stmt 0 view .LVU3113
 11973              	.LBE7687:
 11974              	.LBE7686:
 11975              	.LBE7685:
 11976              	.LBE7673:
 11977              	.LBB7688:
 11978              	.LBI7688:
 11979              		.loc 6 153 7 is_stmt 1 view .LVU3114
 11980              	.LBB7689:
 11981              	.LBI7689:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11982              		.loc 7 89 7 view .LVU3115
 11983              	.L237:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 11984              		.loc 7 89 7 is_stmt 0 view .LVU3116
 11985              	.LBE7689:
 11986              	.LBE7688:
 11987              	.LBE7981:
 11988              	.LBE7987:
 243:alohal/cli/cli.cpp ****     }
 244:alohal/cli/cli.cpp ****     return commands.size();
 11989              		.loc 2 244 5 is_stmt 1 view .LVU3117
 11990              	.LBB7988:
 11991              	.LBI7988:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 11992              		.loc 13 915 7 view .LVU3118
 11993              	.LBB7989:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11994              		.loc 13 916 40 is_stmt 0 view .LVU3119
 11995 030a F06E     		ldr	r0, [r6, #108]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11996              		.loc 13 916 66 view .LVU3120
 11997 030c B36E     		ldr	r3, [r6, #104]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 11998              		.loc 13 916 50 view .LVU3121
 11999 030e C01A     		subs	r0, r0, r3
 12000 0310 8010     		asrs	r0, r0, #2
 12001              	.LVL951:
 12002              	.L220:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 12003              		.loc 13 916 50 view .LVU3122
 12004              	.LBE7989:
 12005              	.LBE7988:
 245:alohal/cli/cli.cpp **** }
 12006              		.loc 2 245 1 view .LVU3123
 12007 0312 50B0     		add	sp, sp, #320
ARM GAS  /tmp/ccszdRNt.s 			page 522


 12008              		@ sp needed
 12009              	.LVL952:
 12010              		.loc 2 245 1 view .LVU3124
 12011 0314 80BC     		pop	{r7}
 12012 0316 B846     		mov	r8, r7
 12013 0318 F0BD     		pop	{r4, r5, r6, r7, pc}
 12014              	.L272:
 12015 031a C046     		.align	2
 12016              	.L271:
 12017 031c 00000000 		.word	.LC32
 12018 0320 00000000 		.word	vsnprintf
 12019 0324 04000000 		.word	.LC35
 12020 0328 FFFFFF3F 		.word	1073741823
 12021 032c 00000000 		.word	.LC9
 12022 0330 00000000 		.word	.LC0
 12023 0334 1C000000 		.word	.LC39
 12024 0338 19000000 		.word	.LC41+25
 12025              		.cfi_endproc
 12026              	.LFE3876:
 12028              		.section	.rodata._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE
 12029              		.align	2
 12030              	.LC44:
 12031 0000 4A756E20 		.ascii	"Jun 13 2022\000"
 12031      31332032 
 12031      30323200 
 12032              		.align	2
 12033              	.LC47:
 12034 000c 4275696C 		.ascii	"Build date: \000"
 12034      64206461 
 12034      74653A20 
 12034      00
 12035 0019 000000   		.align	2
 12036              	.LC50:
 12037 001c 2000     		.ascii	" \000"
 12038 001e 0000     		.align	2
 12039              	.LC52:
 12040 0020 31383A31 		.ascii	"18:17:31\000"
 12040      373A3331 
 12040      00
 12041 0029 000000   		.align	2
 12042              	.LC56:
 12043 002c 436F6D70 		.ascii	"Compiler: arm-none-eabi-g++ \015\012\000"
 12043      696C6572 
 12043      3A206172 
 12043      6D2D6E6F 
 12043      6E652D65 
 12044 004b 00       		.align	2
 12045              	.LC58:
 12046 004c 392E332E 		.ascii	"9.3.1 20200408 (release)\000"
 12046      31203230 
 12046      32303034 
 12046      30382028 
 12046      72656C65 
 12047 0065 000000   		.align	2
 12048              	.LC61:
 12049 0068 436F6D70 		.ascii	"Compiler version: \000"
 12049      696C6572 
ARM GAS  /tmp/ccszdRNt.s 			page 523


 12049      20766572 
 12049      73696F6E 
 12049      3A2000
 12050 007b 00       		.align	2
 12051              	.LC63:
 12052 007c 256C6400 		.ascii	"%ld\000"
 12053              		.align	2
 12054              	.LC66:
 12055 0080 432B2B20 		.ascii	"C++ standard: \000"
 12055      7374616E 
 12055      64617264 
 12055      3A2000
 12056              		.section	.text._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES
 12057              		.align	1
 12058              		.global	_ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 12059              		.syntax unified
 12060              		.code	16
 12061              		.thumb_func
 12062              		.fpu softvfp
 12064              	_ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:
 12065              	.LVL953:
 12066              	.LFB3877:
 246:alohal/cli/cli.cpp **** 
 247:alohal/cli/cli.cpp **** int CLI::Build_info(vector<string> args){
 12067              		.loc 2 247 41 is_stmt 1 view -0
 12068              		.cfi_startproc
 12069              		@ args = 0, pretend = 0, frame = 312
 12070              		@ frame_needed = 0, uses_anonymous_args = 0
 12071              		.loc 2 247 41 is_stmt 0 view .LVU3126
 12072 0000 70B5     		push	{r4, r5, r6, lr}
 12073              	.LCFI48:
 12074              		.cfi_def_cfa_offset 16
 12075              		.cfi_offset 4, -16
 12076              		.cfi_offset 5, -12
 12077              		.cfi_offset 6, -8
 12078              		.cfi_offset 14, -4
 12079 0002 D0B0     		sub	sp, sp, #320
 12080              	.LCFI49:
 12081              		.cfi_def_cfa_offset 336
 12082 0004 0500     		movs	r5, r0
 248:alohal/cli/cli.cpp ****     string output = "Build date: " + string(__DATE__) + " " + string(__TIME__) + "\r\n";
 12083              		.loc 2 248 5 is_stmt 1 view .LVU3127
 12084              	.LVL954:
 12085              	.LBB8709:
 12086              	.LBI8709:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 12087              		.loc 6 138 7 view .LVU3128
 12088              	.LBB8710:
 12089              	.LBI8710:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12090              		.loc 7 80 7 view .LVU3129
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12091              		.loc 7 80 7 is_stmt 0 view .LVU3130
 12092              	.LBE8710:
 12093              	.LBE8709:
 12094              	.LBB8711:
 12095              	.LBI8711:
ARM GAS  /tmp/ccszdRNt.s 			page 524


 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 12096              		.loc 5 525 7 is_stmt 1 view .LVU3131
 12097              	.LBB8712:
 12098              	.LBB8713:
 12099              	.LBB8714:
 12100              	.LBI8714:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12101              		.loc 5 190 7 view .LVU3132
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12102              		.loc 5 190 7 is_stmt 0 view .LVU3133
 12103              	.LBE8714:
 12104              	.LBB8715:
 12105              	.LBI8715:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 12106              		.loc 5 156 2 is_stmt 1 view .LVU3134
 12107              	.LBB8716:
 12108              	.LBB8717:
 12109              	.LBB8718:
 12110              	.LBI8718:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12111              		.loc 6 141 7 view .LVU3135
 12112              	.LBB8719:
 12113              	.LBI8719:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12114              		.loc 7 83 7 view .LVU3136
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12115              		.loc 7 83 7 is_stmt 0 view .LVU3137
 12116              	.LBE8719:
 12117              	.LBE8718:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12118              		.loc 5 157 35 view .LVU3138
 12119 0006 1CAB     		add	r3, sp, #112
 12120              	.LVL955:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12121              		.loc 5 157 35 view .LVU3139
 12122 0008 1A93     		str	r3, [sp, #104]
 12123              	.LVL956:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12124              		.loc 5 157 35 view .LVU3140
 12125              	.LBE8717:
 12126              	.LBE8716:
 12127              	.LBE8715:
 12128              	.LBB8720:
 12129              	.LBI8720:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 12130              		.loc 4 329 7 is_stmt 1 view .LVU3141
 12131              	.LBE8720:
 12132              	.LBE8713:
 12133              	.LBE8712:
 12134              	.LBE8711:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 12135              		.loc 4 332 2 view .LVU3142
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 12136              		.loc 4 335 2 view .LVU3143
 12137              	.LBB8727:
 12138              	.LBB8726:
 12139              	.LBB8725:
ARM GAS  /tmp/ccszdRNt.s 			page 525


 12140              	.LBB8721:
 12141              	.LBI8721:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 12142              		.loc 5 263 9 view .LVU3144
 12143              	.LBB8722:
 12144              	.LBB8723:
 12145              	.LBI8723:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 12146              		.loc 5 243 9 view .LVU3145
 12147              	.LBB8724:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12148              		.loc 5 247 11 is_stmt 0 view .LVU3146
 12149 000a D44A     		ldr	r2, .L332
 12150              	.LVL957:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12151              		.loc 5 247 11 view .LVU3147
 12152 000c 1100     		movs	r1, r2
 12153              	.LVL958:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12154              		.loc 5 247 11 view .LVU3148
 12155 000e 0B39     		subs	r1, r1, #11
 12156 0010 0023     		movs	r3, #0
 12157 0012 1AA8     		add	r0, sp, #104
 12158              	.LVL959:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12159              		.loc 5 247 11 view .LVU3149
 12160 0014 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 12161              	.LVL960:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12162              		.loc 5 247 11 view .LVU3150
 12163              	.LBE8724:
 12164              	.LBE8723:
 12165              	.LBE8722:
 12166              	.LBE8721:
 12167              	.LBE8725:
 12168              	.LBE8726:
 12169              	.LBE8727:
 12170              	.LBB8728:
 12171              	.LBI8728:
6109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
 12172              		.loc 5 6109 5 is_stmt 1 view .LVU3151
 12173              	.LBB8729:
 12174              	.LBI8729:
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12175              		.loc 5 1704 7 view .LVU3152
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12176              		.loc 5 1704 7 is_stmt 0 view .LVU3153
 12177              	.LBE8729:
 12178              	.LBE8728:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 12179              		.loc 4 332 2 is_stmt 1 view .LVU3154
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 12180              		.loc 4 335 2 view .LVU3155
 12181              	.LBB8776:
 12182              	.LBB8737:
 12183              	.LBB8730:
 12184              	.LBI8730:
ARM GAS  /tmp/ccszdRNt.s 			page 526


1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
 12185              		.loc 5 1936 7 view .LVU3156
 12186              	.LBB8731:
 12187              	.LBB8732:
 12188              	.LBI8732:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12189              		.loc 5 310 7 view .LVU3157
 12190              	.LBB8733:
 12191              	.LBI8733:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12192              		.loc 5 930 7 view .LVU3158
 12193              	.LBB8734:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12194              		.loc 5 931 16 is_stmt 0 view .LVU3159
 12195 0018 1B9A     		ldr	r2, [sp, #108]
 12196              	.LVL961:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12197              		.loc 5 931 16 view .LVU3160
 12198              	.LBE8734:
 12199              	.LBE8733:
 12200              	.LBE8732:
 12201              	.LBB8735:
 12202              	.LBI8735:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12203              		.loc 5 329 7 is_stmt 1 view .LVU3161
 12204              	.LBB8736:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12205              		.loc 5 332 19 is_stmt 0 view .LVU3162
 12206 001a 002A     		cmp	r2, #0
 12207 001c 00D0     		beq	.L274
 12208 001e 0022     		movs	r2, #0
 12209              	.LVL962:
 12210              	.L274:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12211              		.loc 5 332 19 view .LVU3163
 12212              	.LBE8736:
 12213              	.LBE8735:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12214              		.loc 5 1941 38 view .LVU3164
 12215 0020 0C23     		movs	r3, #12
 12216 0022 0093     		str	r3, [sp]
 12217 0024 CE4B     		ldr	r3, .L332+4
 12218 0026 0021     		movs	r1, #0
 12219 0028 1AA8     		add	r0, sp, #104
 12220              	.LVL963:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12221              		.loc 5 1941 38 view .LVU3165
 12222 002a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 12223              	.LVL964:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12224              		.loc 5 1941 38 view .LVU3166
 12225 002e 0400     		movs	r4, r0
 12226              	.LVL965:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12227              		.loc 5 1941 38 view .LVU3167
 12228              	.LBE8731:
 12229              	.LBE8730:
ARM GAS  /tmp/ccszdRNt.s 			page 527


 12230              	.LBE8737:
 12231              	.LBB8738:
 12232              	.LBI8738:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 12233              		.loc 5 552 7 is_stmt 1 view .LVU3168
 12234              	.LBB8739:
 12235              	.LBB8740:
 12236              	.LBB8741:
 12237              	.LBI8741:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12238              		.loc 5 190 7 view .LVU3169
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12239              		.loc 5 190 7 is_stmt 0 view .LVU3170
 12240              	.LBE8741:
 12241              	.LBB8742:
 12242              	.LBI8742:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12243              		.loc 5 286 7 is_stmt 1 view .LVU3171
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12244              		.loc 5 286 7 is_stmt 0 view .LVU3172
 12245              	.LBE8742:
 12246              	.LBB8743:
 12247              	.LBI8743:
 12248              		.loc 8 99 5 is_stmt 1 view .LVU3173
 12249              		.loc 8 99 5 is_stmt 0 view .LVU3174
 12250              	.LBE8743:
 12251              	.LBB8744:
 12252              	.LBI8744:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12253              		.loc 5 159 2 is_stmt 1 view .LVU3175
 12254              	.LBB8745:
 12255              	.LBB8746:
 12256              	.LBB8747:
 12257              	.LBI8747:
 12258              		.loc 8 99 5 view .LVU3176
 12259              		.loc 8 99 5 is_stmt 0 view .LVU3177
 12260              	.LBE8747:
 12261              	.LBB8748:
 12262              	.LBI8748:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12263              		.loc 6 141 7 is_stmt 1 view .LVU3178
 12264              	.LBB8749:
 12265              	.LBI8749:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12266              		.loc 7 83 7 view .LVU3179
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12267              		.loc 7 83 7 is_stmt 0 view .LVU3180
 12268              	.LBE8749:
 12269              	.LBE8748:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12270              		.loc 5 160 46 view .LVU3181
 12271 0030 16AB     		add	r3, sp, #88
 12272              	.LVL966:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12273              		.loc 5 160 46 view .LVU3182
 12274 0032 1493     		str	r3, [sp, #80]
 12275              	.LVL967:
ARM GAS  /tmp/ccszdRNt.s 			page 528


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12276              		.loc 5 160 46 view .LVU3183
 12277              	.LBE8746:
 12278              	.LBE8745:
 12279              	.LBE8744:
 12280              	.LBB8750:
 12281              	.LBI8750:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12282              		.loc 5 221 7 is_stmt 1 view .LVU3184
 12283              	.LBB8751:
 12284              	.LBI8751:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12285              		.loc 5 186 7 view .LVU3185
 12286              	.LBB8752:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12287              		.loc 5 187 28 is_stmt 0 view .LVU3186
 12288 0034 0368     		ldr	r3, [r0]
 12289              	.LVL968:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12290              		.loc 5 187 28 view .LVU3187
 12291              	.LBE8752:
 12292              	.LBE8751:
 12293              	.LBB8753:
 12294              	.LBI8753:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12295              		.loc 5 200 7 is_stmt 1 view .LVU3188
 12296              	.LBB8754:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12297              		.loc 5 203 57 is_stmt 0 view .LVU3189
 12298 0036 0600     		movs	r6, r0
 12299 0038 0836     		adds	r6, r6, #8
 12300              	.LVL969:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12301              		.loc 5 203 57 view .LVU3190
 12302              	.LBE8754:
 12303              	.LBE8753:
 12304              	.LBE8750:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 12305              		.loc 5 555 2 view .LVU3191
 12306 003a B342     		cmp	r3, r6
 12307 003c 00D1     		bne	.LCB13996
 12308 003e 6EE1     		b	.L318	@long jump
 12309              	.LCB13996:
 12310              	.LVL970:
 12311              	.LBB8755:
 12312              	.LBI8755:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12313              		.loc 5 186 7 is_stmt 1 view .LVU3192
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12314              		.loc 5 186 7 is_stmt 0 view .LVU3193
 12315              	.LBE8755:
 12316              	.LBB8756:
 12317              	.LBI8756:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 12318              		.loc 5 178 7 is_stmt 1 view .LVU3194
 12319              	.LBB8757:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 529


 12320              		.loc 5 179 9 is_stmt 0 view .LVU3195
 12321 0040 1493     		str	r3, [sp, #80]
 12322              	.LVL971:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12323              		.loc 5 179 9 view .LVU3196
 12324              	.LBE8757:
 12325              	.LBE8756:
 12326              	.LBB8758:
 12327              	.LBI8758:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12328              		.loc 5 210 7 is_stmt 1 view .LVU3197
 12329              	.LBB8759:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12330              		.loc 5 211 9 is_stmt 0 view .LVU3198
 12331 0042 8368     		ldr	r3, [r0, #8]
 12332 0044 1693     		str	r3, [sp, #88]
 12333              	.LVL972:
 12334              	.L276:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12335              		.loc 5 211 9 view .LVU3199
 12336              	.LBE8759:
 12337              	.LBE8758:
 12338              	.LBB8760:
 12339              	.LBI8760:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12340              		.loc 5 936 7 is_stmt 1 view .LVU3200
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12341              		.loc 5 936 7 is_stmt 0 view .LVU3201
 12342              	.LBE8760:
 12343              	.LBB8761:
 12344              	.LBI8761:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 12345              		.loc 5 182 7 is_stmt 1 view .LVU3202
 12346              	.LBB8762:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12347              		.loc 5 183 9 is_stmt 0 view .LVU3203
 12348 0046 6368     		ldr	r3, [r4, #4]
 12349 0048 1593     		str	r3, [sp, #84]
 12350              	.LVL973:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12351              		.loc 5 183 9 view .LVU3204
 12352              	.LBE8762:
 12353              	.LBE8761:
 12354              	.LBB8763:
 12355              	.LBI8763:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12356              		.loc 5 190 7 is_stmt 1 view .LVU3205
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12357              		.loc 5 190 7 is_stmt 0 view .LVU3206
 12358              	.LBE8763:
 12359              	.LBB8764:
 12360              	.LBI8764:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 12361              		.loc 5 178 7 is_stmt 1 view .LVU3207
 12362              	.LBB8765:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12363              		.loc 5 179 9 is_stmt 0 view .LVU3208
ARM GAS  /tmp/ccszdRNt.s 			page 530


 12364 004a 2660     		str	r6, [r4]
 12365              	.LVL974:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12366              		.loc 5 179 9 view .LVU3209
 12367              	.LBE8765:
 12368              	.LBE8764:
 12369              	.LBB8766:
 12370              	.LBI8766:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12371              		.loc 5 214 7 is_stmt 1 view .LVU3210
 12372              	.LBB8767:
 12373              	.LBI8767:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 12374              		.loc 5 182 7 view .LVU3211
 12375              	.LBB8768:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12376              		.loc 5 183 9 is_stmt 0 view .LVU3212
 12377 004c 0023     		movs	r3, #0
 12378 004e 6360     		str	r3, [r4, #4]
 12379              	.LVL975:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12380              		.loc 5 183 9 view .LVU3213
 12381              	.LBE8768:
 12382              	.LBE8767:
 12383              	.LBB8769:
 12384              	.LBI8769:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 12385              		.loc 4 299 7 is_stmt 1 view .LVU3214
 12386              	.LBB8770:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12387              		.loc 4 300 9 view .LVU3215
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12388              		.loc 4 300 14 is_stmt 0 view .LVU3216
 12389 0050 2372     		strb	r3, [r4, #8]
 12390              	.LVL976:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12391              		.loc 4 300 14 view .LVU3217
 12392              	.LBE8770:
 12393              	.LBE8769:
 12394              	.LBE8766:
 12395              	.LBE8740:
 12396              	.LBE8739:
 12397              	.LBE8738:
 12398              	.LBE8776:
 12399              	.LBB8777:
 12400              	.LBI8777:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 12401              		.loc 5 6121 5 is_stmt 1 view .LVU3218
 12402              	.LBB8778:
 12403              	.LBI8778:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12404              		.loc 5 1263 7 view .LVU3219
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12405              		.loc 5 1263 7 is_stmt 0 view .LVU3220
 12406              	.LBE8778:
 12407              	.LBE8777:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
ARM GAS  /tmp/ccszdRNt.s 			page 531


 12408              		.loc 4 332 2 is_stmt 1 view .LVU3221
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 12409              		.loc 4 335 2 view .LVU3222
 12410              	.LBB8827:
 12411              	.LBB8787:
 12412              	.LBB8779:
 12413              	.LBB8780:
 12414              	.LBI8780:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12415              		.loc 5 320 7 view .LVU3223
 12416              	.LBB8781:
 12417              	.LBB8782:
 12418              	.LBI8782:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12419              		.loc 5 930 7 view .LVU3224
 12420              	.LBB8783:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12421              		.loc 5 931 16 is_stmt 0 view .LVU3225
 12422 0052 159A     		ldr	r2, [sp, #84]
 12423              	.LVL977:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12424              		.loc 5 931 16 view .LVU3226
 12425              	.LBE8783:
 12426              	.LBE8782:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 12427              		.loc 5 322 2 view .LVU3227
 12428 0054 C34B     		ldr	r3, .L332+8
 12429 0056 9A42     		cmp	r2, r3
 12430 0058 00D1     		bne	.LCB14133
 12431 005a 66E1     		b	.L319	@long jump
 12432              	.LCB14133:
 12433              	.LVL978:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 12434              		.loc 5 322 2 view .LVU3228
 12435              	.LBE8781:
 12436              	.LBE8780:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12437              		.loc 5 1268 27 view .LVU3229
 12438 005c 0122     		movs	r2, #1
 12439 005e C249     		ldr	r1, .L332+12
 12440 0060 14A8     		add	r0, sp, #80
 12441              	.LVL979:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12442              		.loc 5 1268 27 view .LVU3230
 12443 0062 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 12444              	.LVL980:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12445              		.loc 5 1268 27 view .LVU3231
 12446 0066 0400     		movs	r4, r0
 12447              	.LVL981:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 12448              		.loc 5 1268 27 view .LVU3232
 12449              	.LBE8779:
 12450              	.LBE8787:
 12451              	.LBB8788:
 12452              	.LBI8788:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
ARM GAS  /tmp/ccszdRNt.s 			page 532


 12453              		.loc 5 552 7 is_stmt 1 view .LVU3233
 12454              	.LBB8789:
 12455              	.LBB8790:
 12456              	.LBB8791:
 12457              	.LBI8791:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12458              		.loc 5 190 7 view .LVU3234
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12459              		.loc 5 190 7 is_stmt 0 view .LVU3235
 12460              	.LBE8791:
 12461              	.LBB8792:
 12462              	.LBI8792:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12463              		.loc 5 286 7 is_stmt 1 view .LVU3236
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12464              		.loc 5 286 7 is_stmt 0 view .LVU3237
 12465              	.LBE8792:
 12466              	.LBB8793:
 12467              	.LBI8793:
 12468              		.loc 8 99 5 is_stmt 1 view .LVU3238
 12469              		.loc 8 99 5 is_stmt 0 view .LVU3239
 12470              	.LBE8793:
 12471              	.LBB8794:
 12472              	.LBI8794:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12473              		.loc 5 159 2 is_stmt 1 view .LVU3240
 12474              	.LBB8795:
 12475              	.LBB8796:
 12476              	.LBB8797:
 12477              	.LBI8797:
 12478              		.loc 8 99 5 view .LVU3241
 12479              		.loc 8 99 5 is_stmt 0 view .LVU3242
 12480              	.LBE8797:
 12481              	.LBB8798:
 12482              	.LBI8798:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12483              		.loc 6 141 7 is_stmt 1 view .LVU3243
 12484              	.LBB8799:
 12485              	.LBI8799:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12486              		.loc 7 83 7 view .LVU3244
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12487              		.loc 7 83 7 is_stmt 0 view .LVU3245
 12488              	.LBE8799:
 12489              	.LBE8798:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12490              		.loc 5 160 46 view .LVU3246
 12491 0068 10AB     		add	r3, sp, #64
 12492              	.LVL982:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12493              		.loc 5 160 46 view .LVU3247
 12494 006a 0E93     		str	r3, [sp, #56]
 12495              	.LVL983:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12496              		.loc 5 160 46 view .LVU3248
 12497              	.LBE8796:
 12498              	.LBE8795:
ARM GAS  /tmp/ccszdRNt.s 			page 533


 12499              	.LBE8794:
 12500              	.LBB8800:
 12501              	.LBI8800:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12502              		.loc 5 221 7 is_stmt 1 view .LVU3249
 12503              	.LBB8801:
 12504              	.LBI8801:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12505              		.loc 5 186 7 view .LVU3250
 12506              	.LBB8802:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12507              		.loc 5 187 28 is_stmt 0 view .LVU3251
 12508 006c 0368     		ldr	r3, [r0]
 12509              	.LVL984:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12510              		.loc 5 187 28 view .LVU3252
 12511              	.LBE8802:
 12512              	.LBE8801:
 12513              	.LBB8803:
 12514              	.LBI8803:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12515              		.loc 5 200 7 is_stmt 1 view .LVU3253
 12516              	.LBB8804:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12517              		.loc 5 203 57 is_stmt 0 view .LVU3254
 12518 006e 0600     		movs	r6, r0
 12519 0070 0836     		adds	r6, r6, #8
 12520              	.LVL985:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12521              		.loc 5 203 57 view .LVU3255
 12522              	.LBE8804:
 12523              	.LBE8803:
 12524              	.LBE8800:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 12525              		.loc 5 555 2 view .LVU3256
 12526 0072 B342     		cmp	r3, r6
 12527 0074 00D1     		bne	.LCB14232
 12528 0076 5BE1     		b	.L320	@long jump
 12529              	.LCB14232:
 12530              	.LVL986:
 12531              	.LBB8805:
 12532              	.LBI8805:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12533              		.loc 5 186 7 is_stmt 1 view .LVU3257
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12534              		.loc 5 186 7 is_stmt 0 view .LVU3258
 12535              	.LBE8805:
 12536              	.LBB8806:
 12537              	.LBI8806:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 12538              		.loc 5 178 7 is_stmt 1 view .LVU3259
 12539              	.LBB8807:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12540              		.loc 5 179 9 is_stmt 0 view .LVU3260
 12541 0078 0E93     		str	r3, [sp, #56]
 12542              	.LVL987:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 534


 12543              		.loc 5 179 9 view .LVU3261
 12544              	.LBE8807:
 12545              	.LBE8806:
 12546              	.LBB8808:
 12547              	.LBI8808:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12548              		.loc 5 210 7 is_stmt 1 view .LVU3262
 12549              	.LBB8809:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12550              		.loc 5 211 9 is_stmt 0 view .LVU3263
 12551 007a 8368     		ldr	r3, [r0, #8]
 12552 007c 1093     		str	r3, [sp, #64]
 12553              	.LVL988:
 12554              	.L279:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12555              		.loc 5 211 9 view .LVU3264
 12556              	.LBE8809:
 12557              	.LBE8808:
 12558              	.LBB8810:
 12559              	.LBI8810:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12560              		.loc 5 936 7 is_stmt 1 view .LVU3265
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12561              		.loc 5 936 7 is_stmt 0 view .LVU3266
 12562              	.LBE8810:
 12563              	.LBB8811:
 12564              	.LBI8811:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 12565              		.loc 5 182 7 is_stmt 1 view .LVU3267
 12566              	.LBB8812:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12567              		.loc 5 183 9 is_stmt 0 view .LVU3268
 12568 007e 6368     		ldr	r3, [r4, #4]
 12569 0080 0F93     		str	r3, [sp, #60]
 12570              	.LVL989:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12571              		.loc 5 183 9 view .LVU3269
 12572              	.LBE8812:
 12573              	.LBE8811:
 12574              	.LBB8813:
 12575              	.LBI8813:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12576              		.loc 5 190 7 is_stmt 1 view .LVU3270
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12577              		.loc 5 190 7 is_stmt 0 view .LVU3271
 12578              	.LBE8813:
 12579              	.LBB8814:
 12580              	.LBI8814:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 12581              		.loc 5 178 7 is_stmt 1 view .LVU3272
 12582              	.LBB8815:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12583              		.loc 5 179 9 is_stmt 0 view .LVU3273
 12584 0082 2660     		str	r6, [r4]
 12585              	.LVL990:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12586              		.loc 5 179 9 view .LVU3274
ARM GAS  /tmp/ccszdRNt.s 			page 535


 12587              	.LBE8815:
 12588              	.LBE8814:
 12589              	.LBB8816:
 12590              	.LBI8816:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12591              		.loc 5 214 7 is_stmt 1 view .LVU3275
 12592              	.LBB8817:
 12593              	.LBI8817:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 12594              		.loc 5 182 7 view .LVU3276
 12595              	.LBB8818:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12596              		.loc 5 183 9 is_stmt 0 view .LVU3277
 12597 0084 0023     		movs	r3, #0
 12598 0086 6360     		str	r3, [r4, #4]
 12599              	.LVL991:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12600              		.loc 5 183 9 view .LVU3278
 12601              	.LBE8818:
 12602              	.LBE8817:
 12603              	.LBB8819:
 12604              	.LBI8819:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 12605              		.loc 4 299 7 is_stmt 1 view .LVU3279
 12606              	.LBB8820:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12607              		.loc 4 300 9 view .LVU3280
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12608              		.loc 4 300 14 is_stmt 0 view .LVU3281
 12609 0088 2372     		strb	r3, [r4, #8]
 12610              	.LVL992:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12611              		.loc 4 300 14 view .LVU3282
 12612              	.LBE8820:
 12613              	.LBE8819:
 12614              	.LBE8816:
 12615              	.LBE8790:
 12616              	.LBE8789:
 12617              	.LBE8788:
 12618              	.LBE8827:
 12619              	.LBB8828:
 12620              	.LBI8828:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 12621              		.loc 6 138 7 is_stmt 1 view .LVU3283
 12622              	.LBB8829:
 12623              	.LBI8829:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12624              		.loc 7 80 7 view .LVU3284
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12625              		.loc 7 80 7 is_stmt 0 view .LVU3285
 12626              	.LBE8829:
 12627              	.LBE8828:
 12628              	.LBB8830:
 12629              	.LBI8830:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 12630              		.loc 5 525 7 is_stmt 1 view .LVU3286
 12631              	.LBB8831:
ARM GAS  /tmp/ccszdRNt.s 			page 536


 12632              	.LBB8832:
 12633              	.LBB8833:
 12634              	.LBI8833:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12635              		.loc 5 190 7 view .LVU3287
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12636              		.loc 5 190 7 is_stmt 0 view .LVU3288
 12637              	.LBE8833:
 12638              	.LBB8834:
 12639              	.LBI8834:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 12640              		.loc 5 156 2 is_stmt 1 view .LVU3289
 12641              	.LBB8835:
 12642              	.LBB8836:
 12643              	.LBB8837:
 12644              	.LBI8837:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12645              		.loc 6 141 7 view .LVU3290
 12646              	.LBB8838:
 12647              	.LBI8838:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12648              		.loc 7 83 7 view .LVU3291
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12649              		.loc 7 83 7 is_stmt 0 view .LVU3292
 12650              	.LBE8838:
 12651              	.LBE8837:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12652              		.loc 5 157 35 view .LVU3293
 12653 008a 22AB     		add	r3, sp, #136
 12654              	.LVL993:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12655              		.loc 5 157 35 view .LVU3294
 12656 008c 2093     		str	r3, [sp, #128]
 12657              	.LVL994:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12658              		.loc 5 157 35 view .LVU3295
 12659              	.LBE8836:
 12660              	.LBE8835:
 12661              	.LBE8834:
 12662              	.LBB8839:
 12663              	.LBI8839:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 12664              		.loc 4 329 7 is_stmt 1 view .LVU3296
 12665              	.LBE8839:
 12666              	.LBE8832:
 12667              	.LBE8831:
 12668              	.LBE8830:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 12669              		.loc 4 332 2 view .LVU3297
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 12670              		.loc 4 335 2 view .LVU3298
 12671              	.LBB8846:
 12672              	.LBB8845:
 12673              	.LBB8844:
 12674              	.LBB8840:
 12675              	.LBI8840:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
ARM GAS  /tmp/ccszdRNt.s 			page 537


 12676              		.loc 5 263 9 view .LVU3299
 12677              	.LBB8841:
 12678              	.LBB8842:
 12679              	.LBI8842:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 12680              		.loc 5 243 9 view .LVU3300
 12681              	.LBB8843:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12682              		.loc 5 247 11 is_stmt 0 view .LVU3301
 12683 008e B74A     		ldr	r2, .L332+16
 12684              	.LVL995:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12685              		.loc 5 247 11 view .LVU3302
 12686 0090 1100     		movs	r1, r2
 12687 0092 0839     		subs	r1, r1, #8
 12688 0094 0023     		movs	r3, #0
 12689 0096 20A8     		add	r0, sp, #128
 12690              	.LVL996:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12691              		.loc 5 247 11 view .LVU3303
 12692 0098 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 12693              	.LVL997:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 12694              		.loc 5 247 11 view .LVU3304
 12695              	.LBE8843:
 12696              	.LBE8842:
 12697              	.LBE8841:
 12698              	.LBE8840:
 12699              	.LBE8844:
 12700              	.LBE8845:
 12701              	.LBE8846:
 12702              	.LBB8847:
 12703              	.LBI8847:
6097:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
 12704              		.loc 5 6097 5 is_stmt 1 view .LVU3305
 12705              	.LBB8848:
 12706              	.LBB8849:
 12707              	.LBI8849:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12708              		.loc 5 930 7 view .LVU3306
 12709              	.LBB8850:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12710              		.loc 5 931 16 is_stmt 0 view .LVU3307
 12711 009c 0F98     		ldr	r0, [sp, #60]
 12712              	.LVL998:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12713              		.loc 5 931 16 view .LVU3308
 12714              	.LBE8850:
 12715              	.LBE8849:
 12716              	.LBB8851:
 12717              	.LBI8851:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12718              		.loc 5 930 7 is_stmt 1 view .LVU3309
 12719              	.LBB8852:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12720              		.loc 5 931 16 is_stmt 0 view .LVU3310
 12721 009e 219A     		ldr	r2, [sp, #132]
ARM GAS  /tmp/ccszdRNt.s 			page 538


 12722              	.LVL999:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12723              		.loc 5 931 16 view .LVU3311
 12724              	.LBE8852:
 12725              	.LBE8851:
6100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       const bool __cond = (__size > __lhs.capacity()
 12726              		.loc 5 6100 18 view .LVU3312
 12727 00a0 8118     		adds	r1, r0, r2
 12728              	.LVL1000:
 12729              	.LBB8853:
 12730              	.LBI8853:
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12731              		.loc 5 993 7 is_stmt 1 view .LVU3313
 12732              	.LBB8854:
 12733              	.LBB8855:
 12734              	.LBI8855:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12735              		.loc 5 221 7 view .LVU3314
 12736              	.LBB8856:
 12737              	.LBI8856:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12738              		.loc 5 186 7 view .LVU3315
 12739              	.LBB8857:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12740              		.loc 5 187 28 is_stmt 0 view .LVU3316
 12741 00a2 0E9B     		ldr	r3, [sp, #56]
 12742              	.LVL1001:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12743              		.loc 5 187 28 view .LVU3317
 12744              	.LBE8857:
 12745              	.LBE8856:
 12746              	.LBB8858:
 12747              	.LBI8858:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12748              		.loc 5 200 7 is_stmt 1 view .LVU3318
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12749              		.loc 5 200 7 is_stmt 0 view .LVU3319
 12750              	.LBE8858:
 12751              	.LBE8855:
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 12752              		.loc 5 995 23 view .LVU3320
 12753 00a4 10AC     		add	r4, sp, #64
 12754 00a6 A342     		cmp	r3, r4
 12755 00a8 00D1     		bne	.LCB14492
 12756 00aa 47E1     		b	.L316	@long jump
 12757              	.LCB14492:
 12758 00ac 109C     		ldr	r4, [sp, #64]
 12759              	.L280:
 12760              	.LVL1002:
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 12761              		.loc 5 995 23 view .LVU3321
 12762              	.LBE8854:
 12763              	.LBE8853:
6102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
 12764              		.loc 5 6102 7 view .LVU3322
 12765 00ae A142     		cmp	r1, r4
 12766 00b0 08D9     		bls	.L281
ARM GAS  /tmp/ccszdRNt.s 			page 539


 12767              	.LVL1003:
 12768              	.LBB8860:
 12769              	.LBI8860:
 993:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12770              		.loc 5 993 7 is_stmt 1 view .LVU3323
 12771              	.LBB8861:
 12772              	.LBB8862:
 12773              	.LBI8862:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12774              		.loc 5 221 7 view .LVU3324
 12775              	.LBB8863:
 12776              	.LBI8863:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12777              		.loc 5 186 7 view .LVU3325
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12778              		.loc 5 186 7 is_stmt 0 view .LVU3326
 12779              	.LBE8863:
 12780              	.LBB8864:
 12781              	.LBI8864:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12782              		.loc 5 200 7 is_stmt 1 view .LVU3327
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12783              		.loc 5 200 7 is_stmt 0 view .LVU3328
 12784              	.LBE8864:
 12785              	.LBE8862:
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 12786              		.loc 5 995 23 view .LVU3329
 12787 00b2 22AC     		add	r4, sp, #136
 12788 00b4 209E     		ldr	r6, [sp, #128]
 12789 00b6 A642     		cmp	r6, r4
 12790 00b8 00D1     		bne	.LCB14525
 12791 00ba 41E1     		b	.L317	@long jump
 12792              	.LCB14525:
 12793 00bc 229C     		ldr	r4, [sp, #136]
 12794              	.L282:
 12795              	.LVL1004:
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 12796              		.loc 5 995 23 view .LVU3330
 12797              	.LBE8861:
 12798              	.LBE8860:
6102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       return __cond ? std::move(__rhs.insert(0, __lhs))
 12799              		.loc 5 6102 7 view .LVU3331
 12800 00be A142     		cmp	r1, r4
 12801 00c0 00D8     		bhi	.LCB14534
 12802 00c2 3FE1     		b	.L321	@long jump
 12803              	.LCB14534:
 12804              	.L281:
 12805              	.LVL1005:
 12806              	.LBB8866:
 12807              	.LBI8866:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 12808              		.loc 5 1221 7 is_stmt 1 view .LVU3332
 12809              	.LBB8867:
 12810              	.LBB8868:
 12811              	.LBI8868:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12812              		.loc 5 186 7 view .LVU3333
ARM GAS  /tmp/ccszdRNt.s 			page 540


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12813              		.loc 5 186 7 is_stmt 0 view .LVU3334
 12814              	.LBE8868:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12815              		.loc 5 1222 55 view .LVU3335
 12816 00c4 2099     		ldr	r1, [sp, #128]
 12817              	.LVL1006:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12818              		.loc 5 1222 55 view .LVU3336
 12819 00c6 0EA8     		add	r0, sp, #56
 12820              	.LVL1007:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12821              		.loc 5 1222 55 view .LVU3337
 12822 00c8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 12823              	.LVL1008:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12824              		.loc 5 1222 55 view .LVU3338
 12825 00cc 0400     		movs	r4, r0
 12826              	.LVL1009:
 12827              	.L284:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12828              		.loc 5 1222 55 view .LVU3339
 12829              	.LBE8867:
 12830              	.LBE8866:
 12831              	.LBB8869:
 12832              	.LBI8869:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 12833              		.loc 5 552 7 is_stmt 1 view .LVU3340
 12834              	.LBB8870:
 12835              	.LBB8871:
 12836              	.LBB8872:
 12837              	.LBI8872:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12838              		.loc 5 190 7 view .LVU3341
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12839              		.loc 5 190 7 is_stmt 0 view .LVU3342
 12840              	.LBE8872:
 12841              	.LBB8873:
 12842              	.LBI8873:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12843              		.loc 5 286 7 is_stmt 1 view .LVU3343
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 12844              		.loc 5 286 7 is_stmt 0 view .LVU3344
 12845              	.LBE8873:
 12846              	.LBB8874:
 12847              	.LBI8874:
 12848              		.loc 8 99 5 is_stmt 1 view .LVU3345
 12849              		.loc 8 99 5 is_stmt 0 view .LVU3346
 12850              	.LBE8874:
 12851              	.LBB8875:
 12852              	.LBI8875:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 12853              		.loc 5 159 2 is_stmt 1 view .LVU3347
 12854              	.LBB8876:
 12855              	.LBB8877:
 12856              	.LBB8878:
 12857              	.LBI8878:
ARM GAS  /tmp/ccszdRNt.s 			page 541


 12858              		.loc 8 99 5 view .LVU3348
 12859              		.loc 8 99 5 is_stmt 0 view .LVU3349
 12860              	.LBE8878:
 12861              	.LBB8879:
 12862              	.LBI8879:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 12863              		.loc 6 141 7 is_stmt 1 view .LVU3350
 12864              	.LBB8880:
 12865              	.LBI8880:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12866              		.loc 7 83 7 view .LVU3351
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 12867              		.loc 7 83 7 is_stmt 0 view .LVU3352
 12868              	.LBE8880:
 12869              	.LBE8879:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12870              		.loc 5 160 46 view .LVU3353
 12871 00ce 0AAB     		add	r3, sp, #40
 12872              	.LVL1010:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12873              		.loc 5 160 46 view .LVU3354
 12874 00d0 0893     		str	r3, [sp, #32]
 12875              	.LVL1011:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 12876              		.loc 5 160 46 view .LVU3355
 12877              	.LBE8877:
 12878              	.LBE8876:
 12879              	.LBE8875:
 12880              	.LBB8881:
 12881              	.LBI8881:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 12882              		.loc 5 221 7 is_stmt 1 view .LVU3356
 12883              	.LBB8882:
 12884              	.LBI8882:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12885              		.loc 5 186 7 view .LVU3357
 12886              	.LBB8883:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12887              		.loc 5 187 28 is_stmt 0 view .LVU3358
 12888 00d2 2368     		ldr	r3, [r4]
 12889              	.LVL1012:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12890              		.loc 5 187 28 view .LVU3359
 12891              	.LBE8883:
 12892              	.LBE8882:
 12893              	.LBB8884:
 12894              	.LBI8884:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12895              		.loc 5 200 7 is_stmt 1 view .LVU3360
 12896              	.LBB8885:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12897              		.loc 5 203 57 is_stmt 0 view .LVU3361
 12898 00d4 2600     		movs	r6, r4
 12899 00d6 0836     		adds	r6, r6, #8
 12900              	.LVL1013:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 12901              		.loc 5 203 57 view .LVU3362
ARM GAS  /tmp/ccszdRNt.s 			page 542


 12902              	.LBE8885:
 12903              	.LBE8884:
 12904              	.LBE8881:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 12905              		.loc 5 555 2 view .LVU3363
 12906 00d8 B342     		cmp	r3, r6
 12907 00da 00D1     		bne	.LCB14644
 12908 00dc 5AE1     		b	.L322	@long jump
 12909              	.LCB14644:
 12910              	.LVL1014:
 12911              	.LBB8886:
 12912              	.LBI8886:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12913              		.loc 5 186 7 is_stmt 1 view .LVU3364
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 12914              		.loc 5 186 7 is_stmt 0 view .LVU3365
 12915              	.LBE8886:
 12916              	.LBB8887:
 12917              	.LBI8887:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 12918              		.loc 5 178 7 is_stmt 1 view .LVU3366
 12919              	.LBB8888:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12920              		.loc 5 179 9 is_stmt 0 view .LVU3367
 12921 00de 0893     		str	r3, [sp, #32]
 12922              	.LVL1015:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12923              		.loc 5 179 9 view .LVU3368
 12924              	.LBE8888:
 12925              	.LBE8887:
 12926              	.LBB8889:
 12927              	.LBI8889:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 12928              		.loc 5 210 7 is_stmt 1 view .LVU3369
 12929              	.LBB8890:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12930              		.loc 5 211 9 is_stmt 0 view .LVU3370
 12931 00e0 A368     		ldr	r3, [r4, #8]
 12932 00e2 0A93     		str	r3, [sp, #40]
 12933              	.LVL1016:
 12934              	.L286:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12935              		.loc 5 211 9 view .LVU3371
 12936              	.LBE8890:
 12937              	.LBE8889:
 12938              	.LBB8891:
 12939              	.LBI8891:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12940              		.loc 5 936 7 is_stmt 1 view .LVU3372
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 12941              		.loc 5 936 7 is_stmt 0 view .LVU3373
 12942              	.LBE8891:
 12943              	.LBB8892:
 12944              	.LBI8892:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 12945              		.loc 5 182 7 is_stmt 1 view .LVU3374
 12946              	.LBB8893:
ARM GAS  /tmp/ccszdRNt.s 			page 543


 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12947              		.loc 5 183 9 is_stmt 0 view .LVU3375
 12948 00e4 6368     		ldr	r3, [r4, #4]
 12949 00e6 0993     		str	r3, [sp, #36]
 12950              	.LVL1017:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12951              		.loc 5 183 9 view .LVU3376
 12952              	.LBE8893:
 12953              	.LBE8892:
 12954              	.LBB8894:
 12955              	.LBI8894:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12956              		.loc 5 190 7 is_stmt 1 view .LVU3377
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12957              		.loc 5 190 7 is_stmt 0 view .LVU3378
 12958              	.LBE8894:
 12959              	.LBB8895:
 12960              	.LBI8895:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 12961              		.loc 5 178 7 is_stmt 1 view .LVU3379
 12962              	.LBB8896:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12963              		.loc 5 179 9 is_stmt 0 view .LVU3380
 12964 00e8 2660     		str	r6, [r4]
 12965              	.LVL1018:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12966              		.loc 5 179 9 view .LVU3381
 12967              	.LBE8896:
 12968              	.LBE8895:
 12969              	.LBB8897:
 12970              	.LBI8897:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 12971              		.loc 5 214 7 is_stmt 1 view .LVU3382
 12972              	.LBB8898:
 12973              	.LBI8898:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 12974              		.loc 5 182 7 view .LVU3383
 12975              	.LBB8899:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12976              		.loc 5 183 9 is_stmt 0 view .LVU3384
 12977 00ea 0023     		movs	r3, #0
 12978 00ec 6360     		str	r3, [r4, #4]
 12979              	.LVL1019:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 12980              		.loc 5 183 9 view .LVU3385
 12981              	.LBE8899:
 12982              	.LBE8898:
 12983              	.LBB8900:
 12984              	.LBI8900:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 12985              		.loc 4 299 7 is_stmt 1 view .LVU3386
 12986              	.LBB8901:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12987              		.loc 4 300 9 view .LVU3387
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12988              		.loc 4 300 14 is_stmt 0 view .LVU3388
 12989 00ee 3370     		strb	r3, [r6]
ARM GAS  /tmp/ccszdRNt.s 			page 544


 12990              	.LVL1020:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 12991              		.loc 4 300 14 view .LVU3389
 12992              	.LBE8901:
 12993              	.LBE8900:
 12994              	.LBE8897:
 12995              	.LBE8871:
 12996              	.LBE8870:
 12997              	.LBE8869:
 12998              	.LBE8848:
 12999              	.LBE8847:
 13000              	.LBB8918:
 13001              	.LBI8918:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 13002              		.loc 5 6121 5 is_stmt 1 view .LVU3390
 13003              	.LBB8919:
 13004              	.LBI8919:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13005              		.loc 5 1263 7 view .LVU3391
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13006              		.loc 5 1263 7 is_stmt 0 view .LVU3392
 13007              	.LBE8919:
 13008              	.LBE8918:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 13009              		.loc 4 332 2 is_stmt 1 view .LVU3393
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 13010              		.loc 4 335 2 view .LVU3394
 13011              	.LBB8968:
 13012              	.LBB8928:
 13013              	.LBB8920:
 13014              	.LBB8921:
 13015              	.LBI8921:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13016              		.loc 5 320 7 view .LVU3395
 13017              	.LBB8922:
 13018              	.LBB8923:
 13019              	.LBI8923:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13020              		.loc 5 930 7 view .LVU3396
 13021              	.LBB8924:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13022              		.loc 5 931 16 is_stmt 0 view .LVU3397
 13023 00f0 099A     		ldr	r2, [sp, #36]
 13024              	.LVL1021:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13025              		.loc 5 931 16 view .LVU3398
 13026              	.LBE8924:
 13027              	.LBE8923:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 13028              		.loc 5 322 2 view .LVU3399
 13029 00f2 9C4B     		ldr	r3, .L332+8
 13030 00f4 9B1A     		subs	r3, r3, r2
 13031 00f6 012B     		cmp	r3, #1
 13032 00f8 00D8     		bhi	.LCB14783
 13033 00fa 51E1     		b	.L323	@long jump
 13034              	.LCB14783:
 13035              	.LVL1022:
ARM GAS  /tmp/ccszdRNt.s 			page 545


 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 13036              		.loc 5 322 2 view .LVU3400
 13037              	.LBE8922:
 13038              	.LBE8921:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13039              		.loc 5 1268 27 view .LVU3401
 13040 00fc 0222     		movs	r2, #2
 13041 00fe 9C49     		ldr	r1, .L332+20
 13042 0100 08A8     		add	r0, sp, #32
 13043              	.LVL1023:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13044              		.loc 5 1268 27 view .LVU3402
 13045 0102 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 13046              	.LVL1024:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13047              		.loc 5 1268 27 view .LVU3403
 13048 0106 0400     		movs	r4, r0
 13049              	.LVL1025:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13050              		.loc 5 1268 27 view .LVU3404
 13051              	.LBE8920:
 13052              	.LBE8928:
 13053              	.LBB8929:
 13054              	.LBI8929:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 13055              		.loc 5 552 7 is_stmt 1 view .LVU3405
 13056              	.LBB8930:
 13057              	.LBB8931:
 13058              	.LBB8932:
 13059              	.LBI8932:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13060              		.loc 5 190 7 view .LVU3406
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13061              		.loc 5 190 7 is_stmt 0 view .LVU3407
 13062              	.LBE8932:
 13063              	.LBB8933:
 13064              	.LBI8933:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13065              		.loc 5 286 7 is_stmt 1 view .LVU3408
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13066              		.loc 5 286 7 is_stmt 0 view .LVU3409
 13067              	.LBE8933:
 13068              	.LBB8934:
 13069              	.LBI8934:
 13070              		.loc 8 99 5 is_stmt 1 view .LVU3410
 13071              		.loc 8 99 5 is_stmt 0 view .LVU3411
 13072              	.LBE8934:
 13073              	.LBB8935:
 13074              	.LBI8935:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 13075              		.loc 5 159 2 is_stmt 1 view .LVU3412
 13076              	.LBB8936:
 13077              	.LBB8937:
 13078              	.LBB8938:
 13079              	.LBI8938:
 13080              		.loc 8 99 5 view .LVU3413
 13081              		.loc 8 99 5 is_stmt 0 view .LVU3414
ARM GAS  /tmp/ccszdRNt.s 			page 546


 13082              	.LBE8938:
 13083              	.LBB8939:
 13084              	.LBI8939:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13085              		.loc 6 141 7 is_stmt 1 view .LVU3415
 13086              	.LBB8940:
 13087              	.LBI8940:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13088              		.loc 7 83 7 view .LVU3416
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13089              		.loc 7 83 7 is_stmt 0 view .LVU3417
 13090              	.LBE8940:
 13091              	.LBE8939:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13092              		.loc 5 160 46 view .LVU3418
 13093 0108 04AB     		add	r3, sp, #16
 13094              	.LVL1026:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13095              		.loc 5 160 46 view .LVU3419
 13096 010a 0293     		str	r3, [sp, #8]
 13097              	.LVL1027:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13098              		.loc 5 160 46 view .LVU3420
 13099              	.LBE8937:
 13100              	.LBE8936:
 13101              	.LBE8935:
 13102              	.LBB8941:
 13103              	.LBI8941:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13104              		.loc 5 221 7 is_stmt 1 view .LVU3421
 13105              	.LBB8942:
 13106              	.LBI8942:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13107              		.loc 5 186 7 view .LVU3422
 13108              	.LBB8943:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13109              		.loc 5 187 28 is_stmt 0 view .LVU3423
 13110 010c 0368     		ldr	r3, [r0]
 13111              	.LVL1028:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13112              		.loc 5 187 28 view .LVU3424
 13113              	.LBE8943:
 13114              	.LBE8942:
 13115              	.LBB8944:
 13116              	.LBI8944:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13117              		.loc 5 200 7 is_stmt 1 view .LVU3425
 13118              	.LBB8945:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13119              		.loc 5 203 57 is_stmt 0 view .LVU3426
 13120 010e 0600     		movs	r6, r0
 13121 0110 0836     		adds	r6, r6, #8
 13122              	.LVL1029:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13123              		.loc 5 203 57 view .LVU3427
 13124              	.LBE8945:
 13125              	.LBE8944:
ARM GAS  /tmp/ccszdRNt.s 			page 547


 13126              	.LBE8941:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 13127              		.loc 5 555 2 view .LVU3428
 13128 0112 B342     		cmp	r3, r6
 13129 0114 00D1     		bne	.LCB14882
 13130 0116 46E1     		b	.L324	@long jump
 13131              	.LCB14882:
 13132              	.LVL1030:
 13133              	.LBB8946:
 13134              	.LBI8946:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13135              		.loc 5 186 7 is_stmt 1 view .LVU3429
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13136              		.loc 5 186 7 is_stmt 0 view .LVU3430
 13137              	.LBE8946:
 13138              	.LBB8947:
 13139              	.LBI8947:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 13140              		.loc 5 178 7 is_stmt 1 view .LVU3431
 13141              	.LBB8948:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13142              		.loc 5 179 9 is_stmt 0 view .LVU3432
 13143 0118 0293     		str	r3, [sp, #8]
 13144              	.LVL1031:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13145              		.loc 5 179 9 view .LVU3433
 13146              	.LBE8948:
 13147              	.LBE8947:
 13148              	.LBB8949:
 13149              	.LBI8949:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13150              		.loc 5 210 7 is_stmt 1 view .LVU3434
 13151              	.LBB8950:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13152              		.loc 5 211 9 is_stmt 0 view .LVU3435
 13153 011a 8368     		ldr	r3, [r0, #8]
 13154 011c 0493     		str	r3, [sp, #16]
 13155              	.LVL1032:
 13156              	.L289:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13157              		.loc 5 211 9 view .LVU3436
 13158              	.LBE8950:
 13159              	.LBE8949:
 13160              	.LBB8951:
 13161              	.LBI8951:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13162              		.loc 5 936 7 is_stmt 1 view .LVU3437
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13163              		.loc 5 936 7 is_stmt 0 view .LVU3438
 13164              	.LBE8951:
 13165              	.LBB8952:
 13166              	.LBI8952:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 13167              		.loc 5 182 7 is_stmt 1 view .LVU3439
 13168              	.LBB8953:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13169              		.loc 5 183 9 is_stmt 0 view .LVU3440
ARM GAS  /tmp/ccszdRNt.s 			page 548


 13170 011e 6368     		ldr	r3, [r4, #4]
 13171 0120 0393     		str	r3, [sp, #12]
 13172              	.LVL1033:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13173              		.loc 5 183 9 view .LVU3441
 13174              	.LBE8953:
 13175              	.LBE8952:
 13176              	.LBB8954:
 13177              	.LBI8954:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13178              		.loc 5 190 7 is_stmt 1 view .LVU3442
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13179              		.loc 5 190 7 is_stmt 0 view .LVU3443
 13180              	.LBE8954:
 13181              	.LBB8955:
 13182              	.LBI8955:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 13183              		.loc 5 178 7 is_stmt 1 view .LVU3444
 13184              	.LBB8956:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13185              		.loc 5 179 9 is_stmt 0 view .LVU3445
 13186 0122 2660     		str	r6, [r4]
 13187              	.LVL1034:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13188              		.loc 5 179 9 view .LVU3446
 13189              	.LBE8956:
 13190              	.LBE8955:
 13191              	.LBB8957:
 13192              	.LBI8957:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13193              		.loc 5 214 7 is_stmt 1 view .LVU3447
 13194              	.LBB8958:
 13195              	.LBI8958:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 13196              		.loc 5 182 7 view .LVU3448
 13197              	.LBB8959:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13198              		.loc 5 183 9 is_stmt 0 view .LVU3449
 13199 0124 0023     		movs	r3, #0
 13200 0126 6360     		str	r3, [r4, #4]
 13201              	.LVL1035:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13202              		.loc 5 183 9 view .LVU3450
 13203              	.LBE8959:
 13204              	.LBE8958:
 13205              	.LBB8960:
 13206              	.LBI8960:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 13207              		.loc 4 299 7 is_stmt 1 view .LVU3451
 13208              	.LBB8961:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 13209              		.loc 4 300 9 view .LVU3452
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 13210              		.loc 4 300 14 is_stmt 0 view .LVU3453
 13211 0128 2372     		strb	r3, [r4, #8]
 13212              	.LVL1036:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 549


 13213              		.loc 4 300 14 view .LVU3454
 13214              	.LBE8961:
 13215              	.LBE8960:
 13216              	.LBE8957:
 13217              	.LBE8931:
 13218              	.LBE8930:
 13219              	.LBE8929:
 13220              	.LBE8968:
 13221              	.LBB8969:
 13222              	.LBI8969:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 13223              		.loc 5 657 7 is_stmt 1 view .LVU3455
 13224              	.LBB8970:
 13225              	.LBI8970:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13226              		.loc 5 229 7 view .LVU3456
 13227              	.LBB8971:
 13228              	.LBB8972:
 13229              	.LBI8972:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13230              		.loc 5 221 7 view .LVU3457
 13231              	.LBB8973:
 13232              	.LBI8973:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13233              		.loc 5 186 7 view .LVU3458
 13234              	.LBB8974:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13235              		.loc 5 187 28 is_stmt 0 view .LVU3459
 13236 012a 0898     		ldr	r0, [sp, #32]
 13237              	.LVL1037:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13238              		.loc 5 187 28 view .LVU3460
 13239              	.LBE8974:
 13240              	.LBE8973:
 13241              	.LBB8975:
 13242              	.LBI8975:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13243              		.loc 5 200 7 is_stmt 1 view .LVU3461
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13244              		.loc 5 200 7 is_stmt 0 view .LVU3462
 13245              	.LBE8975:
 13246              	.LBE8972:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13247              		.loc 5 231 2 view .LVU3463
 13248 012c 0AAB     		add	r3, sp, #40
 13249 012e 9842     		cmp	r0, r3
 13250 0130 01D0     		beq	.L290
 13251              	.LVL1038:
 13252              	.LBB8976:
 13253              	.LBI8976:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 13254              		.loc 5 236 7 is_stmt 1 view .LVU3464
 13255              	.LBB8977:
 13256              	.LBB8978:
 13257              	.LBI8978:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13258              		.loc 10 469 7 view .LVU3465
ARM GAS  /tmp/ccszdRNt.s 			page 550


 13259              	.LBB8979:
 13260              	.LBI8979:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13261              		.loc 7 119 7 view .LVU3466
 13262              	.LBB8980:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13263              		.loc 7 128 19 is_stmt 0 view .LVU3467
 13264 0132 FFF7FEFF 		bl	_ZdlPv
 13265              	.LVL1039:
 13266              	.L290:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13267              		.loc 7 128 19 view .LVU3468
 13268              	.LBE8980:
 13269              	.LBE8979:
 13270              	.LBE8978:
 13271              	.LBE8977:
 13272              	.LBE8976:
 13273              	.LBE8971:
 13274              	.LBE8970:
 13275              	.LBB8981:
 13276              	.LBI8981:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13277              		.loc 5 150 14 is_stmt 1 view .LVU3469
 13278              	.LBB8982:
 13279              	.LBI8982:
 13280              		.loc 6 153 7 view .LVU3470
 13281              	.LBB8983:
 13282              	.LBI8983:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13283              		.loc 7 89 7 view .LVU3471
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13284              		.loc 7 89 7 is_stmt 0 view .LVU3472
 13285              	.LBE8983:
 13286              	.LBE8982:
 13287              	.LBE8981:
 13288              	.LBE8969:
 13289              	.LBB8984:
 13290              	.LBI8984:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 13291              		.loc 5 657 7 is_stmt 1 view .LVU3473
 13292              	.LBB8985:
 13293              	.LBI8985:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13294              		.loc 5 229 7 view .LVU3474
 13295              	.LBB8986:
 13296              	.LBB8987:
 13297              	.LBI8987:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13298              		.loc 5 221 7 view .LVU3475
 13299              	.LBB8988:
 13300              	.LBI8988:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13301              		.loc 5 186 7 view .LVU3476
 13302              	.LBB8989:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13303              		.loc 5 187 28 is_stmt 0 view .LVU3477
 13304 0136 2098     		ldr	r0, [sp, #128]
ARM GAS  /tmp/ccszdRNt.s 			page 551


 13305              	.LVL1040:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13306              		.loc 5 187 28 view .LVU3478
 13307              	.LBE8989:
 13308              	.LBE8988:
 13309              	.LBB8990:
 13310              	.LBI8990:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13311              		.loc 5 200 7 is_stmt 1 view .LVU3479
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13312              		.loc 5 200 7 is_stmt 0 view .LVU3480
 13313              	.LBE8990:
 13314              	.LBE8987:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13315              		.loc 5 231 2 view .LVU3481
 13316 0138 22AB     		add	r3, sp, #136
 13317 013a 9842     		cmp	r0, r3
 13318 013c 01D0     		beq	.L291
 13319              	.LVL1041:
 13320              	.LBB8991:
 13321              	.LBI8991:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 13322              		.loc 5 236 7 is_stmt 1 view .LVU3482
 13323              	.LBB8992:
 13324              	.LBB8993:
 13325              	.LBI8993:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13326              		.loc 10 469 7 view .LVU3483
 13327              	.LBB8994:
 13328              	.LBI8994:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13329              		.loc 7 119 7 view .LVU3484
 13330              	.LBB8995:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13331              		.loc 7 128 19 is_stmt 0 view .LVU3485
 13332 013e FFF7FEFF 		bl	_ZdlPv
 13333              	.LVL1042:
 13334              	.L291:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13335              		.loc 7 128 19 view .LVU3486
 13336              	.LBE8995:
 13337              	.LBE8994:
 13338              	.LBE8993:
 13339              	.LBE8992:
 13340              	.LBE8991:
 13341              	.LBE8986:
 13342              	.LBE8985:
 13343              	.LBB8996:
 13344              	.LBI8996:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13345              		.loc 5 150 14 is_stmt 1 view .LVU3487
 13346              	.LBB8997:
 13347              	.LBI8997:
 13348              		.loc 6 153 7 view .LVU3488
 13349              	.LBB8998:
 13350              	.LBI8998:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 552


 13351              		.loc 7 89 7 view .LVU3489
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13352              		.loc 7 89 7 is_stmt 0 view .LVU3490
 13353              	.LBE8998:
 13354              	.LBE8997:
 13355              	.LBE8996:
 13356              	.LBE8984:
 13357              	.LBB8999:
 13358              	.LBI8999:
 13359              		.loc 6 153 7 is_stmt 1 view .LVU3491
 13360              	.LBB9000:
 13361              	.LBI9000:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13362              		.loc 7 89 7 view .LVU3492
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13363              		.loc 7 89 7 is_stmt 0 view .LVU3493
 13364              	.LBE9000:
 13365              	.LBE8999:
 13366              	.LBB9001:
 13367              	.LBI9001:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 13368              		.loc 5 657 7 is_stmt 1 view .LVU3494
 13369              	.LBB9002:
 13370              	.LBI9002:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13371              		.loc 5 229 7 view .LVU3495
 13372              	.LBB9003:
 13373              	.LBB9004:
 13374              	.LBI9004:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13375              		.loc 5 221 7 view .LVU3496
 13376              	.LBB9005:
 13377              	.LBI9005:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13378              		.loc 5 186 7 view .LVU3497
 13379              	.LBB9006:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13380              		.loc 5 187 28 is_stmt 0 view .LVU3498
 13381 0142 0E98     		ldr	r0, [sp, #56]
 13382              	.LVL1043:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13383              		.loc 5 187 28 view .LVU3499
 13384              	.LBE9006:
 13385              	.LBE9005:
 13386              	.LBB9007:
 13387              	.LBI9007:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13388              		.loc 5 200 7 is_stmt 1 view .LVU3500
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13389              		.loc 5 200 7 is_stmt 0 view .LVU3501
 13390              	.LBE9007:
 13391              	.LBE9004:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13392              		.loc 5 231 2 view .LVU3502
 13393 0144 10AB     		add	r3, sp, #64
 13394 0146 9842     		cmp	r0, r3
 13395 0148 01D0     		beq	.L292
ARM GAS  /tmp/ccszdRNt.s 			page 553


 13396              	.LVL1044:
 13397              	.LBB9008:
 13398              	.LBI9008:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 13399              		.loc 5 236 7 is_stmt 1 view .LVU3503
 13400              	.LBB9009:
 13401              	.LBB9010:
 13402              	.LBI9010:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13403              		.loc 10 469 7 view .LVU3504
 13404              	.LBB9011:
 13405              	.LBI9011:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13406              		.loc 7 119 7 view .LVU3505
 13407              	.LBB9012:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13408              		.loc 7 128 19 is_stmt 0 view .LVU3506
 13409 014a FFF7FEFF 		bl	_ZdlPv
 13410              	.LVL1045:
 13411              	.L292:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13412              		.loc 7 128 19 view .LVU3507
 13413              	.LBE9012:
 13414              	.LBE9011:
 13415              	.LBE9010:
 13416              	.LBE9009:
 13417              	.LBE9008:
 13418              	.LBE9003:
 13419              	.LBE9002:
 13420              	.LBB9013:
 13421              	.LBI9013:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13422              		.loc 5 150 14 is_stmt 1 view .LVU3508
 13423              	.LBB9014:
 13424              	.LBI9014:
 13425              		.loc 6 153 7 view .LVU3509
 13426              	.LBB9015:
 13427              	.LBI9015:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13428              		.loc 7 89 7 view .LVU3510
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13429              		.loc 7 89 7 is_stmt 0 view .LVU3511
 13430              	.LBE9015:
 13431              	.LBE9014:
 13432              	.LBE9013:
 13433              	.LBE9001:
 13434              	.LBB9016:
 13435              	.LBI9016:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 13436              		.loc 5 657 7 is_stmt 1 view .LVU3512
 13437              	.LBB9017:
 13438              	.LBI9017:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13439              		.loc 5 229 7 view .LVU3513
 13440              	.LBB9018:
 13441              	.LBB9019:
 13442              	.LBI9019:
ARM GAS  /tmp/ccszdRNt.s 			page 554


 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13443              		.loc 5 221 7 view .LVU3514
 13444              	.LBB9020:
 13445              	.LBI9020:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13446              		.loc 5 186 7 view .LVU3515
 13447              	.LBB9021:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13448              		.loc 5 187 28 is_stmt 0 view .LVU3516
 13449 014e 1498     		ldr	r0, [sp, #80]
 13450              	.LVL1046:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13451              		.loc 5 187 28 view .LVU3517
 13452              	.LBE9021:
 13453              	.LBE9020:
 13454              	.LBB9022:
 13455              	.LBI9022:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13456              		.loc 5 200 7 is_stmt 1 view .LVU3518
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13457              		.loc 5 200 7 is_stmt 0 view .LVU3519
 13458              	.LBE9022:
 13459              	.LBE9019:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13460              		.loc 5 231 2 view .LVU3520
 13461 0150 16AB     		add	r3, sp, #88
 13462 0152 9842     		cmp	r0, r3
 13463 0154 01D0     		beq	.L293
 13464              	.LVL1047:
 13465              	.LBB9023:
 13466              	.LBI9023:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 13467              		.loc 5 236 7 is_stmt 1 view .LVU3521
 13468              	.LBB9024:
 13469              	.LBB9025:
 13470              	.LBI9025:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13471              		.loc 10 469 7 view .LVU3522
 13472              	.LBB9026:
 13473              	.LBI9026:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13474              		.loc 7 119 7 view .LVU3523
 13475              	.LBB9027:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13476              		.loc 7 128 19 is_stmt 0 view .LVU3524
 13477 0156 FFF7FEFF 		bl	_ZdlPv
 13478              	.LVL1048:
 13479              	.L293:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13480              		.loc 7 128 19 view .LVU3525
 13481              	.LBE9027:
 13482              	.LBE9026:
 13483              	.LBE9025:
 13484              	.LBE9024:
 13485              	.LBE9023:
 13486              	.LBE9018:
 13487              	.LBE9017:
ARM GAS  /tmp/ccszdRNt.s 			page 555


 13488              	.LBB9028:
 13489              	.LBI9028:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13490              		.loc 5 150 14 is_stmt 1 view .LVU3526
 13491              	.LBB9029:
 13492              	.LBI9029:
 13493              		.loc 6 153 7 view .LVU3527
 13494              	.LBB9030:
 13495              	.LBI9030:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13496              		.loc 7 89 7 view .LVU3528
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13497              		.loc 7 89 7 is_stmt 0 view .LVU3529
 13498              	.LBE9030:
 13499              	.LBE9029:
 13500              	.LBE9028:
 13501              	.LBE9016:
 13502              	.LBB9031:
 13503              	.LBI9031:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 13504              		.loc 5 657 7 is_stmt 1 view .LVU3530
 13505              	.LBB9032:
 13506              	.LBI9032:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13507              		.loc 5 229 7 view .LVU3531
 13508              	.LBB9033:
 13509              	.LBB9034:
 13510              	.LBI9034:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13511              		.loc 5 221 7 view .LVU3532
 13512              	.LBB9035:
 13513              	.LBI9035:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13514              		.loc 5 186 7 view .LVU3533
 13515              	.LBB9036:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13516              		.loc 5 187 28 is_stmt 0 view .LVU3534
 13517 015a 1A98     		ldr	r0, [sp, #104]
 13518              	.LVL1049:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13519              		.loc 5 187 28 view .LVU3535
 13520              	.LBE9036:
 13521              	.LBE9035:
 13522              	.LBB9037:
 13523              	.LBI9037:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13524              		.loc 5 200 7 is_stmt 1 view .LVU3536
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13525              		.loc 5 200 7 is_stmt 0 view .LVU3537
 13526              	.LBE9037:
 13527              	.LBE9034:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 13528              		.loc 5 231 2 view .LVU3538
 13529 015c 1CAB     		add	r3, sp, #112
 13530 015e 9842     		cmp	r0, r3
 13531 0160 01D0     		beq	.L294
 13532              	.LVL1050:
ARM GAS  /tmp/ccszdRNt.s 			page 556


 13533              	.LBB9038:
 13534              	.LBI9038:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 13535              		.loc 5 236 7 is_stmt 1 view .LVU3539
 13536              	.LBB9039:
 13537              	.LBB9040:
 13538              	.LBI9040:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 13539              		.loc 10 469 7 view .LVU3540
 13540              	.LBB9041:
 13541              	.LBI9041:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 13542              		.loc 7 119 7 view .LVU3541
 13543              	.LBB9042:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13544              		.loc 7 128 19 is_stmt 0 view .LVU3542
 13545 0162 FFF7FEFF 		bl	_ZdlPv
 13546              	.LVL1051:
 13547              	.L294:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 13548              		.loc 7 128 19 view .LVU3543
 13549              	.LBE9042:
 13550              	.LBE9041:
 13551              	.LBE9040:
 13552              	.LBE9039:
 13553              	.LBE9038:
 13554              	.LBE9033:
 13555              	.LBE9032:
 13556              	.LBB9043:
 13557              	.LBI9043:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13558              		.loc 5 150 14 is_stmt 1 view .LVU3544
 13559              	.LBB9044:
 13560              	.LBI9044:
 13561              		.loc 6 153 7 view .LVU3545
 13562              	.LBB9045:
 13563              	.LBI9045:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13564              		.loc 7 89 7 view .LVU3546
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13565              		.loc 7 89 7 is_stmt 0 view .LVU3547
 13566              	.LBE9045:
 13567              	.LBE9044:
 13568              	.LBE9043:
 13569              	.LBE9031:
 13570              	.LBB9046:
 13571              	.LBI9046:
 13572              		.loc 6 153 7 is_stmt 1 view .LVU3548
 13573              	.LBB9047:
 13574              	.LBI9047:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13575              		.loc 7 89 7 view .LVU3549
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13576              		.loc 7 89 7 is_stmt 0 view .LVU3550
 13577              	.LBE9047:
 13578              	.LBE9046:
 249:alohal/cli/cli.cpp ****     output += "Compiler: arm-none-eabi-g++ \r\n";
ARM GAS  /tmp/ccszdRNt.s 			page 557


 13579              		.loc 2 249 5 is_stmt 1 view .LVU3551
 13580              	.LBB9048:
 13581              	.LBI9048:
1177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__s); }
 13582              		.loc 5 1177 7 view .LVU3552
 13583              	.LBB9049:
 13584              	.LBI9049:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13585              		.loc 5 1263 7 view .LVU3553
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13586              		.loc 5 1263 7 is_stmt 0 view .LVU3554
 13587              	.LBE9049:
 13588              	.LBE9048:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 13589              		.loc 4 332 2 is_stmt 1 view .LVU3555
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 13590              		.loc 4 335 2 view .LVU3556
 13591              	.LBB9059:
 13592              	.LBB9057:
 13593              	.LBB9050:
 13594              	.LBB9051:
 13595              	.LBI9051:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13596              		.loc 5 320 7 view .LVU3557
 13597              	.LBB9052:
 13598              	.LBB9053:
 13599              	.LBI9053:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13600              		.loc 5 930 7 view .LVU3558
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13601              		.loc 5 930 7 is_stmt 0 view .LVU3559
 13602              	.LBE9053:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 13603              		.loc 5 322 2 view .LVU3560
 13604 0166 7F4B     		ldr	r3, .L332+8
 13605 0168 039A     		ldr	r2, [sp, #12]
 13606 016a 9B1A     		subs	r3, r3, r2
 13607 016c 1D2B     		cmp	r3, #29
 13608 016e 00D8     		bhi	.LCB15466
 13609 0170 1FE1     		b	.L325	@long jump
 13610              	.LCB15466:
 13611              	.LVL1052:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 13612              		.loc 5 322 2 view .LVU3561
 13613              	.LBE9052:
 13614              	.LBE9051:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13615              		.loc 5 1268 27 view .LVU3562
 13616 0172 1E22     		movs	r2, #30
 13617 0174 7F49     		ldr	r1, .L332+24
 13618 0176 02A8     		add	r0, sp, #8
 13619              	.LVL1053:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13620              		.loc 5 1268 27 view .LVU3563
 13621 0178 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 13622              	.LVL1054:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 558


 13623              		.loc 5 1268 27 view .LVU3564
 13624              	.LBE9050:
 13625              	.LBE9057:
 13626              	.LBE9059:
 250:alohal/cli/cli.cpp ****     output += "Compiler version: " + string(__VERSION__) + "\r\n";
 13627              		.loc 2 250 5 is_stmt 1 view .LVU3565
 13628              	.LBB9060:
 13629              	.LBI9060:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 13630              		.loc 6 138 7 view .LVU3566
 13631              	.LBB9061:
 13632              	.LBI9061:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13633              		.loc 7 80 7 view .LVU3567
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13634              		.loc 7 80 7 is_stmt 0 view .LVU3568
 13635              	.LBE9061:
 13636              	.LBE9060:
 13637              	.LBB9062:
 13638              	.LBI9062:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 13639              		.loc 5 525 7 is_stmt 1 view .LVU3569
 13640              	.LBB9063:
 13641              	.LBB9064:
 13642              	.LBB9065:
 13643              	.LBI9065:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13644              		.loc 5 190 7 view .LVU3570
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13645              		.loc 5 190 7 is_stmt 0 view .LVU3571
 13646              	.LBE9065:
 13647              	.LBB9066:
 13648              	.LBI9066:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 13649              		.loc 5 156 2 is_stmt 1 view .LVU3572
 13650              	.LBB9067:
 13651              	.LBB9068:
 13652              	.LBB9069:
 13653              	.LBI9069:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 13654              		.loc 6 141 7 view .LVU3573
 13655              	.LBB9070:
 13656              	.LBI9070:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13657              		.loc 7 83 7 view .LVU3574
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13658              		.loc 7 83 7 is_stmt 0 view .LVU3575
 13659              	.LBE9070:
 13660              	.LBE9069:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13661              		.loc 5 157 35 view .LVU3576
 13662 017c 34AB     		add	r3, sp, #208
 13663              	.LVL1055:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13664              		.loc 5 157 35 view .LVU3577
 13665 017e 3293     		str	r3, [sp, #200]
 13666              	.LVL1056:
ARM GAS  /tmp/ccszdRNt.s 			page 559


 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13667              		.loc 5 157 35 view .LVU3578
 13668              	.LBE9068:
 13669              	.LBE9067:
 13670              	.LBE9066:
 13671              	.LBB9071:
 13672              	.LBI9071:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 13673              		.loc 4 329 7 is_stmt 1 view .LVU3579
 13674              	.LBE9071:
 13675              	.LBE9064:
 13676              	.LBE9063:
 13677              	.LBE9062:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 13678              		.loc 4 332 2 view .LVU3580
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 13679              		.loc 4 335 2 view .LVU3581
 13680              	.LBB9078:
 13681              	.LBB9077:
 13682              	.LBB9076:
 13683              	.LBB9072:
 13684              	.LBI9072:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 13685              		.loc 5 263 9 view .LVU3582
 13686              	.LBB9073:
 13687              	.LBB9074:
 13688              	.LBI9074:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 13689              		.loc 5 243 9 view .LVU3583
 13690              	.LBB9075:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13691              		.loc 5 247 11 is_stmt 0 view .LVU3584
 13692 0180 7D4A     		ldr	r2, .L332+28
 13693              	.LVL1057:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13694              		.loc 5 247 11 view .LVU3585
 13695 0182 1100     		movs	r1, r2
 13696 0184 1839     		subs	r1, r1, #24
 13697 0186 0023     		movs	r3, #0
 13698 0188 32A8     		add	r0, sp, #200
 13699              	.LVL1058:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13700              		.loc 5 247 11 view .LVU3586
 13701 018a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 13702              	.LVL1059:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 13703              		.loc 5 247 11 view .LVU3587
 13704              	.LBE9075:
 13705              	.LBE9074:
 13706              	.LBE9073:
 13707              	.LBE9072:
 13708              	.LBE9076:
 13709              	.LBE9077:
 13710              	.LBE9078:
 13711              	.LBB9079:
 13712              	.LBI9079:
6109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
ARM GAS  /tmp/ccszdRNt.s 			page 560


 13713              		.loc 5 6109 5 is_stmt 1 view .LVU3588
 13714              	.LBB9080:
 13715              	.LBI9080:
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13716              		.loc 5 1704 7 view .LVU3589
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13717              		.loc 5 1704 7 is_stmt 0 view .LVU3590
 13718              	.LBE9080:
 13719              	.LBE9079:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 13720              		.loc 4 332 2 is_stmt 1 view .LVU3591
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 13721              		.loc 4 335 2 view .LVU3592
 13722              	.LBB9127:
 13723              	.LBB9088:
 13724              	.LBB9081:
 13725              	.LBI9081:
1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
 13726              		.loc 5 1936 7 view .LVU3593
 13727              	.LBB9082:
 13728              	.LBB9083:
 13729              	.LBI9083:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13730              		.loc 5 310 7 view .LVU3594
 13731              	.LBB9084:
 13732              	.LBI9084:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13733              		.loc 5 930 7 view .LVU3595
 13734              	.LBB9085:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13735              		.loc 5 931 16 is_stmt 0 view .LVU3596
 13736 018e 339A     		ldr	r2, [sp, #204]
 13737              	.LVL1060:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13738              		.loc 5 931 16 view .LVU3597
 13739              	.LBE9085:
 13740              	.LBE9084:
 13741              	.LBE9083:
 13742              	.LBB9086:
 13743              	.LBI9086:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13744              		.loc 5 329 7 is_stmt 1 view .LVU3598
 13745              	.LBB9087:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13746              		.loc 5 332 19 is_stmt 0 view .LVU3599
 13747 0190 002A     		cmp	r2, #0
 13748 0192 00D0     		beq	.L296
 13749 0194 0022     		movs	r2, #0
 13750              	.LVL1061:
 13751              	.L296:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13752              		.loc 5 332 19 view .LVU3600
 13753              	.LBE9087:
 13754              	.LBE9086:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13755              		.loc 5 1941 38 view .LVU3601
 13756 0196 1223     		movs	r3, #18
ARM GAS  /tmp/ccszdRNt.s 			page 561


 13757 0198 0093     		str	r3, [sp]
 13758 019a 784B     		ldr	r3, .L332+32
 13759 019c 0021     		movs	r1, #0
 13760 019e 32A8     		add	r0, sp, #200
 13761              	.LVL1062:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13762              		.loc 5 1941 38 view .LVU3602
 13763 01a0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 13764              	.LVL1063:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13765              		.loc 5 1941 38 view .LVU3603
 13766 01a4 0400     		movs	r4, r0
 13767              	.LVL1064:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13768              		.loc 5 1941 38 view .LVU3604
 13769              	.LBE9082:
 13770              	.LBE9081:
 13771              	.LBE9088:
 13772              	.LBB9089:
 13773              	.LBI9089:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 13774              		.loc 5 552 7 is_stmt 1 view .LVU3605
 13775              	.LBB9090:
 13776              	.LBB9091:
 13777              	.LBB9092:
 13778              	.LBI9092:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13779              		.loc 5 190 7 view .LVU3606
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13780              		.loc 5 190 7 is_stmt 0 view .LVU3607
 13781              	.LBE9092:
 13782              	.LBB9093:
 13783              	.LBI9093:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13784              		.loc 5 286 7 is_stmt 1 view .LVU3608
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 13785              		.loc 5 286 7 is_stmt 0 view .LVU3609
 13786              	.LBE9093:
 13787              	.LBB9094:
 13788              	.LBI9094:
 13789              		.loc 8 99 5 is_stmt 1 view .LVU3610
 13790              		.loc 8 99 5 is_stmt 0 view .LVU3611
 13791              	.LBE9094:
 13792              	.LBB9095:
 13793              	.LBI9095:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 13794              		.loc 5 159 2 is_stmt 1 view .LVU3612
 13795              	.LBB9096:
 13796              	.LBB9097:
 13797              	.LBB9098:
 13798              	.LBI9098:
 13799              		.loc 8 99 5 view .LVU3613
 13800              		.loc 8 99 5 is_stmt 0 view .LVU3614
 13801              	.LBE9098:
 13802              	.LBB9099:
 13803              	.LBI9099:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccszdRNt.s 			page 562


 13804              		.loc 6 141 7 is_stmt 1 view .LVU3615
 13805              	.LBB9100:
 13806              	.LBI9100:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13807              		.loc 7 83 7 view .LVU3616
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 13808              		.loc 7 83 7 is_stmt 0 view .LVU3617
 13809              	.LBE9100:
 13810              	.LBE9099:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13811              		.loc 5 160 46 view .LVU3618
 13812 01a6 2EAB     		add	r3, sp, #184
 13813              	.LVL1065:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13814              		.loc 5 160 46 view .LVU3619
 13815 01a8 2C93     		str	r3, [sp, #176]
 13816              	.LVL1066:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 13817              		.loc 5 160 46 view .LVU3620
 13818              	.LBE9097:
 13819              	.LBE9096:
 13820              	.LBE9095:
 13821              	.LBB9101:
 13822              	.LBI9101:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 13823              		.loc 5 221 7 is_stmt 1 view .LVU3621
 13824              	.LBB9102:
 13825              	.LBI9102:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13826              		.loc 5 186 7 view .LVU3622
 13827              	.LBB9103:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13828              		.loc 5 187 28 is_stmt 0 view .LVU3623
 13829 01aa 0368     		ldr	r3, [r0]
 13830              	.LVL1067:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13831              		.loc 5 187 28 view .LVU3624
 13832              	.LBE9103:
 13833              	.LBE9102:
 13834              	.LBB9104:
 13835              	.LBI9104:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13836              		.loc 5 200 7 is_stmt 1 view .LVU3625
 13837              	.LBB9105:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13838              		.loc 5 203 57 is_stmt 0 view .LVU3626
 13839 01ac 0600     		movs	r6, r0
 13840 01ae 0836     		adds	r6, r6, #8
 13841              	.LVL1068:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 13842              		.loc 5 203 57 view .LVU3627
 13843              	.LBE9105:
 13844              	.LBE9104:
 13845              	.LBE9101:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 13846              		.loc 5 555 2 view .LVU3628
 13847 01b0 B342     		cmp	r3, r6
ARM GAS  /tmp/ccszdRNt.s 			page 563


 13848 01b2 00D1     		bne	.LCB15764
 13849 01b4 00E1     		b	.L326	@long jump
 13850              	.LCB15764:
 13851              	.LVL1069:
 13852              	.LBB9106:
 13853              	.LBI9106:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13854              		.loc 5 186 7 is_stmt 1 view .LVU3629
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 13855              		.loc 5 186 7 is_stmt 0 view .LVU3630
 13856              	.LBE9106:
 13857              	.LBB9107:
 13858              	.LBI9107:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 13859              		.loc 5 178 7 is_stmt 1 view .LVU3631
 13860              	.LBB9108:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13861              		.loc 5 179 9 is_stmt 0 view .LVU3632
 13862 01b6 2C93     		str	r3, [sp, #176]
 13863              	.LVL1070:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13864              		.loc 5 179 9 view .LVU3633
 13865              	.LBE9108:
 13866              	.LBE9107:
 13867              	.LBB9109:
 13868              	.LBI9109:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 13869              		.loc 5 210 7 is_stmt 1 view .LVU3634
 13870              	.LBB9110:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13871              		.loc 5 211 9 is_stmt 0 view .LVU3635
 13872 01b8 8368     		ldr	r3, [r0, #8]
 13873 01ba 2E93     		str	r3, [sp, #184]
 13874              	.LVL1071:
 13875              	.L298:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13876              		.loc 5 211 9 view .LVU3636
 13877              	.LBE9110:
 13878              	.LBE9109:
 13879              	.LBB9111:
 13880              	.LBI9111:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13881              		.loc 5 936 7 is_stmt 1 view .LVU3637
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13882              		.loc 5 936 7 is_stmt 0 view .LVU3638
 13883              	.LBE9111:
 13884              	.LBB9112:
 13885              	.LBI9112:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 13886              		.loc 5 182 7 is_stmt 1 view .LVU3639
 13887              	.LBB9113:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13888              		.loc 5 183 9 is_stmt 0 view .LVU3640
 13889 01bc 6368     		ldr	r3, [r4, #4]
 13890 01be 2D93     		str	r3, [sp, #180]
 13891              	.LVL1072:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 564


 13892              		.loc 5 183 9 view .LVU3641
 13893              	.LBE9113:
 13894              	.LBE9112:
 13895              	.LBB9114:
 13896              	.LBI9114:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13897              		.loc 5 190 7 is_stmt 1 view .LVU3642
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13898              		.loc 5 190 7 is_stmt 0 view .LVU3643
 13899              	.LBE9114:
 13900              	.LBB9115:
 13901              	.LBI9115:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 13902              		.loc 5 178 7 is_stmt 1 view .LVU3644
 13903              	.LBB9116:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13904              		.loc 5 179 9 is_stmt 0 view .LVU3645
 13905 01c0 2660     		str	r6, [r4]
 13906              	.LVL1073:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13907              		.loc 5 179 9 view .LVU3646
 13908              	.LBE9116:
 13909              	.LBE9115:
 13910              	.LBB9117:
 13911              	.LBI9117:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13912              		.loc 5 214 7 is_stmt 1 view .LVU3647
 13913              	.LBB9118:
 13914              	.LBI9118:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 13915              		.loc 5 182 7 view .LVU3648
 13916              	.LBB9119:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13917              		.loc 5 183 9 is_stmt 0 view .LVU3649
 13918 01c2 0023     		movs	r3, #0
 13919 01c4 6360     		str	r3, [r4, #4]
 13920              	.LVL1074:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13921              		.loc 5 183 9 view .LVU3650
 13922              	.LBE9119:
 13923              	.LBE9118:
 13924              	.LBB9120:
 13925              	.LBI9120:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 13926              		.loc 4 299 7 is_stmt 1 view .LVU3651
 13927              	.LBB9121:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 13928              		.loc 4 300 9 view .LVU3652
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 13929              		.loc 4 300 14 is_stmt 0 view .LVU3653
 13930 01c6 2372     		strb	r3, [r4, #8]
 13931              	.LVL1075:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 13932              		.loc 4 300 14 view .LVU3654
 13933              	.LBE9121:
 13934              	.LBE9120:
 13935              	.LBE9117:
ARM GAS  /tmp/ccszdRNt.s 			page 565


 13936              	.LBE9091:
 13937              	.LBE9090:
 13938              	.LBE9089:
 13939              	.LBE9127:
 13940              	.LBB9128:
 13941              	.LBI9128:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 13942              		.loc 5 6121 5 is_stmt 1 view .LVU3655
 13943              	.LBB9129:
 13944              	.LBI9129:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13945              		.loc 5 1263 7 view .LVU3656
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13946              		.loc 5 1263 7 is_stmt 0 view .LVU3657
 13947              	.LBE9129:
 13948              	.LBE9128:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 13949              		.loc 4 332 2 is_stmt 1 view .LVU3658
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 13950              		.loc 4 335 2 view .LVU3659
 13951              	.LBB9178:
 13952              	.LBB9138:
 13953              	.LBB9130:
 13954              	.LBB9131:
 13955              	.LBI9131:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 13956              		.loc 5 320 7 view .LVU3660
 13957              	.LBB9132:
 13958              	.LBB9133:
 13959              	.LBI9133:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 13960              		.loc 5 930 7 view .LVU3661
 13961              	.LBB9134:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13962              		.loc 5 931 16 is_stmt 0 view .LVU3662
 13963 01c8 2D9A     		ldr	r2, [sp, #180]
 13964              	.LVL1076:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 13965              		.loc 5 931 16 view .LVU3663
 13966              	.LBE9134:
 13967              	.LBE9133:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 13968              		.loc 5 322 2 view .LVU3664
 13969 01ca 664B     		ldr	r3, .L332+8
 13970 01cc 9B1A     		subs	r3, r3, r2
 13971 01ce 012B     		cmp	r3, #1
 13972 01d0 00D8     		bhi	.LCB15902
 13973 01d2 F7E0     		b	.L327	@long jump
 13974              	.LCB15902:
 13975              	.LVL1077:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 13976              		.loc 5 322 2 view .LVU3665
 13977              	.LBE9132:
 13978              	.LBE9131:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13979              		.loc 5 1268 27 view .LVU3666
 13980 01d4 0222     		movs	r2, #2
ARM GAS  /tmp/ccszdRNt.s 			page 566


 13981 01d6 6649     		ldr	r1, .L332+20
 13982 01d8 2CA8     		add	r0, sp, #176
 13983              	.LVL1078:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13984              		.loc 5 1268 27 view .LVU3667
 13985 01da FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 13986              	.LVL1079:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13987              		.loc 5 1268 27 view .LVU3668
 13988 01de 0400     		movs	r4, r0
 13989              	.LVL1080:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 13990              		.loc 5 1268 27 view .LVU3669
 13991              	.LBE9130:
 13992              	.LBE9138:
 13993              	.LBB9139:
 13994              	.LBI9139:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 13995              		.loc 5 552 7 is_stmt 1 view .LVU3670
 13996              	.LBB9140:
 13997              	.LBB9141:
 13998              	.LBB9142:
 13999              	.LBI9142:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14000              		.loc 5 190 7 view .LVU3671
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14001              		.loc 5 190 7 is_stmt 0 view .LVU3672
 14002              	.LBE9142:
 14003              	.LBB9143:
 14004              	.LBI9143:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 14005              		.loc 5 286 7 is_stmt 1 view .LVU3673
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 14006              		.loc 5 286 7 is_stmt 0 view .LVU3674
 14007              	.LBE9143:
 14008              	.LBB9144:
 14009              	.LBI9144:
 14010              		.loc 8 99 5 is_stmt 1 view .LVU3675
 14011              		.loc 8 99 5 is_stmt 0 view .LVU3676
 14012              	.LBE9144:
 14013              	.LBB9145:
 14014              	.LBI9145:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 14015              		.loc 5 159 2 is_stmt 1 view .LVU3677
 14016              	.LBB9146:
 14017              	.LBB9147:
 14018              	.LBB9148:
 14019              	.LBI9148:
 14020              		.loc 8 99 5 view .LVU3678
 14021              		.loc 8 99 5 is_stmt 0 view .LVU3679
 14022              	.LBE9148:
 14023              	.LBB9149:
 14024              	.LBI9149:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14025              		.loc 6 141 7 is_stmt 1 view .LVU3680
 14026              	.LBB9150:
 14027              	.LBI9150:
ARM GAS  /tmp/ccszdRNt.s 			page 567


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14028              		.loc 7 83 7 view .LVU3681
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14029              		.loc 7 83 7 is_stmt 0 view .LVU3682
 14030              	.LBE9150:
 14031              	.LBE9149:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14032              		.loc 5 160 46 view .LVU3683
 14033 01e0 28AB     		add	r3, sp, #160
 14034              	.LVL1081:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14035              		.loc 5 160 46 view .LVU3684
 14036 01e2 2693     		str	r3, [sp, #152]
 14037              	.LVL1082:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14038              		.loc 5 160 46 view .LVU3685
 14039              	.LBE9147:
 14040              	.LBE9146:
 14041              	.LBE9145:
 14042              	.LBB9151:
 14043              	.LBI9151:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14044              		.loc 5 221 7 is_stmt 1 view .LVU3686
 14045              	.LBB9152:
 14046              	.LBI9152:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14047              		.loc 5 186 7 view .LVU3687
 14048              	.LBB9153:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14049              		.loc 5 187 28 is_stmt 0 view .LVU3688
 14050 01e4 0368     		ldr	r3, [r0]
 14051              	.LVL1083:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14052              		.loc 5 187 28 view .LVU3689
 14053              	.LBE9153:
 14054              	.LBE9152:
 14055              	.LBB9154:
 14056              	.LBI9154:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14057              		.loc 5 200 7 is_stmt 1 view .LVU3690
 14058              	.LBB9155:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14059              		.loc 5 203 57 is_stmt 0 view .LVU3691
 14060 01e6 0600     		movs	r6, r0
 14061 01e8 0836     		adds	r6, r6, #8
 14062              	.LVL1084:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14063              		.loc 5 203 57 view .LVU3692
 14064              	.LBE9155:
 14065              	.LBE9154:
 14066              	.LBE9151:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 14067              		.loc 5 555 2 view .LVU3693
 14068 01ea B342     		cmp	r3, r6
 14069 01ec 00D1     		bne	.LCB16001
 14070 01ee ECE0     		b	.L328	@long jump
 14071              	.LCB16001:
ARM GAS  /tmp/ccszdRNt.s 			page 568


 14072              	.LVL1085:
 14073              	.LBB9156:
 14074              	.LBI9156:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14075              		.loc 5 186 7 is_stmt 1 view .LVU3694
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14076              		.loc 5 186 7 is_stmt 0 view .LVU3695
 14077              	.LBE9156:
 14078              	.LBB9157:
 14079              	.LBI9157:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14080              		.loc 5 178 7 is_stmt 1 view .LVU3696
 14081              	.LBB9158:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14082              		.loc 5 179 9 is_stmt 0 view .LVU3697
 14083 01f0 2693     		str	r3, [sp, #152]
 14084              	.LVL1086:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14085              		.loc 5 179 9 view .LVU3698
 14086              	.LBE9158:
 14087              	.LBE9157:
 14088              	.LBB9159:
 14089              	.LBI9159:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14090              		.loc 5 210 7 is_stmt 1 view .LVU3699
 14091              	.LBB9160:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14092              		.loc 5 211 9 is_stmt 0 view .LVU3700
 14093 01f2 8368     		ldr	r3, [r0, #8]
 14094 01f4 2893     		str	r3, [sp, #160]
 14095              	.LVL1087:
 14096              	.L301:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14097              		.loc 5 211 9 view .LVU3701
 14098              	.LBE9160:
 14099              	.LBE9159:
 14100              	.LBB9161:
 14101              	.LBI9161:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14102              		.loc 5 936 7 is_stmt 1 view .LVU3702
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14103              		.loc 5 936 7 is_stmt 0 view .LVU3703
 14104              	.LBE9161:
 14105              	.LBB9162:
 14106              	.LBI9162:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14107              		.loc 5 182 7 is_stmt 1 view .LVU3704
 14108              	.LBB9163:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14109              		.loc 5 183 9 is_stmt 0 view .LVU3705
 14110 01f6 6368     		ldr	r3, [r4, #4]
 14111 01f8 2793     		str	r3, [sp, #156]
 14112              	.LVL1088:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14113              		.loc 5 183 9 view .LVU3706
 14114              	.LBE9163:
 14115              	.LBE9162:
ARM GAS  /tmp/ccszdRNt.s 			page 569


 14116              	.LBB9164:
 14117              	.LBI9164:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14118              		.loc 5 190 7 is_stmt 1 view .LVU3707
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14119              		.loc 5 190 7 is_stmt 0 view .LVU3708
 14120              	.LBE9164:
 14121              	.LBB9165:
 14122              	.LBI9165:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14123              		.loc 5 178 7 is_stmt 1 view .LVU3709
 14124              	.LBB9166:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14125              		.loc 5 179 9 is_stmt 0 view .LVU3710
 14126 01fa 2660     		str	r6, [r4]
 14127              	.LVL1089:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14128              		.loc 5 179 9 view .LVU3711
 14129              	.LBE9166:
 14130              	.LBE9165:
 14131              	.LBB9167:
 14132              	.LBI9167:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14133              		.loc 5 214 7 is_stmt 1 view .LVU3712
 14134              	.LBB9168:
 14135              	.LBI9168:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14136              		.loc 5 182 7 view .LVU3713
 14137              	.LBB9169:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14138              		.loc 5 183 9 is_stmt 0 view .LVU3714
 14139 01fc 0023     		movs	r3, #0
 14140 01fe 6360     		str	r3, [r4, #4]
 14141              	.LVL1090:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14142              		.loc 5 183 9 view .LVU3715
 14143              	.LBE9169:
 14144              	.LBE9168:
 14145              	.LBB9170:
 14146              	.LBI9170:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 14147              		.loc 4 299 7 is_stmt 1 view .LVU3716
 14148              	.LBB9171:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14149              		.loc 4 300 9 view .LVU3717
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14150              		.loc 4 300 14 is_stmt 0 view .LVU3718
 14151 0200 2372     		strb	r3, [r4, #8]
 14152              	.LVL1091:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14153              		.loc 4 300 14 view .LVU3719
 14154              	.LBE9171:
 14155              	.LBE9170:
 14156              	.LBE9167:
 14157              	.LBE9141:
 14158              	.LBE9140:
 14159              	.LBE9139:
ARM GAS  /tmp/ccszdRNt.s 			page 570


 14160              	.LBE9178:
 14161              	.LBB9179:
 14162              	.LBI9179:
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
 14163              		.loc 5 1168 7 is_stmt 1 view .LVU3720
 14164              	.LBB9180:
 14165              	.LBI9180:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 14166              		.loc 5 1221 7 view .LVU3721
 14167              	.LBB9181:
 14168              	.LBB9182:
 14169              	.LBI9182:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14170              		.loc 5 186 7 view .LVU3722
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14171              		.loc 5 186 7 is_stmt 0 view .LVU3723
 14172              	.LBE9182:
 14173              	.LBB9183:
 14174              	.LBI9183:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14175              		.loc 5 930 7 is_stmt 1 view .LVU3724
 14176              	.LBB9184:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14177              		.loc 5 931 16 is_stmt 0 view .LVU3725
 14178 0202 279A     		ldr	r2, [sp, #156]
 14179              	.LVL1092:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14180              		.loc 5 931 16 view .LVU3726
 14181              	.LBE9184:
 14182              	.LBE9183:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14183              		.loc 5 1222 55 view .LVU3727
 14184 0204 2699     		ldr	r1, [sp, #152]
 14185 0206 02A8     		add	r0, sp, #8
 14186              	.LVL1093:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14187              		.loc 5 1222 55 view .LVU3728
 14188 0208 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 14189              	.LVL1094:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14190              		.loc 5 1222 55 view .LVU3729
 14191              	.LBE9181:
 14192              	.LBE9180:
 14193              	.LBE9179:
 14194              	.LBB9185:
 14195              	.LBI9185:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 14196              		.loc 5 657 7 is_stmt 1 view .LVU3730
 14197              	.LBB9186:
 14198              	.LBI9186:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14199              		.loc 5 229 7 view .LVU3731
 14200              	.LBB9187:
 14201              	.LBB9188:
 14202              	.LBI9188:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14203              		.loc 5 221 7 view .LVU3732
ARM GAS  /tmp/ccszdRNt.s 			page 571


 14204              	.LBB9189:
 14205              	.LBI9189:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14206              		.loc 5 186 7 view .LVU3733
 14207              	.LBB9190:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14208              		.loc 5 187 28 is_stmt 0 view .LVU3734
 14209 020c 2698     		ldr	r0, [sp, #152]
 14210              	.LVL1095:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14211              		.loc 5 187 28 view .LVU3735
 14212              	.LBE9190:
 14213              	.LBE9189:
 14214              	.LBB9191:
 14215              	.LBI9191:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14216              		.loc 5 200 7 is_stmt 1 view .LVU3736
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14217              		.loc 5 200 7 is_stmt 0 view .LVU3737
 14218              	.LBE9191:
 14219              	.LBE9188:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14220              		.loc 5 231 2 view .LVU3738
 14221 020e 28AB     		add	r3, sp, #160
 14222 0210 9842     		cmp	r0, r3
 14223 0212 01D0     		beq	.L302
 14224              	.LVL1096:
 14225              	.LBB9192:
 14226              	.LBI9192:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 14227              		.loc 5 236 7 is_stmt 1 view .LVU3739
 14228              	.LBB9193:
 14229              	.LBB9194:
 14230              	.LBI9194:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14231              		.loc 10 469 7 view .LVU3740
 14232              	.LBB9195:
 14233              	.LBI9195:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 14234              		.loc 7 119 7 view .LVU3741
 14235              	.LBB9196:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14236              		.loc 7 128 19 is_stmt 0 view .LVU3742
 14237 0214 FFF7FEFF 		bl	_ZdlPv
 14238              	.LVL1097:
 14239              	.L302:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14240              		.loc 7 128 19 view .LVU3743
 14241              	.LBE9196:
 14242              	.LBE9195:
 14243              	.LBE9194:
 14244              	.LBE9193:
 14245              	.LBE9192:
 14246              	.LBE9187:
 14247              	.LBE9186:
 14248              	.LBB9197:
 14249              	.LBI9197:
ARM GAS  /tmp/ccszdRNt.s 			page 572


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14250              		.loc 5 150 14 is_stmt 1 view .LVU3744
 14251              	.LBB9198:
 14252              	.LBI9198:
 14253              		.loc 6 153 7 view .LVU3745
 14254              	.LBB9199:
 14255              	.LBI9199:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14256              		.loc 7 89 7 view .LVU3746
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14257              		.loc 7 89 7 is_stmt 0 view .LVU3747
 14258              	.LBE9199:
 14259              	.LBE9198:
 14260              	.LBE9197:
 14261              	.LBE9185:
 14262              	.LBB9200:
 14263              	.LBI9200:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 14264              		.loc 5 657 7 is_stmt 1 view .LVU3748
 14265              	.LBB9201:
 14266              	.LBI9201:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14267              		.loc 5 229 7 view .LVU3749
 14268              	.LBB9202:
 14269              	.LBB9203:
 14270              	.LBI9203:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14271              		.loc 5 221 7 view .LVU3750
 14272              	.LBB9204:
 14273              	.LBI9204:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14274              		.loc 5 186 7 view .LVU3751
 14275              	.LBB9205:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14276              		.loc 5 187 28 is_stmt 0 view .LVU3752
 14277 0218 2C98     		ldr	r0, [sp, #176]
 14278              	.LVL1098:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14279              		.loc 5 187 28 view .LVU3753
 14280              	.LBE9205:
 14281              	.LBE9204:
 14282              	.LBB9206:
 14283              	.LBI9206:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14284              		.loc 5 200 7 is_stmt 1 view .LVU3754
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14285              		.loc 5 200 7 is_stmt 0 view .LVU3755
 14286              	.LBE9206:
 14287              	.LBE9203:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14288              		.loc 5 231 2 view .LVU3756
 14289 021a 2EAB     		add	r3, sp, #184
 14290 021c 9842     		cmp	r0, r3
 14291 021e 01D0     		beq	.L303
 14292              	.LVL1099:
 14293              	.LBB9207:
 14294              	.LBI9207:
ARM GAS  /tmp/ccszdRNt.s 			page 573


 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 14295              		.loc 5 236 7 is_stmt 1 view .LVU3757
 14296              	.LBB9208:
 14297              	.LBB9209:
 14298              	.LBI9209:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14299              		.loc 10 469 7 view .LVU3758
 14300              	.LBB9210:
 14301              	.LBI9210:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 14302              		.loc 7 119 7 view .LVU3759
 14303              	.LBB9211:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14304              		.loc 7 128 19 is_stmt 0 view .LVU3760
 14305 0220 FFF7FEFF 		bl	_ZdlPv
 14306              	.LVL1100:
 14307              	.L303:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14308              		.loc 7 128 19 view .LVU3761
 14309              	.LBE9211:
 14310              	.LBE9210:
 14311              	.LBE9209:
 14312              	.LBE9208:
 14313              	.LBE9207:
 14314              	.LBE9202:
 14315              	.LBE9201:
 14316              	.LBB9212:
 14317              	.LBI9212:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14318              		.loc 5 150 14 is_stmt 1 view .LVU3762
 14319              	.LBB9213:
 14320              	.LBI9213:
 14321              		.loc 6 153 7 view .LVU3763
 14322              	.LBB9214:
 14323              	.LBI9214:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14324              		.loc 7 89 7 view .LVU3764
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14325              		.loc 7 89 7 is_stmt 0 view .LVU3765
 14326              	.LBE9214:
 14327              	.LBE9213:
 14328              	.LBE9212:
 14329              	.LBE9200:
 14330              	.LBB9215:
 14331              	.LBI9215:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 14332              		.loc 5 657 7 is_stmt 1 view .LVU3766
 14333              	.LBB9216:
 14334              	.LBI9216:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14335              		.loc 5 229 7 view .LVU3767
 14336              	.LBB9217:
 14337              	.LBB9218:
 14338              	.LBI9218:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14339              		.loc 5 221 7 view .LVU3768
 14340              	.LBB9219:
ARM GAS  /tmp/ccszdRNt.s 			page 574


 14341              	.LBI9219:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14342              		.loc 5 186 7 view .LVU3769
 14343              	.LBB9220:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14344              		.loc 5 187 28 is_stmt 0 view .LVU3770
 14345 0224 3298     		ldr	r0, [sp, #200]
 14346              	.LVL1101:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14347              		.loc 5 187 28 view .LVU3771
 14348              	.LBE9220:
 14349              	.LBE9219:
 14350              	.LBB9221:
 14351              	.LBI9221:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14352              		.loc 5 200 7 is_stmt 1 view .LVU3772
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14353              		.loc 5 200 7 is_stmt 0 view .LVU3773
 14354              	.LBE9221:
 14355              	.LBE9218:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14356              		.loc 5 231 2 view .LVU3774
 14357 0226 34AB     		add	r3, sp, #208
 14358 0228 9842     		cmp	r0, r3
 14359 022a 01D0     		beq	.L304
 14360              	.LVL1102:
 14361              	.LBB9222:
 14362              	.LBI9222:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 14363              		.loc 5 236 7 is_stmt 1 view .LVU3775
 14364              	.LBB9223:
 14365              	.LBB9224:
 14366              	.LBI9224:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14367              		.loc 10 469 7 view .LVU3776
 14368              	.LBB9225:
 14369              	.LBI9225:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 14370              		.loc 7 119 7 view .LVU3777
 14371              	.LBB9226:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14372              		.loc 7 128 19 is_stmt 0 view .LVU3778
 14373 022c FFF7FEFF 		bl	_ZdlPv
 14374              	.LVL1103:
 14375              	.L304:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14376              		.loc 7 128 19 view .LVU3779
 14377              	.LBE9226:
 14378              	.LBE9225:
 14379              	.LBE9224:
 14380              	.LBE9223:
 14381              	.LBE9222:
 14382              	.LBE9217:
 14383              	.LBE9216:
 14384              	.LBB9227:
 14385              	.LBI9227:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 575


 14386              		.loc 5 150 14 is_stmt 1 view .LVU3780
 14387              	.LBB9228:
 14388              	.LBI9228:
 14389              		.loc 6 153 7 view .LVU3781
 14390              	.LBB9229:
 14391              	.LBI9229:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14392              		.loc 7 89 7 view .LVU3782
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14393              		.loc 7 89 7 is_stmt 0 view .LVU3783
 14394              	.LBE9229:
 14395              	.LBE9228:
 14396              	.LBE9227:
 14397              	.LBE9215:
 14398              	.LBB9230:
 14399              	.LBI9230:
 14400              		.loc 6 153 7 is_stmt 1 view .LVU3784
 14401              	.LBB9231:
 14402              	.LBI9231:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14403              		.loc 7 89 7 view .LVU3785
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14404              		.loc 7 89 7 is_stmt 0 view .LVU3786
 14405              	.LBE9231:
 14406              	.LBE9230:
 251:alohal/cli/cli.cpp ****     output += "C++ standard: " + to_string(__cplusplus) + "\r\n";
 14407              		.loc 2 251 5 is_stmt 1 view .LVU3787
 14408              	.LBB9232:
 14409              	.LBI9232:
6555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
6556:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   inline string
6557:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   to_string(long __val)
 14410              		.loc 5 6557 3 view .LVU3788
 14411              	.LBB9233:
6558:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****   { return __gnu_cxx::__to_xstring<string>(&std::vsnprintf, 4 * sizeof(long),
 14412              		.loc 5 6558 5 view .LVU3789
6559:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 					   "%ld", __val); }
 14413              		.loc 5 6559 21 is_stmt 0 view .LVU3790
 14414 0230 534B     		ldr	r3, .L332+36
 14415 0232 0093     		str	r3, [sp]
 14416 0234 534B     		ldr	r3, .L332+40
 14417 0236 1022     		movs	r2, #16
 14418 0238 5349     		ldr	r1, .L332+44
 14419 023a 44A8     		add	r0, sp, #272
 14420 023c FFF7FEFF 		bl	_ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPK
 14421              	.LVL1104:
 14422              		.loc 5 6559 21 view .LVU3791
 14423              	.LBE9233:
 14424              	.LBE9232:
 14425              	.LBB9234:
 14426              	.LBI9234:
6109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
 14427              		.loc 5 6109 5 is_stmt 1 view .LVU3792
 14428              	.LBB9235:
 14429              	.LBI9235:
1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14430              		.loc 5 1704 7 view .LVU3793
ARM GAS  /tmp/ccszdRNt.s 			page 576


1704:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14431              		.loc 5 1704 7 is_stmt 0 view .LVU3794
 14432              	.LBE9235:
 14433              	.LBE9234:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 14434              		.loc 4 332 2 is_stmt 1 view .LVU3795
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 14435              		.loc 4 335 2 view .LVU3796
 14436              	.LBB9282:
 14437              	.LBB9243:
 14438              	.LBB9236:
 14439              	.LBI9236:
1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
 14440              		.loc 5 1936 7 view .LVU3797
 14441              	.LBB9237:
 14442              	.LBB9238:
 14443              	.LBI9238:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14444              		.loc 5 310 7 view .LVU3798
 14445              	.LBB9239:
 14446              	.LBI9239:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14447              		.loc 5 930 7 view .LVU3799
 14448              	.LBB9240:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14449              		.loc 5 931 16 is_stmt 0 view .LVU3800
 14450 0240 459A     		ldr	r2, [sp, #276]
 14451              	.LVL1105:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14452              		.loc 5 931 16 view .LVU3801
 14453              	.LBE9240:
 14454              	.LBE9239:
 14455              	.LBE9238:
 14456              	.LBB9241:
 14457              	.LBI9241:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14458              		.loc 5 329 7 is_stmt 1 view .LVU3802
 14459              	.LBB9242:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14460              		.loc 5 332 19 is_stmt 0 view .LVU3803
 14461 0242 002A     		cmp	r2, #0
 14462 0244 00D0     		beq	.L305
 14463 0246 0022     		movs	r2, #0
 14464              	.LVL1106:
 14465              	.L305:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14466              		.loc 5 332 19 view .LVU3804
 14467              	.LBE9242:
 14468              	.LBE9241:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14469              		.loc 5 1941 38 view .LVU3805
 14470 0248 0E23     		movs	r3, #14
 14471 024a 0093     		str	r3, [sp]
 14472 024c 4F4B     		ldr	r3, .L332+48
 14473 024e 0021     		movs	r1, #0
 14474 0250 44A8     		add	r0, sp, #272
 14475              	.LVL1107:
ARM GAS  /tmp/ccszdRNt.s 			page 577


1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14476              		.loc 5 1941 38 view .LVU3806
 14477 0252 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 14478              	.LVL1108:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14479              		.loc 5 1941 38 view .LVU3807
 14480 0256 0400     		movs	r4, r0
 14481              	.LVL1109:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14482              		.loc 5 1941 38 view .LVU3808
 14483              	.LBE9237:
 14484              	.LBE9236:
 14485              	.LBE9243:
 14486              	.LBB9244:
 14487              	.LBI9244:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 14488              		.loc 5 552 7 is_stmt 1 view .LVU3809
 14489              	.LBB9245:
 14490              	.LBB9246:
 14491              	.LBB9247:
 14492              	.LBI9247:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14493              		.loc 5 190 7 view .LVU3810
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14494              		.loc 5 190 7 is_stmt 0 view .LVU3811
 14495              	.LBE9247:
 14496              	.LBB9248:
 14497              	.LBI9248:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 14498              		.loc 5 286 7 is_stmt 1 view .LVU3812
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 14499              		.loc 5 286 7 is_stmt 0 view .LVU3813
 14500              	.LBE9248:
 14501              	.LBB9249:
 14502              	.LBI9249:
 14503              		.loc 8 99 5 is_stmt 1 view .LVU3814
 14504              		.loc 8 99 5 is_stmt 0 view .LVU3815
 14505              	.LBE9249:
 14506              	.LBB9250:
 14507              	.LBI9250:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 14508              		.loc 5 159 2 is_stmt 1 view .LVU3816
 14509              	.LBB9251:
 14510              	.LBB9252:
 14511              	.LBB9253:
 14512              	.LBI9253:
 14513              		.loc 8 99 5 view .LVU3817
 14514              		.loc 8 99 5 is_stmt 0 view .LVU3818
 14515              	.LBE9253:
 14516              	.LBB9254:
 14517              	.LBI9254:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14518              		.loc 6 141 7 is_stmt 1 view .LVU3819
 14519              	.LBB9255:
 14520              	.LBI9255:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14521              		.loc 7 83 7 view .LVU3820
ARM GAS  /tmp/ccszdRNt.s 			page 578


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14522              		.loc 7 83 7 is_stmt 0 view .LVU3821
 14523              	.LBE9255:
 14524              	.LBE9254:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14525              		.loc 5 160 46 view .LVU3822
 14526 0258 40AB     		add	r3, sp, #256
 14527              	.LVL1110:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14528              		.loc 5 160 46 view .LVU3823
 14529 025a 3E93     		str	r3, [sp, #248]
 14530              	.LVL1111:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14531              		.loc 5 160 46 view .LVU3824
 14532              	.LBE9252:
 14533              	.LBE9251:
 14534              	.LBE9250:
 14535              	.LBB9256:
 14536              	.LBI9256:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14537              		.loc 5 221 7 is_stmt 1 view .LVU3825
 14538              	.LBB9257:
 14539              	.LBI9257:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14540              		.loc 5 186 7 view .LVU3826
 14541              	.LBB9258:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14542              		.loc 5 187 28 is_stmt 0 view .LVU3827
 14543 025c 0368     		ldr	r3, [r0]
 14544              	.LVL1112:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14545              		.loc 5 187 28 view .LVU3828
 14546              	.LBE9258:
 14547              	.LBE9257:
 14548              	.LBB9259:
 14549              	.LBI9259:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14550              		.loc 5 200 7 is_stmt 1 view .LVU3829
 14551              	.LBB9260:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14552              		.loc 5 203 57 is_stmt 0 view .LVU3830
 14553 025e 0600     		movs	r6, r0
 14554 0260 0836     		adds	r6, r6, #8
 14555              	.LVL1113:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14556              		.loc 5 203 57 view .LVU3831
 14557              	.LBE9260:
 14558              	.LBE9259:
 14559              	.LBE9256:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 14560              		.loc 5 555 2 view .LVU3832
 14561 0262 B342     		cmp	r3, r6
 14562 0264 00D1     		bne	.LCB16585
 14563 0266 B6E0     		b	.L329	@long jump
 14564              	.LCB16585:
 14565              	.LVL1114:
 14566              	.LBB9261:
ARM GAS  /tmp/ccszdRNt.s 			page 579


 14567              	.LBI9261:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14568              		.loc 5 186 7 is_stmt 1 view .LVU3833
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14569              		.loc 5 186 7 is_stmt 0 view .LVU3834
 14570              	.LBE9261:
 14571              	.LBB9262:
 14572              	.LBI9262:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14573              		.loc 5 178 7 is_stmt 1 view .LVU3835
 14574              	.LBB9263:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14575              		.loc 5 179 9 is_stmt 0 view .LVU3836
 14576 0268 3E93     		str	r3, [sp, #248]
 14577              	.LVL1115:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14578              		.loc 5 179 9 view .LVU3837
 14579              	.LBE9263:
 14580              	.LBE9262:
 14581              	.LBB9264:
 14582              	.LBI9264:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14583              		.loc 5 210 7 is_stmt 1 view .LVU3838
 14584              	.LBB9265:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14585              		.loc 5 211 9 is_stmt 0 view .LVU3839
 14586 026a 8368     		ldr	r3, [r0, #8]
 14587 026c 4093     		str	r3, [sp, #256]
 14588              	.LVL1116:
 14589              	.L307:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14590              		.loc 5 211 9 view .LVU3840
 14591              	.LBE9265:
 14592              	.LBE9264:
 14593              	.LBB9266:
 14594              	.LBI9266:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14595              		.loc 5 936 7 is_stmt 1 view .LVU3841
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14596              		.loc 5 936 7 is_stmt 0 view .LVU3842
 14597              	.LBE9266:
 14598              	.LBB9267:
 14599              	.LBI9267:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14600              		.loc 5 182 7 is_stmt 1 view .LVU3843
 14601              	.LBB9268:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14602              		.loc 5 183 9 is_stmt 0 view .LVU3844
 14603 026e 6368     		ldr	r3, [r4, #4]
 14604 0270 3F93     		str	r3, [sp, #252]
 14605              	.LVL1117:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14606              		.loc 5 183 9 view .LVU3845
 14607              	.LBE9268:
 14608              	.LBE9267:
 14609              	.LBB9269:
 14610              	.LBI9269:
ARM GAS  /tmp/ccszdRNt.s 			page 580


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14611              		.loc 5 190 7 is_stmt 1 view .LVU3846
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14612              		.loc 5 190 7 is_stmt 0 view .LVU3847
 14613              	.LBE9269:
 14614              	.LBB9270:
 14615              	.LBI9270:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14616              		.loc 5 178 7 is_stmt 1 view .LVU3848
 14617              	.LBB9271:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14618              		.loc 5 179 9 is_stmt 0 view .LVU3849
 14619 0272 2660     		str	r6, [r4]
 14620              	.LVL1118:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14621              		.loc 5 179 9 view .LVU3850
 14622              	.LBE9271:
 14623              	.LBE9270:
 14624              	.LBB9272:
 14625              	.LBI9272:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14626              		.loc 5 214 7 is_stmt 1 view .LVU3851
 14627              	.LBB9273:
 14628              	.LBI9273:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14629              		.loc 5 182 7 view .LVU3852
 14630              	.LBB9274:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14631              		.loc 5 183 9 is_stmt 0 view .LVU3853
 14632 0274 0023     		movs	r3, #0
 14633 0276 6360     		str	r3, [r4, #4]
 14634              	.LVL1119:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14635              		.loc 5 183 9 view .LVU3854
 14636              	.LBE9274:
 14637              	.LBE9273:
 14638              	.LBB9275:
 14639              	.LBI9275:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 14640              		.loc 4 299 7 is_stmt 1 view .LVU3855
 14641              	.LBB9276:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14642              		.loc 4 300 9 view .LVU3856
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14643              		.loc 4 300 14 is_stmt 0 view .LVU3857
 14644 0278 2372     		strb	r3, [r4, #8]
 14645              	.LVL1120:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14646              		.loc 4 300 14 view .LVU3858
 14647              	.LBE9276:
 14648              	.LBE9275:
 14649              	.LBE9272:
 14650              	.LBE9246:
 14651              	.LBE9245:
 14652              	.LBE9244:
 14653              	.LBE9282:
 14654              	.LBB9283:
ARM GAS  /tmp/ccszdRNt.s 			page 581


 14655              	.LBI9283:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 14656              		.loc 5 6121 5 is_stmt 1 view .LVU3859
 14657              	.LBB9284:
 14658              	.LBI9284:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14659              		.loc 5 1263 7 view .LVU3860
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14660              		.loc 5 1263 7 is_stmt 0 view .LVU3861
 14661              	.LBE9284:
 14662              	.LBE9283:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 14663              		.loc 4 332 2 is_stmt 1 view .LVU3862
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 14664              		.loc 4 335 2 view .LVU3863
 14665              	.LBB9333:
 14666              	.LBB9293:
 14667              	.LBB9285:
 14668              	.LBB9286:
 14669              	.LBI9286:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14670              		.loc 5 320 7 view .LVU3864
 14671              	.LBB9287:
 14672              	.LBB9288:
 14673              	.LBI9288:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14674              		.loc 5 930 7 view .LVU3865
 14675              	.LBB9289:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14676              		.loc 5 931 16 is_stmt 0 view .LVU3866
 14677 027a 3F9A     		ldr	r2, [sp, #252]
 14678              	.LVL1121:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14679              		.loc 5 931 16 view .LVU3867
 14680              	.LBE9289:
 14681              	.LBE9288:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 14682              		.loc 5 322 2 view .LVU3868
 14683 027c 394B     		ldr	r3, .L332+8
 14684 027e 9B1A     		subs	r3, r3, r2
 14685 0280 012B     		cmp	r3, #1
 14686 0282 00D8     		bhi	.LCB16723
 14687 0284 ADE0     		b	.L330	@long jump
 14688              	.LCB16723:
 14689              	.LVL1122:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 14690              		.loc 5 322 2 view .LVU3869
 14691              	.LBE9287:
 14692              	.LBE9286:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14693              		.loc 5 1268 27 view .LVU3870
 14694 0286 0222     		movs	r2, #2
 14695 0288 3949     		ldr	r1, .L332+20
 14696 028a 3EA8     		add	r0, sp, #248
 14697              	.LVL1123:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14698              		.loc 5 1268 27 view .LVU3871
ARM GAS  /tmp/ccszdRNt.s 			page 582


 14699 028c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 14700              	.LVL1124:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14701              		.loc 5 1268 27 view .LVU3872
 14702 0290 0400     		movs	r4, r0
 14703              	.LVL1125:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 14704              		.loc 5 1268 27 view .LVU3873
 14705              	.LBE9285:
 14706              	.LBE9293:
 14707              	.LBB9294:
 14708              	.LBI9294:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 14709              		.loc 5 552 7 is_stmt 1 view .LVU3874
 14710              	.LBB9295:
 14711              	.LBB9296:
 14712              	.LBB9297:
 14713              	.LBI9297:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14714              		.loc 5 190 7 view .LVU3875
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14715              		.loc 5 190 7 is_stmt 0 view .LVU3876
 14716              	.LBE9297:
 14717              	.LBB9298:
 14718              	.LBI9298:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 14719              		.loc 5 286 7 is_stmt 1 view .LVU3877
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 14720              		.loc 5 286 7 is_stmt 0 view .LVU3878
 14721              	.LBE9298:
 14722              	.LBB9299:
 14723              	.LBI9299:
 14724              		.loc 8 99 5 is_stmt 1 view .LVU3879
 14725              		.loc 8 99 5 is_stmt 0 view .LVU3880
 14726              	.LBE9299:
 14727              	.LBB9300:
 14728              	.LBI9300:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 14729              		.loc 5 159 2 is_stmt 1 view .LVU3881
 14730              	.LBB9301:
 14731              	.LBB9302:
 14732              	.LBB9303:
 14733              	.LBI9303:
 14734              		.loc 8 99 5 view .LVU3882
 14735              		.loc 8 99 5 is_stmt 0 view .LVU3883
 14736              	.LBE9303:
 14737              	.LBB9304:
 14738              	.LBI9304:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 14739              		.loc 6 141 7 is_stmt 1 view .LVU3884
 14740              	.LBB9305:
 14741              	.LBI9305:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14742              		.loc 7 83 7 view .LVU3885
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14743              		.loc 7 83 7 is_stmt 0 view .LVU3886
 14744              	.LBE9305:
ARM GAS  /tmp/ccszdRNt.s 			page 583


 14745              	.LBE9304:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14746              		.loc 5 160 46 view .LVU3887
 14747 0292 3AAB     		add	r3, sp, #232
 14748              	.LVL1126:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14749              		.loc 5 160 46 view .LVU3888
 14750 0294 3893     		str	r3, [sp, #224]
 14751              	.LVL1127:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 14752              		.loc 5 160 46 view .LVU3889
 14753              	.LBE9302:
 14754              	.LBE9301:
 14755              	.LBE9300:
 14756              	.LBB9306:
 14757              	.LBI9306:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14758              		.loc 5 221 7 is_stmt 1 view .LVU3890
 14759              	.LBB9307:
 14760              	.LBI9307:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14761              		.loc 5 186 7 view .LVU3891
 14762              	.LBB9308:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14763              		.loc 5 187 28 is_stmt 0 view .LVU3892
 14764 0296 0368     		ldr	r3, [r0]
 14765              	.LVL1128:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14766              		.loc 5 187 28 view .LVU3893
 14767              	.LBE9308:
 14768              	.LBE9307:
 14769              	.LBB9309:
 14770              	.LBI9309:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14771              		.loc 5 200 7 is_stmt 1 view .LVU3894
 14772              	.LBB9310:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14773              		.loc 5 203 57 is_stmt 0 view .LVU3895
 14774 0298 0600     		movs	r6, r0
 14775 029a 0836     		adds	r6, r6, #8
 14776              	.LVL1129:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 14777              		.loc 5 203 57 view .LVU3896
 14778              	.LBE9310:
 14779              	.LBE9309:
 14780              	.LBE9306:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 14781              		.loc 5 555 2 view .LVU3897
 14782 029c B342     		cmp	r3, r6
 14783 029e 00D1     		bne	.LCB16822
 14784 02a0 A2E0     		b	.L331	@long jump
 14785              	.LCB16822:
 14786              	.LVL1130:
 14787              	.LBB9311:
 14788              	.LBI9311:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14789              		.loc 5 186 7 is_stmt 1 view .LVU3898
ARM GAS  /tmp/ccszdRNt.s 			page 584


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14790              		.loc 5 186 7 is_stmt 0 view .LVU3899
 14791              	.LBE9311:
 14792              	.LBB9312:
 14793              	.LBI9312:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14794              		.loc 5 178 7 is_stmt 1 view .LVU3900
 14795              	.LBB9313:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14796              		.loc 5 179 9 is_stmt 0 view .LVU3901
 14797 02a2 3893     		str	r3, [sp, #224]
 14798              	.LVL1131:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14799              		.loc 5 179 9 view .LVU3902
 14800              	.LBE9313:
 14801              	.LBE9312:
 14802              	.LBB9314:
 14803              	.LBI9314:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 14804              		.loc 5 210 7 is_stmt 1 view .LVU3903
 14805              	.LBB9315:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14806              		.loc 5 211 9 is_stmt 0 view .LVU3904
 14807 02a4 8368     		ldr	r3, [r0, #8]
 14808 02a6 3A93     		str	r3, [sp, #232]
 14809              	.LVL1132:
 14810              	.L310:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14811              		.loc 5 211 9 view .LVU3905
 14812              	.LBE9315:
 14813              	.LBE9314:
 14814              	.LBB9316:
 14815              	.LBI9316:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14816              		.loc 5 936 7 is_stmt 1 view .LVU3906
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14817              		.loc 5 936 7 is_stmt 0 view .LVU3907
 14818              	.LBE9316:
 14819              	.LBB9317:
 14820              	.LBI9317:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14821              		.loc 5 182 7 is_stmt 1 view .LVU3908
 14822              	.LBB9318:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14823              		.loc 5 183 9 is_stmt 0 view .LVU3909
 14824 02a8 6368     		ldr	r3, [r4, #4]
 14825 02aa 3993     		str	r3, [sp, #228]
 14826              	.LVL1133:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14827              		.loc 5 183 9 view .LVU3910
 14828              	.LBE9318:
 14829              	.LBE9317:
 14830              	.LBB9319:
 14831              	.LBI9319:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14832              		.loc 5 190 7 is_stmt 1 view .LVU3911
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 585


 14833              		.loc 5 190 7 is_stmt 0 view .LVU3912
 14834              	.LBE9319:
 14835              	.LBB9320:
 14836              	.LBI9320:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 14837              		.loc 5 178 7 is_stmt 1 view .LVU3913
 14838              	.LBB9321:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14839              		.loc 5 179 9 is_stmt 0 view .LVU3914
 14840 02ac 2660     		str	r6, [r4]
 14841              	.LVL1134:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14842              		.loc 5 179 9 view .LVU3915
 14843              	.LBE9321:
 14844              	.LBE9320:
 14845              	.LBB9322:
 14846              	.LBI9322:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14847              		.loc 5 214 7 is_stmt 1 view .LVU3916
 14848              	.LBB9323:
 14849              	.LBI9323:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 14850              		.loc 5 182 7 view .LVU3917
 14851              	.LBB9324:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14852              		.loc 5 183 9 is_stmt 0 view .LVU3918
 14853 02ae 0023     		movs	r3, #0
 14854 02b0 6360     		str	r3, [r4, #4]
 14855              	.LVL1135:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14856              		.loc 5 183 9 view .LVU3919
 14857              	.LBE9324:
 14858              	.LBE9323:
 14859              	.LBB9325:
 14860              	.LBI9325:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 14861              		.loc 4 299 7 is_stmt 1 view .LVU3920
 14862              	.LBB9326:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14863              		.loc 4 300 9 view .LVU3921
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14864              		.loc 4 300 14 is_stmt 0 view .LVU3922
 14865 02b2 2372     		strb	r3, [r4, #8]
 14866              	.LVL1136:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 14867              		.loc 4 300 14 view .LVU3923
 14868              	.LBE9326:
 14869              	.LBE9325:
 14870              	.LBE9322:
 14871              	.LBE9296:
 14872              	.LBE9295:
 14873              	.LBE9294:
 14874              	.LBE9333:
 14875              	.LBB9334:
 14876              	.LBI9334:
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
 14877              		.loc 5 1168 7 is_stmt 1 view .LVU3924
ARM GAS  /tmp/ccszdRNt.s 			page 586


 14878              	.LBB9335:
 14879              	.LBI9335:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 14880              		.loc 5 1221 7 view .LVU3925
 14881              	.LBB9336:
 14882              	.LBB9337:
 14883              	.LBI9337:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14884              		.loc 5 186 7 view .LVU3926
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14885              		.loc 5 186 7 is_stmt 0 view .LVU3927
 14886              	.LBE9337:
 14887              	.LBB9338:
 14888              	.LBI9338:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 14889              		.loc 5 930 7 is_stmt 1 view .LVU3928
 14890              	.LBB9339:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14891              		.loc 5 931 16 is_stmt 0 view .LVU3929
 14892 02b4 399A     		ldr	r2, [sp, #228]
 14893              	.LVL1137:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14894              		.loc 5 931 16 view .LVU3930
 14895              	.LBE9339:
 14896              	.LBE9338:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14897              		.loc 5 1222 55 view .LVU3931
 14898 02b6 3899     		ldr	r1, [sp, #224]
 14899 02b8 02A8     		add	r0, sp, #8
 14900              	.LVL1138:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14901              		.loc 5 1222 55 view .LVU3932
 14902 02ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 14903              	.LVL1139:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14904              		.loc 5 1222 55 view .LVU3933
 14905              	.LBE9336:
 14906              	.LBE9335:
 14907              	.LBE9334:
 14908              	.LBB9340:
 14909              	.LBI9340:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 14910              		.loc 5 657 7 is_stmt 1 view .LVU3934
 14911              	.LBB9341:
 14912              	.LBI9341:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14913              		.loc 5 229 7 view .LVU3935
 14914              	.LBB9342:
 14915              	.LBB9343:
 14916              	.LBI9343:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14917              		.loc 5 221 7 view .LVU3936
 14918              	.LBB9344:
 14919              	.LBI9344:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14920              		.loc 5 186 7 view .LVU3937
 14921              	.LBB9345:
ARM GAS  /tmp/ccszdRNt.s 			page 587


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14922              		.loc 5 187 28 is_stmt 0 view .LVU3938
 14923 02be 3898     		ldr	r0, [sp, #224]
 14924              	.LVL1140:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14925              		.loc 5 187 28 view .LVU3939
 14926              	.LBE9345:
 14927              	.LBE9344:
 14928              	.LBB9346:
 14929              	.LBI9346:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14930              		.loc 5 200 7 is_stmt 1 view .LVU3940
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14931              		.loc 5 200 7 is_stmt 0 view .LVU3941
 14932              	.LBE9346:
 14933              	.LBE9343:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 14934              		.loc 5 231 2 view .LVU3942
 14935 02c0 3AAB     		add	r3, sp, #232
 14936 02c2 9842     		cmp	r0, r3
 14937 02c4 01D0     		beq	.L311
 14938              	.LVL1141:
 14939              	.LBB9347:
 14940              	.LBI9347:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 14941              		.loc 5 236 7 is_stmt 1 view .LVU3943
 14942              	.LBB9348:
 14943              	.LBB9349:
 14944              	.LBI9349:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 14945              		.loc 10 469 7 view .LVU3944
 14946              	.LBB9350:
 14947              	.LBI9350:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 14948              		.loc 7 119 7 view .LVU3945
 14949              	.LBB9351:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14950              		.loc 7 128 19 is_stmt 0 view .LVU3946
 14951 02c6 FFF7FEFF 		bl	_ZdlPv
 14952              	.LVL1142:
 14953              	.L311:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 14954              		.loc 7 128 19 view .LVU3947
 14955              	.LBE9351:
 14956              	.LBE9350:
 14957              	.LBE9349:
 14958              	.LBE9348:
 14959              	.LBE9347:
 14960              	.LBE9342:
 14961              	.LBE9341:
 14962              	.LBB9352:
 14963              	.LBI9352:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14964              		.loc 5 150 14 is_stmt 1 view .LVU3948
 14965              	.LBB9353:
 14966              	.LBI9353:
 14967              		.loc 6 153 7 view .LVU3949
ARM GAS  /tmp/ccszdRNt.s 			page 588


 14968              	.LBB9354:
 14969              	.LBI9354:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14970              		.loc 7 89 7 view .LVU3950
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 14971              		.loc 7 89 7 is_stmt 0 view .LVU3951
 14972              	.LBE9354:
 14973              	.LBE9353:
 14974              	.LBE9352:
 14975              	.LBE9340:
 14976              	.LBB9355:
 14977              	.LBI9355:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 14978              		.loc 5 657 7 is_stmt 1 view .LVU3952
 14979              	.LBB9356:
 14980              	.LBI9356:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14981              		.loc 5 229 7 view .LVU3953
 14982              	.LBB9357:
 14983              	.LBB9358:
 14984              	.LBI9358:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 14985              		.loc 5 221 7 view .LVU3954
 14986              	.LBB9359:
 14987              	.LBI9359:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 14988              		.loc 5 186 7 view .LVU3955
 14989              	.LBB9360:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14990              		.loc 5 187 28 is_stmt 0 view .LVU3956
 14991 02ca 3E98     		ldr	r0, [sp, #248]
 14992              	.LVL1143:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 14993              		.loc 5 187 28 view .LVU3957
 14994              	.LBE9360:
 14995              	.LBE9359:
 14996              	.LBB9361:
 14997              	.LBI9361:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14998              		.loc 5 200 7 is_stmt 1 view .LVU3958
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 14999              		.loc 5 200 7 is_stmt 0 view .LVU3959
 15000              	.LBE9361:
 15001              	.LBE9358:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15002              		.loc 5 231 2 view .LVU3960
 15003 02cc 40AB     		add	r3, sp, #256
 15004 02ce 9842     		cmp	r0, r3
 15005 02d0 01D0     		beq	.L312
 15006              	.LVL1144:
 15007              	.LBB9362:
 15008              	.LBI9362:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15009              		.loc 5 236 7 is_stmt 1 view .LVU3961
 15010              	.LBB9363:
 15011              	.LBB9364:
 15012              	.LBI9364:
ARM GAS  /tmp/ccszdRNt.s 			page 589


 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15013              		.loc 10 469 7 view .LVU3962
 15014              	.LBB9365:
 15015              	.LBI9365:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15016              		.loc 7 119 7 view .LVU3963
 15017              	.LBB9366:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15018              		.loc 7 128 19 is_stmt 0 view .LVU3964
 15019 02d2 FFF7FEFF 		bl	_ZdlPv
 15020              	.LVL1145:
 15021              	.L312:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15022              		.loc 7 128 19 view .LVU3965
 15023              	.LBE9366:
 15024              	.LBE9365:
 15025              	.LBE9364:
 15026              	.LBE9363:
 15027              	.LBE9362:
 15028              	.LBE9357:
 15029              	.LBE9356:
 15030              	.LBB9367:
 15031              	.LBI9367:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15032              		.loc 5 150 14 is_stmt 1 view .LVU3966
 15033              	.LBB9368:
 15034              	.LBI9368:
 15035              		.loc 6 153 7 view .LVU3967
 15036              	.LBB9369:
 15037              	.LBI9369:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15038              		.loc 7 89 7 view .LVU3968
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15039              		.loc 7 89 7 is_stmt 0 view .LVU3969
 15040              	.LBE9369:
 15041              	.LBE9368:
 15042              	.LBE9367:
 15043              	.LBE9355:
 15044              	.LBB9370:
 15045              	.LBI9370:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 15046              		.loc 5 657 7 is_stmt 1 view .LVU3970
 15047              	.LBB9371:
 15048              	.LBI9371:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15049              		.loc 5 229 7 view .LVU3971
 15050              	.LBB9372:
 15051              	.LBB9373:
 15052              	.LBI9373:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 15053              		.loc 5 221 7 view .LVU3972
 15054              	.LBB9374:
 15055              	.LBI9374:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15056              		.loc 5 186 7 view .LVU3973
 15057              	.LBB9375:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 590


 15058              		.loc 5 187 28 is_stmt 0 view .LVU3974
 15059 02d6 4498     		ldr	r0, [sp, #272]
 15060              	.LVL1146:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15061              		.loc 5 187 28 view .LVU3975
 15062              	.LBE9375:
 15063              	.LBE9374:
 15064              	.LBB9376:
 15065              	.LBI9376:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15066              		.loc 5 200 7 is_stmt 1 view .LVU3976
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15067              		.loc 5 200 7 is_stmt 0 view .LVU3977
 15068              	.LBE9376:
 15069              	.LBE9373:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15070              		.loc 5 231 2 view .LVU3978
 15071 02d8 46AB     		add	r3, sp, #280
 15072 02da 9842     		cmp	r0, r3
 15073 02dc 01D0     		beq	.L313
 15074              	.LVL1147:
 15075              	.LBB9377:
 15076              	.LBI9377:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15077              		.loc 5 236 7 is_stmt 1 view .LVU3979
 15078              	.LBB9378:
 15079              	.LBB9379:
 15080              	.LBI9379:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15081              		.loc 10 469 7 view .LVU3980
 15082              	.LBB9380:
 15083              	.LBI9380:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15084              		.loc 7 119 7 view .LVU3981
 15085              	.LBB9381:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15086              		.loc 7 128 19 is_stmt 0 view .LVU3982
 15087 02de FFF7FEFF 		bl	_ZdlPv
 15088              	.LVL1148:
 15089              	.L313:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15090              		.loc 7 128 19 view .LVU3983
 15091              	.LBE9381:
 15092              	.LBE9380:
 15093              	.LBE9379:
 15094              	.LBE9378:
 15095              	.LBE9377:
 15096              	.LBE9372:
 15097              	.LBE9371:
 15098              	.LBB9382:
 15099              	.LBI9382:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15100              		.loc 5 150 14 is_stmt 1 view .LVU3984
 15101              	.LBB9383:
 15102              	.LBI9383:
 15103              		.loc 6 153 7 view .LVU3985
 15104              	.LBB9384:
ARM GAS  /tmp/ccszdRNt.s 			page 591


 15105              	.LBI9384:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15106              		.loc 7 89 7 view .LVU3986
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15107              		.loc 7 89 7 is_stmt 0 view .LVU3987
 15108              	.LBE9384:
 15109              	.LBE9383:
 15110              	.LBE9382:
 15111              	.LBE9370:
 252:alohal/cli/cli.cpp ****     Print(output);
 15112              		.loc 2 252 5 is_stmt 1 view .LVU3988
 15113              	.LBB9385:
 15114              	.LBI9385:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 15115              		.loc 5 448 7 view .LVU3989
 15116              	.LBB9386:
 15117              	.LBB9387:
 15118              	.LBB9388:
 15119              	.LBI9388:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15120              		.loc 5 190 7 view .LVU3990
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15121              		.loc 5 190 7 is_stmt 0 view .LVU3991
 15122              	.LBE9388:
 15123              	.LBB9389:
 15124              	.LBI9389:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15125              		.loc 5 290 7 is_stmt 1 view .LVU3992
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 15126              		.loc 5 290 7 is_stmt 0 view .LVU3993
 15127              	.LBE9389:
 15128              	.LBB9390:
 15129              	.LBI9390:
 15130              		.loc 20 97 19 is_stmt 1 view .LVU3994
 15131              	.LBB9391:
 15132              	.LBI9391:
 15133              		.loc 10 514 7 view .LVU3995
 15134              	.LBB9392:
 15135              	.LBI9392:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15136              		.loc 6 141 7 view .LVU3996
 15137              	.LBB9393:
 15138              	.LBI9393:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15139              		.loc 7 83 7 view .LVU3997
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15140              		.loc 7 83 7 is_stmt 0 view .LVU3998
 15141              	.LBE9393:
 15142              	.LBE9392:
 15143              	.LBE9391:
 15144              	.LBE9390:
 15145              	.LBB9394:
 15146              	.LBI9394:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 15147              		.loc 5 159 2 is_stmt 1 view .LVU3999
 15148              	.LBB9395:
 15149              	.LBB9396:
ARM GAS  /tmp/ccszdRNt.s 			page 592


 15150              	.LBB9397:
 15151              	.LBI9397:
 15152              		.loc 8 99 5 view .LVU4000
 15153              		.loc 8 99 5 is_stmt 0 view .LVU4001
 15154              	.LBE9397:
 15155              	.LBB9398:
 15156              	.LBI9398:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 15157              		.loc 6 141 7 is_stmt 1 view .LVU4002
 15158              	.LBB9399:
 15159              	.LBI9399:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15160              		.loc 7 83 7 view .LVU4003
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15161              		.loc 7 83 7 is_stmt 0 view .LVU4004
 15162              	.LBE9399:
 15163              	.LBE9398:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15164              		.loc 5 160 46 view .LVU4005
 15165 02e2 4CAC     		add	r4, sp, #304
 15166              	.LVL1149:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15167              		.loc 5 160 46 view .LVU4006
 15168 02e4 4A94     		str	r4, [sp, #296]
 15169              	.LVL1150:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 15170              		.loc 5 160 46 view .LVU4007
 15171              	.LBE9396:
 15172              	.LBE9395:
 15173              	.LBE9394:
 15174              	.LBB9400:
 15175              	.LBI9400:
 15176              		.loc 6 153 7 is_stmt 1 view .LVU4008
 15177              	.LBB9401:
 15178              	.LBI9401:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15179              		.loc 7 89 7 view .LVU4009
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15180              		.loc 7 89 7 is_stmt 0 view .LVU4010
 15181              	.LBE9401:
 15182              	.LBE9400:
 15183              	.LBB9402:
 15184              	.LBI9402:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15185              		.loc 5 186 7 is_stmt 1 view .LVU4011
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15186              		.loc 5 186 7 is_stmt 0 view .LVU4012
 15187              	.LBE9402:
 15188              	.LBB9403:
 15189              	.LBI9403:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15190              		.loc 5 186 7 is_stmt 1 view .LVU4013
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15191              		.loc 5 186 7 is_stmt 0 view .LVU4014
 15192              	.LBE9403:
 15193              	.LBB9404:
 15194              	.LBI9404:
ARM GAS  /tmp/ccszdRNt.s 			page 593


 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15195              		.loc 5 936 7 is_stmt 1 view .LVU4015
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15196              		.loc 5 936 7 is_stmt 0 view .LVU4016
 15197              	.LBE9404:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15198              		.loc 5 451 9 view .LVU4017
 15199 02e6 029B     		ldr	r3, [sp, #8]
 15200 02e8 0399     		ldr	r1, [sp, #12]
 15201 02ea 8C46     		mov	ip, r1
 15202 02ec 6344     		add	r3, r3, ip
 15203 02ee 1A00     		movs	r2, r3
 15204              	.LVL1151:
 15205              	.LBB9405:
 15206              	.LBI9405:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 15207              		.loc 5 263 9 is_stmt 1 view .LVU4018
 15208              	.LBB9406:
 15209              	.LBB9407:
 15210              	.LBI9407:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 15211              		.loc 5 243 9 view .LVU4019
 15212              	.LBB9408:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15213              		.loc 5 247 11 is_stmt 0 view .LVU4020
 15214 02f0 0023     		movs	r3, #0
 15215 02f2 0299     		ldr	r1, [sp, #8]
 15216 02f4 4AA8     		add	r0, sp, #296
 15217              	.LVL1152:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15218              		.loc 5 247 11 view .LVU4021
 15219 02f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 15220              	.LVL1153:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 15221              		.loc 5 247 11 view .LVU4022
 15222              	.LBE9408:
 15223              	.LBE9407:
 15224              	.LBE9406:
 15225              	.LBE9405:
 15226              	.LBE9387:
 15227              	.LBE9386:
 15228              	.LBE9385:
 15229              		.loc 2 252 10 view .LVU4023
 15230 02fa 4AA9     		add	r1, sp, #296
 15231 02fc 2800     		movs	r0, r5
 15232 02fe FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 15233              	.LVL1154:
 15234              	.LBB9409:
 15235              	.LBI9409:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 15236              		.loc 5 657 7 is_stmt 1 view .LVU4024
 15237              	.LBB9410:
 15238              	.LBI9410:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15239              		.loc 5 229 7 view .LVU4025
 15240              	.LBB9411:
 15241              	.LBB9412:
ARM GAS  /tmp/ccszdRNt.s 			page 594


 15242              	.LBI9412:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 15243              		.loc 5 221 7 view .LVU4026
 15244              	.LBB9413:
 15245              	.LBI9413:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15246              		.loc 5 186 7 view .LVU4027
 15247              	.LBB9414:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15248              		.loc 5 187 28 is_stmt 0 view .LVU4028
 15249 0302 4A98     		ldr	r0, [sp, #296]
 15250              	.LVL1155:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15251              		.loc 5 187 28 view .LVU4029
 15252              	.LBE9414:
 15253              	.LBE9413:
 15254              	.LBB9415:
 15255              	.LBI9415:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15256              		.loc 5 200 7 is_stmt 1 view .LVU4030
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15257              		.loc 5 200 7 is_stmt 0 view .LVU4031
 15258              	.LBE9415:
 15259              	.LBE9412:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15260              		.loc 5 231 2 view .LVU4032
 15261 0304 A042     		cmp	r0, r4
 15262 0306 01D0     		beq	.L314
 15263              	.LVL1156:
 15264              	.LBB9416:
 15265              	.LBI9416:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15266              		.loc 5 236 7 is_stmt 1 view .LVU4033
 15267              	.LBB9417:
 15268              	.LBB9418:
 15269              	.LBI9418:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15270              		.loc 10 469 7 view .LVU4034
 15271              	.LBB9419:
 15272              	.LBI9419:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15273              		.loc 7 119 7 view .LVU4035
 15274              	.LBB9420:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15275              		.loc 7 128 19 is_stmt 0 view .LVU4036
 15276 0308 FFF7FEFF 		bl	_ZdlPv
 15277              	.LVL1157:
 15278              	.L314:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15279              		.loc 7 128 19 view .LVU4037
 15280              	.LBE9420:
 15281              	.LBE9419:
 15282              	.LBE9418:
 15283              	.LBE9417:
 15284              	.LBE9416:
 15285              	.LBE9411:
 15286              	.LBE9410:
ARM GAS  /tmp/ccszdRNt.s 			page 595


 15287              	.LBB9421:
 15288              	.LBI9421:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15289              		.loc 5 150 14 is_stmt 1 view .LVU4038
 15290              	.LBB9422:
 15291              	.LBI9422:
 15292              		.loc 6 153 7 view .LVU4039
 15293              	.LBB9423:
 15294              	.LBI9423:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15295              		.loc 7 89 7 view .LVU4040
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15296              		.loc 7 89 7 is_stmt 0 view .LVU4041
 15297              	.LBE9423:
 15298              	.LBE9422:
 15299              	.LBE9421:
 15300              	.LBE9409:
 253:alohal/cli/cli.cpp ****     return 0;
 15301              		.loc 2 253 5 is_stmt 1 view .LVU4042
 15302              	.LBB9424:
 15303              	.LBI9424:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 15304              		.loc 5 657 7 view .LVU4043
 15305              	.LBB9425:
 15306              	.LBI9425:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15307              		.loc 5 229 7 view .LVU4044
 15308              	.LBB9426:
 15309              	.LBB9427:
 15310              	.LBI9427:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 15311              		.loc 5 221 7 view .LVU4045
 15312              	.LBB9428:
 15313              	.LBI9428:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 15314              		.loc 5 186 7 view .LVU4046
 15315              	.LBB9429:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15316              		.loc 5 187 28 is_stmt 0 view .LVU4047
 15317 030c 0298     		ldr	r0, [sp, #8]
 15318              	.LVL1158:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15319              		.loc 5 187 28 view .LVU4048
 15320              	.LBE9429:
 15321              	.LBE9428:
 15322              	.LBB9430:
 15323              	.LBI9430:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15324              		.loc 5 200 7 is_stmt 1 view .LVU4049
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15325              		.loc 5 200 7 is_stmt 0 view .LVU4050
 15326              	.LBE9430:
 15327              	.LBE9427:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 15328              		.loc 5 231 2 view .LVU4051
 15329 030e 04AB     		add	r3, sp, #16
 15330 0310 9842     		cmp	r0, r3
ARM GAS  /tmp/ccszdRNt.s 			page 596


 15331 0312 01D0     		beq	.L315
 15332              	.LVL1159:
 15333              	.LBB9431:
 15334              	.LBI9431:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 15335              		.loc 5 236 7 is_stmt 1 view .LVU4052
 15336              	.LBB9432:
 15337              	.LBB9433:
 15338              	.LBI9433:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 15339              		.loc 10 469 7 view .LVU4053
 15340              	.LBB9434:
 15341              	.LBI9434:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15342              		.loc 7 119 7 view .LVU4054
 15343              	.LBB9435:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15344              		.loc 7 128 19 is_stmt 0 view .LVU4055
 15345 0314 FFF7FEFF 		bl	_ZdlPv
 15346              	.LVL1160:
 15347              	.L315:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15348              		.loc 7 128 19 view .LVU4056
 15349              	.LBE9435:
 15350              	.LBE9434:
 15351              	.LBE9433:
 15352              	.LBE9432:
 15353              	.LBE9431:
 15354              	.LBE9426:
 15355              	.LBE9425:
 15356              	.LBB9436:
 15357              	.LBI9436:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15358              		.loc 5 150 14 is_stmt 1 view .LVU4057
 15359              	.LBB9437:
 15360              	.LBI9437:
 15361              		.loc 6 153 7 view .LVU4058
 15362              	.LBB9438:
 15363              	.LBI9438:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15364              		.loc 7 89 7 view .LVU4059
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 15365              		.loc 7 89 7 is_stmt 0 view .LVU4060
 15366              	.LBE9438:
 15367              	.LBE9437:
 15368              	.LBE9436:
 15369              	.LBE9424:
 254:alohal/cli/cli.cpp **** }
 15370              		.loc 2 254 1 view .LVU4061
 15371 0318 0020     		movs	r0, #0
 15372 031a 50B0     		add	sp, sp, #320
 15373              		@ sp needed
 15374              	.LVL1161:
 15375              		.loc 2 254 1 view .LVU4062
 15376 031c 70BD     		pop	{r4, r5, r6, pc}
 15377              	.LVL1162:
 15378              	.L318:
ARM GAS  /tmp/ccszdRNt.s 			page 597


 15379              	.LBB9439:
 15380              	.LBB8775:
 15381              	.LBB8774:
 15382              	.LBB8773:
 15383              	.LBB8771:
 15384              	.LBI8771:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15385              		.loc 4 361 7 is_stmt 1 view .LVU4063
 15386              	.LBB8772:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 15387              		.loc 4 363 2 view .LVU4064
 15388              		.loc 4 365 2 view .LVU4065
 15389              		.loc 4 365 49 is_stmt 0 view .LVU4066
 15390 031e 1022     		movs	r2, #16
 15391 0320 3100     		movs	r1, r6
 15392 0322 16A8     		add	r0, sp, #88
 15393              	.LVL1163:
 15394              		.loc 4 365 49 view .LVU4067
 15395 0324 FFF7FEFF 		bl	memcpy
 15396              	.LVL1164:
 15397              		.loc 4 365 49 view .LVU4068
 15398 0328 8DE6     		b	.L276
 15399              	.LVL1165:
 15400              	.L319:
 15401              		.loc 4 365 49 view .LVU4069
 15402              	.LBE8772:
 15403              	.LBE8771:
 15404              	.LBE8773:
 15405              	.LBE8774:
 15406              	.LBE8775:
 15407              	.LBE9439:
 15408              	.LBB9440:
 15409              	.LBB8825:
 15410              	.LBB8786:
 15411              	.LBB8785:
 15412              	.LBB8784:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15413              		.loc 5 323 24 view .LVU4070
 15414 032a 1948     		ldr	r0, .L332+52
 15415 032c FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 15416              	.LVL1166:
 15417              	.L320:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15418              		.loc 5 323 24 view .LVU4071
 15419              	.LBE8784:
 15420              	.LBE8785:
 15421              	.LBE8786:
 15422              	.LBE8825:
 15423              	.LBB8826:
 15424              	.LBB8824:
 15425              	.LBB8823:
 15426              	.LBB8821:
 15427              	.LBI8821:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15428              		.loc 4 361 7 is_stmt 1 view .LVU4072
 15429              	.LBB8822:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
ARM GAS  /tmp/ccszdRNt.s 			page 598


 15430              		.loc 4 363 2 view .LVU4073
 15431              		.loc 4 365 2 view .LVU4074
 15432              		.loc 4 365 49 is_stmt 0 view .LVU4075
 15433 0330 1022     		movs	r2, #16
 15434 0332 3100     		movs	r1, r6
 15435 0334 10A8     		add	r0, sp, #64
 15436              	.LVL1167:
 15437              		.loc 4 365 49 view .LVU4076
 15438 0336 FFF7FEFF 		bl	memcpy
 15439              	.LVL1168:
 15440              		.loc 4 365 49 view .LVU4077
 15441 033a A0E6     		b	.L279
 15442              	.LVL1169:
 15443              	.L316:
 15444              		.loc 4 365 49 view .LVU4078
 15445              	.LBE8822:
 15446              	.LBE8821:
 15447              	.LBE8823:
 15448              	.LBE8824:
 15449              	.LBE8826:
 15450              	.LBE9440:
 15451              	.LBB9441:
 15452              	.LBB8917:
 15453              	.LBB8906:
 15454              	.LBB8859:
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 15455              		.loc 5 995 23 view .LVU4079
 15456 033c 0F24     		movs	r4, #15
 15457 033e B6E6     		b	.L280
 15458              	.LVL1170:
 15459              	.L317:
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 15460              		.loc 5 995 23 view .LVU4080
 15461              	.LBE8859:
 15462              	.LBE8906:
 15463              	.LBB8907:
 15464              	.LBB8865:
 15465 0340 0F24     		movs	r4, #15
 15466 0342 BCE6     		b	.L282
 15467              	.LVL1171:
 15468              	.L321:
 995:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	                     : _M_allocated_capacity;
 15469              		.loc 5 995 23 view .LVU4081
 15470              	.LBE8865:
 15471              	.LBE8907:
 15472              	.LBB8908:
 15473              	.LBI8908:
1639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
 15474              		.loc 5 1639 7 is_stmt 1 view .LVU4082
 15475              	.LBB8909:
 15476              	.LBI8909:
1936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      size_type __n2)
 15477              		.loc 5 1936 7 view .LVU4083
 15478              	.LBB8910:
 15479              	.LBB8911:
 15480              	.LBI8911:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 599


 15481              		.loc 5 310 7 view .LVU4084
 15482              	.LBB8912:
 15483              	.LBI8912:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 15484              		.loc 5 930 7 view .LVU4085
 15485              	.LBB8913:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15486              		.loc 5 931 16 is_stmt 0 view .LVU4086
 15487 0344 219A     		ldr	r2, [sp, #132]
 15488              	.LVL1172:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 15489              		.loc 5 931 16 view .LVU4087
 15490              	.LBE8913:
 15491              	.LBE8912:
 15492              	.LBE8911:
 15493              	.LBB8914:
 15494              	.LBI8914:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 15495              		.loc 5 329 7 is_stmt 1 view .LVU4088
 15496              	.LBB8915:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15497              		.loc 5 332 19 is_stmt 0 view .LVU4089
 15498 0346 002A     		cmp	r2, #0
 15499 0348 00D0     		beq	.L283
 15500 034a 0022     		movs	r2, #0
 15501              	.LVL1173:
 15502              	.L283:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15503              		.loc 5 332 19 view .LVU4090
 15504              	.LBE8915:
 15505              	.LBE8914:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15506              		.loc 5 1941 38 view .LVU4091
 15507 034c 0090     		str	r0, [sp]
 15508 034e 0021     		movs	r1, #0
 15509              	.LVL1174:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15510              		.loc 5 1941 38 view .LVU4092
 15511 0350 20A8     		add	r0, sp, #128
 15512              	.LVL1175:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15513              		.loc 5 1941 38 view .LVU4093
 15514 0352 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
 15515              	.LVL1176:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15516              		.loc 5 1941 38 view .LVU4094
 15517 0356 0400     		movs	r4, r0
 15518              	.LVL1177:
1941:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15519              		.loc 5 1941 38 view .LVU4095
 15520              	.LBE8910:
 15521              	.LBE8909:
 15522              	.LBE8908:
 15523 0358 B9E6     		b	.L284
 15524              	.L333:
 15525 035a C046     		.align	2
 15526              	.L332:
ARM GAS  /tmp/ccszdRNt.s 			page 600


 15527 035c 0B000000 		.word	.LC44+11
 15528 0360 0C000000 		.word	.LC47
 15529 0364 FFFFFF3F 		.word	1073741823
 15530 0368 1C000000 		.word	.LC50
 15531 036c 08000000 		.word	.LC52+8
 15532 0370 00000000 		.word	.LC9
 15533 0374 2C000000 		.word	.LC56
 15534 0378 18000000 		.word	.LC58+24
 15535 037c 68000000 		.word	.LC61
 15536 0380 E7130300 		.word	201703
 15537 0384 7C000000 		.word	.LC63
 15538 0388 00000000 		.word	vsnprintf
 15539 038c 80000000 		.word	.LC66
 15540 0390 00000000 		.word	.LC0
 15541              	.LVL1178:
 15542              	.L322:
 15543              	.LBB8916:
 15544              	.LBB8905:
 15545              	.LBB8904:
 15546              	.LBB8902:
 15547              	.LBI8902:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15548              		.loc 4 361 7 is_stmt 1 view .LVU4096
 15549              	.LBB8903:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 15550              		.loc 4 363 2 view .LVU4097
 15551              		.loc 4 365 2 view .LVU4098
 15552              		.loc 4 365 49 is_stmt 0 view .LVU4099
 15553 0394 1022     		movs	r2, #16
 15554 0396 3100     		movs	r1, r6
 15555 0398 0AA8     		add	r0, sp, #40
 15556 039a FFF7FEFF 		bl	memcpy
 15557              	.LVL1179:
 15558              		.loc 4 365 49 view .LVU4100
 15559 039e A1E6     		b	.L286
 15560              	.LVL1180:
 15561              	.L323:
 15562              		.loc 4 365 49 view .LVU4101
 15563              	.LBE8903:
 15564              	.LBE8902:
 15565              	.LBE8904:
 15566              	.LBE8905:
 15567              	.LBE8916:
 15568              	.LBE8917:
 15569              	.LBE9441:
 15570              	.LBB9442:
 15571              	.LBB8966:
 15572              	.LBB8927:
 15573              	.LBB8926:
 15574              	.LBB8925:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15575              		.loc 5 323 24 view .LVU4102
 15576 03a0 1448     		ldr	r0, .L334
 15577 03a2 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 15578              	.LVL1181:
 15579              	.L324:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 601


 15580              		.loc 5 323 24 view .LVU4103
 15581              	.LBE8925:
 15582              	.LBE8926:
 15583              	.LBE8927:
 15584              	.LBE8966:
 15585              	.LBB8967:
 15586              	.LBB8965:
 15587              	.LBB8964:
 15588              	.LBB8962:
 15589              	.LBI8962:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15590              		.loc 4 361 7 is_stmt 1 view .LVU4104
 15591              	.LBB8963:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 15592              		.loc 4 363 2 view .LVU4105
 15593              		.loc 4 365 2 view .LVU4106
 15594              		.loc 4 365 49 is_stmt 0 view .LVU4107
 15595 03a6 1022     		movs	r2, #16
 15596 03a8 3100     		movs	r1, r6
 15597 03aa 04A8     		add	r0, sp, #16
 15598              	.LVL1182:
 15599              		.loc 4 365 49 view .LVU4108
 15600 03ac FFF7FEFF 		bl	memcpy
 15601              	.LVL1183:
 15602              		.loc 4 365 49 view .LVU4109
 15603 03b0 B5E6     		b	.L289
 15604              	.LVL1184:
 15605              	.L325:
 15606              		.loc 4 365 49 view .LVU4110
 15607              	.LBE8963:
 15608              	.LBE8962:
 15609              	.LBE8964:
 15610              	.LBE8965:
 15611              	.LBE8967:
 15612              	.LBE9442:
 15613              	.LBB9443:
 15614              	.LBB9058:
 15615              	.LBB9056:
 15616              	.LBB9055:
 15617              	.LBB9054:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15618              		.loc 5 323 24 view .LVU4111
 15619 03b2 1048     		ldr	r0, .L334
 15620 03b4 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 15621              	.LVL1185:
 15622              	.L326:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15623              		.loc 5 323 24 view .LVU4112
 15624              	.LBE9054:
 15625              	.LBE9055:
 15626              	.LBE9056:
 15627              	.LBE9058:
 15628              	.LBE9443:
 15629              	.LBB9444:
 15630              	.LBB9126:
 15631              	.LBB9125:
 15632              	.LBB9124:
ARM GAS  /tmp/ccszdRNt.s 			page 602


 15633              	.LBB9122:
 15634              	.LBI9122:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15635              		.loc 4 361 7 is_stmt 1 view .LVU4113
 15636              	.LBB9123:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 15637              		.loc 4 363 2 view .LVU4114
 15638              		.loc 4 365 2 view .LVU4115
 15639              		.loc 4 365 49 is_stmt 0 view .LVU4116
 15640 03b8 1022     		movs	r2, #16
 15641 03ba 3100     		movs	r1, r6
 15642 03bc 2EA8     		add	r0, sp, #184
 15643              	.LVL1186:
 15644              		.loc 4 365 49 view .LVU4117
 15645 03be FFF7FEFF 		bl	memcpy
 15646              	.LVL1187:
 15647              		.loc 4 365 49 view .LVU4118
 15648 03c2 FBE6     		b	.L298
 15649              	.LVL1188:
 15650              	.L327:
 15651              		.loc 4 365 49 view .LVU4119
 15652              	.LBE9123:
 15653              	.LBE9122:
 15654              	.LBE9124:
 15655              	.LBE9125:
 15656              	.LBE9126:
 15657              	.LBE9444:
 15658              	.LBB9445:
 15659              	.LBB9176:
 15660              	.LBB9137:
 15661              	.LBB9136:
 15662              	.LBB9135:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15663              		.loc 5 323 24 view .LVU4120
 15664 03c4 0B48     		ldr	r0, .L334
 15665 03c6 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 15666              	.LVL1189:
 15667              	.L328:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15668              		.loc 5 323 24 view .LVU4121
 15669              	.LBE9135:
 15670              	.LBE9136:
 15671              	.LBE9137:
 15672              	.LBE9176:
 15673              	.LBB9177:
 15674              	.LBB9175:
 15675              	.LBB9174:
 15676              	.LBB9172:
 15677              	.LBI9172:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15678              		.loc 4 361 7 is_stmt 1 view .LVU4122
 15679              	.LBB9173:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 15680              		.loc 4 363 2 view .LVU4123
 15681              		.loc 4 365 2 view .LVU4124
 15682              		.loc 4 365 49 is_stmt 0 view .LVU4125
 15683 03ca 1022     		movs	r2, #16
ARM GAS  /tmp/ccszdRNt.s 			page 603


 15684 03cc 3100     		movs	r1, r6
 15685 03ce 28A8     		add	r0, sp, #160
 15686              	.LVL1190:
 15687              		.loc 4 365 49 view .LVU4126
 15688 03d0 FFF7FEFF 		bl	memcpy
 15689              	.LVL1191:
 15690              		.loc 4 365 49 view .LVU4127
 15691 03d4 0FE7     		b	.L301
 15692              	.LVL1192:
 15693              	.L329:
 15694              		.loc 4 365 49 view .LVU4128
 15695              	.LBE9173:
 15696              	.LBE9172:
 15697              	.LBE9174:
 15698              	.LBE9175:
 15699              	.LBE9177:
 15700              	.LBE9445:
 15701              	.LBB9446:
 15702              	.LBB9281:
 15703              	.LBB9280:
 15704              	.LBB9279:
 15705              	.LBB9277:
 15706              	.LBI9277:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15707              		.loc 4 361 7 is_stmt 1 view .LVU4129
 15708              	.LBB9278:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 15709              		.loc 4 363 2 view .LVU4130
 15710              		.loc 4 365 2 view .LVU4131
 15711              		.loc 4 365 49 is_stmt 0 view .LVU4132
 15712 03d6 1022     		movs	r2, #16
 15713 03d8 3100     		movs	r1, r6
 15714 03da 40A8     		add	r0, sp, #256
 15715              	.LVL1193:
 15716              		.loc 4 365 49 view .LVU4133
 15717 03dc FFF7FEFF 		bl	memcpy
 15718              	.LVL1194:
 15719              		.loc 4 365 49 view .LVU4134
 15720 03e0 45E7     		b	.L307
 15721              	.LVL1195:
 15722              	.L330:
 15723              		.loc 4 365 49 view .LVU4135
 15724              	.LBE9278:
 15725              	.LBE9277:
 15726              	.LBE9279:
 15727              	.LBE9280:
 15728              	.LBE9281:
 15729              	.LBE9446:
 15730              	.LBB9447:
 15731              	.LBB9331:
 15732              	.LBB9292:
 15733              	.LBB9291:
 15734              	.LBB9290:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15735              		.loc 5 323 24 view .LVU4136
 15736 03e2 0448     		ldr	r0, .L334
 15737 03e4 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
ARM GAS  /tmp/ccszdRNt.s 			page 604


 15738              	.LVL1196:
 15739              	.L331:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 15740              		.loc 5 323 24 view .LVU4137
 15741              	.LBE9290:
 15742              	.LBE9291:
 15743              	.LBE9292:
 15744              	.LBE9331:
 15745              	.LBB9332:
 15746              	.LBB9330:
 15747              	.LBB9329:
 15748              	.LBB9327:
 15749              	.LBI9327:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 15750              		.loc 4 361 7 is_stmt 1 view .LVU4138
 15751              	.LBB9328:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 15752              		.loc 4 363 2 view .LVU4139
 15753              		.loc 4 365 2 view .LVU4140
 15754              		.loc 4 365 49 is_stmt 0 view .LVU4141
 15755 03e8 1022     		movs	r2, #16
 15756 03ea 3100     		movs	r1, r6
 15757 03ec 3AA8     		add	r0, sp, #232
 15758              	.LVL1197:
 15759              		.loc 4 365 49 view .LVU4142
 15760 03ee FFF7FEFF 		bl	memcpy
 15761              	.LVL1198:
 15762              		.loc 4 365 49 view .LVU4143
 15763 03f2 59E7     		b	.L310
 15764              	.L335:
 15765              		.align	2
 15766              	.L334:
 15767 03f4 00000000 		.word	.LC0
 15768              	.LBE9328:
 15769              	.LBE9327:
 15770              	.LBE9329:
 15771              	.LBE9330:
 15772              	.LBE9332:
 15773              	.LBE9447:
 15774              		.cfi_endproc
 15775              	.LFE3877:
 15777              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reall
 15778              		.align	1
 15779              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insert
 15780              		.syntax unified
 15781              		.code	16
 15782              		.thumb_func
 15783              		.fpu softvfp
 15785              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_E
 15786              	.LVL1199:
 15787              	.LFB4421:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 15788              		.loc 9 426 7 is_stmt 1 view -0
 15789              		.cfi_startproc
 15790              		@ args = 0, pretend = 0, frame = 16
 15791              		@ frame_needed = 0, uses_anonymous_args = 0
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
ARM GAS  /tmp/ccszdRNt.s 			page 605


 15792              		.loc 9 426 7 is_stmt 0 view .LVU4145
 15793 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 15794              	.LCFI50:
 15795              		.cfi_def_cfa_offset 20
 15796              		.cfi_offset 4, -20
 15797              		.cfi_offset 5, -16
 15798              		.cfi_offset 6, -12
 15799              		.cfi_offset 7, -8
 15800              		.cfi_offset 14, -4
 15801 0002 DE46     		mov	lr, fp
 15802 0004 5746     		mov	r7, r10
 15803 0006 4E46     		mov	r6, r9
 15804 0008 4546     		mov	r5, r8
 15805 000a E0B5     		push	{r5, r6, r7, lr}
 15806              	.LCFI51:
 15807              		.cfi_def_cfa_offset 36
 15808              		.cfi_offset 8, -36
 15809              		.cfi_offset 9, -32
 15810              		.cfi_offset 10, -28
 15811              		.cfi_offset 11, -24
 15812 000c 85B0     		sub	sp, sp, #20
 15813              	.LCFI52:
 15814              		.cfi_def_cfa_offset 56
 15815 000e 8046     		mov	r8, r0
 15816 0010 1500     		movs	r5, r2
 15817              	.LVL1200:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 15818              		.loc 9 426 7 view .LVU4146
 15819 0012 0123     		movs	r3, #1
 15820 0014 0293     		str	r3, [sp, #8]
 15821              	.LVL1201:
 15822              	.LBB9638:
 15823              	.LBI9638:
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 15824              		.loc 13 1753 7 is_stmt 1 view .LVU4147
 15825              	.LBB9639:
 15826              	.LBB9640:
 15827              	.LBI9640:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15828              		.loc 13 915 7 view .LVU4148
 15829              	.LBB9641:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15830              		.loc 13 916 40 is_stmt 0 view .LVU4149
 15831 0016 4268     		ldr	r2, [r0, #4]
 15832              	.LVL1202:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15833              		.loc 13 916 50 view .LVU4150
 15834 0018 0368     		ldr	r3, [r0]
 15835              	.LVL1203:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15836              		.loc 13 916 50 view .LVU4151
 15837 001a D01A     		subs	r0, r2, r3
 15838              	.LVL1204:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15839              		.loc 13 916 50 view .LVU4152
 15840 001c C010     		asrs	r0, r0, #3
 15841 001e 8300     		lsls	r3, r0, #2
ARM GAS  /tmp/ccszdRNt.s 			page 606


 15842 0020 1B18     		adds	r3, r3, r0
 15843 0022 1C01     		lsls	r4, r3, #4
 15844 0024 1B19     		adds	r3, r3, r4
 15845 0026 1C02     		lsls	r4, r3, #8
 15846 0028 1B19     		adds	r3, r3, r4
 15847 002a 1C04     		lsls	r4, r3, #16
 15848 002c 1C19     		adds	r4, r3, r4
 15849 002e 6400     		lsls	r4, r4, #1
 15850 0030 2418     		adds	r4, r4, r0
 15851              	.LVL1205:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15852              		.loc 13 916 50 view .LVU4153
 15853              	.LBE9641:
 15854              	.LBE9640:
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 15855              		.loc 13 1755 17 view .LVU4154
 15856 0032 564B     		ldr	r3, .L364
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 15857              		.loc 13 1755 26 view .LVU4155
 15858 0034 0120     		movs	r0, #1
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 15859              		.loc 13 1755 2 view .LVU4156
 15860 0036 A342     		cmp	r3, r4
 15861 0038 3AD0     		beq	.L357
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 15862              		.loc 13 1758 45 view .LVU4157
 15863 003a 0394     		str	r4, [sp, #12]
 15864              	.LVL1206:
 15865              	.LBB9642:
 15866              	.LBI9642:
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 15867              		.loc 12 222 5 is_stmt 1 view .LVU4158
 15868              	.LBB9643:
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 15869              		.loc 12 227 7 is_stmt 0 view .LVU4159
 15870 003c 8442     		cmp	r4, r0
 15871 003e 3AD3     		bcc	.L353
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 15872              		.loc 12 229 14 view .LVU4160
 15873 0040 03AB     		add	r3, sp, #12
 15874              	.LVL1207:
 15875              	.L338:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 15876              		.loc 12 229 14 view .LVU4161
 15877              	.LBE9643:
 15878              	.LBE9642:
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 15879              		.loc 13 1758 33 view .LVU4162
 15880 0042 1868     		ldr	r0, [r3]
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 15881              		.loc 13 1758 18 view .LVU4163
 15882 0044 2418     		adds	r4, r4, r0
 15883              	.LVL1208:
 15884              	.LBB9645:
 15885              	.LBI9645:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 15886              		.loc 13 915 7 is_stmt 1 view .LVU4164
ARM GAS  /tmp/ccszdRNt.s 			page 607


 15887              	.LBB9646:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15888              		.loc 13 916 50 is_stmt 0 view .LVU4165
 15889 0046 4346     		mov	r3, r8
 15890 0048 1B68     		ldr	r3, [r3]
 15891 004a D21A     		subs	r2, r2, r3
 15892 004c D210     		asrs	r2, r2, #3
 15893 004e 9300     		lsls	r3, r2, #2
 15894 0050 9B18     		adds	r3, r3, r2
 15895 0052 1801     		lsls	r0, r3, #4
 15896 0054 1B18     		adds	r3, r3, r0
 15897 0056 1802     		lsls	r0, r3, #8
 15898 0058 1B18     		adds	r3, r3, r0
 15899 005a 1804     		lsls	r0, r3, #16
 15900 005c 1B18     		adds	r3, r3, r0
 15901 005e 5B00     		lsls	r3, r3, #1
 15902 0060 9B18     		adds	r3, r3, r2
 15903              	.LVL1209:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 15904              		.loc 13 916 50 view .LVU4166
 15905              	.LBE9646:
 15906              	.LBE9645:
 15907              		.loc 13 1759 48 view .LVU4167
 15908 0062 9C42     		cmp	r4, r3
 15909 0064 29D3     		bcc	.L354
 15910              		.loc 13 1759 25 view .LVU4168
 15911 0066 494B     		ldr	r3, .L364
 15912 0068 9C42     		cmp	r4, r3
 15913 006a 28D8     		bhi	.L358
 15914              	.LVL1210:
 15915              	.L339:
 15916              		.loc 13 1759 25 view .LVU4169
 15917              	.LBE9639:
 15918              	.LBE9638:
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 15919              		.loc 9 437 15 view .LVU4170
 15920 006c 4346     		mov	r3, r8
 15921 006e 1B68     		ldr	r3, [r3]
 15922 0070 9B46     		mov	fp, r3
 15923              	.LVL1211:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 15924              		.loc 9 438 15 view .LVU4171
 15925 0072 4346     		mov	r3, r8
 15926              	.LVL1212:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 15927              		.loc 9 438 15 view .LVU4172
 15928 0074 5B68     		ldr	r3, [r3, #4]
 15929 0076 9946     		mov	r9, r3
 15930              	.LVL1213:
 15931              	.LBB9649:
 15932              	.LBI9649:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 15933              		.loc 13 808 7 is_stmt 1 view .LVU4173
 15934              	.LBB9650:
 15935              	.LBI9650:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 15936              		.loc 14 806 7 view .LVU4174
ARM GAS  /tmp/ccszdRNt.s 			page 608


 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 15937              		.loc 14 806 7 is_stmt 0 view .LVU4175
 15938              	.LBE9650:
 15939              	.LBE9649:
 15940              	.LBB9651:
 15941              	.LBI9651:
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 15942              		.loc 14 989 5 is_stmt 1 view .LVU4176
 15943              	.LBB9652:
 15944              		.loc 14 992 27 is_stmt 0 view .LVU4177
 15945 0078 0E00     		movs	r6, r1
 15946 007a 5B46     		mov	r3, fp
 15947              	.LVL1214:
 15948              		.loc 14 992 27 view .LVU4178
 15949 007c CF1A     		subs	r7, r1, r3
 15950              	.LVL1215:
 15951              		.loc 14 992 27 view .LVU4179
 15952              	.LBE9652:
 15953              	.LBE9651:
 15954              	.LBB9653:
 15955              	.LBI9653:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 15956              		.loc 13 340 7 is_stmt 1 view .LVU4180
 15957              	.LBB9654:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 15958              		.loc 13 343 18 is_stmt 0 view .LVU4181
 15959 007e 002C     		cmp	r4, #0
 15960 0080 21D0     		beq	.L356
 15961              	.LVL1216:
 15962              	.LBB9655:
 15963              	.LBI9655:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 15964              		.loc 10 443 7 is_stmt 1 view .LVU4182
 15965              	.LBB9656:
 15966              	.LBI9656:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 15967              		.loc 7 102 7 view .LVU4183
 15968              	.LBB9657:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 15969              		.loc 7 104 2 is_stmt 0 view .LVU4184
 15970 0082 424B     		ldr	r3, .L364
 15971 0084 9C42     		cmp	r4, r3
 15972 0086 1CD8     		bhi	.L359
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15973              		.loc 7 114 41 view .LVU4185
 15974 0088 6000     		lsls	r0, r4, #1
 15975 008a 0019     		adds	r0, r0, r4
 15976 008c C000     		lsls	r0, r0, #3
 15977 008e FFF7FEFF 		bl	_Znwj
 15978              	.LVL1217:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15979              		.loc 7 114 41 view .LVU4186
 15980 0092 0190     		str	r0, [sp, #4]
 15981              	.LVL1218:
 15982              	.L340:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 15983              		.loc 7 114 41 view .LVU4187
ARM GAS  /tmp/ccszdRNt.s 			page 609


 15984              	.LBE9657:
 15985              	.LBE9656:
 15986              	.LBE9655:
 15987              	.LBE9654:
 15988              	.LBE9653:
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before,
 15989              		.loc 9 449 28 view .LVU4188
 15990 0094 019B     		ldr	r3, [sp, #4]
 15991 0096 D819     		adds	r0, r3, r7
 15992              	.LVL1219:
 15993              	.LBB9662:
 15994              	.LBI9662:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 15995              		.loc 10 482 2 is_stmt 1 view .LVU4189
 15996              	.LBB9663:
 15997              	.LBI9663:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 15998              		.loc 7 144 2 view .LVU4190
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 15999              		.loc 7 144 2 is_stmt 0 view .LVU4191
 16000              	.LBE9663:
 16001              	.LBE9662:
 16002              		.loc 11 174 3 is_stmt 1 view .LVU4192
 16003              	.LBB9697:
 16004              	.LBB9695:
 16005              	.LBB9664:
 16006              	.LBI9664:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 16007              		.loc 5 448 7 view .LVU4193
 16008              	.LBB9665:
 16009              	.LBB9666:
 16010              	.LBI9666:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16011              		.loc 5 190 7 view .LVU4194
 16012              	.LBB9667:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16013              		.loc 5 193 51 is_stmt 0 view .LVU4195
 16014 0098 0300     		movs	r3, r0
 16015 009a 0833     		adds	r3, r3, #8
 16016              	.LVL1220:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16017              		.loc 5 193 51 view .LVU4196
 16018              	.LBE9667:
 16019              	.LBE9666:
 16020              	.LBB9668:
 16021              	.LBI9668:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16022              		.loc 5 290 7 is_stmt 1 view .LVU4197
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16023              		.loc 5 290 7 is_stmt 0 view .LVU4198
 16024              	.LBE9668:
 16025              	.LBB9669:
 16026              	.LBI9669:
 16027              		.loc 20 97 19 is_stmt 1 view .LVU4199
 16028              	.LBB9670:
 16029              	.LBI9670:
 16030              		.loc 10 514 7 view .LVU4200
ARM GAS  /tmp/ccszdRNt.s 			page 610


 16031              	.LBB9671:
 16032              	.LBI9671:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16033              		.loc 6 141 7 view .LVU4201
 16034              	.LBB9672:
 16035              	.LBI9672:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16036              		.loc 7 83 7 view .LVU4202
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16037              		.loc 7 83 7 is_stmt 0 view .LVU4203
 16038              	.LBE9672:
 16039              	.LBE9671:
 16040              	.LBE9670:
 16041              	.LBE9669:
 16042              	.LBB9673:
 16043              	.LBI9673:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 16044              		.loc 5 159 2 is_stmt 1 view .LVU4204
 16045              	.LBB9674:
 16046              	.LBB9675:
 16047              	.LBI9675:
 16048              		.loc 8 99 5 view .LVU4205
 16049              		.loc 8 99 5 is_stmt 0 view .LVU4206
 16050              	.LBE9675:
 16051              	.LBB9676:
 16052              	.LBI9676:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16053              		.loc 6 141 7 is_stmt 1 view .LVU4207
 16054              	.LBB9677:
 16055              	.LBI9677:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16056              		.loc 7 83 7 view .LVU4208
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16057              		.loc 7 83 7 is_stmt 0 view .LVU4209
 16058              	.LBE9677:
 16059              	.LBE9676:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16060              		.loc 5 160 46 view .LVU4210
 16061 009c 0360     		str	r3, [r0]
 16062              	.LVL1221:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16063              		.loc 5 160 46 view .LVU4211
 16064              	.LBE9674:
 16065              	.LBE9673:
 16066              	.LBB9678:
 16067              	.LBI9678:
 16068              		.loc 6 153 7 is_stmt 1 view .LVU4212
 16069              	.LBB9679:
 16070              	.LBI9679:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16071              		.loc 7 89 7 view .LVU4213
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16072              		.loc 7 89 7 is_stmt 0 view .LVU4214
 16073              	.LBE9679:
 16074              	.LBE9678:
 16075              	.LBB9680:
 16076              	.LBI9680:
ARM GAS  /tmp/ccszdRNt.s 			page 611


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16077              		.loc 5 186 7 is_stmt 1 view .LVU4215
 16078              	.LBB9681:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16079              		.loc 5 187 28 is_stmt 0 view .LVU4216
 16080 009e 2968     		ldr	r1, [r5]
 16081              	.LVL1222:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16082              		.loc 5 187 28 view .LVU4217
 16083              	.LBE9681:
 16084              	.LBE9680:
 16085              	.LBB9682:
 16086              	.LBI9682:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16087              		.loc 5 186 7 is_stmt 1 view .LVU4218
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16088              		.loc 5 186 7 is_stmt 0 view .LVU4219
 16089              	.LBE9682:
 16090              	.LBB9683:
 16091              	.LBI9683:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16092              		.loc 5 936 7 is_stmt 1 view .LVU4220
 16093              	.LBB9684:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16094              		.loc 5 937 16 is_stmt 0 view .LVU4221
 16095 00a0 6A68     		ldr	r2, [r5, #4]
 16096              	.LVL1223:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16097              		.loc 5 937 16 view .LVU4222
 16098              	.LBE9684:
 16099              	.LBE9683:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16100              		.loc 5 451 9 view .LVU4223
 16101 00a2 8A18     		adds	r2, r1, r2
 16102              	.LVL1224:
 16103              	.LBB9685:
 16104              	.LBI9685:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 16105              		.loc 5 263 9 is_stmt 1 view .LVU4224
 16106              	.LBB9686:
 16107              	.LBB9687:
 16108              	.LBI9687:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 16109              		.loc 5 243 9 view .LVU4225
 16110              	.LBB9688:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16111              		.loc 5 247 11 is_stmt 0 view .LVU4226
 16112 00a4 0023     		movs	r3, #0
 16113 00a6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 16114              	.LVL1225:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16115              		.loc 5 247 11 view .LVU4227
 16116              	.LBE9688:
 16117              	.LBE9687:
 16118              	.LBE9686:
 16119              	.LBE9685:
 16120              	.LBE9665:
ARM GAS  /tmp/ccszdRNt.s 			page 612


 16121              	.LBE9664:
 16122              	.LBE9695:
 16123              	.LBE9697:
 16124              	.LBB9698:
 16125              	.LBI9698:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 16126              		.loc 13 462 7 is_stmt 1 view .LVU4228
 16127              	.LBB9699:
 16128              	.LBB9700:
 16129              	.LBI9700:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 16130              		.loc 13 450 7 view .LVU4229
 16131              	.LBB9701:
 16132              	.LBI9701:
 16133              		.loc 15 958 5 view .LVU4230
 16134              	.LBB9702:
 16135              	.LBI9702:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 16136              		.loc 15 936 5 view .LVU4231
 16137              	.LBB9703:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 16138              		.loc 15 948 24 is_stmt 0 view .LVU4232
 16139 00aa 019D     		ldr	r5, [sp, #4]
 16140              	.LVL1226:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 16141              		.loc 15 948 24 view .LVU4233
 16142              	.LBE9703:
 16143              	.LBE9702:
 16144              	.LBE9701:
 16145              	.LBE9700:
 16146              	.LBE9699:
 16147              	.LBE9698:
 16148              	.LBB9785:
 16149              	.LBB9696:
 16150              	.LBB9694:
 16151              	.LBB9693:
 16152              	.LBB9692:
 16153              	.LBB9691:
 16154              	.LBB9690:
 16155              	.LBB9689:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16156              		.loc 5 247 11 view .LVU4234
 16157 00ac 5F46     		mov	r7, fp
 16158              	.LVL1227:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16159              		.loc 5 247 11 view .LVU4235
 16160 00ae 16E0     		b	.L346
 16161              	.LVL1228:
 16162              	.L357:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 16163              		.loc 5 247 11 view .LVU4236
 16164              	.LBE9689:
 16165              	.LBE9690:
 16166              	.LBE9691:
 16167              	.LBE9692:
 16168              	.LBE9693:
 16169              	.LBE9694:
ARM GAS  /tmp/ccszdRNt.s 			page 613


 16170              	.LBE9696:
 16171              	.LBE9785:
 16172              	.LBB9786:
 16173              	.LBB9648:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 16174              		.loc 13 1756 24 view .LVU4237
 16175 00b0 3748     		ldr	r0, .L364+4
 16176              	.LVL1229:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 16177              		.loc 13 1756 24 view .LVU4238
 16178 00b2 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 16179              	.LVL1230:
 16180              	.L353:
 16181              	.LBB9647:
 16182              	.LBB9644:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 16183              		.loc 12 228 9 view .LVU4239
 16184 00b6 02AB     		add	r3, sp, #8
 16185              	.LVL1231:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 16186              		.loc 12 228 9 view .LVU4240
 16187 00b8 C3E7     		b	.L338
 16188              	.LVL1232:
 16189              	.L354:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 16190              		.loc 12 228 9 view .LVU4241
 16191              	.LBE9644:
 16192              	.LBE9647:
 16193              		.loc 13 1759 48 view .LVU4242
 16194 00ba 344C     		ldr	r4, .L364
 16195              	.LVL1233:
 16196              		.loc 13 1759 48 view .LVU4243
 16197 00bc D6E7     		b	.L339
 16198              	.LVL1234:
 16199              	.L358:
 16200              		.loc 13 1759 48 view .LVU4244
 16201 00be 334C     		ldr	r4, .L364
 16202              	.LVL1235:
 16203              		.loc 13 1759 48 view .LVU4245
 16204 00c0 D4E7     		b	.L339
 16205              	.LVL1236:
 16206              	.L359:
 16207              		.loc 13 1759 48 view .LVU4246
 16208              	.LBE9648:
 16209              	.LBE9786:
 16210              	.LBB9787:
 16211              	.LBB9661:
 16212              	.LBB9660:
 16213              	.LBB9659:
 16214              	.LBB9658:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16215              		.loc 7 105 26 view .LVU4247
 16216 00c2 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 16217              	.LVL1237:
 16218              	.L356:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16219              		.loc 7 105 26 view .LVU4248
ARM GAS  /tmp/ccszdRNt.s 			page 614


 16220              	.LBE9658:
 16221              	.LBE9659:
 16222              	.LBE9660:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16223              		.loc 13 343 18 view .LVU4249
 16224 00c6 0023     		movs	r3, #0
 16225              	.LVL1238:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16226              		.loc 13 343 18 view .LVU4250
 16227 00c8 0193     		str	r3, [sp, #4]
 16228 00ca E3E7     		b	.L340
 16229              	.LVL1239:
 16230              	.L360:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 16231              		.loc 13 343 18 view .LVU4251
 16232              	.LBE9661:
 16233              	.LBE9787:
 16234              	.LBB9788:
 16235              	.LBB9783:
 16236              	.LBB9781:
 16237              	.LBB9779:
 16238              	.LBB9777:
 16239              	.LBB9775:
 16240              	.LBB9704:
 16241              	.LBB9705:
 16242              	.LBB9706:
 16243              	.LBB9707:
 16244              	.LBB9708:
 16245              	.LBB9709:
 16246              	.LBB9710:
 16247              	.LBI9710:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 16248              		.loc 4 361 7 is_stmt 1 view .LVU4252
 16249              	.LBB9711:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 16250              		.loc 4 363 2 view .LVU4253
 16251              		.loc 4 365 2 view .LVU4254
 16252              		.loc 4 365 49 is_stmt 0 view .LVU4255
 16253 00cc 0832     		adds	r2, r2, #8
 16254 00ce 5146     		mov	r1, r10
 16255 00d0 FFF7FEFF 		bl	memcpy
 16256              	.LVL1240:
 16257              		.loc 4 365 49 view .LVU4256
 16258 00d4 11E0     		b	.L344
 16259              	.LVL1241:
 16260              	.L361:
 16261              		.loc 4 365 49 view .LVU4257
 16262              	.LBE9711:
 16263              	.LBE9710:
 16264              	.LBE9709:
 16265              	.LBE9708:
 16266              	.LBE9707:
 16267              	.LBE9706:
 16268              	.LBB9746:
 16269              	.LBB9747:
 16270              	.LBB9748:
 16271              	.LBB9749:
ARM GAS  /tmp/ccszdRNt.s 			page 615


 16272              	.LBB9750:
 16273              	.LBB9751:
 16274              	.LBI9751:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 16275              		.loc 5 236 7 is_stmt 1 view .LVU4258
 16276              	.LBB9752:
 16277              	.LBB9753:
 16278              	.LBI9753:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 16279              		.loc 10 469 7 view .LVU4259
 16280              	.LBB9754:
 16281              	.LBI9754:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 16282              		.loc 7 119 7 view .LVU4260
 16283              	.LBB9755:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16284              		.loc 7 128 19 is_stmt 0 view .LVU4261
 16285 00d6 FFF7FEFF 		bl	_ZdlPv
 16286              	.LVL1242:
 16287              	.L345:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16288              		.loc 7 128 19 view .LVU4262
 16289              	.LBE9755:
 16290              	.LBE9754:
 16291              	.LBE9753:
 16292              	.LBE9752:
 16293              	.LBE9751:
 16294              	.LBE9750:
 16295              	.LBE9749:
 16296              	.LBB9762:
 16297              	.LBI9762:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16298              		.loc 5 150 14 is_stmt 1 view .LVU4263
 16299              	.LBB9763:
 16300              	.LBI9763:
 16301              		.loc 6 153 7 view .LVU4264
 16302              	.LBB9764:
 16303              	.LBI9764:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16304              		.loc 7 89 7 view .LVU4265
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16305              		.loc 7 89 7 is_stmt 0 view .LVU4266
 16306              	.LBE9764:
 16307              	.LBE9763:
 16308              	.LBE9762:
 16309              	.LBE9748:
 16310              	.LBE9747:
 16311              	.LBE9746:
 16312              	.LBE9705:
 16313              	.LBE9704:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 16314              		.loc 15 949 7 is_stmt 1 view .LVU4267
 16315 00da 1837     		adds	r7, r7, #24
 16316              	.LVL1243:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 16317              		.loc 15 949 7 is_stmt 0 view .LVU4268
 16318 00dc 1835     		adds	r5, r5, #24
ARM GAS  /tmp/ccszdRNt.s 			page 616


 16319              	.LVL1244:
 16320              	.L346:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 16321              		.loc 15 949 22 is_stmt 1 view .LVU4269
 16322 00de BE42     		cmp	r6, r7
 16323 00e0 19D0     		beq	.L342
 16324              	.LVL1245:
 16325              	.LBB9773:
 16326              	.LBI9704:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 16327              		.loc 15 905 5 view .LVU4270
 16328              	.LBB9771:
 16329              	.LBB9768:
 16330              	.LBI9706:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 16331              		.loc 10 482 2 view .LVU4271
 16332              	.LBB9744:
 16333              	.LBI9707:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 16334              		.loc 7 144 2 view .LVU4272
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 16335              		.loc 7 144 2 is_stmt 0 view .LVU4273
 16336              	.LBE9744:
 16337              	.LBE9768:
 16338              	.LBE9771:
 16339              	.LBE9773:
 16340              	.LBE9775:
 16341              	.LBE9777:
 16342              	.LBE9779:
 16343              	.LBE9781:
 16344              	.LBE9783:
 16345              	.LBE9788:
 16346              		.loc 11 174 3 is_stmt 1 view .LVU4274
 16347              	.LBB9789:
 16348              	.LBB9784:
 16349              	.LBB9782:
 16350              	.LBB9780:
 16351              	.LBB9778:
 16352              	.LBB9776:
 16353              	.LBB9774:
 16354              	.LBB9772:
 16355              	.LBB9769:
 16356              	.LBB9745:
 16357              	.LBB9743:
 16358              	.LBI9708:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 16359              		.loc 5 552 7 view .LVU4275
 16360              	.LBB9742:
 16361              	.LBB9712:
 16362              	.LBI9712:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16363              		.loc 5 190 7 view .LVU4276
 16364              	.LBB9713:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16365              		.loc 5 193 51 is_stmt 0 view .LVU4277
 16366 00e2 2800     		movs	r0, r5
 16367 00e4 0830     		adds	r0, r0, #8
ARM GAS  /tmp/ccszdRNt.s 			page 617


 16368              	.LVL1246:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16369              		.loc 5 193 51 view .LVU4278
 16370              	.LBE9713:
 16371              	.LBE9712:
 16372              	.LBB9714:
 16373              	.LBI9714:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16374              		.loc 5 286 7 is_stmt 1 view .LVU4279
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16375              		.loc 5 286 7 is_stmt 0 view .LVU4280
 16376              	.LBE9714:
 16377              	.LBB9715:
 16378              	.LBI9715:
 16379              		.loc 8 99 5 is_stmt 1 view .LVU4281
 16380              		.loc 8 99 5 is_stmt 0 view .LVU4282
 16381              	.LBE9715:
 16382              	.LBB9716:
 16383              	.LBI9716:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 16384              		.loc 5 159 2 is_stmt 1 view .LVU4283
 16385              	.LBB9717:
 16386              	.LBB9718:
 16387              	.LBI9718:
 16388              		.loc 8 99 5 view .LVU4284
 16389              		.loc 8 99 5 is_stmt 0 view .LVU4285
 16390              	.LBE9718:
 16391              	.LBB9719:
 16392              	.LBI9719:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16393              		.loc 6 141 7 is_stmt 1 view .LVU4286
 16394              	.LBB9720:
 16395              	.LBI9720:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16396              		.loc 7 83 7 view .LVU4287
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16397              		.loc 7 83 7 is_stmt 0 view .LVU4288
 16398              	.LBE9720:
 16399              	.LBE9719:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16400              		.loc 5 160 46 view .LVU4289
 16401 00e6 2860     		str	r0, [r5]
 16402              	.LVL1247:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16403              		.loc 5 160 46 view .LVU4290
 16404              	.LBE9717:
 16405              	.LBE9716:
 16406              	.LBB9721:
 16407              	.LBI9721:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 16408              		.loc 5 221 7 is_stmt 1 view .LVU4291
 16409              	.LBB9722:
 16410              	.LBI9722:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16411              		.loc 5 186 7 view .LVU4292
 16412              	.LBB9723:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 618


 16413              		.loc 5 187 28 is_stmt 0 view .LVU4293
 16414 00e8 3B68     		ldr	r3, [r7]
 16415              	.LVL1248:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16416              		.loc 5 187 28 view .LVU4294
 16417              	.LBE9723:
 16418              	.LBE9722:
 16419              	.LBB9724:
 16420              	.LBI9724:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16421              		.loc 5 200 7 is_stmt 1 view .LVU4295
 16422              	.LBB9725:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16423              		.loc 5 203 57 is_stmt 0 view .LVU4296
 16424 00ea 0822     		movs	r2, #8
 16425 00ec 9246     		mov	r10, r2
 16426 00ee BA44     		add	r10, r10, r7
 16427              	.LVL1249:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16428              		.loc 5 203 57 view .LVU4297
 16429              	.LBE9725:
 16430              	.LBE9724:
 16431              	.LBE9721:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 16432              		.loc 5 555 2 view .LVU4298
 16433 00f0 5345     		cmp	r3, r10
 16434 00f2 EBD0     		beq	.L360
 16435              	.LVL1250:
 16436              	.LBB9726:
 16437              	.LBI9726:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16438              		.loc 5 186 7 is_stmt 1 view .LVU4299
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16439              		.loc 5 186 7 is_stmt 0 view .LVU4300
 16440              	.LBE9726:
 16441              	.LBB9727:
 16442              	.LBI9727:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 16443              		.loc 5 178 7 is_stmt 1 view .LVU4301
 16444              	.LBB9728:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16445              		.loc 5 179 9 is_stmt 0 view .LVU4302
 16446 00f4 2B60     		str	r3, [r5]
 16447              	.LVL1251:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16448              		.loc 5 179 9 view .LVU4303
 16449              	.LBE9728:
 16450              	.LBE9727:
 16451              	.LBB9729:
 16452              	.LBI9729:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16453              		.loc 5 210 7 is_stmt 1 view .LVU4304
 16454              	.LBB9730:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16455              		.loc 5 211 9 is_stmt 0 view .LVU4305
 16456 00f6 BB68     		ldr	r3, [r7, #8]
 16457 00f8 AB60     		str	r3, [r5, #8]
ARM GAS  /tmp/ccszdRNt.s 			page 619


 16458              	.LVL1252:
 16459              	.L344:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16460              		.loc 5 211 9 view .LVU4306
 16461              	.LBE9730:
 16462              	.LBE9729:
 16463              	.LBB9731:
 16464              	.LBI9731:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16465              		.loc 5 936 7 is_stmt 1 view .LVU4307
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16466              		.loc 5 936 7 is_stmt 0 view .LVU4308
 16467              	.LBE9731:
 16468              	.LBB9732:
 16469              	.LBI9732:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 16470              		.loc 5 182 7 is_stmt 1 view .LVU4309
 16471              	.LBB9733:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16472              		.loc 5 183 9 is_stmt 0 view .LVU4310
 16473 00fa 7B68     		ldr	r3, [r7, #4]
 16474 00fc 6B60     		str	r3, [r5, #4]
 16475              	.LVL1253:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16476              		.loc 5 183 9 view .LVU4311
 16477              	.LBE9733:
 16478              	.LBE9732:
 16479              	.LBB9734:
 16480              	.LBI9734:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16481              		.loc 5 190 7 is_stmt 1 view .LVU4312
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16482              		.loc 5 190 7 is_stmt 0 view .LVU4313
 16483              	.LBE9734:
 16484              	.LBB9735:
 16485              	.LBI9735:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 16486              		.loc 5 178 7 is_stmt 1 view .LVU4314
 16487              	.LBB9736:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16488              		.loc 5 179 9 is_stmt 0 view .LVU4315
 16489 00fe 5346     		mov	r3, r10
 16490 0100 3B60     		str	r3, [r7]
 16491              	.LVL1254:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16492              		.loc 5 179 9 view .LVU4316
 16493              	.LBE9736:
 16494              	.LBE9735:
 16495              	.LBB9737:
 16496              	.LBI9737:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16497              		.loc 5 214 7 is_stmt 1 view .LVU4317
 16498              	.LBB9738:
 16499              	.LBI9738:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 16500              		.loc 5 182 7 view .LVU4318
 16501              	.LBB9739:
ARM GAS  /tmp/ccszdRNt.s 			page 620


 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16502              		.loc 5 183 9 is_stmt 0 view .LVU4319
 16503 0102 0023     		movs	r3, #0
 16504 0104 7B60     		str	r3, [r7, #4]
 16505              	.LVL1255:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16506              		.loc 5 183 9 view .LVU4320
 16507              	.LBE9739:
 16508              	.LBE9738:
 16509              	.LBB9740:
 16510              	.LBI9740:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 16511              		.loc 4 299 7 is_stmt 1 view .LVU4321
 16512              	.LBB9741:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 16513              		.loc 4 300 9 view .LVU4322
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 16514              		.loc 4 300 14 is_stmt 0 view .LVU4323
 16515 0106 5246     		mov	r2, r10
 16516 0108 1370     		strb	r3, [r2]
 16517              	.LVL1256:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 16518              		.loc 4 300 14 view .LVU4324
 16519              	.LBE9741:
 16520              	.LBE9740:
 16521              	.LBE9737:
 16522              	.LBE9742:
 16523              	.LBE9743:
 16524              	.LBE9745:
 16525              	.LBE9769:
 16526              	.LBB9770:
 16527              	.LBI9746:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 16528              		.loc 10 495 2 is_stmt 1 view .LVU4325
 16529              	.LBB9767:
 16530              	.LBI9747:
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       template<typename _Up>
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	void
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	destroy(_Up* __p)
 16531              		.loc 7 151 2 view .LVU4326
 16532              	.LBB9766:
 16533              	.LBI9748:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 16534              		.loc 5 657 7 view .LVU4327
 16535              	.LBB9765:
 16536              	.LBI9749:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16537              		.loc 5 229 7 view .LVU4328
 16538              	.LBB9761:
 16539              	.LBB9756:
 16540              	.LBI9756:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 16541              		.loc 5 221 7 view .LVU4329
 16542              	.LBB9757:
 16543              	.LBI9757:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 621


 16544              		.loc 5 186 7 view .LVU4330
 16545              	.LBB9758:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16546              		.loc 5 187 28 is_stmt 0 view .LVU4331
 16547 010a 3868     		ldr	r0, [r7]
 16548              	.LVL1257:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16549              		.loc 5 187 28 view .LVU4332
 16550              	.LBE9758:
 16551              	.LBE9757:
 16552              	.LBB9759:
 16553              	.LBI9759:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16554              		.loc 5 200 7 is_stmt 1 view .LVU4333
 16555              	.LBB9760:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16556              		.loc 5 203 57 is_stmt 0 view .LVU4334
 16557 010c 3B00     		movs	r3, r7
 16558 010e 0833     		adds	r3, r3, #8
 16559              	.LVL1258:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16560              		.loc 5 203 57 view .LVU4335
 16561              	.LBE9760:
 16562              	.LBE9759:
 16563              	.LBE9756:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 16564              		.loc 5 231 2 view .LVU4336
 16565 0110 9842     		cmp	r0, r3
 16566 0112 E0D1     		bne	.L361
 16567 0114 E1E7     		b	.L345
 16568              	.LVL1259:
 16569              	.L342:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 16570              		.loc 5 231 2 view .LVU4337
 16571              	.LBE9761:
 16572              	.LBE9765:
 16573              	.LBE9766:
 16574              	.LBE9767:
 16575              	.LBE9770:
 16576              	.LBE9772:
 16577              	.LBE9774:
 16578              	.LBE9776:
 16579              	.LBE9778:
 16580              	.LBE9780:
 16581              	.LBE9782:
 16582              	.LBE9784:
 16583              	.LBE9789:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 16584              		.loc 9 464 8 view .LVU4338
 16585 0116 1835     		adds	r5, r5, #24
 16586              	.LVL1260:
 16587              	.LBB9790:
 16588              	.LBI9790:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 16589              		.loc 13 462 7 is_stmt 1 view .LVU4339
 16590              	.LBB9791:
 16591              	.LBB9792:
ARM GAS  /tmp/ccszdRNt.s 			page 622


 16592              	.LBI9792:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 16593              		.loc 13 450 7 view .LVU4340
 16594              	.LBB9793:
 16595              	.LBI9793:
 16596              		.loc 15 958 5 view .LVU4341
 16597              	.LBB9794:
 16598              	.LBI9794:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 16599              		.loc 15 936 5 view .LVU4342
 16600 0118 08E0     		b	.L351
 16601              	.LVL1261:
 16602              	.L362:
 16603              	.LBB9795:
 16604              	.LBB9796:
 16605              	.LBB9797:
 16606              	.LBB9798:
 16607              	.LBB9799:
 16608              	.LBB9800:
 16609              	.LBB9801:
 16610              	.LBB9802:
 16611              	.LBI9802:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 16612              		.loc 4 361 7 view .LVU4343
 16613              	.LBB9803:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 16614              		.loc 4 363 2 view .LVU4344
 16615              		.loc 4 365 2 view .LVU4345
 16616              		.loc 4 365 49 is_stmt 0 view .LVU4346
 16617 011a 1022     		movs	r2, #16
 16618 011c 3900     		movs	r1, r7
 16619 011e FFF7FEFF 		bl	memcpy
 16620              	.LVL1262:
 16621              		.loc 4 365 49 view .LVU4347
 16622 0122 10E0     		b	.L349
 16623              	.LVL1263:
 16624              	.L363:
 16625              		.loc 4 365 49 view .LVU4348
 16626              	.LBE9803:
 16627              	.LBE9802:
 16628              	.LBE9801:
 16629              	.LBE9800:
 16630              	.LBE9799:
 16631              	.LBE9798:
 16632              	.LBB9838:
 16633              	.LBB9839:
 16634              	.LBB9840:
 16635              	.LBB9841:
 16636              	.LBB9842:
 16637              	.LBB9843:
 16638              	.LBI9843:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 16639              		.loc 5 236 7 is_stmt 1 view .LVU4349
 16640              	.LBB9844:
 16641              	.LBB9845:
 16642              	.LBI9845:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  /tmp/ccszdRNt.s 			page 623


 16643              		.loc 10 469 7 view .LVU4350
 16644              	.LBB9846:
 16645              	.LBI9846:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 16646              		.loc 7 119 7 view .LVU4351
 16647              	.LBB9847:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16648              		.loc 7 128 19 is_stmt 0 view .LVU4352
 16649 0124 FFF7FEFF 		bl	_ZdlPv
 16650              	.LVL1264:
 16651              	.L350:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16652              		.loc 7 128 19 view .LVU4353
 16653              	.LBE9847:
 16654              	.LBE9846:
 16655              	.LBE9845:
 16656              	.LBE9844:
 16657              	.LBE9843:
 16658              	.LBE9842:
 16659              	.LBE9841:
 16660              	.LBB9854:
 16661              	.LBI9854:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16662              		.loc 5 150 14 is_stmt 1 view .LVU4354
 16663              	.LBB9855:
 16664              	.LBI9855:
 16665              		.loc 6 153 7 view .LVU4355
 16666              	.LBB9856:
 16667              	.LBI9856:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16668              		.loc 7 89 7 view .LVU4356
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16669              		.loc 7 89 7 is_stmt 0 view .LVU4357
 16670              	.LBE9856:
 16671              	.LBE9855:
 16672              	.LBE9854:
 16673              	.LBE9840:
 16674              	.LBE9839:
 16675              	.LBE9838:
 16676              	.LBE9797:
 16677              	.LBE9796:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 16678              		.loc 15 949 7 is_stmt 1 view .LVU4358
 16679 0128 1836     		adds	r6, r6, #24
 16680              	.LVL1265:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 16681              		.loc 15 949 7 is_stmt 0 view .LVU4359
 16682 012a 1835     		adds	r5, r5, #24
 16683              	.LVL1266:
 16684              	.L351:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 16685              		.loc 15 949 22 is_stmt 1 view .LVU4360
 16686 012c B145     		cmp	r9, r6
 16687 012e 16D0     		beq	.L347
 16688              	.LVL1267:
 16689              	.LBB9865:
 16690              	.LBI9796:
ARM GAS  /tmp/ccszdRNt.s 			page 624


 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 16691              		.loc 15 905 5 view .LVU4361
 16692              	.LBB9863:
 16693              	.LBB9860:
 16694              	.LBI9798:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 16695              		.loc 10 482 2 view .LVU4362
 16696              	.LBB9836:
 16697              	.LBI9799:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 16698              		.loc 7 144 2 view .LVU4363
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 16699              		.loc 7 144 2 is_stmt 0 view .LVU4364
 16700              	.LBE9836:
 16701              	.LBE9860:
 16702              	.LBE9863:
 16703              	.LBE9865:
 16704              	.LBE9795:
 16705              	.LBE9794:
 16706              	.LBE9793:
 16707              	.LBE9792:
 16708              	.LBE9791:
 16709              	.LBE9790:
 16710              		.loc 11 174 3 is_stmt 1 view .LVU4365
 16711              	.LBB9872:
 16712              	.LBB9871:
 16713              	.LBB9870:
 16714              	.LBB9869:
 16715              	.LBB9868:
 16716              	.LBB9867:
 16717              	.LBB9866:
 16718              	.LBB9864:
 16719              	.LBB9861:
 16720              	.LBB9837:
 16721              	.LBB9835:
 16722              	.LBI9800:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 16723              		.loc 5 552 7 view .LVU4366
 16724              	.LBB9834:
 16725              	.LBB9804:
 16726              	.LBI9804:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16727              		.loc 5 190 7 view .LVU4367
 16728              	.LBB9805:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16729              		.loc 5 193 51 is_stmt 0 view .LVU4368
 16730 0130 2800     		movs	r0, r5
 16731 0132 0830     		adds	r0, r0, #8
 16732              	.LVL1268:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16733              		.loc 5 193 51 view .LVU4369
 16734              	.LBE9805:
 16735              	.LBE9804:
 16736              	.LBB9806:
 16737              	.LBI9806:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16738              		.loc 5 286 7 is_stmt 1 view .LVU4370
ARM GAS  /tmp/ccszdRNt.s 			page 625


 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 16739              		.loc 5 286 7 is_stmt 0 view .LVU4371
 16740              	.LBE9806:
 16741              	.LBB9807:
 16742              	.LBI9807:
 16743              		.loc 8 99 5 is_stmt 1 view .LVU4372
 16744              		.loc 8 99 5 is_stmt 0 view .LVU4373
 16745              	.LBE9807:
 16746              	.LBB9808:
 16747              	.LBI9808:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 16748              		.loc 5 159 2 is_stmt 1 view .LVU4374
 16749              	.LBB9809:
 16750              	.LBB9810:
 16751              	.LBI9810:
 16752              		.loc 8 99 5 view .LVU4375
 16753              		.loc 8 99 5 is_stmt 0 view .LVU4376
 16754              	.LBE9810:
 16755              	.LBB9811:
 16756              	.LBI9811:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 16757              		.loc 6 141 7 is_stmt 1 view .LVU4377
 16758              	.LBB9812:
 16759              	.LBI9812:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16760              		.loc 7 83 7 view .LVU4378
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 16761              		.loc 7 83 7 is_stmt 0 view .LVU4379
 16762              	.LBE9812:
 16763              	.LBE9811:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16764              		.loc 5 160 46 view .LVU4380
 16765 0134 2860     		str	r0, [r5]
 16766              	.LVL1269:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 16767              		.loc 5 160 46 view .LVU4381
 16768              	.LBE9809:
 16769              	.LBE9808:
 16770              	.LBB9813:
 16771              	.LBI9813:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 16772              		.loc 5 221 7 is_stmt 1 view .LVU4382
 16773              	.LBB9814:
 16774              	.LBI9814:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16775              		.loc 5 186 7 view .LVU4383
 16776              	.LBB9815:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16777              		.loc 5 187 28 is_stmt 0 view .LVU4384
 16778 0136 3368     		ldr	r3, [r6]
 16779              	.LVL1270:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16780              		.loc 5 187 28 view .LVU4385
 16781              	.LBE9815:
 16782              	.LBE9814:
 16783              	.LBB9816:
 16784              	.LBI9816:
ARM GAS  /tmp/ccszdRNt.s 			page 626


 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16785              		.loc 5 200 7 is_stmt 1 view .LVU4386
 16786              	.LBB9817:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16787              		.loc 5 203 57 is_stmt 0 view .LVU4387
 16788 0138 3700     		movs	r7, r6
 16789 013a 0837     		adds	r7, r7, #8
 16790              	.LVL1271:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16791              		.loc 5 203 57 view .LVU4388
 16792              	.LBE9817:
 16793              	.LBE9816:
 16794              	.LBE9813:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 16795              		.loc 5 555 2 view .LVU4389
 16796 013c BB42     		cmp	r3, r7
 16797 013e ECD0     		beq	.L362
 16798              	.LVL1272:
 16799              	.LBB9818:
 16800              	.LBI9818:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16801              		.loc 5 186 7 is_stmt 1 view .LVU4390
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16802              		.loc 5 186 7 is_stmt 0 view .LVU4391
 16803              	.LBE9818:
 16804              	.LBB9819:
 16805              	.LBI9819:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 16806              		.loc 5 178 7 is_stmt 1 view .LVU4392
 16807              	.LBB9820:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16808              		.loc 5 179 9 is_stmt 0 view .LVU4393
 16809 0140 2B60     		str	r3, [r5]
 16810              	.LVL1273:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16811              		.loc 5 179 9 view .LVU4394
 16812              	.LBE9820:
 16813              	.LBE9819:
 16814              	.LBB9821:
 16815              	.LBI9821:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 16816              		.loc 5 210 7 is_stmt 1 view .LVU4395
 16817              	.LBB9822:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16818              		.loc 5 211 9 is_stmt 0 view .LVU4396
 16819 0142 B368     		ldr	r3, [r6, #8]
 16820 0144 AB60     		str	r3, [r5, #8]
 16821              	.LVL1274:
 16822              	.L349:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16823              		.loc 5 211 9 view .LVU4397
 16824              	.LBE9822:
 16825              	.LBE9821:
 16826              	.LBB9823:
 16827              	.LBI9823:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16828              		.loc 5 936 7 is_stmt 1 view .LVU4398
ARM GAS  /tmp/ccszdRNt.s 			page 627


 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 16829              		.loc 5 936 7 is_stmt 0 view .LVU4399
 16830              	.LBE9823:
 16831              	.LBB9824:
 16832              	.LBI9824:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 16833              		.loc 5 182 7 is_stmt 1 view .LVU4400
 16834              	.LBB9825:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16835              		.loc 5 183 9 is_stmt 0 view .LVU4401
 16836 0146 7368     		ldr	r3, [r6, #4]
 16837 0148 6B60     		str	r3, [r5, #4]
 16838              	.LVL1275:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16839              		.loc 5 183 9 view .LVU4402
 16840              	.LBE9825:
 16841              	.LBE9824:
 16842              	.LBB9826:
 16843              	.LBI9826:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16844              		.loc 5 190 7 is_stmt 1 view .LVU4403
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16845              		.loc 5 190 7 is_stmt 0 view .LVU4404
 16846              	.LBE9826:
 16847              	.LBB9827:
 16848              	.LBI9827:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 16849              		.loc 5 178 7 is_stmt 1 view .LVU4405
 16850              	.LBB9828:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16851              		.loc 5 179 9 is_stmt 0 view .LVU4406
 16852 014a 3760     		str	r7, [r6]
 16853              	.LVL1276:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16854              		.loc 5 179 9 view .LVU4407
 16855              	.LBE9828:
 16856              	.LBE9827:
 16857              	.LBB9829:
 16858              	.LBI9829:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16859              		.loc 5 214 7 is_stmt 1 view .LVU4408
 16860              	.LBB9830:
 16861              	.LBI9830:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 16862              		.loc 5 182 7 view .LVU4409
 16863              	.LBB9831:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16864              		.loc 5 183 9 is_stmt 0 view .LVU4410
 16865 014c 0023     		movs	r3, #0
 16866 014e 7360     		str	r3, [r6, #4]
 16867              	.LVL1277:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16868              		.loc 5 183 9 view .LVU4411
 16869              	.LBE9831:
 16870              	.LBE9830:
 16871              	.LBB9832:
 16872              	.LBI9832:
ARM GAS  /tmp/ccszdRNt.s 			page 628


 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 16873              		.loc 4 299 7 is_stmt 1 view .LVU4412
 16874              	.LBB9833:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 16875              		.loc 4 300 9 view .LVU4413
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 16876              		.loc 4 300 14 is_stmt 0 view .LVU4414
 16877 0150 3B70     		strb	r3, [r7]
 16878              	.LVL1278:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 16879              		.loc 4 300 14 view .LVU4415
 16880              	.LBE9833:
 16881              	.LBE9832:
 16882              	.LBE9829:
 16883              	.LBE9834:
 16884              	.LBE9835:
 16885              	.LBE9837:
 16886              	.LBE9861:
 16887              	.LBB9862:
 16888              	.LBI9838:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 16889              		.loc 10 495 2 is_stmt 1 view .LVU4416
 16890              	.LBB9859:
 16891              	.LBI9839:
 16892              		.loc 7 151 2 view .LVU4417
 16893              	.LBB9858:
 16894              	.LBI9840:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 16895              		.loc 5 657 7 view .LVU4418
 16896              	.LBB9857:
 16897              	.LBI9841:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16898              		.loc 5 229 7 view .LVU4419
 16899              	.LBB9853:
 16900              	.LBB9848:
 16901              	.LBI9848:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 16902              		.loc 5 221 7 view .LVU4420
 16903              	.LBB9849:
 16904              	.LBI9849:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 16905              		.loc 5 186 7 view .LVU4421
 16906              	.LBB9850:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16907              		.loc 5 187 28 is_stmt 0 view .LVU4422
 16908 0152 3068     		ldr	r0, [r6]
 16909              	.LVL1279:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 16910              		.loc 5 187 28 view .LVU4423
 16911              	.LBE9850:
 16912              	.LBE9849:
 16913              	.LBB9851:
 16914              	.LBI9851:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 16915              		.loc 5 200 7 is_stmt 1 view .LVU4424
 16916              	.LBB9852:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccszdRNt.s 			page 629


 16917              		.loc 5 203 57 is_stmt 0 view .LVU4425
 16918 0154 3300     		movs	r3, r6
 16919 0156 0833     		adds	r3, r3, #8
 16920              	.LVL1280:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 16921              		.loc 5 203 57 view .LVU4426
 16922              	.LBE9852:
 16923              	.LBE9851:
 16924              	.LBE9848:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 16925              		.loc 5 231 2 view .LVU4427
 16926 0158 9842     		cmp	r0, r3
 16927 015a E3D1     		bne	.L363
 16928 015c E4E7     		b	.L350
 16929              	.LVL1281:
 16930              	.L347:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 16931              		.loc 5 231 2 view .LVU4428
 16932              	.LBE9853:
 16933              	.LBE9857:
 16934              	.LBE9858:
 16935              	.LBE9859:
 16936              	.LBE9862:
 16937              	.LBE9864:
 16938              	.LBE9866:
 16939              	.LBE9867:
 16940              	.LBE9868:
 16941              	.LBE9869:
 16942              	.LBE9870:
 16943              	.LBE9871:
 16944              	.LBE9872:
 16945              	.LBB9873:
 16946              	.LBI9873:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 16947              		.loc 13 347 7 is_stmt 1 view .LVU4429
 16948              	.LBB9874:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 16949              		.loc 13 350 2 is_stmt 0 view .LVU4430
 16950 015e 5B46     		mov	r3, fp
 16951 0160 002B     		cmp	r3, #0
 16952 0162 02D0     		beq	.L352
 16953              	.LVL1282:
 16954              	.LBB9875:
 16955              	.LBI9875:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 16956              		.loc 10 469 7 is_stmt 1 view .LVU4431
 16957              	.LBB9876:
 16958              	.LBB9877:
 16959              	.LBI9877:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 16960              		.loc 7 119 7 view .LVU4432
 16961              	.LBB9878:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16962              		.loc 7 128 19 is_stmt 0 view .LVU4433
 16963 0164 5846     		mov	r0, fp
 16964 0166 FFF7FEFF 		bl	_ZdlPv
 16965              	.LVL1283:
ARM GAS  /tmp/ccszdRNt.s 			page 630


 16966              	.L352:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 16967              		.loc 7 128 19 view .LVU4434
 16968              	.LBE9878:
 16969              	.LBE9877:
 16970              	.LBE9876:
 16971              	.LBE9875:
 16972              	.LBE9874:
 16973              	.LBE9873:
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 16974              		.loc 9 502 7 view .LVU4435
 16975 016a 4246     		mov	r2, r8
 16976 016c 019B     		ldr	r3, [sp, #4]
 16977 016e 1360     		str	r3, [r2]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 16978              		.loc 9 503 7 view .LVU4436
 16979 0170 5560     		str	r5, [r2, #4]
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 16980              		.loc 9 504 53 view .LVU4437
 16981 0172 6000     		lsls	r0, r4, #1
 16982 0174 0019     		adds	r0, r0, r4
 16983 0176 C000     		lsls	r0, r0, #3
 16984 0178 9C46     		mov	ip, r3
 16985 017a 6044     		add	r0, r0, ip
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 16986              		.loc 9 504 7 view .LVU4438
 16987 017c 9060     		str	r0, [r2, #8]
 16988              		.loc 9 505 5 view .LVU4439
 16989 017e 05B0     		add	sp, sp, #20
 16990              		@ sp needed
 16991              	.LVL1284:
 16992              	.LVL1285:
 16993              	.LVL1286:
 16994              	.LVL1287:
 16995              	.LVL1288:
 16996              		.loc 9 505 5 view .LVU4440
 16997 0180 F0BC     		pop	{r4, r5, r6, r7}
 16998 0182 BB46     		mov	fp, r7
 16999 0184 B246     		mov	r10, r6
 17000 0186 A946     		mov	r9, r5
 17001 0188 A046     		mov	r8, r4
 17002 018a F0BD     		pop	{r4, r5, r6, r7, pc}
 17003              	.L365:
 17004              		.align	2
 17005              	.L364:
 17006 018c 55555505 		.word	89478485
 17007 0190 00000000 		.word	.LC2
 17008              		.cfi_endproc
 17009              	.LFE4421:
 17011              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_
 17012              		.align	1
 17013              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5
 17014              		.syntax unified
 17015              		.code	16
 17016              		.thumb_func
 17017              		.fpu softvfp
 17019              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_
ARM GAS  /tmp/ccszdRNt.s 			page 631


 17020              	.LVL1289:
 17021              	.LFB4222:
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 17022              		.loc 9 109 7 is_stmt 1 view -0
 17023              		.cfi_startproc
 17024              		@ args = 0, pretend = 0, frame = 0
 17025              		@ frame_needed = 0, uses_anonymous_args = 0
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       emplace_back(_Args&&... __args)
 17026              		.loc 9 109 7 is_stmt 0 view .LVU4442
 17027 0000 10B5     		push	{r4, lr}
 17028              	.LCFI53:
 17029              		.cfi_def_cfa_offset 8
 17030              		.cfi_offset 4, -8
 17031              		.cfi_offset 14, -4
 17032 0002 0400     		movs	r4, r0
 17033 0004 0A00     		movs	r2, r1
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 17034              		.loc 9 112 20 view .LVU4443
 17035 0006 4068     		ldr	r0, [r0, #4]
 17036              	.LVL1290:
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 17037              		.loc 9 112 2 view .LVU4444
 17038 0008 A368     		ldr	r3, [r4, #8]
 17039 000a 9842     		cmp	r0, r3
 17040 000c 0ED0     		beq	.L367
 17041              	.LVL1291:
 17042              	.LBB9879:
 17043              	.LBI9879:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 17044              		.loc 10 482 2 is_stmt 1 view .LVU4445
 17045              	.LBB9880:
 17046              	.LBI9880:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 17047              		.loc 7 144 2 view .LVU4446
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 17048              		.loc 7 144 2 is_stmt 0 view .LVU4447
 17049              	.LBE9880:
 17050              	.LBE9879:
 17051              		.loc 11 174 3 is_stmt 1 view .LVU4448
 17052              	.LBB9907:
 17053              	.LBB9906:
 17054              	.LBB9881:
 17055              	.LBI9881:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 17056              		.loc 5 448 7 view .LVU4449
 17057              	.LBB9882:
 17058              	.LBB9883:
 17059              	.LBI9883:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17060              		.loc 5 190 7 view .LVU4450
 17061              	.LBB9884:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 17062              		.loc 5 193 51 is_stmt 0 view .LVU4451
 17063 000e 0300     		movs	r3, r0
 17064 0010 0833     		adds	r3, r3, #8
 17065              	.LVL1292:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccszdRNt.s 			page 632


 17066              		.loc 5 193 51 view .LVU4452
 17067              	.LBE9884:
 17068              	.LBE9883:
 17069              	.LBB9885:
 17070              	.LBI9885:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 17071              		.loc 5 290 7 is_stmt 1 view .LVU4453
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 17072              		.loc 5 290 7 is_stmt 0 view .LVU4454
 17073              	.LBE9885:
 17074              	.LBB9886:
 17075              	.LBI9886:
 17076              		.loc 20 97 19 is_stmt 1 view .LVU4455
 17077              	.LBB9887:
 17078              	.LBI9887:
 17079              		.loc 10 514 7 view .LVU4456
 17080              	.LBB9888:
 17081              	.LBI9888:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 17082              		.loc 6 141 7 view .LVU4457
 17083              	.LBB9889:
 17084              	.LBI9889:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17085              		.loc 7 83 7 view .LVU4458
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17086              		.loc 7 83 7 is_stmt 0 view .LVU4459
 17087              	.LBE9889:
 17088              	.LBE9888:
 17089              	.LBE9887:
 17090              	.LBE9886:
 17091              	.LBB9890:
 17092              	.LBI9890:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 17093              		.loc 5 159 2 is_stmt 1 view .LVU4460
 17094              	.LBB9891:
 17095              	.LBB9892:
 17096              	.LBI9892:
 17097              		.loc 8 99 5 view .LVU4461
 17098              		.loc 8 99 5 is_stmt 0 view .LVU4462
 17099              	.LBE9892:
 17100              	.LBB9893:
 17101              	.LBI9893:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 17102              		.loc 6 141 7 is_stmt 1 view .LVU4463
 17103              	.LBB9894:
 17104              	.LBI9894:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17105              		.loc 7 83 7 view .LVU4464
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17106              		.loc 7 83 7 is_stmt 0 view .LVU4465
 17107              	.LBE9894:
 17108              	.LBE9893:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17109              		.loc 5 160 46 view .LVU4466
 17110 0012 0360     		str	r3, [r0]
 17111              	.LVL1293:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
ARM GAS  /tmp/ccszdRNt.s 			page 633


 17112              		.loc 5 160 46 view .LVU4467
 17113              	.LBE9891:
 17114              	.LBE9890:
 17115              	.LBB9895:
 17116              	.LBI9895:
 17117              		.loc 6 153 7 is_stmt 1 view .LVU4468
 17118              	.LBB9896:
 17119              	.LBI9896:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17120              		.loc 7 89 7 view .LVU4469
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17121              		.loc 7 89 7 is_stmt 0 view .LVU4470
 17122              	.LBE9896:
 17123              	.LBE9895:
 17124              	.LBB9897:
 17125              	.LBI9897:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17126              		.loc 5 186 7 is_stmt 1 view .LVU4471
 17127              	.LBB9898:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17128              		.loc 5 187 28 is_stmt 0 view .LVU4472
 17129 0014 0968     		ldr	r1, [r1]
 17130              	.LVL1294:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17131              		.loc 5 187 28 view .LVU4473
 17132              	.LBE9898:
 17133              	.LBE9897:
 17134              	.LBB9899:
 17135              	.LBI9899:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17136              		.loc 5 186 7 is_stmt 1 view .LVU4474
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17137              		.loc 5 186 7 is_stmt 0 view .LVU4475
 17138              	.LBE9899:
 17139              	.LBB9900:
 17140              	.LBI9900:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17141              		.loc 5 936 7 is_stmt 1 view .LVU4476
 17142              	.LBB9901:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17143              		.loc 5 937 16 is_stmt 0 view .LVU4477
 17144 0016 5268     		ldr	r2, [r2, #4]
 17145              	.LVL1295:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17146              		.loc 5 937 16 view .LVU4478
 17147              	.LBE9901:
 17148              	.LBE9900:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17149              		.loc 5 451 9 view .LVU4479
 17150 0018 8A18     		adds	r2, r1, r2
 17151              	.LVL1296:
 17152              	.LBB9902:
 17153              	.LBI9902:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 17154              		.loc 5 263 9 is_stmt 1 view .LVU4480
 17155              	.LBB9903:
 17156              	.LBB9904:
ARM GAS  /tmp/ccszdRNt.s 			page 634


 17157              	.LBI9904:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 17158              		.loc 5 243 9 view .LVU4481
 17159              	.LBB9905:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17160              		.loc 5 247 11 is_stmt 0 view .LVU4482
 17161 001a 0023     		movs	r3, #0
 17162 001c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 17163              	.LVL1297:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17164              		.loc 5 247 11 view .LVU4483
 17165              	.LBE9905:
 17166              	.LBE9904:
 17167              	.LBE9903:
 17168              	.LBE9902:
 17169              	.LBE9882:
 17170              	.LBE9881:
 17171              	.LBE9906:
 17172              	.LBE9907:
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 17173              		.loc 9 117 6 view .LVU4484
 17174 0020 6368     		ldr	r3, [r4, #4]
 17175 0022 1833     		adds	r3, r3, #24
 17176 0024 6360     		str	r3, [r4, #4]
 17177              	.L368:
 17178              	.LVL1298:
 17179              	.LBB9908:
 17180              	.LBI9908:
1140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 17181              		.loc 13 1140 7 is_stmt 1 view .LVU4485
 17182              	.LBB9909:
 17183              	.LBI9909:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 17184              		.loc 13 826 7 view .LVU4486
 17185              	.LBB9910:
 17186              	.LBI9910:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17187              		.loc 14 806 7 view .LVU4487
 17188              	.LBB9911:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17189              		.loc 14 807 23 is_stmt 0 view .LVU4488
 17190 0026 6068     		ldr	r0, [r4, #4]
 17191              	.LVL1299:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17192              		.loc 14 807 23 view .LVU4489
 17193              	.LBE9911:
 17194              	.LBE9910:
 17195              	.LBE9909:
 17196              	.LBB9912:
 17197              	.LBI9912:
 867:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current - __n); }
 17198              		.loc 14 867 7 is_stmt 1 view .LVU4490
 17199              	.LBB9913:
 868:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 17200              		.loc 14 868 45 is_stmt 0 view .LVU4491
 17201 0028 1838     		subs	r0, r0, #24
 17202              	.LBB9914:
ARM GAS  /tmp/ccszdRNt.s 			page 635


 17203              	.LBI9914:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17204              		.loc 14 806 7 is_stmt 1 view .LVU4492
 17205              	.LVL1300:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17206              		.loc 14 806 7 is_stmt 0 view .LVU4493
 17207              	.LBE9914:
 17208              	.LBE9913:
 17209              	.LBE9912:
 17210              	.LBE9908:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 17211              		.loc 9 125 7 view .LVU4494
 17212              		@ sp needed
 17213              	.LVL1301:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #endif
 17214              		.loc 9 125 7 view .LVU4495
 17215 002a 10BD     		pop	{r4, pc}
 17216              	.LVL1302:
 17217              	.L367:
 17218              	.LBB9915:
 17219              	.LBI9915:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 17220              		.loc 13 826 7 is_stmt 1 view .LVU4496
 17221              	.LBB9916:
 17222              	.LBB9917:
 17223              	.LBI9917:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17224              		.loc 14 806 7 view .LVU4497
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17225              		.loc 14 806 7 is_stmt 0 view .LVU4498
 17226              	.LBE9917:
 17227              	.LBE9916:
 17228              	.LBE9915:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 17229              		.loc 9 121 4 view .LVU4499
 17230 002c 0100     		movs	r1, r0
 17231              	.LVL1303:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 17232              		.loc 9 121 4 view .LVU4500
 17233 002e 2000     		movs	r0, r4
 17234 0030 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJR
 17235              	.LVL1304:
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus > 201402L
 17236              		.loc 9 121 4 view .LVU4501
 17237 0034 F7E7     		b	.L368
 17238              		.cfi_endproc
 17239              	.LFE4222:
 17241              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_reall
 17242              		.align	1
 17243              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insert
 17244              		.syntax unified
 17245              		.code	16
 17246              		.thumb_func
 17247              		.fpu softvfp
 17249              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_
 17250              	.LVL1305:
 17251              	.LFB4448:
ARM GAS  /tmp/ccszdRNt.s 			page 636


 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 17252              		.loc 9 426 7 is_stmt 1 view -0
 17253              		.cfi_startproc
 17254              		@ args = 0, pretend = 0, frame = 16
 17255              		@ frame_needed = 0, uses_anonymous_args = 0
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 17256              		.loc 9 426 7 is_stmt 0 view .LVU4503
 17257 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 17258              	.LCFI54:
 17259              		.cfi_def_cfa_offset 20
 17260              		.cfi_offset 4, -20
 17261              		.cfi_offset 5, -16
 17262              		.cfi_offset 6, -12
 17263              		.cfi_offset 7, -8
 17264              		.cfi_offset 14, -4
 17265 0002 DE46     		mov	lr, fp
 17266 0004 5746     		mov	r7, r10
 17267 0006 4E46     		mov	r6, r9
 17268 0008 4546     		mov	r5, r8
 17269 000a E0B5     		push	{r5, r6, r7, lr}
 17270              	.LCFI55:
 17271              		.cfi_def_cfa_offset 36
 17272              		.cfi_offset 8, -36
 17273              		.cfi_offset 9, -32
 17274              		.cfi_offset 10, -28
 17275              		.cfi_offset 11, -24
 17276 000c 85B0     		sub	sp, sp, #20
 17277              	.LCFI56:
 17278              		.cfi_def_cfa_offset 56
 17279 000e 8046     		mov	r8, r0
 17280 0010 1500     		movs	r5, r2
 17281              	.LVL1306:
 426:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       _M_realloc_insert(iterator __position, _Args&&... __args)
 17282              		.loc 9 426 7 view .LVU4504
 17283 0012 0123     		movs	r3, #1
 17284 0014 0293     		str	r3, [sp, #8]
 17285              	.LVL1307:
 17286              	.LBB10108:
 17287              	.LBI10108:
1753:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 17288              		.loc 13 1753 7 is_stmt 1 view .LVU4505
 17289              	.LBB10109:
 17290              	.LBB10110:
 17291              	.LBI10110:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 17292              		.loc 13 915 7 view .LVU4506
 17293              	.LBB10111:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17294              		.loc 13 916 40 is_stmt 0 view .LVU4507
 17295 0016 4268     		ldr	r2, [r0, #4]
 17296              	.LVL1308:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17297              		.loc 13 916 50 view .LVU4508
 17298 0018 0368     		ldr	r3, [r0]
 17299              	.LVL1309:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17300              		.loc 13 916 50 view .LVU4509
ARM GAS  /tmp/ccszdRNt.s 			page 637


 17301 001a D01A     		subs	r0, r2, r3
 17302              	.LVL1310:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17303              		.loc 13 916 50 view .LVU4510
 17304 001c C010     		asrs	r0, r0, #3
 17305 001e 8300     		lsls	r3, r0, #2
 17306 0020 1B18     		adds	r3, r3, r0
 17307 0022 1C01     		lsls	r4, r3, #4
 17308 0024 1B19     		adds	r3, r3, r4
 17309 0026 1C02     		lsls	r4, r3, #8
 17310 0028 1B19     		adds	r3, r3, r4
 17311 002a 1C04     		lsls	r4, r3, #16
 17312 002c 1C19     		adds	r4, r3, r4
 17313 002e 6400     		lsls	r4, r4, #1
 17314 0030 2418     		adds	r4, r4, r0
 17315              	.LVL1311:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17316              		.loc 13 916 50 view .LVU4511
 17317              	.LBE10111:
 17318              	.LBE10110:
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 17319              		.loc 13 1755 17 view .LVU4512
 17320 0032 564B     		ldr	r3, .L397
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 17321              		.loc 13 1755 26 view .LVU4513
 17322 0034 0120     		movs	r0, #1
1755:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  __throw_length_error(__N(__s));
 17323              		.loc 13 1755 2 view .LVU4514
 17324 0036 A342     		cmp	r3, r4
 17325 0038 3AD0     		beq	.L390
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 17326              		.loc 13 1758 45 view .LVU4515
 17327 003a 0394     		str	r4, [sp, #12]
 17328              	.LVL1312:
 17329              	.LBB10112:
 17330              	.LBI10112:
 222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     {
 17331              		.loc 12 222 5 is_stmt 1 view .LVU4516
 17332              	.LBB10113:
 227:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h **** 	return __b;
 17333              		.loc 12 227 7 is_stmt 0 view .LVU4517
 17334 003c 8442     		cmp	r4, r0
 17335 003e 3AD3     		bcc	.L386
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 17336              		.loc 12 229 14 view .LVU4518
 17337 0040 03AB     		add	r3, sp, #12
 17338              	.LVL1313:
 17339              	.L371:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****     }
 17340              		.loc 12 229 14 view .LVU4519
 17341              	.LBE10113:
 17342              	.LBE10112:
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 17343              		.loc 13 1758 33 view .LVU4520
 17344 0042 1868     		ldr	r0, [r3]
1758:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	return (__len < size() || __len > max_size()) ? max_size() : __len;
 17345              		.loc 13 1758 18 view .LVU4521
ARM GAS  /tmp/ccszdRNt.s 			page 638


 17346 0044 2418     		adds	r4, r4, r0
 17347              	.LVL1314:
 17348              	.LBB10115:
 17349              	.LBI10115:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 17350              		.loc 13 915 7 is_stmt 1 view .LVU4522
 17351              	.LBB10116:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17352              		.loc 13 916 50 is_stmt 0 view .LVU4523
 17353 0046 4346     		mov	r3, r8
 17354 0048 1B68     		ldr	r3, [r3]
 17355 004a D21A     		subs	r2, r2, r3
 17356 004c D210     		asrs	r2, r2, #3
 17357 004e 9300     		lsls	r3, r2, #2
 17358 0050 9B18     		adds	r3, r3, r2
 17359 0052 1801     		lsls	r0, r3, #4
 17360 0054 1B18     		adds	r3, r3, r0
 17361 0056 1802     		lsls	r0, r3, #8
 17362 0058 1B18     		adds	r3, r3, r0
 17363 005a 1804     		lsls	r0, r3, #16
 17364 005c 1B18     		adds	r3, r3, r0
 17365 005e 5B00     		lsls	r3, r3, #1
 17366 0060 9B18     		adds	r3, r3, r2
 17367              	.LVL1315:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17368              		.loc 13 916 50 view .LVU4524
 17369              	.LBE10116:
 17370              	.LBE10115:
 17371              		.loc 13 1759 48 view .LVU4525
 17372 0062 9C42     		cmp	r4, r3
 17373 0064 29D3     		bcc	.L387
 17374              		.loc 13 1759 25 view .LVU4526
 17375 0066 494B     		ldr	r3, .L397
 17376 0068 9C42     		cmp	r4, r3
 17377 006a 28D8     		bhi	.L391
 17378              	.LVL1316:
 17379              	.L372:
 17380              		.loc 13 1759 25 view .LVU4527
 17381              	.LBE10109:
 17382              	.LBE10108:
 437:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       pointer __old_finish = this->_M_impl._M_finish;
 17383              		.loc 9 437 15 view .LVU4528
 17384 006c 4346     		mov	r3, r8
 17385 006e 1B68     		ldr	r3, [r3]
 17386 0070 9B46     		mov	fp, r3
 17387              	.LVL1317:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 17388              		.loc 9 438 15 view .LVU4529
 17389 0072 4346     		mov	r3, r8
 17390              	.LVL1318:
 438:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       const size_type __elems_before = __position - begin();
 17391              		.loc 9 438 15 view .LVU4530
 17392 0074 5B68     		ldr	r3, [r3, #4]
 17393 0076 9946     		mov	r9, r3
 17394              	.LVL1319:
 17395              	.LBB10119:
 17396              	.LBI10119:
ARM GAS  /tmp/ccszdRNt.s 			page 639


 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 17397              		.loc 13 808 7 is_stmt 1 view .LVU4531
 17398              	.LBB10120:
 17399              	.LBI10120:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17400              		.loc 14 806 7 view .LVU4532
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 17401              		.loc 14 806 7 is_stmt 0 view .LVU4533
 17402              	.LBE10120:
 17403              	.LBE10119:
 17404              	.LBB10121:
 17405              	.LBI10121:
 989:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_Iterator, _Container>& __rhs)
 17406              		.loc 14 989 5 is_stmt 1 view .LVU4534
 17407              	.LBB10122:
 17408              		.loc 14 992 27 is_stmt 0 view .LVU4535
 17409 0078 0E00     		movs	r6, r1
 17410 007a 5B46     		mov	r3, fp
 17411              	.LVL1320:
 17412              		.loc 14 992 27 view .LVU4536
 17413 007c CF1A     		subs	r7, r1, r3
 17414              	.LVL1321:
 17415              		.loc 14 992 27 view .LVU4537
 17416              	.LBE10122:
 17417              	.LBE10121:
 17418              	.LBB10123:
 17419              	.LBI10123:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 17420              		.loc 13 340 7 is_stmt 1 view .LVU4538
 17421              	.LBB10124:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 17422              		.loc 13 343 18 is_stmt 0 view .LVU4539
 17423 007e 002C     		cmp	r4, #0
 17424 0080 21D0     		beq	.L389
 17425              	.LVL1322:
 17426              	.LBB10125:
 17427              	.LBI10125:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 17428              		.loc 10 443 7 is_stmt 1 view .LVU4540
 17429              	.LBB10126:
 17430              	.LBI10126:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 17431              		.loc 7 102 7 view .LVU4541
 17432              	.LBB10127:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 17433              		.loc 7 104 2 is_stmt 0 view .LVU4542
 17434 0082 424B     		ldr	r3, .L397
 17435 0084 9C42     		cmp	r4, r3
 17436 0086 1CD8     		bhi	.L392
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17437              		.loc 7 114 41 view .LVU4543
 17438 0088 6000     		lsls	r0, r4, #1
 17439 008a 0019     		adds	r0, r0, r4
 17440 008c C000     		lsls	r0, r0, #3
 17441 008e FFF7FEFF 		bl	_Znwj
 17442              	.LVL1323:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 640


 17443              		.loc 7 114 41 view .LVU4544
 17444 0092 0190     		str	r0, [sp, #4]
 17445              	.LVL1324:
 17446              	.L373:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17447              		.loc 7 114 41 view .LVU4545
 17448              	.LBE10127:
 17449              	.LBE10126:
 17450              	.LBE10125:
 17451              	.LBE10124:
 17452              	.LBE10123:
 449:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 				   __new_start + __elems_before,
 17453              		.loc 9 449 28 view .LVU4546
 17454 0094 019B     		ldr	r3, [sp, #4]
 17455 0096 D819     		adds	r0, r3, r7
 17456              	.LVL1325:
 17457              	.LBB10132:
 17458              	.LBI10132:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 17459              		.loc 10 482 2 is_stmt 1 view .LVU4547
 17460              	.LBB10133:
 17461              	.LBI10133:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 17462              		.loc 7 144 2 view .LVU4548
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 17463              		.loc 7 144 2 is_stmt 0 view .LVU4549
 17464              	.LBE10133:
 17465              	.LBE10132:
 17466              		.loc 11 174 3 is_stmt 1 view .LVU4550
 17467              	.LBB10167:
 17468              	.LBB10165:
 17469              	.LBB10134:
 17470              	.LBI10134:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 17471              		.loc 5 448 7 view .LVU4551
 17472              	.LBB10135:
 17473              	.LBB10136:
 17474              	.LBI10136:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17475              		.loc 5 190 7 view .LVU4552
 17476              	.LBB10137:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 17477              		.loc 5 193 51 is_stmt 0 view .LVU4553
 17478 0098 0300     		movs	r3, r0
 17479 009a 0833     		adds	r3, r3, #8
 17480              	.LVL1326:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 17481              		.loc 5 193 51 view .LVU4554
 17482              	.LBE10137:
 17483              	.LBE10136:
 17484              	.LBB10138:
 17485              	.LBI10138:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 17486              		.loc 5 290 7 is_stmt 1 view .LVU4555
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 17487              		.loc 5 290 7 is_stmt 0 view .LVU4556
 17488              	.LBE10138:
ARM GAS  /tmp/ccszdRNt.s 			page 641


 17489              	.LBB10139:
 17490              	.LBI10139:
 17491              		.loc 20 97 19 is_stmt 1 view .LVU4557
 17492              	.LBB10140:
 17493              	.LBI10140:
 17494              		.loc 10 514 7 view .LVU4558
 17495              	.LBB10141:
 17496              	.LBI10141:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 17497              		.loc 6 141 7 view .LVU4559
 17498              	.LBB10142:
 17499              	.LBI10142:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17500              		.loc 7 83 7 view .LVU4560
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17501              		.loc 7 83 7 is_stmt 0 view .LVU4561
 17502              	.LBE10142:
 17503              	.LBE10141:
 17504              	.LBE10140:
 17505              	.LBE10139:
 17506              	.LBB10143:
 17507              	.LBI10143:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 17508              		.loc 5 159 2 is_stmt 1 view .LVU4562
 17509              	.LBB10144:
 17510              	.LBB10145:
 17511              	.LBI10145:
 17512              		.loc 8 99 5 view .LVU4563
 17513              		.loc 8 99 5 is_stmt 0 view .LVU4564
 17514              	.LBE10145:
 17515              	.LBB10146:
 17516              	.LBI10146:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 17517              		.loc 6 141 7 is_stmt 1 view .LVU4565
 17518              	.LBB10147:
 17519              	.LBI10147:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17520              		.loc 7 83 7 view .LVU4566
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17521              		.loc 7 83 7 is_stmt 0 view .LVU4567
 17522              	.LBE10147:
 17523              	.LBE10146:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17524              		.loc 5 160 46 view .LVU4568
 17525 009c 0360     		str	r3, [r0]
 17526              	.LVL1327:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17527              		.loc 5 160 46 view .LVU4569
 17528              	.LBE10144:
 17529              	.LBE10143:
 17530              	.LBB10148:
 17531              	.LBI10148:
 17532              		.loc 6 153 7 is_stmt 1 view .LVU4570
 17533              	.LBB10149:
 17534              	.LBI10149:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17535              		.loc 7 89 7 view .LVU4571
ARM GAS  /tmp/ccszdRNt.s 			page 642


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17536              		.loc 7 89 7 is_stmt 0 view .LVU4572
 17537              	.LBE10149:
 17538              	.LBE10148:
 17539              	.LBB10150:
 17540              	.LBI10150:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17541              		.loc 5 186 7 is_stmt 1 view .LVU4573
 17542              	.LBB10151:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17543              		.loc 5 187 28 is_stmt 0 view .LVU4574
 17544 009e 2968     		ldr	r1, [r5]
 17545              	.LVL1328:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17546              		.loc 5 187 28 view .LVU4575
 17547              	.LBE10151:
 17548              	.LBE10150:
 17549              	.LBB10152:
 17550              	.LBI10152:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17551              		.loc 5 186 7 is_stmt 1 view .LVU4576
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17552              		.loc 5 186 7 is_stmt 0 view .LVU4577
 17553              	.LBE10152:
 17554              	.LBB10153:
 17555              	.LBI10153:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17556              		.loc 5 936 7 is_stmt 1 view .LVU4578
 17557              	.LBB10154:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17558              		.loc 5 937 16 is_stmt 0 view .LVU4579
 17559 00a0 6A68     		ldr	r2, [r5, #4]
 17560              	.LVL1329:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17561              		.loc 5 937 16 view .LVU4580
 17562              	.LBE10154:
 17563              	.LBE10153:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17564              		.loc 5 451 9 view .LVU4581
 17565 00a2 8A18     		adds	r2, r1, r2
 17566              	.LVL1330:
 17567              	.LBB10155:
 17568              	.LBI10155:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 17569              		.loc 5 263 9 is_stmt 1 view .LVU4582
 17570              	.LBB10156:
 17571              	.LBB10157:
 17572              	.LBI10157:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 17573              		.loc 5 243 9 view .LVU4583
 17574              	.LBB10158:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17575              		.loc 5 247 11 is_stmt 0 view .LVU4584
 17576 00a4 0023     		movs	r3, #0
 17577 00a6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 17578              	.LVL1331:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 643


 17579              		.loc 5 247 11 view .LVU4585
 17580              	.LBE10158:
 17581              	.LBE10157:
 17582              	.LBE10156:
 17583              	.LBE10155:
 17584              	.LBE10135:
 17585              	.LBE10134:
 17586              	.LBE10165:
 17587              	.LBE10167:
 17588              	.LBB10168:
 17589              	.LBI10168:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 17590              		.loc 13 462 7 is_stmt 1 view .LVU4586
 17591              	.LBB10169:
 17592              	.LBB10170:
 17593              	.LBI10170:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 17594              		.loc 13 450 7 view .LVU4587
 17595              	.LBB10171:
 17596              	.LBI10171:
 17597              		.loc 15 958 5 view .LVU4588
 17598              	.LBB10172:
 17599              	.LBI10172:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 17600              		.loc 15 936 5 view .LVU4589
 17601              	.LBB10173:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 17602              		.loc 15 948 24 is_stmt 0 view .LVU4590
 17603 00aa 019D     		ldr	r5, [sp, #4]
 17604              	.LVL1332:
 948:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****       for (; __first != __last; ++__first, (void)++__cur)
 17605              		.loc 15 948 24 view .LVU4591
 17606              	.LBE10173:
 17607              	.LBE10172:
 17608              	.LBE10171:
 17609              	.LBE10170:
 17610              	.LBE10169:
 17611              	.LBE10168:
 17612              	.LBB10255:
 17613              	.LBB10166:
 17614              	.LBB10164:
 17615              	.LBB10163:
 17616              	.LBB10162:
 17617              	.LBB10161:
 17618              	.LBB10160:
 17619              	.LBB10159:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17620              		.loc 5 247 11 view .LVU4592
 17621 00ac 5F46     		mov	r7, fp
 17622              	.LVL1333:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17623              		.loc 5 247 11 view .LVU4593
 17624 00ae 16E0     		b	.L379
 17625              	.LVL1334:
 17626              	.L390:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 17627              		.loc 5 247 11 view .LVU4594
ARM GAS  /tmp/ccszdRNt.s 			page 644


 17628              	.LBE10159:
 17629              	.LBE10160:
 17630              	.LBE10161:
 17631              	.LBE10162:
 17632              	.LBE10163:
 17633              	.LBE10164:
 17634              	.LBE10166:
 17635              	.LBE10255:
 17636              	.LBB10256:
 17637              	.LBB10118:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17638              		.loc 13 1756 24 view .LVU4595
 17639 00b0 3748     		ldr	r0, .L397+4
 17640              	.LVL1335:
1756:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 17641              		.loc 13 1756 24 view .LVU4596
 17642 00b2 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 17643              	.LVL1336:
 17644              	.L386:
 17645              	.LBB10117:
 17646              	.LBB10114:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 17647              		.loc 12 228 9 view .LVU4597
 17648 00b6 02AB     		add	r3, sp, #8
 17649              	.LVL1337:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 17650              		.loc 12 228 9 view .LVU4598
 17651 00b8 C3E7     		b	.L371
 17652              	.LVL1338:
 17653              	.L387:
 228:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_algobase.h ****       return __a;
 17654              		.loc 12 228 9 view .LVU4599
 17655              	.LBE10114:
 17656              	.LBE10117:
 17657              		.loc 13 1759 48 view .LVU4600
 17658 00ba 344C     		ldr	r4, .L397
 17659              	.LVL1339:
 17660              		.loc 13 1759 48 view .LVU4601
 17661 00bc D6E7     		b	.L372
 17662              	.LVL1340:
 17663              	.L391:
 17664              		.loc 13 1759 48 view .LVU4602
 17665 00be 334C     		ldr	r4, .L397
 17666              	.LVL1341:
 17667              		.loc 13 1759 48 view .LVU4603
 17668 00c0 D4E7     		b	.L372
 17669              	.LVL1342:
 17670              	.L392:
 17671              		.loc 13 1759 48 view .LVU4604
 17672              	.LBE10118:
 17673              	.LBE10256:
 17674              	.LBB10257:
 17675              	.LBB10131:
 17676              	.LBB10130:
 17677              	.LBB10129:
 17678              	.LBB10128:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 645


 17679              		.loc 7 105 26 view .LVU4605
 17680 00c2 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 17681              	.LVL1343:
 17682              	.L389:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17683              		.loc 7 105 26 view .LVU4606
 17684              	.LBE10128:
 17685              	.LBE10129:
 17686              	.LBE10130:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 17687              		.loc 13 343 18 view .LVU4607
 17688 00c6 0023     		movs	r3, #0
 17689              	.LVL1344:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 17690              		.loc 13 343 18 view .LVU4608
 17691 00c8 0193     		str	r3, [sp, #4]
 17692 00ca E3E7     		b	.L373
 17693              	.LVL1345:
 17694              	.L393:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 17695              		.loc 13 343 18 view .LVU4609
 17696              	.LBE10131:
 17697              	.LBE10257:
 17698              	.LBB10258:
 17699              	.LBB10253:
 17700              	.LBB10251:
 17701              	.LBB10249:
 17702              	.LBB10247:
 17703              	.LBB10245:
 17704              	.LBB10174:
 17705              	.LBB10175:
 17706              	.LBB10176:
 17707              	.LBB10177:
 17708              	.LBB10178:
 17709              	.LBB10179:
 17710              	.LBB10180:
 17711              	.LBI10180:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 17712              		.loc 4 361 7 is_stmt 1 view .LVU4610
 17713              	.LBB10181:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 17714              		.loc 4 363 2 view .LVU4611
 17715              		.loc 4 365 2 view .LVU4612
 17716              		.loc 4 365 49 is_stmt 0 view .LVU4613
 17717 00cc 0832     		adds	r2, r2, #8
 17718 00ce 5146     		mov	r1, r10
 17719 00d0 FFF7FEFF 		bl	memcpy
 17720              	.LVL1346:
 17721              		.loc 4 365 49 view .LVU4614
 17722 00d4 11E0     		b	.L377
 17723              	.LVL1347:
 17724              	.L394:
 17725              		.loc 4 365 49 view .LVU4615
 17726              	.LBE10181:
 17727              	.LBE10180:
 17728              	.LBE10179:
 17729              	.LBE10178:
ARM GAS  /tmp/ccszdRNt.s 			page 646


 17730              	.LBE10177:
 17731              	.LBE10176:
 17732              	.LBB10216:
 17733              	.LBB10217:
 17734              	.LBB10218:
 17735              	.LBB10219:
 17736              	.LBB10220:
 17737              	.LBB10221:
 17738              	.LBI10221:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 17739              		.loc 5 236 7 is_stmt 1 view .LVU4616
 17740              	.LBB10222:
 17741              	.LBB10223:
 17742              	.LBI10223:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 17743              		.loc 10 469 7 view .LVU4617
 17744              	.LBB10224:
 17745              	.LBI10224:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 17746              		.loc 7 119 7 view .LVU4618
 17747              	.LBB10225:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17748              		.loc 7 128 19 is_stmt 0 view .LVU4619
 17749 00d6 FFF7FEFF 		bl	_ZdlPv
 17750              	.LVL1348:
 17751              	.L378:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 17752              		.loc 7 128 19 view .LVU4620
 17753              	.LBE10225:
 17754              	.LBE10224:
 17755              	.LBE10223:
 17756              	.LBE10222:
 17757              	.LBE10221:
 17758              	.LBE10220:
 17759              	.LBE10219:
 17760              	.LBB10232:
 17761              	.LBI10232:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17762              		.loc 5 150 14 is_stmt 1 view .LVU4621
 17763              	.LBB10233:
 17764              	.LBI10233:
 17765              		.loc 6 153 7 view .LVU4622
 17766              	.LBB10234:
 17767              	.LBI10234:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17768              		.loc 7 89 7 view .LVU4623
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17769              		.loc 7 89 7 is_stmt 0 view .LVU4624
 17770              	.LBE10234:
 17771              	.LBE10233:
 17772              	.LBE10232:
 17773              	.LBE10218:
 17774              	.LBE10217:
 17775              	.LBE10216:
 17776              	.LBE10175:
 17777              	.LBE10174:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
ARM GAS  /tmp/ccszdRNt.s 			page 647


 17778              		.loc 15 949 7 is_stmt 1 view .LVU4625
 17779 00da 1837     		adds	r7, r7, #24
 17780              	.LVL1349:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 17781              		.loc 15 949 7 is_stmt 0 view .LVU4626
 17782 00dc 1835     		adds	r5, r5, #24
 17783              	.LVL1350:
 17784              	.L379:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 17785              		.loc 15 949 22 is_stmt 1 view .LVU4627
 17786 00de BE42     		cmp	r6, r7
 17787 00e0 19D0     		beq	.L375
 17788              	.LVL1351:
 17789              	.LBB10243:
 17790              	.LBI10174:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 17791              		.loc 15 905 5 view .LVU4628
 17792              	.LBB10241:
 17793              	.LBB10238:
 17794              	.LBI10176:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 17795              		.loc 10 482 2 view .LVU4629
 17796              	.LBB10214:
 17797              	.LBI10177:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 17798              		.loc 7 144 2 view .LVU4630
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 17799              		.loc 7 144 2 is_stmt 0 view .LVU4631
 17800              	.LBE10214:
 17801              	.LBE10238:
 17802              	.LBE10241:
 17803              	.LBE10243:
 17804              	.LBE10245:
 17805              	.LBE10247:
 17806              	.LBE10249:
 17807              	.LBE10251:
 17808              	.LBE10253:
 17809              	.LBE10258:
 17810              		.loc 11 174 3 is_stmt 1 view .LVU4632
 17811              	.LBB10259:
 17812              	.LBB10254:
 17813              	.LBB10252:
 17814              	.LBB10250:
 17815              	.LBB10248:
 17816              	.LBB10246:
 17817              	.LBB10244:
 17818              	.LBB10242:
 17819              	.LBB10239:
 17820              	.LBB10215:
 17821              	.LBB10213:
 17822              	.LBI10178:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 17823              		.loc 5 552 7 view .LVU4633
 17824              	.LBB10212:
 17825              	.LBB10182:
 17826              	.LBI10182:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 648


 17827              		.loc 5 190 7 view .LVU4634
 17828              	.LBB10183:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 17829              		.loc 5 193 51 is_stmt 0 view .LVU4635
 17830 00e2 2800     		movs	r0, r5
 17831 00e4 0830     		adds	r0, r0, #8
 17832              	.LVL1352:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 17833              		.loc 5 193 51 view .LVU4636
 17834              	.LBE10183:
 17835              	.LBE10182:
 17836              	.LBB10184:
 17837              	.LBI10184:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 17838              		.loc 5 286 7 is_stmt 1 view .LVU4637
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 17839              		.loc 5 286 7 is_stmt 0 view .LVU4638
 17840              	.LBE10184:
 17841              	.LBB10185:
 17842              	.LBI10185:
 17843              		.loc 8 99 5 is_stmt 1 view .LVU4639
 17844              		.loc 8 99 5 is_stmt 0 view .LVU4640
 17845              	.LBE10185:
 17846              	.LBB10186:
 17847              	.LBI10186:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 17848              		.loc 5 159 2 is_stmt 1 view .LVU4641
 17849              	.LBB10187:
 17850              	.LBB10188:
 17851              	.LBI10188:
 17852              		.loc 8 99 5 view .LVU4642
 17853              		.loc 8 99 5 is_stmt 0 view .LVU4643
 17854              	.LBE10188:
 17855              	.LBB10189:
 17856              	.LBI10189:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 17857              		.loc 6 141 7 is_stmt 1 view .LVU4644
 17858              	.LBB10190:
 17859              	.LBI10190:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17860              		.loc 7 83 7 view .LVU4645
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 17861              		.loc 7 83 7 is_stmt 0 view .LVU4646
 17862              	.LBE10190:
 17863              	.LBE10189:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17864              		.loc 5 160 46 view .LVU4647
 17865 00e6 2860     		str	r0, [r5]
 17866              	.LVL1353:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 17867              		.loc 5 160 46 view .LVU4648
 17868              	.LBE10187:
 17869              	.LBE10186:
 17870              	.LBB10191:
 17871              	.LBI10191:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 17872              		.loc 5 221 7 is_stmt 1 view .LVU4649
ARM GAS  /tmp/ccszdRNt.s 			page 649


 17873              	.LBB10192:
 17874              	.LBI10192:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17875              		.loc 5 186 7 view .LVU4650
 17876              	.LBB10193:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17877              		.loc 5 187 28 is_stmt 0 view .LVU4651
 17878 00e8 3B68     		ldr	r3, [r7]
 17879              	.LVL1354:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17880              		.loc 5 187 28 view .LVU4652
 17881              	.LBE10193:
 17882              	.LBE10192:
 17883              	.LBB10194:
 17884              	.LBI10194:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17885              		.loc 5 200 7 is_stmt 1 view .LVU4653
 17886              	.LBB10195:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 17887              		.loc 5 203 57 is_stmt 0 view .LVU4654
 17888 00ea 0822     		movs	r2, #8
 17889 00ec 9246     		mov	r10, r2
 17890 00ee BA44     		add	r10, r10, r7
 17891              	.LVL1355:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 17892              		.loc 5 203 57 view .LVU4655
 17893              	.LBE10195:
 17894              	.LBE10194:
 17895              	.LBE10191:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 17896              		.loc 5 555 2 view .LVU4656
 17897 00f0 5345     		cmp	r3, r10
 17898 00f2 EBD0     		beq	.L393
 17899              	.LVL1356:
 17900              	.LBB10196:
 17901              	.LBI10196:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17902              		.loc 5 186 7 is_stmt 1 view .LVU4657
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 17903              		.loc 5 186 7 is_stmt 0 view .LVU4658
 17904              	.LBE10196:
 17905              	.LBB10197:
 17906              	.LBI10197:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 17907              		.loc 5 178 7 is_stmt 1 view .LVU4659
 17908              	.LBB10198:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17909              		.loc 5 179 9 is_stmt 0 view .LVU4660
 17910 00f4 2B60     		str	r3, [r5]
 17911              	.LVL1357:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17912              		.loc 5 179 9 view .LVU4661
 17913              	.LBE10198:
 17914              	.LBE10197:
 17915              	.LBB10199:
 17916              	.LBI10199:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
ARM GAS  /tmp/ccszdRNt.s 			page 650


 17917              		.loc 5 210 7 is_stmt 1 view .LVU4662
 17918              	.LBB10200:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17919              		.loc 5 211 9 is_stmt 0 view .LVU4663
 17920 00f6 BB68     		ldr	r3, [r7, #8]
 17921 00f8 AB60     		str	r3, [r5, #8]
 17922              	.LVL1358:
 17923              	.L377:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17924              		.loc 5 211 9 view .LVU4664
 17925              	.LBE10200:
 17926              	.LBE10199:
 17927              	.LBB10201:
 17928              	.LBI10201:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17929              		.loc 5 936 7 is_stmt 1 view .LVU4665
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 17930              		.loc 5 936 7 is_stmt 0 view .LVU4666
 17931              	.LBE10201:
 17932              	.LBB10202:
 17933              	.LBI10202:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 17934              		.loc 5 182 7 is_stmt 1 view .LVU4667
 17935              	.LBB10203:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17936              		.loc 5 183 9 is_stmt 0 view .LVU4668
 17937 00fa 7B68     		ldr	r3, [r7, #4]
 17938 00fc 6B60     		str	r3, [r5, #4]
 17939              	.LVL1359:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17940              		.loc 5 183 9 view .LVU4669
 17941              	.LBE10203:
 17942              	.LBE10202:
 17943              	.LBB10204:
 17944              	.LBI10204:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17945              		.loc 5 190 7 is_stmt 1 view .LVU4670
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 17946              		.loc 5 190 7 is_stmt 0 view .LVU4671
 17947              	.LBE10204:
 17948              	.LBB10205:
 17949              	.LBI10205:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 17950              		.loc 5 178 7 is_stmt 1 view .LVU4672
 17951              	.LBB10206:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17952              		.loc 5 179 9 is_stmt 0 view .LVU4673
 17953 00fe 5346     		mov	r3, r10
 17954 0100 3B60     		str	r3, [r7]
 17955              	.LVL1360:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17956              		.loc 5 179 9 view .LVU4674
 17957              	.LBE10206:
 17958              	.LBE10205:
 17959              	.LBB10207:
 17960              	.LBI10207:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 651


 17961              		.loc 5 214 7 is_stmt 1 view .LVU4675
 17962              	.LBB10208:
 17963              	.LBI10208:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 17964              		.loc 5 182 7 view .LVU4676
 17965              	.LBB10209:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17966              		.loc 5 183 9 is_stmt 0 view .LVU4677
 17967 0102 0023     		movs	r3, #0
 17968 0104 7B60     		str	r3, [r7, #4]
 17969              	.LVL1361:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 17970              		.loc 5 183 9 view .LVU4678
 17971              	.LBE10209:
 17972              	.LBE10208:
 17973              	.LBB10210:
 17974              	.LBI10210:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 17975              		.loc 4 299 7 is_stmt 1 view .LVU4679
 17976              	.LBB10211:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17977              		.loc 4 300 9 view .LVU4680
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17978              		.loc 4 300 14 is_stmt 0 view .LVU4681
 17979 0106 5246     		mov	r2, r10
 17980 0108 1370     		strb	r3, [r2]
 17981              	.LVL1362:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 17982              		.loc 4 300 14 view .LVU4682
 17983              	.LBE10211:
 17984              	.LBE10210:
 17985              	.LBE10207:
 17986              	.LBE10212:
 17987              	.LBE10213:
 17988              	.LBE10215:
 17989              	.LBE10239:
 17990              	.LBB10240:
 17991              	.LBI10216:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 17992              		.loc 10 495 2 is_stmt 1 view .LVU4683
 17993              	.LBB10237:
 17994              	.LBI10217:
 17995              		.loc 7 151 2 view .LVU4684
 17996              	.LBB10236:
 17997              	.LBI10218:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 17998              		.loc 5 657 7 view .LVU4685
 17999              	.LBB10235:
 18000              	.LBI10219:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18001              		.loc 5 229 7 view .LVU4686
 18002              	.LBB10231:
 18003              	.LBB10226:
 18004              	.LBI10226:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18005              		.loc 5 221 7 view .LVU4687
 18006              	.LBB10227:
ARM GAS  /tmp/ccszdRNt.s 			page 652


 18007              	.LBI10227:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18008              		.loc 5 186 7 view .LVU4688
 18009              	.LBB10228:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18010              		.loc 5 187 28 is_stmt 0 view .LVU4689
 18011 010a 3868     		ldr	r0, [r7]
 18012              	.LVL1363:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18013              		.loc 5 187 28 view .LVU4690
 18014              	.LBE10228:
 18015              	.LBE10227:
 18016              	.LBB10229:
 18017              	.LBI10229:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18018              		.loc 5 200 7 is_stmt 1 view .LVU4691
 18019              	.LBB10230:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18020              		.loc 5 203 57 is_stmt 0 view .LVU4692
 18021 010c 3B00     		movs	r3, r7
 18022 010e 0833     		adds	r3, r3, #8
 18023              	.LVL1364:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18024              		.loc 5 203 57 view .LVU4693
 18025              	.LBE10230:
 18026              	.LBE10229:
 18027              	.LBE10226:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18028              		.loc 5 231 2 view .LVU4694
 18029 0110 9842     		cmp	r0, r3
 18030 0112 E0D1     		bne	.L394
 18031 0114 E1E7     		b	.L378
 18032              	.LVL1365:
 18033              	.L375:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18034              		.loc 5 231 2 view .LVU4695
 18035              	.LBE10231:
 18036              	.LBE10235:
 18037              	.LBE10236:
 18038              	.LBE10237:
 18039              	.LBE10240:
 18040              	.LBE10242:
 18041              	.LBE10244:
 18042              	.LBE10246:
 18043              	.LBE10248:
 18044              	.LBE10250:
 18045              	.LBE10252:
 18046              	.LBE10254:
 18047              	.LBE10259:
 464:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 18048              		.loc 9 464 8 view .LVU4696
 18049 0116 1835     		adds	r5, r5, #24
 18050              	.LVL1366:
 18051              	.LBB10260:
 18052              	.LBI10260:
 462:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		  _Tp_alloc_type& __alloc) noexcept
 18053              		.loc 13 462 7 is_stmt 1 view .LVU4697
ARM GAS  /tmp/ccszdRNt.s 			page 653


 18054              	.LBB10261:
 18055              	.LBB10262:
 18056              	.LBI10262:
 450:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		     _Tp_alloc_type& __alloc, true_type) noexcept
 18057              		.loc 13 450 7 view .LVU4698
 18058              	.LBB10263:
 18059              	.LBI10263:
 18060              		.loc 15 958 5 view .LVU4699
 18061              	.LBB10264:
 18062              	.LBI10264:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		   _ForwardIterator __result, _Allocator& __alloc)
 18063              		.loc 15 936 5 view .LVU4700
 18064 0118 08E0     		b	.L384
 18065              	.LVL1367:
 18066              	.L395:
 18067              	.LBB10265:
 18068              	.LBB10266:
 18069              	.LBB10267:
 18070              	.LBB10268:
 18071              	.LBB10269:
 18072              	.LBB10270:
 18073              	.LBB10271:
 18074              	.LBB10272:
 18075              	.LBI10272:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 18076              		.loc 4 361 7 view .LVU4701
 18077              	.LBB10273:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 18078              		.loc 4 363 2 view .LVU4702
 18079              		.loc 4 365 2 view .LVU4703
 18080              		.loc 4 365 49 is_stmt 0 view .LVU4704
 18081 011a 1022     		movs	r2, #16
 18082 011c 3900     		movs	r1, r7
 18083 011e FFF7FEFF 		bl	memcpy
 18084              	.LVL1368:
 18085              		.loc 4 365 49 view .LVU4705
 18086 0122 10E0     		b	.L382
 18087              	.LVL1369:
 18088              	.L396:
 18089              		.loc 4 365 49 view .LVU4706
 18090              	.LBE10273:
 18091              	.LBE10272:
 18092              	.LBE10271:
 18093              	.LBE10270:
 18094              	.LBE10269:
 18095              	.LBE10268:
 18096              	.LBB10308:
 18097              	.LBB10309:
 18098              	.LBB10310:
 18099              	.LBB10311:
 18100              	.LBB10312:
 18101              	.LBB10313:
 18102              	.LBI10313:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 18103              		.loc 5 236 7 is_stmt 1 view .LVU4707
 18104              	.LBB10314:
 18105              	.LBB10315:
ARM GAS  /tmp/ccszdRNt.s 			page 654


 18106              	.LBI10315:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 18107              		.loc 10 469 7 view .LVU4708
 18108              	.LBB10316:
 18109              	.LBI10316:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 18110              		.loc 7 119 7 view .LVU4709
 18111              	.LBB10317:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18112              		.loc 7 128 19 is_stmt 0 view .LVU4710
 18113 0124 FFF7FEFF 		bl	_ZdlPv
 18114              	.LVL1370:
 18115              	.L383:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18116              		.loc 7 128 19 view .LVU4711
 18117              	.LBE10317:
 18118              	.LBE10316:
 18119              	.LBE10315:
 18120              	.LBE10314:
 18121              	.LBE10313:
 18122              	.LBE10312:
 18123              	.LBE10311:
 18124              	.LBB10324:
 18125              	.LBI10324:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18126              		.loc 5 150 14 is_stmt 1 view .LVU4712
 18127              	.LBB10325:
 18128              	.LBI10325:
 18129              		.loc 6 153 7 view .LVU4713
 18130              	.LBB10326:
 18131              	.LBI10326:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18132              		.loc 7 89 7 view .LVU4714
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18133              		.loc 7 89 7 is_stmt 0 view .LVU4715
 18134              	.LBE10326:
 18135              	.LBE10325:
 18136              	.LBE10324:
 18137              	.LBE10310:
 18138              	.LBE10309:
 18139              	.LBE10308:
 18140              	.LBE10267:
 18141              	.LBE10266:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 18142              		.loc 15 949 7 is_stmt 1 view .LVU4716
 18143 0128 1836     		adds	r6, r6, #24
 18144              	.LVL1371:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 18145              		.loc 15 949 7 is_stmt 0 view .LVU4717
 18146 012a 1835     		adds	r5, r5, #24
 18147              	.LVL1372:
 18148              	.L384:
 949:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 	std::__relocate_object_a(std::__addressof(*__cur),
 18149              		.loc 15 949 22 is_stmt 1 view .LVU4718
 18150 012c B145     		cmp	r9, r6
 18151 012e 16D0     		beq	.L380
 18152              	.LVL1373:
ARM GAS  /tmp/ccszdRNt.s 			page 655


 18153              	.LBB10335:
 18154              	.LBI10266:
 905:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h ****     noexcept(noexcept(std::allocator_traits<_Allocator>::construct(__alloc,
 18155              		.loc 15 905 5 view .LVU4719
 18156              	.LBB10333:
 18157              	.LBB10330:
 18158              	.LBI10268:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 18159              		.loc 10 482 2 view .LVU4720
 18160              	.LBB10306:
 18161              	.LBI10269:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 18162              		.loc 7 144 2 view .LVU4721
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 18163              		.loc 7 144 2 is_stmt 0 view .LVU4722
 18164              	.LBE10306:
 18165              	.LBE10330:
 18166              	.LBE10333:
 18167              	.LBE10335:
 18168              	.LBE10265:
 18169              	.LBE10264:
 18170              	.LBE10263:
 18171              	.LBE10262:
 18172              	.LBE10261:
 18173              	.LBE10260:
 18174              		.loc 11 174 3 is_stmt 1 view .LVU4723
 18175              	.LBB10342:
 18176              	.LBB10341:
 18177              	.LBB10340:
 18178              	.LBB10339:
 18179              	.LBB10338:
 18180              	.LBB10337:
 18181              	.LBB10336:
 18182              	.LBB10334:
 18183              	.LBB10331:
 18184              	.LBB10307:
 18185              	.LBB10305:
 18186              	.LBI10270:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 18187              		.loc 5 552 7 view .LVU4724
 18188              	.LBB10304:
 18189              	.LBB10274:
 18190              	.LBI10274:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18191              		.loc 5 190 7 view .LVU4725
 18192              	.LBB10275:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18193              		.loc 5 193 51 is_stmt 0 view .LVU4726
 18194 0130 2800     		movs	r0, r5
 18195 0132 0830     		adds	r0, r0, #8
 18196              	.LVL1374:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18197              		.loc 5 193 51 view .LVU4727
 18198              	.LBE10275:
 18199              	.LBE10274:
 18200              	.LBB10276:
 18201              	.LBI10276:
ARM GAS  /tmp/ccszdRNt.s 			page 656


 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18202              		.loc 5 286 7 is_stmt 1 view .LVU4728
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18203              		.loc 5 286 7 is_stmt 0 view .LVU4729
 18204              	.LBE10276:
 18205              	.LBB10277:
 18206              	.LBI10277:
 18207              		.loc 8 99 5 is_stmt 1 view .LVU4730
 18208              		.loc 8 99 5 is_stmt 0 view .LVU4731
 18209              	.LBE10277:
 18210              	.LBB10278:
 18211              	.LBI10278:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 18212              		.loc 5 159 2 is_stmt 1 view .LVU4732
 18213              	.LBB10279:
 18214              	.LBB10280:
 18215              	.LBI10280:
 18216              		.loc 8 99 5 view .LVU4733
 18217              		.loc 8 99 5 is_stmt 0 view .LVU4734
 18218              	.LBE10280:
 18219              	.LBB10281:
 18220              	.LBI10281:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18221              		.loc 6 141 7 is_stmt 1 view .LVU4735
 18222              	.LBB10282:
 18223              	.LBI10282:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18224              		.loc 7 83 7 view .LVU4736
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18225              		.loc 7 83 7 is_stmt 0 view .LVU4737
 18226              	.LBE10282:
 18227              	.LBE10281:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18228              		.loc 5 160 46 view .LVU4738
 18229 0134 2860     		str	r0, [r5]
 18230              	.LVL1375:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18231              		.loc 5 160 46 view .LVU4739
 18232              	.LBE10279:
 18233              	.LBE10278:
 18234              	.LBB10283:
 18235              	.LBI10283:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18236              		.loc 5 221 7 is_stmt 1 view .LVU4740
 18237              	.LBB10284:
 18238              	.LBI10284:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18239              		.loc 5 186 7 view .LVU4741
 18240              	.LBB10285:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18241              		.loc 5 187 28 is_stmt 0 view .LVU4742
 18242 0136 3368     		ldr	r3, [r6]
 18243              	.LVL1376:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18244              		.loc 5 187 28 view .LVU4743
 18245              	.LBE10285:
 18246              	.LBE10284:
ARM GAS  /tmp/ccszdRNt.s 			page 657


 18247              	.LBB10286:
 18248              	.LBI10286:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18249              		.loc 5 200 7 is_stmt 1 view .LVU4744
 18250              	.LBB10287:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18251              		.loc 5 203 57 is_stmt 0 view .LVU4745
 18252 0138 3700     		movs	r7, r6
 18253 013a 0837     		adds	r7, r7, #8
 18254              	.LVL1377:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18255              		.loc 5 203 57 view .LVU4746
 18256              	.LBE10287:
 18257              	.LBE10286:
 18258              	.LBE10283:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 18259              		.loc 5 555 2 view .LVU4747
 18260 013c BB42     		cmp	r3, r7
 18261 013e ECD0     		beq	.L395
 18262              	.LVL1378:
 18263              	.LBB10288:
 18264              	.LBI10288:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18265              		.loc 5 186 7 is_stmt 1 view .LVU4748
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18266              		.loc 5 186 7 is_stmt 0 view .LVU4749
 18267              	.LBE10288:
 18268              	.LBB10289:
 18269              	.LBI10289:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 18270              		.loc 5 178 7 is_stmt 1 view .LVU4750
 18271              	.LBB10290:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18272              		.loc 5 179 9 is_stmt 0 view .LVU4751
 18273 0140 2B60     		str	r3, [r5]
 18274              	.LVL1379:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18275              		.loc 5 179 9 view .LVU4752
 18276              	.LBE10290:
 18277              	.LBE10289:
 18278              	.LBB10291:
 18279              	.LBI10291:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 18280              		.loc 5 210 7 is_stmt 1 view .LVU4753
 18281              	.LBB10292:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18282              		.loc 5 211 9 is_stmt 0 view .LVU4754
 18283 0142 B368     		ldr	r3, [r6, #8]
 18284 0144 AB60     		str	r3, [r5, #8]
 18285              	.LVL1380:
 18286              	.L382:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18287              		.loc 5 211 9 view .LVU4755
 18288              	.LBE10292:
 18289              	.LBE10291:
 18290              	.LBB10293:
 18291              	.LBI10293:
ARM GAS  /tmp/ccszdRNt.s 			page 658


 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 18292              		.loc 5 936 7 is_stmt 1 view .LVU4756
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 18293              		.loc 5 936 7 is_stmt 0 view .LVU4757
 18294              	.LBE10293:
 18295              	.LBB10294:
 18296              	.LBI10294:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 18297              		.loc 5 182 7 is_stmt 1 view .LVU4758
 18298              	.LBB10295:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18299              		.loc 5 183 9 is_stmt 0 view .LVU4759
 18300 0146 7368     		ldr	r3, [r6, #4]
 18301 0148 6B60     		str	r3, [r5, #4]
 18302              	.LVL1381:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18303              		.loc 5 183 9 view .LVU4760
 18304              	.LBE10295:
 18305              	.LBE10294:
 18306              	.LBB10296:
 18307              	.LBI10296:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18308              		.loc 5 190 7 is_stmt 1 view .LVU4761
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18309              		.loc 5 190 7 is_stmt 0 view .LVU4762
 18310              	.LBE10296:
 18311              	.LBB10297:
 18312              	.LBI10297:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 18313              		.loc 5 178 7 is_stmt 1 view .LVU4763
 18314              	.LBB10298:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18315              		.loc 5 179 9 is_stmt 0 view .LVU4764
 18316 014a 3760     		str	r7, [r6]
 18317              	.LVL1382:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18318              		.loc 5 179 9 view .LVU4765
 18319              	.LBE10298:
 18320              	.LBE10297:
 18321              	.LBB10299:
 18322              	.LBI10299:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18323              		.loc 5 214 7 is_stmt 1 view .LVU4766
 18324              	.LBB10300:
 18325              	.LBI10300:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 18326              		.loc 5 182 7 view .LVU4767
 18327              	.LBB10301:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18328              		.loc 5 183 9 is_stmt 0 view .LVU4768
 18329 014c 0023     		movs	r3, #0
 18330 014e 7360     		str	r3, [r6, #4]
 18331              	.LVL1383:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18332              		.loc 5 183 9 view .LVU4769
 18333              	.LBE10301:
 18334              	.LBE10300:
ARM GAS  /tmp/ccszdRNt.s 			page 659


 18335              	.LBB10302:
 18336              	.LBI10302:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 18337              		.loc 4 299 7 is_stmt 1 view .LVU4770
 18338              	.LBB10303:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 18339              		.loc 4 300 9 view .LVU4771
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 18340              		.loc 4 300 14 is_stmt 0 view .LVU4772
 18341 0150 3B70     		strb	r3, [r7]
 18342              	.LVL1384:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 18343              		.loc 4 300 14 view .LVU4773
 18344              	.LBE10303:
 18345              	.LBE10302:
 18346              	.LBE10299:
 18347              	.LBE10304:
 18348              	.LBE10305:
 18349              	.LBE10307:
 18350              	.LBE10331:
 18351              	.LBB10332:
 18352              	.LBI10308:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 18353              		.loc 10 495 2 is_stmt 1 view .LVU4774
 18354              	.LBB10329:
 18355              	.LBI10309:
 18356              		.loc 7 151 2 view .LVU4775
 18357              	.LBB10328:
 18358              	.LBI10310:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 18359              		.loc 5 657 7 view .LVU4776
 18360              	.LBB10327:
 18361              	.LBI10311:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18362              		.loc 5 229 7 view .LVU4777
 18363              	.LBB10323:
 18364              	.LBB10318:
 18365              	.LBI10318:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18366              		.loc 5 221 7 view .LVU4778
 18367              	.LBB10319:
 18368              	.LBI10319:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18369              		.loc 5 186 7 view .LVU4779
 18370              	.LBB10320:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18371              		.loc 5 187 28 is_stmt 0 view .LVU4780
 18372 0152 3068     		ldr	r0, [r6]
 18373              	.LVL1385:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18374              		.loc 5 187 28 view .LVU4781
 18375              	.LBE10320:
 18376              	.LBE10319:
 18377              	.LBB10321:
 18378              	.LBI10321:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18379              		.loc 5 200 7 is_stmt 1 view .LVU4782
ARM GAS  /tmp/ccszdRNt.s 			page 660


 18380              	.LBB10322:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18381              		.loc 5 203 57 is_stmt 0 view .LVU4783
 18382 0154 3300     		movs	r3, r6
 18383 0156 0833     		adds	r3, r3, #8
 18384              	.LVL1386:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18385              		.loc 5 203 57 view .LVU4784
 18386              	.LBE10322:
 18387              	.LBE10321:
 18388              	.LBE10318:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18389              		.loc 5 231 2 view .LVU4785
 18390 0158 9842     		cmp	r0, r3
 18391 015a E3D1     		bne	.L396
 18392 015c E4E7     		b	.L383
 18393              	.LVL1387:
 18394              	.L380:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18395              		.loc 5 231 2 view .LVU4786
 18396              	.LBE10323:
 18397              	.LBE10327:
 18398              	.LBE10328:
 18399              	.LBE10329:
 18400              	.LBE10332:
 18401              	.LBE10334:
 18402              	.LBE10336:
 18403              	.LBE10337:
 18404              	.LBE10338:
 18405              	.LBE10339:
 18406              	.LBE10340:
 18407              	.LBE10341:
 18408              	.LBE10342:
 18409              	.LBB10343:
 18410              	.LBI10343:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 18411              		.loc 13 347 7 is_stmt 1 view .LVU4787
 18412              	.LBB10344:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 18413              		.loc 13 350 2 is_stmt 0 view .LVU4788
 18414 015e 5B46     		mov	r3, fp
 18415 0160 002B     		cmp	r3, #0
 18416 0162 02D0     		beq	.L385
 18417              	.LVL1388:
 18418              	.LBB10345:
 18419              	.LBI10345:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 18420              		.loc 10 469 7 is_stmt 1 view .LVU4789
 18421              	.LBB10346:
 18422              	.LBB10347:
 18423              	.LBI10347:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 18424              		.loc 7 119 7 view .LVU4790
 18425              	.LBB10348:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18426              		.loc 7 128 19 is_stmt 0 view .LVU4791
 18427 0164 5846     		mov	r0, fp
ARM GAS  /tmp/ccszdRNt.s 			page 661


 18428 0166 FFF7FEFF 		bl	_ZdlPv
 18429              	.LVL1389:
 18430              	.L385:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18431              		.loc 7 128 19 view .LVU4792
 18432              	.LBE10348:
 18433              	.LBE10347:
 18434              	.LBE10346:
 18435              	.LBE10345:
 18436              	.LBE10344:
 18437              	.LBE10343:
 502:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_finish = __new_finish;
 18438              		.loc 9 502 7 view .LVU4793
 18439 016a 4246     		mov	r2, r8
 18440 016c 019B     		ldr	r3, [sp, #4]
 18441 016e 1360     		str	r3, [r2]
 503:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****       this->_M_impl._M_end_of_storage = __new_start + __len;
 18442              		.loc 9 503 7 view .LVU4794
 18443 0170 5560     		str	r5, [r2, #4]
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 18444              		.loc 9 504 53 view .LVU4795
 18445 0172 6000     		lsls	r0, r4, #1
 18446 0174 0019     		adds	r0, r0, r4
 18447 0176 C000     		lsls	r0, r0, #3
 18448 0178 9C46     		mov	ip, r3
 18449 017a 6044     		add	r0, r0, ip
 504:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 18450              		.loc 9 504 7 view .LVU4796
 18451 017c 9060     		str	r0, [r2, #8]
 18452              		.loc 9 505 5 view .LVU4797
 18453 017e 05B0     		add	sp, sp, #20
 18454              		@ sp needed
 18455              	.LVL1390:
 18456              	.LVL1391:
 18457              	.LVL1392:
 18458              	.LVL1393:
 18459              	.LVL1394:
 18460              		.loc 9 505 5 view .LVU4798
 18461 0180 F0BC     		pop	{r4, r5, r6, r7}
 18462 0182 BB46     		mov	fp, r7
 18463 0184 B246     		mov	r10, r6
 18464 0186 A946     		mov	r9, r5
 18465 0188 A046     		mov	r8, r4
 18466 018a F0BD     		pop	{r4, r5, r6, r7, pc}
 18467              	.L398:
 18468              		.align	2
 18469              	.L397:
 18470 018c 55555505 		.word	89478485
 18471 0190 00000000 		.word	.LC2
 18472              		.cfi_endproc
 18473              	.LFE4448:
 18475              		.section	.text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertEN9
 18476              		.align	1
 18477              		.weak	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertEN9__gnu_cxx
 18478              		.syntax unified
 18479              		.code	16
 18480              		.thumb_func
ARM GAS  /tmp/ccszdRNt.s 			page 662


 18481              		.fpu softvfp
 18483              	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertEN9__gnu_cxx17__nor
 18484              	.LVL1395:
 18485              	.LFB4230:
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 18486              		.loc 9 130 5 is_stmt 1 view -0
 18487              		.cfi_startproc
 18488              		@ args = 0, pretend = 0, frame = 32
 18489              		@ frame_needed = 0, uses_anonymous_args = 0
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #if __cplusplus >= 201103L
 18490              		.loc 9 130 5 is_stmt 0 view .LVU4800
 18491 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 18492              	.LCFI57:
 18493              		.cfi_def_cfa_offset 20
 18494              		.cfi_offset 4, -20
 18495              		.cfi_offset 5, -16
 18496              		.cfi_offset 6, -12
 18497              		.cfi_offset 7, -8
 18498              		.cfi_offset 14, -4
 18499 0002 89B0     		sub	sp, sp, #36
 18500              	.LCFI58:
 18501              		.cfi_def_cfa_offset 56
 18502 0004 0400     		movs	r4, r0
 18503 0006 0D00     		movs	r5, r1
 18504              	.LVL1396:
 18505              	.LBB10349:
 18506              	.LBI10349:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 18507              		.loc 13 808 7 is_stmt 1 view .LVU4801
 18508              	.LBB10350:
 18509              	.LBI10350:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18510              		.loc 14 806 7 view .LVU4802
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18511              		.loc 14 806 7 is_stmt 0 view .LVU4803
 18512              	.LBE10350:
 18513              	.LBE10349:
 18514              	.LBB10351:
 18515              	.LBI10351:
 977:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	      const __normal_iterator<_IteratorR, _Container>& __rhs) noexcept
 18516              		.loc 14 977 5 is_stmt 1 view .LVU4804
 18517              	.LBB10352:
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 18518              		.loc 14 985 27 is_stmt 0 view .LVU4805
 18519 0008 0168     		ldr	r1, [r0]
 18520 000a 6E1A     		subs	r6, r5, r1
 18521              	.LVL1397:
 985:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 18522              		.loc 14 985 27 view .LVU4806
 18523              	.LBE10352:
 18524              	.LBE10351:
 18525              	.LBB10353:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__position == end())
 18526              		.loc 9 138 25 view .LVU4807
 18527 000c 4068     		ldr	r0, [r0, #4]
 18528              	.LVL1398:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	if (__position == end())
ARM GAS  /tmp/ccszdRNt.s 			page 663


 18529              		.loc 9 138 7 view .LVU4808
 18530 000e A168     		ldr	r1, [r4, #8]
 18531 0010 8842     		cmp	r0, r1
 18532 0012 26D0     		beq	.L400
 18533              	.LVL1399:
 18534              	.LBB10354:
 18535              	.LBB10355:
 18536              	.LBI10355:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 18537              		.loc 13 826 7 is_stmt 1 view .LVU4809
 18538              	.LBB10356:
 18539              	.LBI10356:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18540              		.loc 14 806 7 view .LVU4810
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18541              		.loc 14 806 7 is_stmt 0 view .LVU4811
 18542              	.LBE10356:
 18543              	.LBE10355:
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	  {
 18544              		.loc 9 139 2 view .LVU4812
 18545 0014 A842     		cmp	r0, r5
 18546 0016 17D0     		beq	.L404
 18547              	.LVL1400:
 18548              	.LBB10357:
 18549              	.LBB10358:
 18550              	.LBI10358:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 18551              		.loc 13 808 7 is_stmt 1 view .LVU4813
 18552              	.LBB10359:
 18553              	.LBI10359:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18554              		.loc 14 806 7 view .LVU4814
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18555              		.loc 14 806 7 is_stmt 0 view .LVU4815
 18556              	.LBE10359:
 18557              	.LBE10358:
 18558              	.LBB10360:
 18559              	.LBI10360:
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 18560              		.loc 13 881 7 is_stmt 1 view .LVU4816
 18561              	.LBB10361:
 18562              	.LBI10361:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18563              		.loc 14 806 7 view .LVU4817
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18564              		.loc 14 806 7 is_stmt 0 view .LVU4818
 18565              	.LBE10361:
 18566              	.LBE10360:
 18567              	.LBB10362:
 18568              	.LBI10362:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 18569              		.loc 14 859 7 is_stmt 1 view .LVU4819
 18570              	.LBB10363:
 18571              	.LBB10364:
 18572              	.LBI10364:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18573              		.loc 14 806 7 view .LVU4820
ARM GAS  /tmp/ccszdRNt.s 			page 664


 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18574              		.loc 14 806 7 is_stmt 0 view .LVU4821
 18575              	.LBE10364:
 18576              	.LBE10363:
 18577              	.LBE10362:
 18578              	.LBB10365:
 18579              	.LBI10365:
1706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 18580              		.loc 13 1706 4 is_stmt 1 view .LVU4822
 18581              	.LBB10366:
1706:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 18582              		.loc 13 1706 70 is_stmt 0 view .LVU4823
 18583 0018 0194     		str	r4, [sp, #4]
 18584              	.LVL1401:
 18585              	.LBB10367:
 18586              	.LBI10367:
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18587              		.loc 13 1720 2 is_stmt 1 view .LVU4824
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18588              		.loc 13 1720 2 is_stmt 0 view .LVU4825
 18589              	.LBE10367:
 18590              	.LBB10368:
 18591              	.LBI10368:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 18592              		.loc 8 74 5 is_stmt 1 view .LVU4826
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/move.h ****     { return static_cast<_Tp&&>(__t); }
 18593              		.loc 8 74 5 is_stmt 0 view .LVU4827
 18594              	.LBE10368:
 18595              	.LBB10369:
 18596              	.LBI10369:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 18597              		.loc 10 482 2 is_stmt 1 view .LVU4828
 18598              	.LBB10370:
 18599              	.LBI10370:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 18600              		.loc 7 144 2 view .LVU4829
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 18601              		.loc 7 144 2 is_stmt 0 view .LVU4830
 18602              	.LBE10370:
 18603              	.LBE10369:
 18604              	.LBE10366:
 18605              	.LBE10365:
 18606              	.LBE10357:
 18607              	.LBE10354:
 18608              	.LBE10353:
 18609              		.loc 11 174 3 is_stmt 1 view .LVU4831
 18610              	.LBB10462:
 18611              	.LBB10452:
 18612              	.LBB10422:
 18613              	.LBB10400:
 18614              	.LBB10399:
 18615              	.LBB10398:
 18616              	.LBB10397:
 18617              	.LBB10371:
 18618              	.LBI10371:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 18619              		.loc 5 448 7 view .LVU4832
ARM GAS  /tmp/ccszdRNt.s 			page 665


 18620              	.LBB10372:
 18621              	.LBB10373:
 18622              	.LBB10374:
 18623              	.LBI10374:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18624              		.loc 5 190 7 view .LVU4833
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18625              		.loc 5 190 7 is_stmt 0 view .LVU4834
 18626              	.LBE10374:
 18627              	.LBB10375:
 18628              	.LBI10375:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18629              		.loc 5 290 7 is_stmt 1 view .LVU4835
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18630              		.loc 5 290 7 is_stmt 0 view .LVU4836
 18631              	.LBE10375:
 18632              	.LBB10376:
 18633              	.LBI10376:
 18634              		.loc 20 97 19 is_stmt 1 view .LVU4837
 18635              	.LBB10377:
 18636              	.LBI10377:
 18637              		.loc 10 514 7 view .LVU4838
 18638              	.LBB10378:
 18639              	.LBI10378:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18640              		.loc 6 141 7 view .LVU4839
 18641              	.LBB10379:
 18642              	.LBI10379:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18643              		.loc 7 83 7 view .LVU4840
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18644              		.loc 7 83 7 is_stmt 0 view .LVU4841
 18645              	.LBE10379:
 18646              	.LBE10378:
 18647              	.LBE10377:
 18648              	.LBE10376:
 18649              	.LBB10380:
 18650              	.LBI10380:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 18651              		.loc 5 159 2 is_stmt 1 view .LVU4842
 18652              	.LBB10381:
 18653              	.LBB10382:
 18654              	.LBB10383:
 18655              	.LBI10383:
 18656              		.loc 8 99 5 view .LVU4843
 18657              		.loc 8 99 5 is_stmt 0 view .LVU4844
 18658              	.LBE10383:
 18659              	.LBB10384:
 18660              	.LBI10384:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18661              		.loc 6 141 7 is_stmt 1 view .LVU4845
 18662              	.LBB10385:
 18663              	.LBI10385:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18664              		.loc 7 83 7 view .LVU4846
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18665              		.loc 7 83 7 is_stmt 0 view .LVU4847
ARM GAS  /tmp/ccszdRNt.s 			page 666


 18666              	.LBE10385:
 18667              	.LBE10384:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18668              		.loc 5 160 46 view .LVU4848
 18669 001a 04AF     		add	r7, sp, #16
 18670              	.LVL1402:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18671              		.loc 5 160 46 view .LVU4849
 18672 001c 0297     		str	r7, [sp, #8]
 18673              	.LVL1403:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18674              		.loc 5 160 46 view .LVU4850
 18675              	.LBE10382:
 18676              	.LBE10381:
 18677              	.LBE10380:
 18678              	.LBB10386:
 18679              	.LBI10386:
 18680              		.loc 6 153 7 is_stmt 1 view .LVU4851
 18681              	.LBB10387:
 18682              	.LBI10387:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18683              		.loc 7 89 7 view .LVU4852
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18684              		.loc 7 89 7 is_stmt 0 view .LVU4853
 18685              	.LBE10387:
 18686              	.LBE10386:
 18687              	.LBB10388:
 18688              	.LBI10388:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18689              		.loc 5 186 7 is_stmt 1 view .LVU4854
 18690              	.LBB10389:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18691              		.loc 5 187 28 is_stmt 0 view .LVU4855
 18692 001e 1168     		ldr	r1, [r2]
 18693              	.LVL1404:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18694              		.loc 5 187 28 view .LVU4856
 18695              	.LBE10389:
 18696              	.LBE10388:
 18697              	.LBB10390:
 18698              	.LBI10390:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18699              		.loc 5 186 7 is_stmt 1 view .LVU4857
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18700              		.loc 5 186 7 is_stmt 0 view .LVU4858
 18701              	.LBE10390:
 18702              	.LBB10391:
 18703              	.LBI10391:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 18704              		.loc 5 936 7 is_stmt 1 view .LVU4859
 18705              	.LBB10392:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18706              		.loc 5 937 16 is_stmt 0 view .LVU4860
 18707 0020 5268     		ldr	r2, [r2, #4]
 18708              	.LVL1405:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18709              		.loc 5 937 16 view .LVU4861
ARM GAS  /tmp/ccszdRNt.s 			page 667


 18710              	.LBE10392:
 18711              	.LBE10391:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18712              		.loc 5 451 9 view .LVU4862
 18713 0022 8A18     		adds	r2, r1, r2
 18714              	.LVL1406:
 18715              	.LBB10393:
 18716              	.LBI10393:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 18717              		.loc 5 263 9 is_stmt 1 view .LVU4863
 18718              	.LBB10394:
 18719              	.LBB10395:
 18720              	.LBI10395:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 18721              		.loc 5 243 9 view .LVU4864
 18722              	.LBB10396:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18723              		.loc 5 247 11 is_stmt 0 view .LVU4865
 18724 0024 0023     		movs	r3, #0
 18725 0026 02A8     		add	r0, sp, #8
 18726              	.LVL1407:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18727              		.loc 5 247 11 view .LVU4866
 18728 0028 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 18729              	.LVL1408:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18730              		.loc 5 247 11 view .LVU4867
 18731              	.LBE10396:
 18732              	.LBE10395:
 18733              	.LBE10394:
 18734              	.LBE10393:
 18735              	.LBE10373:
 18736              	.LBE10372:
 18737              	.LBE10371:
 18738              	.LBE10397:
 18739              	.LBE10398:
 18740              	.LBE10399:
 18741              	.LBE10400:
 18742              	.LBB10401:
 18743              	.LBI10401:
1716:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18744              		.loc 13 1716 2 is_stmt 1 view .LVU4868
 18745              	.LBB10402:
 18746              	.LBI10402:
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18747              		.loc 13 1720 2 view .LVU4869
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18748              		.loc 13 1720 2 is_stmt 0 view .LVU4870
 18749              	.LBE10402:
 18750              	.LBE10401:
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 18751              		.loc 9 154 6 view .LVU4871
 18752 002c 02AA     		add	r2, sp, #8
 18753              	.LVL1409:
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 18754              		.loc 9 154 6 view .LVU4872
 18755 002e 2900     		movs	r1, r5
ARM GAS  /tmp/ccszdRNt.s 			page 668


 18756 0030 2000     		movs	r0, r4
 18757 0032 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxIS5_EEv
 18758              	.LVL1410:
 18759              	.LBB10403:
 18760              	.LBI10403:
1712:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ _Alloc_traits::destroy(_M_this->_M_impl, _M_ptr()); }
 18761              		.loc 13 1712 2 is_stmt 1 view .LVU4873
 18762              	.LBB10404:
 18763              	.LBI10404:
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18764              		.loc 13 1720 2 view .LVU4874
1720:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 18765              		.loc 13 1720 2 is_stmt 0 view .LVU4875
 18766              	.LBE10404:
 18767              	.LBB10405:
 18768              	.LBI10405:
 495:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.destroy(__p)))
 18769              		.loc 10 495 2 is_stmt 1 view .LVU4876
 18770              	.LBB10406:
 18771              	.LBI10406:
 18772              		.loc 7 151 2 view .LVU4877
 18773              	.LBB10407:
 18774              	.LBI10407:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 18775              		.loc 5 657 7 view .LVU4878
 18776              	.LBB10408:
 18777              	.LBI10408:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18778              		.loc 5 229 7 view .LVU4879
 18779              	.LBB10409:
 18780              	.LBB10410:
 18781              	.LBI10410:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 18782              		.loc 5 221 7 view .LVU4880
 18783              	.LBB10411:
 18784              	.LBI10411:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18785              		.loc 5 186 7 view .LVU4881
 18786              	.LBB10412:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18787              		.loc 5 187 28 is_stmt 0 view .LVU4882
 18788 0036 0298     		ldr	r0, [sp, #8]
 18789              	.LVL1411:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18790              		.loc 5 187 28 view .LVU4883
 18791              	.LBE10412:
 18792              	.LBE10411:
 18793              	.LBB10413:
 18794              	.LBI10413:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18795              		.loc 5 200 7 is_stmt 1 view .LVU4884
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18796              		.loc 5 200 7 is_stmt 0 view .LVU4885
 18797              	.LBE10413:
 18798              	.LBE10410:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 18799              		.loc 5 231 2 view .LVU4886
ARM GAS  /tmp/ccszdRNt.s 			page 669


 18800 0038 B842     		cmp	r0, r7
 18801 003a 01D0     		beq	.L402
 18802              	.LVL1412:
 18803              	.LBB10414:
 18804              	.LBI10414:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 18805              		.loc 5 236 7 is_stmt 1 view .LVU4887
 18806              	.LBB10415:
 18807              	.LBB10416:
 18808              	.LBI10416:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 18809              		.loc 10 469 7 view .LVU4888
 18810              	.LBB10417:
 18811              	.LBI10417:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 18812              		.loc 7 119 7 view .LVU4889
 18813              	.LBB10418:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18814              		.loc 7 128 19 is_stmt 0 view .LVU4890
 18815 003c FFF7FEFF 		bl	_ZdlPv
 18816              	.LVL1413:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 18817              		.loc 7 128 19 view .LVU4891
 18818              	.LBE10418:
 18819              	.LBE10417:
 18820              	.LBE10416:
 18821              	.LBE10415:
 18822              	.LBE10414:
 18823              	.LBE10409:
 18824              	.LBE10408:
 18825              	.LBB10419:
 18826              	.LBI10419:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18827              		.loc 5 150 14 is_stmt 1 view .LVU4892
 18828              	.LBB10420:
 18829              	.LBI10420:
 18830              		.loc 6 153 7 view .LVU4893
 18831              	.LBB10421:
 18832              	.LBI10421:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18833              		.loc 7 89 7 view .LVU4894
 18834              	.L402:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18835              		.loc 7 89 7 is_stmt 0 view .LVU4895
 18836              	.LBE10421:
 18837              	.LBE10420:
 18838              	.LBE10419:
 18839              	.LBE10407:
 18840              	.LBE10406:
 18841              	.LBE10405:
 18842              	.LBE10403:
 18843              	.LBE10422:
 18844              	.LBE10452:
 18845              	.LBE10462:
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 18846              		.loc 9 166 37 view .LVU4896
 18847 0040 2068     		ldr	r0, [r4]
ARM GAS  /tmp/ccszdRNt.s 			page 670


 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc ****     }
 18848              		.loc 9 166 46 view .LVU4897
 18849 0042 8019     		adds	r0, r0, r6
 18850              	.LVL1414:
 18851              	.LBB10463:
 18852              	.LBI10463:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18853              		.loc 14 806 7 is_stmt 1 view .LVU4898
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 18854              		.loc 14 806 7 is_stmt 0 view .LVU4899
 18855              	.LBE10463:
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 18856              		.loc 9 167 5 view .LVU4900
 18857 0044 09B0     		add	sp, sp, #36
 18858              		@ sp needed
 18859              	.LVL1415:
 18860              	.LVL1416:
 18861              	.LVL1417:
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 
 18862              		.loc 9 167 5 view .LVU4901
 18863 0046 F0BD     		pop	{r4, r5, r6, r7, pc}
 18864              	.LVL1418:
 18865              	.L404:
 18866              	.LBB10464:
 18867              	.LBB10453:
 18868              	.LBB10423:
 18869              	.LBI10423:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 18870              		.loc 10 482 2 is_stmt 1 view .LVU4902
 18871              	.LBB10424:
 18872              	.LBI10424:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 18873              		.loc 7 144 2 view .LVU4903
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 18874              		.loc 7 144 2 is_stmt 0 view .LVU4904
 18875              	.LBE10424:
 18876              	.LBE10423:
 18877              	.LBE10453:
 18878              	.LBE10464:
 18879              		.loc 11 174 3 is_stmt 1 view .LVU4905
 18880              	.LBB10465:
 18881              	.LBB10454:
 18882              	.LBB10451:
 18883              	.LBB10450:
 18884              	.LBB10425:
 18885              	.LBI10425:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 18886              		.loc 5 448 7 view .LVU4906
 18887              	.LBB10426:
 18888              	.LBB10427:
 18889              	.LBI10427:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 18890              		.loc 5 190 7 view .LVU4907
 18891              	.LBB10428:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18892              		.loc 5 193 51 is_stmt 0 view .LVU4908
 18893 0048 0300     		movs	r3, r0
ARM GAS  /tmp/ccszdRNt.s 			page 671


 18894 004a 0833     		adds	r3, r3, #8
 18895              	.LVL1419:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 18896              		.loc 5 193 51 view .LVU4909
 18897              	.LBE10428:
 18898              	.LBE10427:
 18899              	.LBB10429:
 18900              	.LBI10429:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18901              		.loc 5 290 7 is_stmt 1 view .LVU4910
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 18902              		.loc 5 290 7 is_stmt 0 view .LVU4911
 18903              	.LBE10429:
 18904              	.LBB10430:
 18905              	.LBI10430:
 18906              		.loc 20 97 19 is_stmt 1 view .LVU4912
 18907              	.LBB10431:
 18908              	.LBI10431:
 18909              		.loc 10 514 7 view .LVU4913
 18910              	.LBB10432:
 18911              	.LBI10432:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18912              		.loc 6 141 7 view .LVU4914
 18913              	.LBB10433:
 18914              	.LBI10433:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18915              		.loc 7 83 7 view .LVU4915
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18916              		.loc 7 83 7 is_stmt 0 view .LVU4916
 18917              	.LBE10433:
 18918              	.LBE10432:
 18919              	.LBE10431:
 18920              	.LBE10430:
 18921              	.LBB10434:
 18922              	.LBI10434:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 18923              		.loc 5 159 2 is_stmt 1 view .LVU4917
 18924              	.LBB10435:
 18925              	.LBB10436:
 18926              	.LBI10436:
 18927              		.loc 8 99 5 view .LVU4918
 18928              		.loc 8 99 5 is_stmt 0 view .LVU4919
 18929              	.LBE10436:
 18930              	.LBB10437:
 18931              	.LBI10437:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 18932              		.loc 6 141 7 is_stmt 1 view .LVU4920
 18933              	.LBB10438:
 18934              	.LBI10438:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18935              		.loc 7 83 7 view .LVU4921
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18936              		.loc 7 83 7 is_stmt 0 view .LVU4922
 18937              	.LBE10438:
 18938              	.LBE10437:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18939              		.loc 5 160 46 view .LVU4923
ARM GAS  /tmp/ccszdRNt.s 			page 672


 18940 004c 0360     		str	r3, [r0]
 18941              	.LVL1420:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 18942              		.loc 5 160 46 view .LVU4924
 18943              	.LBE10435:
 18944              	.LBE10434:
 18945              	.LBB10439:
 18946              	.LBI10439:
 18947              		.loc 6 153 7 is_stmt 1 view .LVU4925
 18948              	.LBB10440:
 18949              	.LBI10440:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18950              		.loc 7 89 7 view .LVU4926
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 18951              		.loc 7 89 7 is_stmt 0 view .LVU4927
 18952              	.LBE10440:
 18953              	.LBE10439:
 18954              	.LBB10441:
 18955              	.LBI10441:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18956              		.loc 5 186 7 is_stmt 1 view .LVU4928
 18957              	.LBB10442:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18958              		.loc 5 187 28 is_stmt 0 view .LVU4929
 18959 004e 1168     		ldr	r1, [r2]
 18960              	.LVL1421:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18961              		.loc 5 187 28 view .LVU4930
 18962              	.LBE10442:
 18963              	.LBE10441:
 18964              	.LBB10443:
 18965              	.LBI10443:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18966              		.loc 5 186 7 is_stmt 1 view .LVU4931
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 18967              		.loc 5 186 7 is_stmt 0 view .LVU4932
 18968              	.LBE10443:
 18969              	.LBB10444:
 18970              	.LBI10444:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 18971              		.loc 5 936 7 is_stmt 1 view .LVU4933
 18972              	.LBB10445:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18973              		.loc 5 937 16 is_stmt 0 view .LVU4934
 18974 0050 5268     		ldr	r2, [r2, #4]
 18975              	.LVL1422:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18976              		.loc 5 937 16 view .LVU4935
 18977              	.LBE10445:
 18978              	.LBE10444:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 18979              		.loc 5 451 9 view .LVU4936
 18980 0052 8A18     		adds	r2, r1, r2
 18981              	.LVL1423:
 18982              	.LBB10446:
 18983              	.LBI10446:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
ARM GAS  /tmp/ccszdRNt.s 			page 673


 18984              		.loc 5 263 9 is_stmt 1 view .LVU4937
 18985              	.LBB10447:
 18986              	.LBB10448:
 18987              	.LBI10448:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 18988              		.loc 5 243 9 view .LVU4938
 18989              	.LBB10449:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18990              		.loc 5 247 11 is_stmt 0 view .LVU4939
 18991 0054 0023     		movs	r3, #0
 18992 0056 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 18993              	.LVL1424:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 18994              		.loc 5 247 11 view .LVU4940
 18995              	.LBE10449:
 18996              	.LBE10448:
 18997              	.LBE10447:
 18998              	.LBE10446:
 18999              	.LBE10426:
 19000              	.LBE10425:
 19001              	.LBE10450:
 19002              	.LBE10451:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 19003              		.loc 9 144 6 view .LVU4941
 19004 005a 6368     		ldr	r3, [r4, #4]
 19005 005c 1833     		adds	r3, r3, #24
 19006 005e 6360     		str	r3, [r4, #4]
 19007 0060 EEE7     		b	.L402
 19008              	.LVL1425:
 19009              	.L400:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 19010              		.loc 9 144 6 view .LVU4942
 19011              	.LBE10454:
 19012              	.LBB10455:
 19013              	.LBI10455:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 19014              		.loc 13 808 7 is_stmt 1 view .LVU4943
 19015              	.LBB10456:
 19016              	.LBI10456:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 19017              		.loc 14 806 7 view .LVU4944
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 19018              		.loc 14 806 7 is_stmt 0 view .LVU4945
 19019              	.LBE10456:
 19020              	.LBE10455:
 19021              	.LBB10457:
 19022              	.LBI10457:
 881:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 19023              		.loc 13 881 7 is_stmt 1 view .LVU4946
 19024              	.LBB10458:
 19025              	.LBI10458:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 19026              		.loc 14 806 7 view .LVU4947
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 19027              		.loc 14 806 7 is_stmt 0 view .LVU4948
 19028              	.LBE10458:
 19029              	.LBE10457:
ARM GAS  /tmp/ccszdRNt.s 			page 674


 19030              	.LBB10459:
 19031              	.LBI10459:
 859:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return __normal_iterator(_M_current + __n); }
 19032              		.loc 14 859 7 is_stmt 1 view .LVU4949
 19033              	.LBB10460:
 19034              	.LBB10461:
 19035              	.LBI10461:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 19036              		.loc 14 806 7 view .LVU4950
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 19037              		.loc 14 806 7 is_stmt 0 view .LVU4951
 19038              	.LBE10461:
 19039              	.LBE10460:
 19040              	.LBE10459:
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 19041              		.loc 9 161 2 view .LVU4952
 19042 0062 2900     		movs	r1, r5
 19043 0064 2000     		movs	r0, r4
 19044 0066 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJR
 19045              	.LVL1426:
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/vector.tcc **** #else
 19046              		.loc 9 161 2 view .LVU4953
 19047 006a E9E7     		b	.L402
 19048              	.LBE10465:
 19049              		.cfi_endproc
 19050              	.LFE4230:
 19052              		.section	.rodata._ZN3CLI12Process_lineEv.str1.4,"aMS",%progbits,1
 19053              		.align	2
 19054              	.LC70:
 19055 0000 62617369 		.ascii	"basic_string::substr\000"
 19055      635F7374 
 19055      72696E67 
 19055      3A3A7375 
 19055      62737472 
 19056 0015 000000   		.align	2
 19057              	.LC73:
 19058 0018 62617369 		.ascii	"basic_string::basic_string\000"
 19058      635F7374 
 19058      72696E67 
 19058      3A3A6261 
 19058      7369635F 
 19059 0033 00       		.align	2
 19060              	.LC75:
 19061 0034 00       		.ascii	"\000"
 19062 0035 000000   		.align	2
 19063              	.LC80:
 19064 0038 0D0D0A00 		.ascii	"\015\015\012\000"
 19065              		.align	2
 19066              	.LC83:
 19067 003c 2F00     		.ascii	"/\000"
 19068 003e 0000     		.align	2
 19069              	.LC85:
 19070 0040 436F6D6D 		.ascii	"Command \"\000"
 19070      616E6420 
 19070      2200
 19071 004a 0000     		.align	2
 19072              	.LC88:
ARM GAS  /tmp/ccszdRNt.s 			page 675


 19073 004c 22207761 		.ascii	"\" was not found\015\012\000"
 19073      73206E6F 
 19073      7420666F 
 19073      756E640D 
 19073      0A00
 19074              		.section	.text._ZN3CLI12Process_lineEv,"ax",%progbits
 19075              		.align	1
 19076              		.global	_ZN3CLI12Process_lineEv
 19077              		.syntax unified
 19078              		.code	16
 19079              		.thumb_func
 19080              		.fpu softvfp
 19082              	_ZN3CLI12Process_lineEv:
 19083              	.LVL1427:
 19084              	.LFB3856:
  79:alohal/cli/cli.cpp ****     size_t position = actual_line.find(line_opening);
 19085              		.loc 2 79 24 is_stmt 1 view -0
 19086              		.cfi_startproc
 19087              		@ args = 0, pretend = 0, frame = 272
 19088              		@ frame_needed = 0, uses_anonymous_args = 0
  79:alohal/cli/cli.cpp ****     size_t position = actual_line.find(line_opening);
 19089              		.loc 2 79 24 is_stmt 0 view .LVU4955
 19090 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 19091              	.LCFI59:
 19092              		.cfi_def_cfa_offset 20
 19093              		.cfi_offset 4, -20
 19094              		.cfi_offset 5, -16
 19095              		.cfi_offset 6, -12
 19096              		.cfi_offset 7, -8
 19097              		.cfi_offset 14, -4
 19098 0002 CE46     		mov	lr, r9
 19099 0004 4746     		mov	r7, r8
 19100 0006 80B5     		push	{r7, lr}
 19101              	.LCFI60:
 19102              		.cfi_def_cfa_offset 28
 19103              		.cfi_offset 8, -28
 19104              		.cfi_offset 9, -24
 19105 0008 C5B0     		sub	sp, sp, #276
 19106              	.LCFI61:
 19107              		.cfi_def_cfa_offset 304
 19108 000a 0500     		movs	r5, r0
  80:alohal/cli/cli.cpp ****     string cmd_line = actual_line.substr(position + line_opening.length(), actual_line.length() - p
 19109              		.loc 2 80 5 is_stmt 1 view .LVU4956
  80:alohal/cli/cli.cpp ****     string cmd_line = actual_line.substr(position + line_opening.length(), actual_line.length() - p
 19110              		.loc 2 80 39 is_stmt 0 view .LVU4957
 19111 000c 061D     		adds	r6, r0, #4
 19112              	.LVL1428:
 19113              	.LBB11197:
 19114              	.LBI11197:
2361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 19115              		.loc 5 2361 7 is_stmt 1 view .LVU4958
 19116              	.LBB11198:
 19117              	.LBB11199:
 19118              	.LBI11199:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 19119              		.loc 5 2312 7 view .LVU4959
 19120              	.LBB11200:
ARM GAS  /tmp/ccszdRNt.s 			page 676


 19121              	.LBI11200:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19122              		.loc 5 186 7 view .LVU4960
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19123              		.loc 5 186 7 is_stmt 0 view .LVU4961
 19124              	.LBE11200:
 19125              	.LBE11199:
 19126              	.LBB11201:
 19127              	.LBI11201:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19128              		.loc 5 930 7 is_stmt 1 view .LVU4962
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19129              		.loc 5 930 7 is_stmt 0 view .LVU4963
 19130              	.LBE11201:
2363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19131              		.loc 5 2363 60 view .LVU4964
 19132 000e 836B     		ldr	r3, [r0, #56]
 19133 0010 0022     		movs	r2, #0
 19134 0012 416B     		ldr	r1, [r0, #52]
 19135 0014 3000     		movs	r0, r6
 19136              	.LVL1429:
2363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19137              		.loc 5 2363 60 view .LVU4965
 19138 0016 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
 19139              	.LVL1430:
2363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19140              		.loc 5 2363 60 view .LVU4966
 19141              	.LBE11198:
 19142              	.LBE11197:
  81:alohal/cli/cli.cpp **** 
 19143              		.loc 2 81 5 is_stmt 1 view .LVU4967
 19144              	.LBB11202:
 19145              	.LBI11202:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19146              		.loc 5 936 7 view .LVU4968
 19147              	.LBB11203:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19148              		.loc 5 937 16 is_stmt 0 view .LVU4969
 19149 001a AB6B     		ldr	r3, [r5, #56]
 19150              	.LVL1431:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19151              		.loc 5 937 16 view .LVU4970
 19152              	.LBE11203:
 19153              	.LBE11202:
  81:alohal/cli/cli.cpp **** 
 19154              		.loc 2 81 131 view .LVU4971
 19155 001c C418     		adds	r4, r0, r3
 19156              	.LVL1432:
 19157              	.LBB11204:
 19158              	.LBI11204:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19159              		.loc 5 936 7 is_stmt 1 view .LVU4972
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19160              		.loc 5 936 7 is_stmt 0 view .LVU4973
 19161              	.LBE11204:
  81:alohal/cli/cli.cpp **** 
 19162              		.loc 2 81 97 view .LVU4974
ARM GAS  /tmp/ccszdRNt.s 			page 677


 19163 001e AA68     		ldr	r2, [r5, #8]
 19164 0020 101A     		subs	r0, r2, r0
 19165              	.LVL1433:
  81:alohal/cli/cli.cpp **** 
 19166              		.loc 2 81 131 view .LVU4975
 19167 0022 C01A     		subs	r0, r0, r3
 19168              	.LVL1434:
 19169              	.LBB11205:
 19170              	.LBI11205:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 19171              		.loc 5 2834 7 is_stmt 1 view .LVU4976
 19172              	.LBB11206:
 19173              	.LBB11207:
 19174              	.LBI11207:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19175              		.loc 5 310 7 view .LVU4977
 19176              	.LBB11208:
 19177              	.LBB11209:
 19178              	.LBI11209:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19179              		.loc 5 930 7 view .LVU4978
 19180              	.LBB11210:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19181              		.loc 5 931 16 is_stmt 0 view .LVU4979
 19182 0024 7368     		ldr	r3, [r6, #4]
 19183              	.LVL1435:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19184              		.loc 5 931 16 view .LVU4980
 19185              	.LBE11210:
 19186              	.LBE11209:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 19187              		.loc 5 312 2 view .LVU4981
 19188 0026 9C42     		cmp	r4, r3
 19189 0028 32D8     		bhi	.L468
 19190              	.LVL1436:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 19191              		.loc 5 312 2 view .LVU4982
 19192              	.LBE11208:
 19193              	.LBE11207:
 19194              	.LBB11212:
 19195              	.LBI11212:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 19196              		.loc 5 476 7 is_stmt 1 view .LVU4983
 19197              	.LBB11213:
 19198              	.LBB11214:
 19199              	.LBI11214:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19200              		.loc 5 190 7 view .LVU4984
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19201              		.loc 5 190 7 is_stmt 0 view .LVU4985
 19202              	.LBE11214:
 19203              	.LBB11215:
 19204              	.LBI11215:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19205              		.loc 6 138 7 is_stmt 1 view .LVU4986
 19206              	.LBB11216:
 19207              	.LBI11216:
ARM GAS  /tmp/ccszdRNt.s 			page 678


  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19208              		.loc 7 80 7 view .LVU4987
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19209              		.loc 7 80 7 is_stmt 0 view .LVU4988
 19210              	.LBE11216:
 19211              	.LBE11215:
 19212              	.LBB11217:
 19213              	.LBI11217:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 19214              		.loc 5 159 2 is_stmt 1 view .LVU4989
 19215              	.LBB11218:
 19216              	.LBB11219:
 19217              	.LBB11220:
 19218              	.LBI11220:
 19219              		.loc 8 99 5 view .LVU4990
 19220              		.loc 8 99 5 is_stmt 0 view .LVU4991
 19221              	.LBE11220:
 19222              	.LBB11221:
 19223              	.LBI11221:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19224              		.loc 6 141 7 is_stmt 1 view .LVU4992
 19225              	.LBB11222:
 19226              	.LBI11222:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19227              		.loc 7 83 7 view .LVU4993
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19228              		.loc 7 83 7 is_stmt 0 view .LVU4994
 19229              	.LBE11222:
 19230              	.LBE11221:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19231              		.loc 5 160 46 view .LVU4995
 19232 002a 0DAB     		add	r3, sp, #52
 19233              	.LVL1437:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19234              		.loc 5 160 46 view .LVU4996
 19235 002c 0B93     		str	r3, [sp, #44]
 19236              	.LVL1438:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19237              		.loc 5 160 46 view .LVU4997
 19238              	.LBE11219:
 19239              	.LBE11218:
 19240              	.LBE11217:
 19241              	.LBB11223:
 19242              	.LBI11223:
 19243              		.loc 6 153 7 is_stmt 1 view .LVU4998
 19244              	.LBB11224:
 19245              	.LBI11224:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19246              		.loc 7 89 7 view .LVU4999
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19247              		.loc 7 89 7 is_stmt 0 view .LVU5000
 19248              	.LBE11224:
 19249              	.LBE11223:
 19250              	.LBB11225:
 19251              	.LBB11226:
 19252              	.LBI11226:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 679


 19253              		.loc 5 186 7 is_stmt 1 view .LVU5001
 19254              	.LBB11227:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19255              		.loc 5 187 28 is_stmt 0 view .LVU5002
 19256 002e 6968     		ldr	r1, [r5, #4]
 19257              	.LVL1439:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19258              		.loc 5 187 28 view .LVU5003
 19259              	.LBE11227:
 19260              	.LBE11226:
 19261              	.LBB11228:
 19262              	.LBI11228:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19263              		.loc 5 310 7 is_stmt 1 view .LVU5004
 19264              	.LBB11229:
 19265              	.LBB11230:
 19266              	.LBI11230:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19267              		.loc 5 930 7 view .LVU5005
 19268              	.LBB11231:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19269              		.loc 5 931 16 is_stmt 0 view .LVU5006
 19270 0030 7268     		ldr	r2, [r6, #4]
 19271              	.LVL1440:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19272              		.loc 5 931 16 view .LVU5007
 19273              	.LBE11231:
 19274              	.LBE11230:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 19275              		.loc 5 312 2 view .LVU5008
 19276 0032 9442     		cmp	r4, r2
 19277 0034 31D8     		bhi	.L469
 19278              	.LVL1441:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 19279              		.loc 5 312 2 view .LVU5009
 19280              	.LBE11229:
 19281              	.LBE11228:
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 19282              		.loc 5 480 16 view .LVU5010
 19283 0036 0919     		adds	r1, r1, r4
 19284              	.LVL1442:
 19285              	.LBB11233:
 19286              	.LBI11233:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19287              		.loc 5 329 7 is_stmt 1 view .LVU5011
 19288              	.LBB11234:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 19289              		.loc 5 331 47 is_stmt 0 view .LVU5012
 19290 0038 121B     		subs	r2, r2, r4
 19291              	.LVL1443:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 19292              		.loc 5 332 19 view .LVU5013
 19293 003a 9042     		cmp	r0, r2
 19294 003c 00D2     		bcs	.L408
 19295 003e 0200     		movs	r2, r0
 19296              	.LVL1444:
 19297              	.L408:
ARM GAS  /tmp/ccszdRNt.s 			page 680


 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 19298              		.loc 5 332 19 view .LVU5014
 19299              	.LBE11234:
 19300              	.LBE11233:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 19301              		.loc 5 482 2 view .LVU5015
 19302 0040 8A18     		adds	r2, r1, r2
 19303              	.LVL1445:
 19304              	.LBB11235:
 19305              	.LBI11235:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19306              		.loc 5 263 9 is_stmt 1 view .LVU5016
 19307              	.LBB11236:
 19308              	.LBB11237:
 19309              	.LBI11237:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19310              		.loc 5 243 9 view .LVU5017
 19311              	.LBB11238:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19312              		.loc 5 247 11 is_stmt 0 view .LVU5018
 19313 0042 0023     		movs	r3, #0
 19314 0044 0BA8     		add	r0, sp, #44
 19315              	.LVL1446:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19316              		.loc 5 247 11 view .LVU5019
 19317 0046 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 19318              	.LVL1447:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19319              		.loc 5 247 11 view .LVU5020
 19320              	.LBE11238:
 19321              	.LBE11237:
 19322              	.LBE11236:
 19323              	.LBE11235:
 19324              	.LBE11225:
 19325              	.LBE11213:
 19326              	.LBE11212:
 19327              	.LBE11206:
 19328              	.LBE11205:
  84:alohal/cli/cli.cpp ****         Print("\r\n");
 19329              		.loc 2 84 5 is_stmt 1 view .LVU5021
 19330              	.LBB11245:
 19331              	.LBI11245:
6175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const _CharT* __rhs)
 19332              		.loc 5 6175 5 view .LVU5022
 19333              	.LBB11246:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19334              		.loc 5 6177 35 is_stmt 0 view .LVU5023
 19335 004a D049     		ldr	r1, .L486
 19336 004c 0BA8     		add	r0, sp, #44
 19337              	.LVL1448:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19338              		.loc 5 6177 35 view .LVU5024
 19339 004e FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
 19340              	.LVL1449:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19341              		.loc 5 6177 35 view .LVU5025
 19342 0052 071E     		subs	r7, r0, #0
ARM GAS  /tmp/ccszdRNt.s 			page 681


 19343              	.LVL1450:
6177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19344              		.loc 5 6177 35 view .LVU5026
 19345              	.LBE11246:
 19346              	.LBE11245:
  84:alohal/cli/cli.cpp ****         Print("\r\n");
 19347              		.loc 2 84 5 view .LVU5027
 19348 0054 27D0     		beq	.L470
  94:alohal/cli/cli.cpp ****         command_history->Update(cmd_line);
 19349              		.loc 2 94 5 is_stmt 1 view .LVU5028
 19350              	.LVL1451:
 19351              	.LBB11247:
 19352              	.LBI11247:
 19353              		.file 23 "alohal/cli/cli.hpp"
   1:alohal/cli/cli.hpp **** #pragma once
   2:alohal/cli/cli.hpp **** 
   3:alohal/cli/cli.hpp **** #include <string>
   4:alohal/cli/cli.hpp **** #include <vector>
   5:alohal/cli/cli.hpp **** 
   6:alohal/cli/cli.hpp **** #include "uart/serial_line.hpp"
   7:alohal/cli/cli.hpp **** #include "command.hpp"
   8:alohal/cli/cli.hpp **** #include "history.hpp"
   9:alohal/cli/cli.hpp **** #include "filesystem/executable.hpp"
  10:alohal/cli/cli.hpp **** 
  11:alohal/cli/cli.hpp **** class Filesystem;
  12:alohal/cli/cli.hpp **** 
  13:alohal/cli/cli.hpp **** class CLI
  14:alohal/cli/cli.hpp **** {
  15:alohal/cli/cli.hpp **** private:
  16:alohal/cli/cli.hpp ****     /**
  17:alohal/cli/cli.hpp ****      * @brief Communication interface used for all CLI interaction
  18:alohal/cli/cli.hpp ****      */
  19:alohal/cli/cli.hpp ****     Serial_line *serial_connection = nullptr;
  20:alohal/cli/cli.hpp **** 
  21:alohal/cli/cli.hpp ****     /**
  22:alohal/cli/cli.hpp ****      * @brief Content of line on screen including FS prefix and line opening
  23:alohal/cli/cli.hpp ****      */
  24:alohal/cli/cli.hpp ****     string actual_line = "";
  25:alohal/cli/cli.hpp **** 
  26:alohal/cli/cli.hpp ****     /**
  27:alohal/cli/cli.hpp ****      * @brief   Last printed line used to determinated how much white space is needed for
  28:alohal/cli/cli.hpp ****      *              redrawing trailing printed character
  29:alohal/cli/cli.hpp ****      *          Without it adding white space: AB -> C => CB
  30:alohal/cli/cli.hpp ****      */
  31:alohal/cli/cli.hpp ****     string last_printed_line = "";
  32:alohal/cli/cli.hpp **** 
  33:alohal/cli/cli.hpp ****     /**
  34:alohal/cli/cli.hpp ****      * @brief Content which is inserted to every new line
  35:alohal/cli/cli.hpp ****      */
  36:alohal/cli/cli.hpp ****     const string line_opening = "\u001b[1m\u001b[32;1m>\u001b[0m ";
  37:alohal/cli/cli.hpp **** 
  38:alohal/cli/cli.hpp ****     /**
  39:alohal/cli/cli.hpp ****      * @brief Pointer to filesystem, which is connected to CLI
  40:alohal/cli/cli.hpp ****      */
  41:alohal/cli/cli.hpp ****     Filesystem* fs = nullptr;
  42:alohal/cli/cli.hpp **** 
  43:alohal/cli/cli.hpp ****     /**
ARM GAS  /tmp/ccszdRNt.s 			page 682


  44:alohal/cli/cli.hpp ****      * @brief   Prefix before line opening, contains location inside filesystem, updated with every
  45:alohal/cli/cli.hpp ****      *          Used before line opening on new line
  46:alohal/cli/cli.hpp ****      */
  47:alohal/cli/cli.hpp ****     string line_prefix = "";
  48:alohal/cli/cli.hpp **** 
  49:alohal/cli/cli.hpp ****     /**
  50:alohal/cli/cli.hpp ****      * @brief   List of command which can be used inside CLI
  51:alohal/cli/cli.hpp ****      *          Contains generic linux commands as ls, cd, pwd ...
  52:alohal/cli/cli.hpp ****      */
  53:alohal/cli/cli.hpp ****     vector<Command_base *> commands;
  54:alohal/cli/cli.hpp **** 
  55:alohal/cli/cli.hpp ****     /**
  56:alohal/cli/cli.hpp ****      * @brief   Pointer to object which add support for command history
  57:alohal/cli/cli.hpp ****      */
  58:alohal/cli/cli.hpp ****     CLI_history *command_history = nullptr;
  59:alohal/cli/cli.hpp **** 
  60:alohal/cli/cli.hpp ****     /**
  61:alohal/cli/cli.hpp ****      * @brief   Number of remaining characters of escape sequence
  62:alohal/cli/cli.hpp ****      *          If higher then 0, escape sequence is recording
  63:alohal/cli/cli.hpp ****      *          Now are only supported ^[A (arrow up) and ^[B (arrow down)
  64:alohal/cli/cli.hpp ****      *              for command history browsing
  65:alohal/cli/cli.hpp ****      */
  66:alohal/cli/cli.hpp ****     unsigned short escape_sequency_remaining = 0;
  67:alohal/cli/cli.hpp **** 
  68:alohal/cli/cli.hpp ****     /**
  69:alohal/cli/cli.hpp ****      * @brief Pointer to executable in foreground of application
  70:alohal/cli/cli.hpp ****      */
  71:alohal/cli/cli.hpp ****     Executable * foreground_application = nullptr;
  72:alohal/cli/cli.hpp **** 
  73:alohal/cli/cli.hpp **** public:
  74:alohal/cli/cli.hpp ****     CLI() =default;
  75:alohal/cli/cli.hpp **** 
  76:alohal/cli/cli.hpp ****     /**
  77:alohal/cli/cli.hpp ****      * @brief Connect CLI to specified serial interface, this interface will be
  78:alohal/cli/cli.hpp ****      * used for comunication with user
  79:alohal/cli/cli.hpp ****      *
  80:alohal/cli/cli.hpp ****      * @param connection Serial communication interface (UART of USB CDC)
  81:alohal/cli/cli.hpp ****      */
  82:alohal/cli/cli.hpp ****     void Connect(Serial_line *connection);
  83:alohal/cli/cli.hpp **** 
  84:alohal/cli/cli.hpp ****     /**
  85:alohal/cli/cli.hpp ****      * @brief Enable lading characters from user, register basic CLI commands
  86:alohal/cli/cli.hpp ****      */
  87:alohal/cli/cli.hpp ****     void Start();
  88:alohal/cli/cli.hpp **** 
  89:alohal/cli/cli.hpp ****     /**
  90:alohal/cli/cli.hpp ****      * @brief   Load next available char from Serial_line, eventually start processing of line
  91:alohal/cli/cli.hpp ****      *          Called from IRQ Handler
  92:alohal/cli/cli.hpp ****      *
  93:alohal/cli/cli.hpp ****      */
  94:alohal/cli/cli.hpp ****     void Char_load();
  95:alohal/cli/cli.hpp **** 
  96:alohal/cli/cli.hpp ****     /**
  97:alohal/cli/cli.hpp ****      * @brief   Print given string to CLI to new line
  98:alohal/cli/cli.hpp ****      *          New line characters "\r\n" must be added by programer to end line
  99:alohal/cli/cli.hpp ****      *
 100:alohal/cli/cli.hpp ****      * @param text text to print on CLI screen
ARM GAS  /tmp/ccszdRNt.s 			page 683


 101:alohal/cli/cli.hpp ****      * @return int Length of new line
 102:alohal/cli/cli.hpp ****      */
 103:alohal/cli/cli.hpp ****     int Print(string text);
 104:alohal/cli/cli.hpp **** 
 105:alohal/cli/cli.hpp ****     /**
 106:alohal/cli/cli.hpp ****      * @brief   Enable command history and listing in it for CLI
 107:alohal/cli/cli.hpp ****      *          Can be only used once, another usage has no effect
 108:alohal/cli/cli.hpp ****      *          Size of command history cannot be changed during run
 109:alohal/cli/cli.hpp ****      *
 110:alohal/cli/cli.hpp ****      * @param size_of_history   Number of commands which will be stored in history buffer
 111:alohal/cli/cli.hpp ****      * @return int              -1 if history already exists
 112:alohal/cli/cli.hpp ****      */
 113:alohal/cli/cli.hpp ****     int Enable_history(uint size_of_history);
 114:alohal/cli/cli.hpp **** 
 115:alohal/cli/cli.hpp ****     /**
 116:alohal/cli/cli.hpp ****      * @brief   Enable to run any executable from file system, executable cannot have name of any c
 117:alohal/cli/cli.hpp ****      *
 118:alohal/cli/cli.hpp ****      * @param fs Pointer to filesystem, from which will be executable loaded
 119:alohal/cli/cli.hpp ****      * @return int 0 if OK, 1 if filesystem is already set
 120:alohal/cli/cli.hpp ****      */
 121:alohal/cli/cli.hpp ****     int Enable_filesystem_executable(Filesystem* fs);
 122:alohal/cli/cli.hpp **** 
 123:alohal/cli/cli.hpp ****     /**
 124:alohal/cli/cli.hpp ****      * @brief   Save prefix which will be printed before line opening,
 125:alohal/cli/cli.hpp ****      *          This prefix means current location inside filesystem ot primary application
 126:alohal/cli/cli.hpp ****      *
 127:alohal/cli/cli.hpp ****      * @param prefix    Prefix vefore line opening
 128:alohal/cli/cli.hpp ****      */
 129:alohal/cli/cli.hpp ****     void Set_line_prefix(const string prefix);
 130:alohal/cli/cli.hpp **** 
 131:alohal/cli/cli.hpp ****     /**
 132:alohal/cli/cli.hpp ****      * @brief Register method of some object as CLI command
 133:alohal/cli/cli.hpp ****      *
 134:alohal/cli/cli.hpp ****      * @tparam registrator_class    Class of object, which is making registration
 135:alohal/cli/cli.hpp ****      * @param command   Name of command
 136:alohal/cli/cli.hpp ****      * @param help      Help for command
 137:alohal/cli/cli.hpp ****      * @param object    Pointer to object on which will be method invocated
 138:alohal/cli/cli.hpp ****      * @param method    Method of class which will be invocated
 139:alohal/cli/cli.hpp ****      */
 140:alohal/cli/cli.hpp ****     template <typename registrator_class>
 141:alohal/cli/cli.hpp ****     void Register_command(string command, string help, registrator_class *object, int (registrator_
 142:alohal/cli/cli.hpp ****         commands.emplace_back(new Command<registrator_class>(command, help, object, method));
 143:alohal/cli/cli.hpp ****     }
 144:alohal/cli/cli.hpp **** 
 145:alohal/cli/cli.hpp ****     /**
 146:alohal/cli/cli.hpp ****      * @brief   Sets given application into foreground of CLI
 147:alohal/cli/cli.hpp ****      *          When application is in foreground every line is used as argument and new
 148:alohal/cli/cli.hpp ****      *              instance of application is executed
 149:alohal/cli/cli.hpp ****      *
 150:alohal/cli/cli.hpp ****      * @param path_to_application   Path where is application located in filesystem
 151:alohal/cli/cli.hpp ****      * @return true     Valid application exists at path
 152:alohal/cli/cli.hpp ****      * @return false    No valid executable on path
 153:alohal/cli/cli.hpp ****      */
 154:alohal/cli/cli.hpp ****     bool Start_foreground_application(string path_to_application);
 155:alohal/cli/cli.hpp **** 
 156:alohal/cli/cli.hpp ****     /**
 157:alohal/cli/cli.hpp ****      * @brief   Disables foreground app and set CLI into default state
ARM GAS  /tmp/ccszdRNt.s 			page 684


 158:alohal/cli/cli.hpp ****      */
 159:alohal/cli/cli.hpp ****     void Stop_foreground_application();
 160:alohal/cli/cli.hpp **** 
 161:alohal/cli/cli.hpp **** private:
 162:alohal/cli/cli.hpp **** 
 163:alohal/cli/cli.hpp ****     /**
 164:alohal/cli/cli.hpp ****      * @brief Print new empty line to CLI
 165:alohal/cli/cli.hpp ****      *
 166:alohal/cli/cli.hpp ****      */
 167:alohal/cli/cli.hpp ****     void Clear_line();
 168:alohal/cli/cli.hpp **** 
 169:alohal/cli/cli.hpp ****     /**
 170:alohal/cli/cli.hpp ****      * @brief Print new string on actual line
 171:alohal/cli/cli.hpp ****      *
 172:alohal/cli/cli.hpp ****      * @return int Size of actual line
 173:alohal/cli/cli.hpp ****      */
 174:alohal/cli/cli.hpp ****     int Redraw_line();
 175:alohal/cli/cli.hpp **** 
 176:alohal/cli/cli.hpp ****     /**
 177:alohal/cli/cli.hpp ****      * @brief Set text to actual line, FS prefix and line opening is added
 178:alohal/cli/cli.hpp ****      *
 179:alohal/cli/cli.hpp ****      * @param text  Text to set
 180:alohal/cli/cli.hpp ****      * @return int  Length of line
 181:alohal/cli/cli.hpp ****      */
 182:alohal/cli/cli.hpp ****     int Set_line(string text);
 183:alohal/cli/cli.hpp **** 
 184:alohal/cli/cli.hpp ****     /**
 185:alohal/cli/cli.hpp ****      * @brief Process one input character of command line
 186:alohal/cli/cli.hpp ****      *
 187:alohal/cli/cli.hpp ****      * @return int Number of remaining characters in buffer
 188:alohal/cli/cli.hpp ****      */
 189:alohal/cli/cli.hpp ****     void Process_character();
 190:alohal/cli/cli.hpp **** 
 191:alohal/cli/cli.hpp ****     /**
 192:alohal/cli/cli.hpp ****      * @brief Process line (after entering enter), run command
 193:alohal/cli/cli.hpp ****      *
 194:alohal/cli/cli.hpp ****      * @return int Status of operation
 195:alohal/cli/cli.hpp ****      */
 196:alohal/cli/cli.hpp ****     int Process_line();
 197:alohal/cli/cli.hpp **** 
 198:alohal/cli/cli.hpp ****     /**
 199:alohal/cli/cli.hpp ****      * @brief   Handles line procesing if foreground application is running
 200:alohal/cli/cli.hpp ****      *          Executes foreground app and pass arguments into it
 201:alohal/cli/cli.hpp ****      */
 202:alohal/cli/cli.hpp ****     void Process_foreground_application(vector<string> args);
 203:alohal/cli/cli.hpp **** 
 204:alohal/cli/cli.hpp ****     /**
 205:alohal/cli/cli.hpp ****      * @brief CLI command, show available command or help for commands
 206:alohal/cli/cli.hpp ****      *
 207:alohal/cli/cli.hpp ****      * @param args Arguments on CLI for command
 208:alohal/cli/cli.hpp ****      * @return int Number of commands available
 209:alohal/cli/cli.hpp ****      */
 210:alohal/cli/cli.hpp ****     int Help(vector<string> args);
 211:alohal/cli/cli.hpp **** 
 212:alohal/cli/cli.hpp ****     /**
 213:alohal/cli/cli.hpp ****      * @brief CLI command, show information about compilation settings and date
 214:alohal/cli/cli.hpp ****      *
ARM GAS  /tmp/ccszdRNt.s 			page 685


 215:alohal/cli/cli.hpp ****      * @param args Arguments on CLI for command
 216:alohal/cli/cli.hpp ****      * @return int Nothing
 217:alohal/cli/cli.hpp ****      */
 218:alohal/cli/cli.hpp ****     int Build_info(vector<string> args);
 219:alohal/cli/cli.hpp **** 
 220:alohal/cli/cli.hpp ****     /**
 221:alohal/cli/cli.hpp ****      * @brief   Check command history avalability
 222:alohal/cli/cli.hpp ****      *
 223:alohal/cli/cli.hpp ****      * @return true     Command history function is available
 224:alohal/cli/cli.hpp ****      * @return false    Command history function is not available
 225:alohal/cli/cli.hpp ****      */
 226:alohal/cli/cli.hpp ****     bool History() { return command_history != nullptr;};
 19354              		.loc 23 226 10 view .LVU5029
 19355              	.LBB11248:
 19356              		.loc 23 226 22 view .LVU5030
 19357              		.loc 23 226 29 is_stmt 0 view .LVU5031
 19358 0056 6C6F     		ldr	r4, [r5, #116]
 19359              	.LVL1452:
 19360              		.loc 23 226 29 view .LVU5032
 19361              	.LBE11248:
 19362              	.LBE11247:
  94:alohal/cli/cli.cpp ****         command_history->Update(cmd_line);
 19363              		.loc 2 94 5 view .LVU5033
 19364 0058 002C     		cmp	r4, #0
 19365 005a 14D0     		beq	.L413
  95:alohal/cli/cli.cpp ****     }
 19366              		.loc 2 95 9 is_stmt 1 view .LVU5034
 19367              	.LVL1453:
 19368              	.LBB11249:
 19369              	.LBI11249:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 19370              		.loc 5 448 7 view .LVU5035
 19371              	.LBB11250:
 19372              	.LBB11251:
 19373              	.LBB11252:
 19374              	.LBI11252:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19375              		.loc 5 190 7 view .LVU5036
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19376              		.loc 5 190 7 is_stmt 0 view .LVU5037
 19377              	.LBE11252:
 19378              	.LBB11253:
 19379              	.LBI11253:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 19380              		.loc 5 290 7 is_stmt 1 view .LVU5038
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 19381              		.loc 5 290 7 is_stmt 0 view .LVU5039
 19382              	.LBE11253:
 19383              	.LBB11254:
 19384              	.LBI11254:
 19385              		.loc 20 97 19 is_stmt 1 view .LVU5040
 19386              	.LBB11255:
 19387              	.LBI11255:
 19388              		.loc 10 514 7 view .LVU5041
 19389              	.LBB11256:
 19390              	.LBI11256:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccszdRNt.s 			page 686


 19391              		.loc 6 141 7 view .LVU5042
 19392              	.LBB11257:
 19393              	.LBI11257:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19394              		.loc 7 83 7 view .LVU5043
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19395              		.loc 7 83 7 is_stmt 0 view .LVU5044
 19396              	.LBE11257:
 19397              	.LBE11256:
 19398              	.LBE11255:
 19399              	.LBE11254:
 19400              	.LBB11258:
 19401              	.LBI11258:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 19402              		.loc 5 159 2 is_stmt 1 view .LVU5045
 19403              	.LBB11259:
 19404              	.LBB11260:
 19405              	.LBB11261:
 19406              	.LBI11261:
 19407              		.loc 8 99 5 view .LVU5046
 19408              		.loc 8 99 5 is_stmt 0 view .LVU5047
 19409              	.LBE11261:
 19410              	.LBB11262:
 19411              	.LBI11262:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19412              		.loc 6 141 7 is_stmt 1 view .LVU5048
 19413              	.LBB11263:
 19414              	.LBI11263:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19415              		.loc 7 83 7 view .LVU5049
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19416              		.loc 7 83 7 is_stmt 0 view .LVU5050
 19417              	.LBE11263:
 19418              	.LBE11262:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19419              		.loc 5 160 46 view .LVU5051
 19420 005c 19AF     		add	r7, sp, #100
 19421              	.LVL1454:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19422              		.loc 5 160 46 view .LVU5052
 19423 005e 1797     		str	r7, [sp, #92]
 19424              	.LVL1455:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 19425              		.loc 5 160 46 view .LVU5053
 19426              	.LBE11260:
 19427              	.LBE11259:
 19428              	.LBE11258:
 19429              	.LBB11264:
 19430              	.LBI11264:
 19431              		.loc 6 153 7 is_stmt 1 view .LVU5054
 19432              	.LBB11265:
 19433              	.LBI11265:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19434              		.loc 7 89 7 view .LVU5055
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19435              		.loc 7 89 7 is_stmt 0 view .LVU5056
 19436              	.LBE11265:
ARM GAS  /tmp/ccszdRNt.s 			page 687


 19437              	.LBE11264:
 19438              	.LBB11266:
 19439              	.LBI11266:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19440              		.loc 5 186 7 is_stmt 1 view .LVU5057
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19441              		.loc 5 186 7 is_stmt 0 view .LVU5058
 19442              	.LBE11266:
 19443              	.LBB11267:
 19444              	.LBI11267:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19445              		.loc 5 186 7 is_stmt 1 view .LVU5059
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19446              		.loc 5 186 7 is_stmt 0 view .LVU5060
 19447              	.LBE11267:
 19448              	.LBB11268:
 19449              	.LBI11268:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19450              		.loc 5 936 7 is_stmt 1 view .LVU5061
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 19451              		.loc 5 936 7 is_stmt 0 view .LVU5062
 19452              	.LBE11268:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19453              		.loc 5 451 9 view .LVU5063
 19454 0060 0B9B     		ldr	r3, [sp, #44]
 19455 0062 0C99     		ldr	r1, [sp, #48]
 19456 0064 8C46     		mov	ip, r1
 19457 0066 6344     		add	r3, r3, ip
 19458 0068 1A00     		movs	r2, r3
 19459              	.LVL1456:
 19460              	.LBB11269:
 19461              	.LBI11269:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19462              		.loc 5 263 9 is_stmt 1 view .LVU5064
 19463              	.LBB11270:
 19464              	.LBB11271:
 19465              	.LBI11271:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19466              		.loc 5 243 9 view .LVU5065
 19467              	.LBB11272:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19468              		.loc 5 247 11 is_stmt 0 view .LVU5066
 19469 006a 0023     		movs	r3, #0
 19470 006c 0B99     		ldr	r1, [sp, #44]
 19471 006e 17A8     		add	r0, sp, #92
 19472              	.LVL1457:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19473              		.loc 5 247 11 view .LVU5067
 19474 0070 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 19475              	.LVL1458:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19476              		.loc 5 247 11 view .LVU5068
 19477              	.LBE11272:
 19478              	.LBE11271:
 19479              	.LBE11270:
 19480              	.LBE11269:
 19481              	.LBE11251:
ARM GAS  /tmp/ccszdRNt.s 			page 688


 19482              	.LBE11250:
 19483              	.LBE11249:
  95:alohal/cli/cli.cpp ****     }
 19484              		.loc 2 95 32 view .LVU5069
 19485 0074 17A9     		add	r1, sp, #92
 19486 0076 2000     		movs	r0, r4
 19487 0078 FFF7FEFF 		bl	_ZN11CLI_history6UpdateENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19488              	.LVL1459:
 19489              	.LBB11273:
 19490              	.LBI11273:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19491              		.loc 5 657 7 is_stmt 1 view .LVU5070
 19492              	.LBB11274:
 19493              	.LBI11274:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19494              		.loc 5 229 7 view .LVU5071
 19495              	.LBB11275:
 19496              	.LBB11276:
 19497              	.LBI11276:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 19498              		.loc 5 221 7 view .LVU5072
 19499              	.LBB11277:
 19500              	.LBI11277:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19501              		.loc 5 186 7 view .LVU5073
 19502              	.LBB11278:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19503              		.loc 5 187 28 is_stmt 0 view .LVU5074
 19504 007c 1798     		ldr	r0, [sp, #92]
 19505              	.LVL1460:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19506              		.loc 5 187 28 view .LVU5075
 19507              	.LBE11278:
 19508              	.LBE11277:
 19509              	.LBB11279:
 19510              	.LBI11279:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19511              		.loc 5 200 7 is_stmt 1 view .LVU5076
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19512              		.loc 5 200 7 is_stmt 0 view .LVU5077
 19513              	.LBE11279:
 19514              	.LBE11276:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19515              		.loc 5 231 2 view .LVU5078
 19516 007e B842     		cmp	r0, r7
 19517 0080 01D0     		beq	.L413
 19518              	.LVL1461:
 19519              	.LBB11280:
 19520              	.LBI11280:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19521              		.loc 5 236 7 is_stmt 1 view .LVU5079
 19522              	.LBB11281:
 19523              	.LBB11282:
 19524              	.LBI11282:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19525              		.loc 10 469 7 view .LVU5080
 19526              	.LBB11283:
ARM GAS  /tmp/ccszdRNt.s 			page 689


 19527              	.LBI11283:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19528              		.loc 7 119 7 view .LVU5081
 19529              	.LBB11284:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19530              		.loc 7 128 19 is_stmt 0 view .LVU5082
 19531 0082 FFF7FEFF 		bl	_ZdlPv
 19532              	.LVL1462:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19533              		.loc 7 128 19 view .LVU5083
 19534              	.LBE11284:
 19535              	.LBE11283:
 19536              	.LBE11282:
 19537              	.LBE11281:
 19538              	.LBE11280:
 19539              	.LBE11275:
 19540              	.LBE11274:
 19541              	.LBB11285:
 19542              	.LBI11285:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19543              		.loc 5 150 14 is_stmt 1 view .LVU5084
 19544              	.LBB11286:
 19545              	.LBI11286:
 19546              		.loc 6 153 7 view .LVU5085
 19547              	.LBB11287:
 19548              	.LBI11287:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19549              		.loc 7 89 7 view .LVU5086
 19550              	.L413:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19551              		.loc 7 89 7 is_stmt 0 view .LVU5087
 19552              	.LBE11287:
 19553              	.LBE11286:
 19554              	.LBE11285:
 19555              	.LBE11273:
  99:alohal/cli/cli.cpp ****     while ((position = cmd_line.find(" ")) != string::npos) {
 19556              		.loc 2 99 5 is_stmt 1 view .LVU5088
 19557              	.LBB11288:
 19558              	.LBI11288:
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 19559              		.loc 13 484 7 view .LVU5089
 19560              	.LBB11289:
 19561              	.LBB11290:
 19562              	.LBI11290:
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 19563              		.loc 13 285 7 view .LVU5090
 19564              	.LBB11291:
 19565              	.LBI11291:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 19566              		.loc 13 128 2 view .LVU5091
 19567              	.LBB11292:
 19568              	.LBI11292:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19569              		.loc 6 138 7 view .LVU5092
 19570              	.LBB11293:
 19571              	.LBI11293:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 690


 19572              		.loc 7 80 7 view .LVU5093
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19573              		.loc 7 80 7 is_stmt 0 view .LVU5094
 19574              	.LBE11293:
 19575              	.LBE11292:
 19576              	.LBB11294:
 19577              	.LBI11294:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 19578              		.loc 13 94 2 is_stmt 1 view .LVU5095
 19579              	.LBB11295:
 19580              	.LBB11296:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 19581              		.loc 13 95 47 is_stmt 0 view .LVU5096
 19582 0086 0023     		movs	r3, #0
 19583 0088 0893     		str	r3, [sp, #32]
 19584 008a 0993     		str	r3, [sp, #36]
 19585 008c 0A93     		str	r3, [sp, #40]
 19586              	.LVL1463:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 19587              		.loc 13 95 47 view .LVU5097
 19588              	.LBE11296:
 19589              	.LBE11295:
 19590              	.LBE11294:
 19591              	.LBE11291:
 19592              	.LBE11290:
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 19593              		.loc 13 484 7 view .LVU5098
 19594 008e 34E0     		b	.L422
 19595              	.LVL1464:
 19596              	.L468:
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 19597              		.loc 13 484 7 view .LVU5099
 19598              	.LBE11289:
 19599              	.LBE11288:
 19600              	.LBB11297:
 19601              	.LBB11244:
 19602              	.LBB11242:
 19603              	.LBB11211:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 19604              		.loc 5 313 28 view .LVU5100
 19605 0090 2200     		movs	r2, r4
 19606 0092 BF49     		ldr	r1, .L486+4
 19607 0094 BF48     		ldr	r0, .L486+8
 19608              	.LVL1465:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 19609              		.loc 5 313 28 view .LVU5101
 19610 0096 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 19611              	.LVL1466:
 19612              	.L469:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 19613              		.loc 5 313 28 view .LVU5102
 19614              	.LBE11211:
 19615              	.LBE11242:
 19616              	.LBB11243:
 19617              	.LBB11241:
 19618              	.LBB11240:
 19619              	.LBB11239:
ARM GAS  /tmp/ccszdRNt.s 			page 691


 19620              	.LBB11232:
 19621 009a 1300     		movs	r3, r2
 19622 009c 2200     		movs	r2, r4
 19623 009e BE49     		ldr	r1, .L486+12
 19624 00a0 BC48     		ldr	r0, .L486+8
 19625              	.LVL1467:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 19626              		.loc 5 313 28 view .LVU5103
 19627 00a2 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 19628              	.LVL1468:
 19629              	.L470:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 19630              		.loc 5 313 28 view .LVU5104
 19631              	.LBE11232:
 19632              	.LBE11239:
 19633              	.LBE11240:
 19634              	.LBE11241:
 19635              	.LBE11243:
 19636              	.LBE11244:
 19637              	.LBE11297:
  85:alohal/cli/cli.cpp ****         Clear_line();
 19638              		.loc 2 85 9 is_stmt 1 view .LVU5105
 19639              	.LBB11298:
 19640              	.LBI11298:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19641              		.loc 6 138 7 view .LVU5106
 19642              	.LBB11299:
 19643              	.LBI11299:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19644              		.loc 7 80 7 view .LVU5107
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19645              		.loc 7 80 7 is_stmt 0 view .LVU5108
 19646              	.LBE11299:
 19647              	.LBE11298:
 19648              	.LBB11300:
 19649              	.LBI11300:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 19650              		.loc 5 525 7 is_stmt 1 view .LVU5109
 19651              	.LBB11301:
 19652              	.LBB11302:
 19653              	.LBB11303:
 19654              	.LBI11303:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19655              		.loc 5 190 7 view .LVU5110
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19656              		.loc 5 190 7 is_stmt 0 view .LVU5111
 19657              	.LBE11303:
 19658              	.LBB11304:
 19659              	.LBI11304:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 19660              		.loc 5 156 2 is_stmt 1 view .LVU5112
 19661              	.LBB11305:
 19662              	.LBB11306:
 19663              	.LBB11307:
 19664              	.LBI11307:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 19665              		.loc 6 141 7 view .LVU5113
ARM GAS  /tmp/ccszdRNt.s 			page 692


 19666              	.LBB11308:
 19667              	.LBI11308:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19668              		.loc 7 83 7 view .LVU5114
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19669              		.loc 7 83 7 is_stmt 0 view .LVU5115
 19670              	.LBE11308:
 19671              	.LBE11307:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19672              		.loc 5 157 35 view .LVU5116
 19673 00a6 13AC     		add	r4, sp, #76
 19674              	.LVL1469:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19675              		.loc 5 157 35 view .LVU5117
 19676 00a8 1194     		str	r4, [sp, #68]
 19677              	.LVL1470:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19678              		.loc 5 157 35 view .LVU5118
 19679              	.LBE11306:
 19680              	.LBE11305:
 19681              	.LBE11304:
 19682              	.LBB11309:
 19683              	.LBI11309:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 19684              		.loc 4 329 7 is_stmt 1 view .LVU5119
 19685              	.LBE11309:
 19686              	.LBE11302:
 19687              	.LBE11301:
 19688              	.LBE11300:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 19689              		.loc 4 332 2 view .LVU5120
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 19690              		.loc 4 335 2 view .LVU5121
 19691              	.LBB11316:
 19692              	.LBB11315:
 19693              	.LBB11314:
 19694              	.LBB11310:
 19695              	.LBI11310:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 19696              		.loc 5 263 9 view .LVU5122
 19697              	.LBB11311:
 19698              	.LBB11312:
 19699              	.LBI11312:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 19700              		.loc 5 243 9 view .LVU5123
 19701              	.LBB11313:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19702              		.loc 5 247 11 is_stmt 0 view .LVU5124
 19703 00aa BC4A     		ldr	r2, .L486+16
 19704              	.LVL1471:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19705              		.loc 5 247 11 view .LVU5125
 19706 00ac 911E     		subs	r1, r2, #2
 19707 00ae 0023     		movs	r3, #0
 19708 00b0 11A8     		add	r0, sp, #68
 19709              	.LVL1472:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 693


 19710              		.loc 5 247 11 view .LVU5126
 19711 00b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 19712              	.LVL1473:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 19713              		.loc 5 247 11 view .LVU5127
 19714              	.LBE11313:
 19715              	.LBE11312:
 19716              	.LBE11311:
 19717              	.LBE11310:
 19718              	.LBE11314:
 19719              	.LBE11315:
 19720              	.LBE11316:
  85:alohal/cli/cli.cpp ****         Clear_line();
 19721              		.loc 2 85 14 view .LVU5128
 19722 00b6 11A9     		add	r1, sp, #68
 19723 00b8 2800     		movs	r0, r5
 19724 00ba FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19725              	.LVL1474:
 19726              	.LBB11317:
 19727              	.LBI11317:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19728              		.loc 5 657 7 is_stmt 1 view .LVU5129
 19729              	.LBB11318:
 19730              	.LBI11318:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19731              		.loc 5 229 7 view .LVU5130
 19732              	.LBB11319:
 19733              	.LBB11320:
 19734              	.LBI11320:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 19735              		.loc 5 221 7 view .LVU5131
 19736              	.LBB11321:
 19737              	.LBI11321:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19738              		.loc 5 186 7 view .LVU5132
 19739              	.LBB11322:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19740              		.loc 5 187 28 is_stmt 0 view .LVU5133
 19741 00be 1198     		ldr	r0, [sp, #68]
 19742              	.LVL1475:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19743              		.loc 5 187 28 view .LVU5134
 19744              	.LBE11322:
 19745              	.LBE11321:
 19746              	.LBB11323:
 19747              	.LBI11323:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19748              		.loc 5 200 7 is_stmt 1 view .LVU5135
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19749              		.loc 5 200 7 is_stmt 0 view .LVU5136
 19750              	.LBE11323:
 19751              	.LBE11320:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19752              		.loc 5 231 2 view .LVU5137
 19753 00c0 A042     		cmp	r0, r4
 19754 00c2 01D0     		beq	.L410
 19755              	.LVL1476:
ARM GAS  /tmp/ccszdRNt.s 			page 694


 19756              	.LBB11324:
 19757              	.LBI11324:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19758              		.loc 5 236 7 is_stmt 1 view .LVU5138
 19759              	.LBB11325:
 19760              	.LBB11326:
 19761              	.LBI11326:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19762              		.loc 10 469 7 view .LVU5139
 19763              	.LBB11327:
 19764              	.LBI11327:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19765              		.loc 7 119 7 view .LVU5140
 19766              	.LBB11328:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19767              		.loc 7 128 19 is_stmt 0 view .LVU5141
 19768 00c4 FFF7FEFF 		bl	_ZdlPv
 19769              	.LVL1477:
 19770              	.L410:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19771              		.loc 7 128 19 view .LVU5142
 19772              	.LBE11328:
 19773              	.LBE11327:
 19774              	.LBE11326:
 19775              	.LBE11325:
 19776              	.LBE11324:
 19777              	.LBE11319:
 19778              	.LBE11318:
 19779              	.LBB11329:
 19780              	.LBI11329:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19781              		.loc 5 150 14 is_stmt 1 view .LVU5143
 19782              	.LBB11330:
 19783              	.LBI11330:
 19784              		.loc 6 153 7 view .LVU5144
 19785              	.LBB11331:
 19786              	.LBI11331:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19787              		.loc 7 89 7 view .LVU5145
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19788              		.loc 7 89 7 is_stmt 0 view .LVU5146
 19789              	.LBE11331:
 19790              	.LBE11330:
 19791              	.LBE11329:
 19792              	.LBE11317:
 19793              	.LBB11332:
 19794              	.LBI11332:
 19795              		.loc 6 153 7 is_stmt 1 view .LVU5147
 19796              	.LBB11333:
 19797              	.LBI11333:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19798              		.loc 7 89 7 view .LVU5148
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19799              		.loc 7 89 7 is_stmt 0 view .LVU5149
 19800              	.LBE11333:
 19801              	.LBE11332:
  86:alohal/cli/cli.cpp ****         if (History()) {
ARM GAS  /tmp/ccszdRNt.s 			page 695


 19802              		.loc 2 86 9 is_stmt 1 view .LVU5150
  86:alohal/cli/cli.cpp ****         if (History()) {
 19803              		.loc 2 86 19 is_stmt 0 view .LVU5151
 19804 00c8 2800     		movs	r0, r5
 19805 00ca FFF7FEFF 		bl	_ZN3CLI10Clear_lineEv
 19806              	.LVL1478:
  87:alohal/cli/cli.cpp ****             command_history->Reset_pointer();
 19807              		.loc 2 87 9 is_stmt 1 view .LVU5152
 19808              	.LBB11334:
 19809              	.LBI11334:
 19810              		.loc 23 226 10 view .LVU5153
 19811              	.LBB11335:
 19812              		.loc 23 226 22 view .LVU5154
 19813              		.loc 23 226 29 is_stmt 0 view .LVU5155
 19814 00ce 686F     		ldr	r0, [r5, #116]
 19815              	.LVL1479:
 19816              		.loc 23 226 29 view .LVU5156
 19817              	.LBE11335:
 19818              	.LBE11334:
  87:alohal/cli/cli.cpp ****             command_history->Reset_pointer();
 19819              		.loc 2 87 9 view .LVU5157
 19820 00d0 0028     		cmp	r0, #0
 19821 00d2 00D1     		bne	.LCB23155
 19822 00d4 DDE1     		b	.L412	@long jump
 19823              	.LCB23155:
  88:alohal/cli/cli.cpp ****         }
 19824              		.loc 2 88 13 is_stmt 1 view .LVU5158
  88:alohal/cli/cli.cpp ****         }
 19825              		.loc 2 88 43 is_stmt 0 view .LVU5159
 19826 00d6 FFF7FEFF 		bl	_ZN11CLI_history13Reset_pointerEv
 19827              	.LVL1480:
  90:alohal/cli/cli.cpp ****     }
 19828              		.loc 2 90 9 is_stmt 1 view .LVU5160
  90:alohal/cli/cli.cpp ****     }
 19829              		.loc 2 90 16 is_stmt 0 view .LVU5161
 19830 00da DAE1     		b	.L412
 19831              	.LVL1481:
 19832              	.L471:
 19833              	.LBB11336:
 103:alohal/cli/cli.cpp ****         }
 19834              		.loc 2 103 13 is_stmt 1 view .LVU5162
 103:alohal/cli/cli.cpp ****         }
 19835              		.loc 2 103 34 is_stmt 0 view .LVU5163
 19836 00dc 02A9     		add	r1, sp, #8
 19837 00de 08A8     		add	r0, sp, #32
 19838 00e0 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EE
 19839              	.LVL1482:
 19840 00e4 25E0     		b	.L417
 19841              	.LVL1483:
 19842              	.L472:
 19843              	.LBB11337:
 19844              	.LBB11338:
 19845              	.LBB11339:
 19846              	.LBI11339:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19847              		.loc 5 214 7 is_stmt 1 view .LVU5164
 19848              	.LBB11340:
ARM GAS  /tmp/ccszdRNt.s 			page 696


 19849              	.LBB11341:
 19850              	.LBI11341:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 19851              		.loc 5 182 7 view .LVU5165
 19852              	.LBB11342:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19853              		.loc 5 183 9 is_stmt 0 view .LVU5166
 19854 00e6 0023     		movs	r3, #0
 19855              	.LVL1484:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19856              		.loc 5 183 9 view .LVU5167
 19857 00e8 0C93     		str	r3, [sp, #48]
 19858              	.LVL1485:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19859              		.loc 5 183 9 view .LVU5168
 19860              	.LBE11342:
 19861              	.LBE11341:
 19862              	.LBB11343:
 19863              	.LBI11343:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19864              		.loc 5 186 7 is_stmt 1 view .LVU5169
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19865              		.loc 5 186 7 is_stmt 0 view .LVU5170
 19866              	.LBE11343:
 19867              	.LBB11344:
 19868              	.LBI11344:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 19869              		.loc 4 299 7 is_stmt 1 view .LVU5171
 19870              	.LBB11345:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 19871              		.loc 4 300 9 view .LVU5172
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 19872              		.loc 4 300 14 is_stmt 0 view .LVU5173
 19873 00ea 0B9A     		ldr	r2, [sp, #44]
 19874 00ec 1370     		strb	r3, [r2]
 19875              	.LVL1486:
 19876              	.L419:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 19877              		.loc 4 300 14 view .LVU5174
 19878              	.LBE11345:
 19879              	.LBE11344:
 19880              	.LBE11340:
 19881              	.LBE11339:
 19882              	.LBE11338:
 19883              	.LBE11337:
 19884              	.LBB11352:
 19885              	.LBI11352:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 19886              		.loc 5 657 7 is_stmt 1 view .LVU5175
 19887              	.LBB11353:
 19888              	.LBI11353:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19889              		.loc 5 229 7 view .LVU5176
 19890              	.LBB11354:
 19891              	.LBB11355:
 19892              	.LBI11355:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
ARM GAS  /tmp/ccszdRNt.s 			page 697


 19893              		.loc 5 221 7 view .LVU5177
 19894              	.LBB11356:
 19895              	.LBI11356:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 19896              		.loc 5 186 7 view .LVU5178
 19897              	.LBB11357:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19898              		.loc 5 187 28 is_stmt 0 view .LVU5179
 19899 00ee 0298     		ldr	r0, [sp, #8]
 19900              	.LVL1487:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 19901              		.loc 5 187 28 view .LVU5180
 19902              	.LBE11357:
 19903              	.LBE11356:
 19904              	.LBB11358:
 19905              	.LBI11358:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19906              		.loc 5 200 7 is_stmt 1 view .LVU5181
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19907              		.loc 5 200 7 is_stmt 0 view .LVU5182
 19908              	.LBE11358:
 19909              	.LBE11355:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 19910              		.loc 5 231 2 view .LVU5183
 19911 00f0 04AB     		add	r3, sp, #16
 19912 00f2 9842     		cmp	r0, r3
 19913 00f4 01D0     		beq	.L422
 19914              	.LVL1488:
 19915              	.LBB11359:
 19916              	.LBI11359:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 19917              		.loc 5 236 7 is_stmt 1 view .LVU5184
 19918              	.LBB11360:
 19919              	.LBB11361:
 19920              	.LBI11361:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 19921              		.loc 10 469 7 view .LVU5185
 19922              	.LBB11362:
 19923              	.LBI11362:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 19924              		.loc 7 119 7 view .LVU5186
 19925              	.LBB11363:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19926              		.loc 7 128 19 is_stmt 0 view .LVU5187
 19927 00f6 FFF7FEFF 		bl	_ZdlPv
 19928              	.LVL1489:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 19929              		.loc 7 128 19 view .LVU5188
 19930              	.LBE11363:
 19931              	.LBE11362:
 19932              	.LBE11361:
 19933              	.LBE11360:
 19934              	.LBE11359:
 19935              	.LBE11354:
 19936              	.LBE11353:
 19937              	.LBB11364:
 19938              	.LBI11364:
ARM GAS  /tmp/ccszdRNt.s 			page 698


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19939              		.loc 5 150 14 is_stmt 1 view .LVU5189
 19940              	.LBB11365:
 19941              	.LBI11365:
 19942              		.loc 6 153 7 view .LVU5190
 19943              	.LBB11366:
 19944              	.LBI11366:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19945              		.loc 7 89 7 view .LVU5191
 19946              	.L422:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 19947              		.loc 7 89 7 is_stmt 0 view .LVU5192
 19948              	.LBE11366:
 19949              	.LBE11365:
 19950              	.LBE11364:
 19951              	.LBE11352:
 19952              	.LBE11336:
 100:alohal/cli/cli.cpp ****         string cmd = cmd_line.substr(0, position);
 19953              		.loc 2 100 5 is_stmt 1 view .LVU5193
 100:alohal/cli/cli.cpp ****         string cmd = cmd_line.substr(0, position);
 19954              		.loc 2 100 44 view .LVU5194
 19955              	.LBB11394:
 19956              	.LBI11394:
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19957              		.loc 5 2393 7 view .LVU5195
2393:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19958              		.loc 5 2393 7 is_stmt 0 view .LVU5196
 19959              	.LBE11394:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 19960              		.loc 4 332 2 is_stmt 1 view .LVU5197
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 19961              		.loc 4 335 2 view .LVU5198
 19962              	.LBB11396:
 19963              	.LBB11395:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 19964              		.loc 5 2396 56 is_stmt 0 view .LVU5199
 19965 00fa 0123     		movs	r3, #1
 19966 00fc 0022     		movs	r2, #0
 19967 00fe A849     		ldr	r1, .L486+20
 19968 0100 0BA8     		add	r0, sp, #44
 19969              	.LVL1490:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 19970              		.loc 5 2396 56 view .LVU5200
 19971 0102 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
 19972              	.LVL1491:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 19973              		.loc 5 2396 56 view .LVU5201
 19974 0106 0400     		movs	r4, r0
 19975              	.LVL1492:
2396:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 19976              		.loc 5 2396 56 view .LVU5202
 19977              	.LBE11395:
 19978              	.LBE11396:
 100:alohal/cli/cli.cpp ****         string cmd = cmd_line.substr(0, position);
 19979              		.loc 2 100 44 view .LVU5203
 19980 0108 431C     		adds	r3, r0, #1
 19981 010a 20D0     		beq	.L415
ARM GAS  /tmp/ccszdRNt.s 			page 699


 19982              	.LBB11397:
 101:alohal/cli/cli.cpp ****         if (cmd.find_first_not_of(' ') != std::string::npos) {
 19983              		.loc 2 101 9 is_stmt 1 view .LVU5204
 19984              	.LVL1493:
 19985              	.LBB11367:
 19986              	.LBI11367:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 19987              		.loc 5 2834 7 view .LVU5205
 19988              	.LBB11368:
 19989              	.LBI11368:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 19990              		.loc 5 476 7 view .LVU5206
 19991              	.LBB11369:
 19992              	.LBB11370:
 19993              	.LBI11370:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19994              		.loc 5 190 7 view .LVU5207
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 19995              		.loc 5 190 7 is_stmt 0 view .LVU5208
 19996              	.LBE11370:
 19997              	.LBB11371:
 19998              	.LBI11371:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 19999              		.loc 6 138 7 is_stmt 1 view .LVU5209
 20000              	.LBB11372:
 20001              	.LBI11372:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20002              		.loc 7 80 7 view .LVU5210
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20003              		.loc 7 80 7 is_stmt 0 view .LVU5211
 20004              	.LBE11372:
 20005              	.LBE11371:
 20006              	.LBB11373:
 20007              	.LBI11373:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 20008              		.loc 5 159 2 is_stmt 1 view .LVU5212
 20009              	.LBB11374:
 20010              	.LBB11375:
 20011              	.LBB11376:
 20012              	.LBI11376:
 20013              		.loc 8 99 5 view .LVU5213
 20014              		.loc 8 99 5 is_stmt 0 view .LVU5214
 20015              	.LBE11376:
 20016              	.LBB11377:
 20017              	.LBI11377:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20018              		.loc 6 141 7 is_stmt 1 view .LVU5215
 20019              	.LBB11378:
 20020              	.LBI11378:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20021              		.loc 7 83 7 view .LVU5216
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20022              		.loc 7 83 7 is_stmt 0 view .LVU5217
 20023              	.LBE11378:
 20024              	.LBE11377:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20025              		.loc 5 160 46 view .LVU5218
ARM GAS  /tmp/ccszdRNt.s 			page 700


 20026 010c 04AB     		add	r3, sp, #16
 20027              	.LVL1494:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20028              		.loc 5 160 46 view .LVU5219
 20029 010e 0293     		str	r3, [sp, #8]
 20030              	.LVL1495:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20031              		.loc 5 160 46 view .LVU5220
 20032              	.LBE11375:
 20033              	.LBE11374:
 20034              	.LBE11373:
 20035              	.LBB11379:
 20036              	.LBI11379:
 20037              		.loc 6 153 7 is_stmt 1 view .LVU5221
 20038              	.LBB11380:
 20039              	.LBI11380:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20040              		.loc 7 89 7 view .LVU5222
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20041              		.loc 7 89 7 is_stmt 0 view .LVU5223
 20042              	.LBE11380:
 20043              	.LBE11379:
 20044              	.LBB11381:
 20045              	.LBB11382:
 20046              	.LBI11382:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20047              		.loc 5 186 7 is_stmt 1 view .LVU5224
 20048              	.LBB11383:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20049              		.loc 5 187 28 is_stmt 0 view .LVU5225
 20050 0110 0B99     		ldr	r1, [sp, #44]
 20051              	.LVL1496:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20052              		.loc 5 187 28 view .LVU5226
 20053              	.LBE11383:
 20054              	.LBE11382:
 20055              	.LBB11384:
 20056              	.LBI11384:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20057              		.loc 5 310 7 is_stmt 1 view .LVU5227
 20058              	.LBB11385:
 20059              	.LBI11385:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20060              		.loc 5 930 7 view .LVU5228
 20061              	.LBB11386:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20062              		.loc 5 931 16 is_stmt 0 view .LVU5229
 20063 0112 0C9A     		ldr	r2, [sp, #48]
 20064              	.LVL1497:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20065              		.loc 5 931 16 view .LVU5230
 20066              	.LBE11386:
 20067              	.LBE11385:
 20068              	.LBE11384:
 20069              	.LBB11387:
 20070              	.LBI11387:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 701


 20071              		.loc 5 329 7 is_stmt 1 view .LVU5231
 20072              	.LBB11388:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 20073              		.loc 5 332 19 is_stmt 0 view .LVU5232
 20074 0114 9042     		cmp	r0, r2
 20075 0116 00D2     		bcs	.L416
 20076 0118 0200     		movs	r2, r0
 20077              	.LVL1498:
 20078              	.L416:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 20079              		.loc 5 332 19 view .LVU5233
 20080              	.LBE11388:
 20081              	.LBE11387:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 20082              		.loc 5 482 2 view .LVU5234
 20083 011a 8A18     		adds	r2, r1, r2
 20084              	.LVL1499:
 20085              	.LBB11389:
 20086              	.LBI11389:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 20087              		.loc 5 263 9 is_stmt 1 view .LVU5235
 20088              	.LBB11390:
 20089              	.LBB11391:
 20090              	.LBI11391:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 20091              		.loc 5 243 9 view .LVU5236
 20092              	.LBB11392:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20093              		.loc 5 247 11 is_stmt 0 view .LVU5237
 20094 011c 0023     		movs	r3, #0
 20095 011e 02A8     		add	r0, sp, #8
 20096              	.LVL1500:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20097              		.loc 5 247 11 view .LVU5238
 20098 0120 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 20099              	.LVL1501:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20100              		.loc 5 247 11 view .LVU5239
 20101              	.LBE11392:
 20102              	.LBE11391:
 20103              	.LBE11390:
 20104              	.LBE11389:
 20105              	.LBE11381:
 20106              	.LBE11369:
 20107              	.LBE11368:
 20108              	.LBE11367:
 102:alohal/cli/cli.cpp ****             args.emplace_back(cmd);
 20109              		.loc 2 102 9 is_stmt 1 view .LVU5240
 102:alohal/cli/cli.cpp ****             args.emplace_back(cmd);
 20110              		.loc 2 102 34 is_stmt 0 view .LVU5241
 20111 0124 0022     		movs	r2, #0
 20112 0126 2021     		movs	r1, #32
 20113 0128 02A8     		add	r0, sp, #8
 20114 012a FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj
 20115              	.LVL1502:
 102:alohal/cli/cli.cpp ****             args.emplace_back(cmd);
 20116              		.loc 2 102 9 view .LVU5242
ARM GAS  /tmp/ccszdRNt.s 			page 702


 20117 012e 431C     		adds	r3, r0, #1
 20118 0130 D4D1     		bne	.L471
 20119              	.L417:
 105:alohal/cli/cli.cpp ****     }
 20120              		.loc 2 105 9 is_stmt 1 view .LVU5243
 105:alohal/cli/cli.cpp ****     }
 20121              		.loc 2 105 39 is_stmt 0 view .LVU5244
 20122 0132 631C     		adds	r3, r4, #1
 20123              	.LVL1503:
 20124              	.LBB11393:
 20125              	.LBI11337:
1807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20126              		.loc 5 1807 7 is_stmt 1 view .LVU5245
 20127              	.LBB11351:
 20128              	.LBB11346:
 20129              	.LBI11346:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20130              		.loc 5 310 7 view .LVU5246
 20131              	.LBB11347:
 20132              	.LBI11347:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20133              		.loc 5 930 7 view .LVU5247
 20134              	.LBB11348:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20135              		.loc 5 931 16 is_stmt 0 view .LVU5248
 20136 0134 0C9A     		ldr	r2, [sp, #48]
 20137              	.LVL1504:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20138              		.loc 5 931 16 view .LVU5249
 20139              	.LBE11348:
 20140              	.LBE11347:
 20141              	.LBE11346:
1810:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_set_length(__pos);
 20142              		.loc 5 1810 2 view .LVU5250
 20143 0136 A11C     		adds	r1, r4, #2
 20144 0138 D5D0     		beq	.L472
1812:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
 20145              		.loc 5 1812 7 view .LVU5251
 20146 013a 002B     		cmp	r3, #0
 20147 013c D7D0     		beq	.L419
 20148              	.LVL1505:
 20149              	.LBB11349:
 20150              	.LBI11349:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20151              		.loc 5 329 7 is_stmt 1 view .LVU5252
 20152              	.LBB11350:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 20153              		.loc 5 332 19 is_stmt 0 view .LVU5253
 20154 013e 9342     		cmp	r3, r2
 20155 0140 00D2     		bcs	.L420
 20156 0142 1A00     		movs	r2, r3
 20157              	.LVL1506:
 20158              	.L420:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 20159              		.loc 5 332 19 view .LVU5254
 20160              	.LBE11350:
 20161              	.LBE11349:
ARM GAS  /tmp/ccszdRNt.s 			page 703


1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 20162              		.loc 5 1813 4 view .LVU5255
 20163 0144 0021     		movs	r1, #0
 20164 0146 0BA8     		add	r0, sp, #44
 20165              	.LVL1507:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 20166              		.loc 5 1813 4 view .LVU5256
 20167 0148 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
 20168              	.LVL1508:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 20169              		.loc 5 1813 4 view .LVU5257
 20170 014c CFE7     		b	.L419
 20171              	.LVL1509:
 20172              	.L415:
1813:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 20173              		.loc 5 1813 4 view .LVU5258
 20174              	.LBE11351:
 20175              	.LBE11393:
 20176              	.LBE11397:
 107:alohal/cli/cli.cpp **** 
 20177              		.loc 2 107 5 is_stmt 1 view .LVU5259
 107:alohal/cli/cli.cpp **** 
 20178              		.loc 2 107 31 is_stmt 0 view .LVU5260
 20179 014e 0BA9     		add	r1, sp, #44
 20180 0150 08A8     		add	r0, sp, #32
 20181              	.LVL1510:
 107:alohal/cli/cli.cpp **** 
 20182              		.loc 2 107 31 view .LVU5261
 20183 0152 FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EE
 20184              	.LVL1511:
 109:alohal/cli/cli.cpp ****         return -1;
 20185              		.loc 2 109 5 is_stmt 1 view .LVU5262
 20186              	.LBB11398:
 20187              	.LBI11398:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 20188              		.loc 13 915 7 view .LVU5263
 20189              	.LBB11399:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 20190              		.loc 13 916 40 is_stmt 0 view .LVU5264
 20191 0156 099B     		ldr	r3, [sp, #36]
 20192              	.LVL1512:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 20193              		.loc 13 916 40 view .LVU5265
 20194              	.LBE11399:
 20195              	.LBE11398:
 109:alohal/cli/cli.cpp ****         return -1;
 20196              		.loc 2 109 5 view .LVU5266
 20197 0158 089A     		ldr	r2, [sp, #32]
 20198 015a 9342     		cmp	r3, r2
 20199 015c 00D1     		bne	.LCB23608
 20200 015e 83E1     		b	.L462	@long jump
 20201              	.LCB23608:
 112:alohal/cli/cli.cpp **** 
 20202              		.loc 2 112 5 is_stmt 1 view .LVU5267
 20203              	.LVL1513:
 20204              	.LBB11400:
 20205              	.LBI11400:
ARM GAS  /tmp/ccszdRNt.s 			page 704


 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 20206              		.loc 6 138 7 view .LVU5268
 20207              	.LBB11401:
 20208              	.LBI11401:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20209              		.loc 7 80 7 view .LVU5269
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20210              		.loc 7 80 7 is_stmt 0 view .LVU5270
 20211              	.LBE11401:
 20212              	.LBE11400:
 20213              	.LBB11402:
 20214              	.LBI11402:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 20215              		.loc 5 525 7 is_stmt 1 view .LVU5271
 20216              	.LBB11403:
 20217              	.LBB11404:
 20218              	.LBB11405:
 20219              	.LBI11405:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20220              		.loc 5 190 7 view .LVU5272
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20221              		.loc 5 190 7 is_stmt 0 view .LVU5273
 20222              	.LBE11405:
 20223              	.LBB11406:
 20224              	.LBI11406:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 20225              		.loc 5 156 2 is_stmt 1 view .LVU5274
 20226              	.LBB11407:
 20227              	.LBB11408:
 20228              	.LBB11409:
 20229              	.LBI11409:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20230              		.loc 6 141 7 view .LVU5275
 20231              	.LBB11410:
 20232              	.LBI11410:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20233              		.loc 7 83 7 view .LVU5276
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20234              		.loc 7 83 7 is_stmt 0 view .LVU5277
 20235              	.LBE11410:
 20236              	.LBE11409:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20237              		.loc 5 157 35 view .LVU5278
 20238 0160 1FAC     		add	r4, sp, #124
 20239              	.LVL1514:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20240              		.loc 5 157 35 view .LVU5279
 20241 0162 1D94     		str	r4, [sp, #116]
 20242              	.LVL1515:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20243              		.loc 5 157 35 view .LVU5280
 20244              	.LBE11408:
 20245              	.LBE11407:
 20246              	.LBE11406:
 20247              	.LBB11411:
 20248              	.LBI11411:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 705


 20249              		.loc 4 329 7 is_stmt 1 view .LVU5281
 20250              	.LBE11411:
 20251              	.LBE11404:
 20252              	.LBE11403:
 20253              	.LBE11402:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 20254              		.loc 4 332 2 view .LVU5282
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 20255              		.loc 4 335 2 view .LVU5283
 20256              	.LBB11418:
 20257              	.LBB11417:
 20258              	.LBB11416:
 20259              	.LBB11412:
 20260              	.LBI11412:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 20261              		.loc 5 263 9 view .LVU5284
 20262              	.LBB11413:
 20263              	.LBB11414:
 20264              	.LBI11414:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 20265              		.loc 5 243 9 view .LVU5285
 20266              	.LBB11415:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20267              		.loc 5 247 11 is_stmt 0 view .LVU5286
 20268 0164 8F4A     		ldr	r2, .L486+24
 20269              	.LVL1516:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20270              		.loc 5 247 11 view .LVU5287
 20271 0166 D11E     		subs	r1, r2, #3
 20272 0168 0023     		movs	r3, #0
 20273 016a 1DA8     		add	r0, sp, #116
 20274              	.LVL1517:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20275              		.loc 5 247 11 view .LVU5288
 20276 016c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 20277              	.LVL1518:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20278              		.loc 5 247 11 view .LVU5289
 20279              	.LBE11415:
 20280              	.LBE11414:
 20281              	.LBE11413:
 20282              	.LBE11412:
 20283              	.LBE11416:
 20284              	.LBE11417:
 20285              	.LBE11418:
 112:alohal/cli/cli.cpp **** 
 20286              		.loc 2 112 10 view .LVU5290
 20287 0170 1DA9     		add	r1, sp, #116
 20288 0172 2800     		movs	r0, r5
 20289 0174 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 20290              	.LVL1519:
 20291              	.LBB11419:
 20292              	.LBI11419:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 20293              		.loc 5 657 7 is_stmt 1 view .LVU5291
 20294              	.LBB11420:
 20295              	.LBI11420:
ARM GAS  /tmp/ccszdRNt.s 			page 706


 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20296              		.loc 5 229 7 view .LVU5292
 20297              	.LBB11421:
 20298              	.LBB11422:
 20299              	.LBI11422:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 20300              		.loc 5 221 7 view .LVU5293
 20301              	.LBB11423:
 20302              	.LBI11423:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20303              		.loc 5 186 7 view .LVU5294
 20304              	.LBB11424:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20305              		.loc 5 187 28 is_stmt 0 view .LVU5295
 20306 0178 1D98     		ldr	r0, [sp, #116]
 20307              	.LVL1520:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20308              		.loc 5 187 28 view .LVU5296
 20309              	.LBE11424:
 20310              	.LBE11423:
 20311              	.LBB11425:
 20312              	.LBI11425:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20313              		.loc 5 200 7 is_stmt 1 view .LVU5297
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20314              		.loc 5 200 7 is_stmt 0 view .LVU5298
 20315              	.LBE11425:
 20316              	.LBE11422:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 20317              		.loc 5 231 2 view .LVU5299
 20318 017a A042     		cmp	r0, r4
 20319 017c 01D0     		beq	.L424
 20320              	.LVL1521:
 20321              	.LBB11426:
 20322              	.LBI11426:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 20323              		.loc 5 236 7 is_stmt 1 view .LVU5300
 20324              	.LBB11427:
 20325              	.LBB11428:
 20326              	.LBI11428:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20327              		.loc 10 469 7 view .LVU5301
 20328              	.LBB11429:
 20329              	.LBI11429:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 20330              		.loc 7 119 7 view .LVU5302
 20331              	.LBB11430:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20332              		.loc 7 128 19 is_stmt 0 view .LVU5303
 20333 017e FFF7FEFF 		bl	_ZdlPv
 20334              	.LVL1522:
 20335              	.L424:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20336              		.loc 7 128 19 view .LVU5304
 20337              	.LBE11430:
 20338              	.LBE11429:
 20339              	.LBE11428:
ARM GAS  /tmp/ccszdRNt.s 			page 707


 20340              	.LBE11427:
 20341              	.LBE11426:
 20342              	.LBE11421:
 20343              	.LBE11420:
 20344              	.LBB11431:
 20345              	.LBI11431:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20346              		.loc 5 150 14 is_stmt 1 view .LVU5305
 20347              	.LBB11432:
 20348              	.LBI11432:
 20349              		.loc 6 153 7 view .LVU5306
 20350              	.LBB11433:
 20351              	.LBI11433:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20352              		.loc 7 89 7 view .LVU5307
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20353              		.loc 7 89 7 is_stmt 0 view .LVU5308
 20354              	.LBE11433:
 20355              	.LBE11432:
 20356              	.LBE11431:
 20357              	.LBE11419:
 20358              	.LBB11434:
 20359              	.LBI11434:
 20360              		.loc 6 153 7 is_stmt 1 view .LVU5309
 20361              	.LBB11435:
 20362              	.LBI11435:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20363              		.loc 7 89 7 view .LVU5310
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20364              		.loc 7 89 7 is_stmt 0 view .LVU5311
 20365              	.LBE11435:
 20366              	.LBE11434:
 115:alohal/cli/cli.cpp ****         // Insert name of app as first argument to adhere to conventions
 20367              		.loc 2 115 5 is_stmt 1 view .LVU5312
 20368 0182 EB6C     		ldr	r3, [r5, #76]
 20369 0184 002B     		cmp	r3, #0
 20370 0186 02D0     		beq	.L425
 115:alohal/cli/cli.cpp ****         // Insert name of app as first argument to adhere to conventions
 20371              		.loc 2 115 16 is_stmt 0 discriminator 1 view .LVU5313
 20372 0188 EB6F     		ldr	r3, [r5, #124]
 115:alohal/cli/cli.cpp ****         // Insert name of app as first argument to adhere to conventions
 20373              		.loc 2 115 12 discriminator 1 view .LVU5314
 20374 018a 002B     		cmp	r3, #0
 20375 018c 02D1     		bne	.L473
 20376              	.L425:
 123:alohal/cli/cli.cpp ****         if (args[0] == command->Get_command()) {
 20377              		.loc 2 123 5 is_stmt 1 view .LVU5315
 20378              	.LVL1523:
 20379              	.LBB11436:
 20380              	.LBB11437:
 20381              	.LBI11437:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 20382              		.loc 13 808 7 view .LVU5316
 20383              	.LBB11438:
 20384              	.LBB11439:
 20385              	.LBI11439:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
ARM GAS  /tmp/ccszdRNt.s 			page 708


 20386              		.loc 14 806 7 view .LVU5317
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 20387              		.loc 14 806 7 is_stmt 0 view .LVU5318
 20388              	.LBE11439:
 20389              	.LBE11438:
 20390              	.LBE11437:
 123:alohal/cli/cli.cpp ****         if (args[0] == command->Get_command()) {
 20391              		.loc 2 123 24 view .LVU5319
 20392 018e AB6E     		ldr	r3, [r5, #104]
 20393              	.LVL1524:
 20394              	.LBB11440:
 20395              	.LBI11440:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 20396              		.loc 13 826 7 is_stmt 1 view .LVU5320
 20397              	.LBB11441:
 20398              	.LBI11441:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 20399              		.loc 14 806 7 view .LVU5321
 20400              	.LBB11442:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 20401              		.loc 14 807 23 is_stmt 0 view .LVU5322
 20402 0190 EF6E     		ldr	r7, [r5, #108]
 20403              	.LVL1525:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 20404              		.loc 14 807 23 view .LVU5323
 20405 0192 7EE0     		b	.L439
 20406              	.LVL1526:
 20407              	.L473:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 20408              		.loc 14 807 23 view .LVU5324
 20409              	.LBE11442:
 20410              	.LBE11441:
 20411              	.LBE11440:
 20412              	.LBE11436:
 117:alohal/cli/cli.cpp ****         Process_foreground_application(args);
 20413              		.loc 2 117 9 is_stmt 1 view .LVU5325
 20414              	.LBB11489:
 20415              	.LBI11489:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 20416              		.loc 13 808 7 view .LVU5326
 20417              	.LBB11490:
 20418              	.LBI11490:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 20419              		.loc 14 806 7 view .LVU5327
 20420              	.LBB11491:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 20421              		.loc 14 807 23 is_stmt 0 view .LVU5328
 20422 0194 089E     		ldr	r6, [sp, #32]
 20423              	.LVL1527:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 20424              		.loc 14 807 23 view .LVU5329
 20425              	.LBE11491:
 20426              	.LBE11490:
 20427              	.LBE11489:
 20428              	.LBB11492:
 20429              	.LBI11492:
 811:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 			  typename __enable_if<
ARM GAS  /tmp/ccszdRNt.s 			page 709


 20430              		.loc 14 811 9 is_stmt 1 view .LVU5330
 20431              	.LBB11493:
 20432              	.LBB11494:
 20433              	.LBB11495:
 20434              	.LBI11495:
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 20435              		.loc 14 871 7 view .LVU5331
 871:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       { return _M_current; }
 20436              		.loc 14 871 7 is_stmt 0 view .LVU5332
 20437              	.LBE11495:
 20438              	.LBE11494:
 20439              	.LBE11493:
 20440              	.LBE11492:
 20441              	.LBB11496:
 20442              	.LBI11496:
 20443              		.loc 22 51 25 is_stmt 1 view .LVU5333
 20444              	.LBE11496:
 20445              		.loc 22 51 33 view .LVU5334
 20446              	.LBB11521:
 20447              	.LBB11497:
 20448              	.LBI11497:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 20449              		.loc 5 448 7 view .LVU5335
 20450              	.LBB11498:
 20451              	.LBB11499:
 20452              	.LBI11499:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20453              		.loc 5 190 7 view .LVU5336
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20454              		.loc 5 190 7 is_stmt 0 view .LVU5337
 20455              	.LBE11499:
 20456              	.LBB11500:
 20457              	.LBI11500:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 20458              		.loc 5 290 7 is_stmt 1 view .LVU5338
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 20459              		.loc 5 290 7 is_stmt 0 view .LVU5339
 20460              	.LBE11500:
 20461              	.LBB11501:
 20462              	.LBI11501:
 20463              		.loc 20 97 19 is_stmt 1 view .LVU5340
 20464              	.LBB11502:
 20465              	.LBI11502:
 20466              		.loc 10 514 7 view .LVU5341
 20467              	.LBB11503:
 20468              	.LBI11503:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20469              		.loc 6 141 7 view .LVU5342
 20470              	.LBB11504:
 20471              	.LBI11504:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20472              		.loc 7 83 7 view .LVU5343
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20473              		.loc 7 83 7 is_stmt 0 view .LVU5344
 20474              	.LBE11504:
 20475              	.LBE11503:
 20476              	.LBE11502:
ARM GAS  /tmp/ccszdRNt.s 			page 710


 20477              	.LBE11501:
 20478              	.LBB11505:
 20479              	.LBI11505:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 20480              		.loc 5 159 2 is_stmt 1 view .LVU5345
 20481              	.LBB11506:
 20482              	.LBB11507:
 20483              	.LBI11507:
 20484              		.loc 8 99 5 view .LVU5346
 20485              		.loc 8 99 5 is_stmt 0 view .LVU5347
 20486              	.LBE11507:
 20487              	.LBB11508:
 20488              	.LBI11508:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20489              		.loc 6 141 7 is_stmt 1 view .LVU5348
 20490              	.LBB11509:
 20491              	.LBI11509:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20492              		.loc 7 83 7 view .LVU5349
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20493              		.loc 7 83 7 is_stmt 0 view .LVU5350
 20494              	.LBE11509:
 20495              	.LBE11508:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20496              		.loc 5 160 46 view .LVU5351
 20497 0196 25AC     		add	r4, sp, #148
 20498              	.LVL1528:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20499              		.loc 5 160 46 view .LVU5352
 20500 0198 2394     		str	r4, [sp, #140]
 20501              	.LVL1529:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20502              		.loc 5 160 46 view .LVU5353
 20503              	.LBE11506:
 20504              	.LBE11505:
 20505              	.LBB11510:
 20506              	.LBI11510:
 20507              		.loc 6 153 7 is_stmt 1 view .LVU5354
 20508              	.LBB11511:
 20509              	.LBI11511:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20510              		.loc 7 89 7 view .LVU5355
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20511              		.loc 7 89 7 is_stmt 0 view .LVU5356
 20512              	.LBE11511:
 20513              	.LBE11510:
 20514              	.LBB11512:
 20515              	.LBI11512:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20516              		.loc 5 186 7 is_stmt 1 view .LVU5357
 20517              	.LBB11513:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20518              		.loc 5 187 28 is_stmt 0 view .LVU5358
 20519 019a 9968     		ldr	r1, [r3, #8]
 20520              	.LVL1530:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20521              		.loc 5 187 28 view .LVU5359
ARM GAS  /tmp/ccszdRNt.s 			page 711


 20522              	.LBE11513:
 20523              	.LBE11512:
 20524              	.LBB11514:
 20525              	.LBI11514:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20526              		.loc 5 186 7 is_stmt 1 view .LVU5360
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20527              		.loc 5 186 7 is_stmt 0 view .LVU5361
 20528              	.LBE11514:
 20529              	.LBB11515:
 20530              	.LBI11515:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20531              		.loc 5 936 7 is_stmt 1 view .LVU5362
 20532              	.LBB11516:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20533              		.loc 5 937 16 is_stmt 0 view .LVU5363
 20534 019c DA68     		ldr	r2, [r3, #12]
 20535              	.LVL1531:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20536              		.loc 5 937 16 view .LVU5364
 20537              	.LBE11516:
 20538              	.LBE11515:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20539              		.loc 5 451 9 view .LVU5365
 20540 019e 8A18     		adds	r2, r1, r2
 20541              	.LVL1532:
 20542              	.LBB11517:
 20543              	.LBI11517:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 20544              		.loc 5 263 9 is_stmt 1 view .LVU5366
 20545              	.LBB11518:
 20546              	.LBB11519:
 20547              	.LBI11519:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 20548              		.loc 5 243 9 view .LVU5367
 20549              	.LBB11520:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20550              		.loc 5 247 11 is_stmt 0 view .LVU5368
 20551 01a0 0023     		movs	r3, #0
 20552              	.LVL1533:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20553              		.loc 5 247 11 view .LVU5369
 20554 01a2 23A8     		add	r0, sp, #140
 20555              	.LVL1534:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20556              		.loc 5 247 11 view .LVU5370
 20557 01a4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 20558              	.LVL1535:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20559              		.loc 5 247 11 view .LVU5371
 20560              	.LBE11520:
 20561              	.LBE11519:
 20562              	.LBE11518:
 20563              	.LBE11517:
 20564              	.LBE11498:
 20565              	.LBE11497:
 20566              	.LBE11521:
ARM GAS  /tmp/ccszdRNt.s 			page 712


 117:alohal/cli/cli.cpp ****         Process_foreground_application(args);
 20567              		.loc 2 117 65 view .LVU5372
 20568 01a8 23AA     		add	r2, sp, #140
 20569 01aa 3100     		movs	r1, r6
 20570 01ac 08A8     		add	r0, sp, #32
 20571 01ae FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertEN9__gnu_cxx17_
 20572              	.LVL1536:
 20573              	.LBB11522:
 20574              	.LBI11522:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 20575              		.loc 5 657 7 is_stmt 1 view .LVU5373
 20576              	.LBB11523:
 20577              	.LBI11523:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20578              		.loc 5 229 7 view .LVU5374
 20579              	.LBB11524:
 20580              	.LBB11525:
 20581              	.LBI11525:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 20582              		.loc 5 221 7 view .LVU5375
 20583              	.LBB11526:
 20584              	.LBI11526:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20585              		.loc 5 186 7 view .LVU5376
 20586              	.LBB11527:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20587              		.loc 5 187 28 is_stmt 0 view .LVU5377
 20588 01b2 2398     		ldr	r0, [sp, #140]
 20589              	.LVL1537:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20590              		.loc 5 187 28 view .LVU5378
 20591              	.LBE11527:
 20592              	.LBE11526:
 20593              	.LBB11528:
 20594              	.LBI11528:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20595              		.loc 5 200 7 is_stmt 1 view .LVU5379
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20596              		.loc 5 200 7 is_stmt 0 view .LVU5380
 20597              	.LBE11528:
 20598              	.LBE11525:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 20599              		.loc 5 231 2 view .LVU5381
 20600 01b4 A042     		cmp	r0, r4
 20601 01b6 01D0     		beq	.L426
 20602              	.LVL1538:
 20603              	.LBB11529:
 20604              	.LBI11529:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 20605              		.loc 5 236 7 is_stmt 1 view .LVU5382
 20606              	.LBB11530:
 20607              	.LBB11531:
 20608              	.LBI11531:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 20609              		.loc 10 469 7 view .LVU5383
 20610              	.LBB11532:
 20611              	.LBI11532:
ARM GAS  /tmp/ccszdRNt.s 			page 713


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 20612              		.loc 7 119 7 view .LVU5384
 20613              	.LBB11533:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20614              		.loc 7 128 19 is_stmt 0 view .LVU5385
 20615 01b8 FFF7FEFF 		bl	_ZdlPv
 20616              	.LVL1539:
 20617              	.L426:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20618              		.loc 7 128 19 view .LVU5386
 20619              	.LBE11533:
 20620              	.LBE11532:
 20621              	.LBE11531:
 20622              	.LBE11530:
 20623              	.LBE11529:
 20624              	.LBE11524:
 20625              	.LBE11523:
 20626              	.LBB11534:
 20627              	.LBI11534:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20628              		.loc 5 150 14 is_stmt 1 view .LVU5387
 20629              	.LBB11535:
 20630              	.LBI11535:
 20631              		.loc 6 153 7 view .LVU5388
 20632              	.LBB11536:
 20633              	.LBI11536:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20634              		.loc 7 89 7 view .LVU5389
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20635              		.loc 7 89 7 is_stmt 0 view .LVU5390
 20636              	.LBE11536:
 20637              	.LBE11535:
 20638              	.LBE11534:
 20639              	.LBE11522:
 118:alohal/cli/cli.cpp ****         return 0;
 20640              		.loc 2 118 9 is_stmt 1 view .LVU5391
 20641              	.LBB11537:
 20642              	.LBI11537:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 20643              		.loc 13 550 7 view .LVU5392
 20644              	.LBB11538:
 20645              	.LBB11539:
 20646              	.LBB11540:
 20647              	.LBI11540:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 20648              		.loc 13 915 7 view .LVU5393
 20649              	.LBB11541:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 20650              		.loc 13 916 50 is_stmt 0 view .LVU5394
 20651 01bc 099B     		ldr	r3, [sp, #36]
 20652 01be 089A     		ldr	r2, [sp, #32]
 20653 01c0 9E1A     		subs	r6, r3, r2
 20654 01c2 F210     		asrs	r2, r6, #3
 20655 01c4 9300     		lsls	r3, r2, #2
 20656 01c6 9B18     		adds	r3, r3, r2
 20657 01c8 1801     		lsls	r0, r3, #4
 20658 01ca 1B18     		adds	r3, r3, r0
ARM GAS  /tmp/ccszdRNt.s 			page 714


 20659 01cc 1802     		lsls	r0, r3, #8
 20660 01ce 1B18     		adds	r3, r3, r0
 20661 01d0 1804     		lsls	r0, r3, #16
 20662 01d2 1818     		adds	r0, r3, r0
 20663 01d4 4000     		lsls	r0, r0, #1
 20664 01d6 8018     		adds	r0, r0, r2
 20665              	.LVL1540:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 20666              		.loc 13 916 50 view .LVU5395
 20667              	.LBE11541:
 20668              	.LBE11540:
 20669              	.LBB11542:
 20670              	.LBI11542:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 20671              		.loc 13 277 7 is_stmt 1 view .LVU5396
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 20672              		.loc 13 277 7 is_stmt 0 view .LVU5397
 20673              	.LBE11542:
 20674              	.LBB11543:
 20675              	.LBI11543:
 20676              		.loc 20 97 19 is_stmt 1 view .LVU5398
 20677              	.LBB11544:
 20678              	.LBI11544:
 20679              		.loc 10 514 7 view .LVU5399
 20680              	.LBB11545:
 20681              	.LBI11545:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20682              		.loc 6 141 7 view .LVU5400
 20683              	.LBB11546:
 20684              	.LBI11546:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20685              		.loc 7 83 7 view .LVU5401
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20686              		.loc 7 83 7 is_stmt 0 view .LVU5402
 20687              	.LBE11546:
 20688              	.LBE11545:
 20689              	.LBE11544:
 20690              	.LBE11543:
 20691              	.LBB11547:
 20692              	.LBI11547:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 20693              		.loc 13 300 7 is_stmt 1 view .LVU5403
 20694              	.LBB11548:
 20695              	.LBI11548:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 20696              		.loc 13 133 2 view .LVU5404
 20697              	.LBB11549:
 20698              	.LBI11549:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20699              		.loc 6 141 7 view .LVU5405
 20700              	.LBB11550:
 20701              	.LBI11550:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20702              		.loc 7 83 7 view .LVU5406
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20703              		.loc 7 83 7 is_stmt 0 view .LVU5407
 20704              	.LBE11550:
ARM GAS  /tmp/ccszdRNt.s 			page 715


 20705              	.LBE11549:
 20706              	.LBB11551:
 20707              	.LBI11551:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 20708              		.loc 13 94 2 is_stmt 1 view .LVU5408
 20709              	.LBB11552:
 20710              	.LBB11553:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 20711              		.loc 13 95 47 is_stmt 0 view .LVU5409
 20712 01d8 0023     		movs	r3, #0
 20713 01da 2993     		str	r3, [sp, #164]
 20714 01dc 2A93     		str	r3, [sp, #168]
 20715 01de 2B93     		str	r3, [sp, #172]
 20716              	.LVL1541:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 20717              		.loc 13 95 47 view .LVU5410
 20718              	.LBE11553:
 20719              	.LBE11552:
 20720              	.LBE11551:
 20721              	.LBE11548:
 20722              	.LBB11554:
 20723              	.LBI11554:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 20724              		.loc 13 356 7 is_stmt 1 view .LVU5411
 20725              	.LBB11555:
 20726              	.LBB11556:
 20727              	.LBI11556:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 20728              		.loc 13 340 7 view .LVU5412
 20729              	.LBB11557:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 20730              		.loc 13 343 18 is_stmt 0 view .LVU5413
 20731 01e0 0028     		cmp	r0, #0
 20732 01e2 22D0     		beq	.L463
 20733              	.LVL1542:
 20734              	.LBB11558:
 20735              	.LBI11558:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 20736              		.loc 10 443 7 is_stmt 1 view .LVU5414
 20737              	.LBB11559:
 20738              	.LBI11559:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 20739              		.loc 7 102 7 view .LVU5415
 20740              	.LBB11560:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 20741              		.loc 7 104 2 is_stmt 0 view .LVU5416
 20742 01e4 704B     		ldr	r3, .L486+28
 20743 01e6 9842     		cmp	r0, r3
 20744 01e8 1DD8     		bhi	.L474
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20745              		.loc 7 114 41 view .LVU5417
 20746 01ea 4300     		lsls	r3, r0, #1
 20747 01ec 1818     		adds	r0, r3, r0
 20748              	.LVL1543:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20749              		.loc 7 114 41 view .LVU5418
 20750 01ee C000     		lsls	r0, r0, #3
ARM GAS  /tmp/ccszdRNt.s 			page 716


 20751 01f0 FFF7FEFF 		bl	_Znwj
 20752              	.LVL1544:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20753              		.loc 7 114 41 view .LVU5419
 20754 01f4 0400     		movs	r4, r0
 20755              	.LVL1545:
 20756              	.L427:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 20757              		.loc 7 114 41 view .LVU5420
 20758              	.LBE11560:
 20759              	.LBE11559:
 20760              	.LBE11558:
 20761              	.LBE11557:
 20762              	.LBE11556:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 20763              		.loc 13 358 2 view .LVU5421
 20764 01f6 2994     		str	r4, [sp, #164]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 20765              		.loc 13 359 2 view .LVU5422
 20766 01f8 2A94     		str	r4, [sp, #168]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 20767              		.loc 13 360 59 view .LVU5423
 20768 01fa A619     		adds	r6, r4, r6
 20769              	.LVL1546:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 20770              		.loc 13 360 2 view .LVU5424
 20771 01fc 2B96     		str	r6, [sp, #172]
 20772              	.LVL1547:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 20773              		.loc 13 360 2 view .LVU5425
 20774              	.LBE11555:
 20775              	.LBE11554:
 20776              	.LBE11547:
 20777              	.LBB11568:
 20778              	.LBI11568:
 20779              		.loc 6 153 7 is_stmt 1 view .LVU5426
 20780              	.LBB11569:
 20781              	.LBI11569:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20782              		.loc 7 89 7 view .LVU5427
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20783              		.loc 7 89 7 is_stmt 0 view .LVU5428
 20784              	.LBE11569:
 20785              	.LBE11568:
 20786              	.LBB11570:
 20787              	.LBI11570:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 20788              		.loc 13 817 7 is_stmt 1 view .LVU5429
 20789              	.LBB11571:
 20790              	.LBB11572:
 20791              	.LBI11572:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 20792              		.loc 14 806 7 view .LVU5430
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 20793              		.loc 14 806 7 is_stmt 0 view .LVU5431
 20794              	.LBE11572:
 20795              	.LBE11571:
ARM GAS  /tmp/ccszdRNt.s 			page 717


 20796              	.LBE11570:
 20797              	.LBB11573:
 20798              	.LBI11573:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 20799              		.loc 13 835 7 is_stmt 1 view .LVU5432
 20800              	.LBB11574:
 20801              	.LBB11575:
 20802              	.LBI11575:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 20803              		.loc 14 806 7 view .LVU5433
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 20804              		.loc 14 806 7 is_stmt 0 view .LVU5434
 20805              	.LBE11575:
 20806              	.LBE11574:
 20807              	.LBE11573:
 20808              	.LBB11576:
 20809              	.LBI11576:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 20810              		.loc 13 273 7 is_stmt 1 view .LVU5435
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 20811              		.loc 13 273 7 is_stmt 0 view .LVU5436
 20812              	.LBE11576:
 20813              	.LBB11577:
 20814              	.LBI11577:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 20815              		.loc 15 305 5 is_stmt 1 view .LVU5437
 20816              	.LBB11578:
 20817              	.LBB11579:
 20818              	.LBI11579:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 20819              		.loc 15 115 5 view .LVU5438
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 20820              		.loc 15 115 5 is_stmt 0 view .LVU5439
 20821 01fe 089E     		ldr	r6, [sp, #32]
 20822              	.LVL1548:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 20823              		.loc 15 115 5 view .LVU5440
 20824 0200 099F     		ldr	r7, [sp, #36]
 20825              	.LVL1549:
 20826              	.LBB11580:
 20827              	.LBB11581:
 20828              	.LBI11581:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 20829              		.loc 15 76 9 is_stmt 1 view .LVU5441
 20830              	.L430:
 20831              	.LBB11582:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 20832              		.loc 15 82 23 view .LVU5442
 20833              	.LBB11583:
 20834              	.LBI11583:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 20835              		.loc 14 907 5 view .LVU5443
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 20836              		.loc 14 907 5 is_stmt 0 view .LVU5444
 20837              	.LBE11583:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 20838              		.loc 15 82 23 view .LVU5445
ARM GAS  /tmp/ccszdRNt.s 			page 718


 20839 0202 BE42     		cmp	r6, r7
 20840 0204 13D0     		beq	.L429
 20841              	.LVL1550:
 20842              	.LBB11584:
 20843              	.LBI11584:
 20844              		.file 24 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h"
   1:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   2:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
   3:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // Copyright (C) 2001-2019 Free Software Foundation, Inc.
   4:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** //
   5:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   7:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   8:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // any later version.
  10:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  11:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  12:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // GNU General Public License for more details.
  15:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  16:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  19:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  20:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  21:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  24:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  25:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** /*
  26:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  27:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Copyright (c) 1994
  28:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Hewlett-Packard Company
  29:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  30:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  31:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  32:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  33:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  34:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  35:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  36:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  37:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  38:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  39:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  40:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  41:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *
  42:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  43:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  44:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  45:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  46:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  47:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * representations about the suitability of this software for any
  48:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  49:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  */
  50:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  51:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** /** @file bits/stl_construct.h
ARM GAS  /tmp/ccszdRNt.s 			page 719


  52:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  53:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  54:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****  */
  55:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  56:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  57:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  58:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  59:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #include <new>
  60:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #include <bits/move.h>
  61:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  62:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  63:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  64:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** {
  65:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  66:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  67:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
  68:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  69:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * object's constructor with an initializer.
  70:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
  71:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
  72:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  73:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
 20845              		.loc 24 74 5 is_stmt 1 view .LVU5446
 20846              		.loc 24 74 5 is_stmt 0 view .LVU5447
 20847              	.LBE11584:
 20848              	.LBE11582:
 20849              	.LBE11581:
 20850              	.LBE11580:
 20851              	.LBE11579:
 20852              	.LBE11578:
 20853              	.LBE11577:
 20854              	.LBE11539:
 20855              	.LBE11538:
 20856              	.LBE11537:
 20857              		.loc 11 174 3 is_stmt 1 view .LVU5448
 20858              	.LBB11620:
 20859              	.LBB11619:
 20860              	.LBB11618:
 20861              	.LBB11616:
 20862              	.LBB11615:
 20863              	.LBB11614:
 20864              	.LBB11613:
 20865              	.LBB11612:
 20866              	.LBB11611:
 20867              	.LBB11608:
 20868              	.LBB11585:
 20869              	.LBI11585:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 20870              		.loc 5 448 7 view .LVU5449
 20871              	.LBB11586:
 20872              	.LBB11587:
 20873              	.LBI11587:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 20874              		.loc 5 190 7 view .LVU5450
 20875              	.LBB11588:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccszdRNt.s 			page 720


 20876              		.loc 5 193 51 is_stmt 0 view .LVU5451
 20877 0206 2300     		movs	r3, r4
 20878 0208 0833     		adds	r3, r3, #8
 20879              	.LVL1551:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 20880              		.loc 5 193 51 view .LVU5452
 20881              	.LBE11588:
 20882              	.LBE11587:
 20883              	.LBB11589:
 20884              	.LBI11589:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 20885              		.loc 5 290 7 is_stmt 1 view .LVU5453
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 20886              		.loc 5 290 7 is_stmt 0 view .LVU5454
 20887              	.LBE11589:
 20888              	.LBB11590:
 20889              	.LBI11590:
 20890              		.loc 20 97 19 is_stmt 1 view .LVU5455
 20891              	.LBB11591:
 20892              	.LBI11591:
 20893              		.loc 10 514 7 view .LVU5456
 20894              	.LBB11592:
 20895              	.LBI11592:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20896              		.loc 6 141 7 view .LVU5457
 20897              	.LBB11593:
 20898              	.LBI11593:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20899              		.loc 7 83 7 view .LVU5458
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20900              		.loc 7 83 7 is_stmt 0 view .LVU5459
 20901              	.LBE11593:
 20902              	.LBE11592:
 20903              	.LBE11591:
 20904              	.LBE11590:
 20905              	.LBB11594:
 20906              	.LBI11594:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 20907              		.loc 5 159 2 is_stmt 1 view .LVU5460
 20908              	.LBB11595:
 20909              	.LBB11596:
 20910              	.LBI11596:
 20911              		.loc 8 99 5 view .LVU5461
 20912              		.loc 8 99 5 is_stmt 0 view .LVU5462
 20913              	.LBE11596:
 20914              	.LBB11597:
 20915              	.LBI11597:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 20916              		.loc 6 141 7 is_stmt 1 view .LVU5463
 20917              	.LBB11598:
 20918              	.LBI11598:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20919              		.loc 7 83 7 view .LVU5464
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20920              		.loc 7 83 7 is_stmt 0 view .LVU5465
 20921              	.LBE11598:
 20922              	.LBE11597:
ARM GAS  /tmp/ccszdRNt.s 			page 721


 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20923              		.loc 5 160 46 view .LVU5466
 20924 020a 2360     		str	r3, [r4]
 20925              	.LVL1552:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 20926              		.loc 5 160 46 view .LVU5467
 20927              	.LBE11595:
 20928              	.LBE11594:
 20929              	.LBB11599:
 20930              	.LBI11599:
 20931              		.loc 6 153 7 is_stmt 1 view .LVU5468
 20932              	.LBB11600:
 20933              	.LBI11600:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20934              		.loc 7 89 7 view .LVU5469
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 20935              		.loc 7 89 7 is_stmt 0 view .LVU5470
 20936              	.LBE11600:
 20937              	.LBE11599:
 20938              	.LBB11601:
 20939              	.LBI11601:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20940              		.loc 5 186 7 is_stmt 1 view .LVU5471
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20941              		.loc 5 186 7 is_stmt 0 view .LVU5472
 20942              	.LBE11601:
 20943              	.LBB11602:
 20944              	.LBI11602:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20945              		.loc 5 186 7 is_stmt 1 view .LVU5473
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 20946              		.loc 5 186 7 is_stmt 0 view .LVU5474
 20947              	.LBE11602:
 20948              	.LBB11603:
 20949              	.LBI11603:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20950              		.loc 5 936 7 is_stmt 1 view .LVU5475
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 20951              		.loc 5 936 7 is_stmt 0 view .LVU5476
 20952              	.LBE11603:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 20953              		.loc 5 451 9 view .LVU5477
 20954 020c 3368     		ldr	r3, [r6]
 20955 020e 7168     		ldr	r1, [r6, #4]
 20956 0210 8C46     		mov	ip, r1
 20957 0212 6344     		add	r3, r3, ip
 20958 0214 1A00     		movs	r2, r3
 20959              	.LVL1553:
 20960              	.LBB11604:
 20961              	.LBI11604:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 20962              		.loc 5 263 9 is_stmt 1 view .LVU5478
 20963              	.LBB11605:
 20964              	.LBB11606:
 20965              	.LBI11606:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 20966              		.loc 5 243 9 view .LVU5479
ARM GAS  /tmp/ccszdRNt.s 			page 722


 20967              	.LBB11607:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20968              		.loc 5 247 11 is_stmt 0 view .LVU5480
 20969 0216 0023     		movs	r3, #0
 20970 0218 3168     		ldr	r1, [r6]
 20971 021a 2000     		movs	r0, r4
 20972 021c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 20973              	.LVL1554:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 20974              		.loc 5 247 11 view .LVU5481
 20975              	.LBE11607:
 20976              	.LBE11606:
 20977              	.LBE11605:
 20978              	.LBE11604:
 20979              	.LBE11586:
 20980              	.LBE11585:
 20981              	.LBE11608:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 20982              		.loc 15 82 8 is_stmt 1 view .LVU5482
 20983              	.LBB11609:
 20984              	.LBI11609:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 20985              		.loc 14 827 7 view .LVU5483
 20986              	.LBB11610:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 20987              		.loc 14 829 2 is_stmt 0 view .LVU5484
 20988 0220 1836     		adds	r6, r6, #24
 20989              	.LVL1555:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 20990              		.loc 14 829 2 view .LVU5485
 20991              	.LBE11610:
 20992              	.LBE11609:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 20993              		.loc 15 82 8 view .LVU5486
 20994 0222 1834     		adds	r4, r4, #24
 20995              	.LVL1556:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 20996              		.loc 15 82 8 view .LVU5487
 20997 0224 EDE7     		b	.L430
 20998              	.LVL1557:
 20999              	.L474:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 21000              		.loc 15 82 8 view .LVU5488
 21001              	.LBE11611:
 21002              	.LBE11612:
 21003              	.LBE11613:
 21004              	.LBE11614:
 21005              	.LBE11615:
 21006              	.LBE11616:
 21007              	.LBB11617:
 21008              	.LBB11567:
 21009              	.LBB11566:
 21010              	.LBB11565:
 21011              	.LBB11564:
 21012              	.LBB11563:
 21013              	.LBB11562:
 21014              	.LBB11561:
ARM GAS  /tmp/ccszdRNt.s 			page 723


 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21015              		.loc 7 105 26 view .LVU5489
 21016 0226 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 21017              	.LVL1558:
 21018              	.L463:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21019              		.loc 7 105 26 view .LVU5490
 21020              	.LBE11561:
 21021              	.LBE11562:
 21022              	.LBE11563:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21023              		.loc 13 343 18 view .LVU5491
 21024 022a 0024     		movs	r4, #0
 21025 022c E3E7     		b	.L427
 21026              	.LVL1559:
 21027              	.L429:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21028              		.loc 13 343 18 view .LVU5492
 21029              	.LBE11564:
 21030              	.LBE11565:
 21031              	.LBE11566:
 21032              	.LBE11567:
 21033              	.LBE11617:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 21034              		.loc 13 554 2 view .LVU5493
 21035 022e 2A94     		str	r4, [sp, #168]
 21036              	.LVL1560:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 21037              		.loc 13 554 2 view .LVU5494
 21038              	.LBE11618:
 21039              	.LBE11619:
 21040              	.LBE11620:
 118:alohal/cli/cli.cpp ****         return 0;
 21041              		.loc 2 118 39 view .LVU5495
 21042 0230 29A9     		add	r1, sp, #164
 21043 0232 2800     		movs	r0, r5
 21044 0234 FFF7FEFF 		bl	_ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcE
 21045              	.LVL1561:
 21046              	.LBB11621:
 21047              	.LBI11621:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21048              		.loc 13 675 7 is_stmt 1 view .LVU5496
 21049              	.LBB11622:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 21050              		.loc 13 677 15 is_stmt 0 view .LVU5497
 21051 0238 299C     		ldr	r4, [sp, #164]
 21052 023a 2A9D     		ldr	r5, [sp, #168]
 21053              	.LVL1562:
 21054              	.LBB11623:
 21055              	.LBI11623:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21056              		.loc 13 273 7 is_stmt 1 view .LVU5498
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 21057              		.loc 13 273 7 is_stmt 0 view .LVU5499
 21058              	.LBE11623:
 21059              	.LBB11624:
 21060              	.LBI11624:
ARM GAS  /tmp/ccszdRNt.s 			page 724


  75:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #else
  77:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _T1, typename _T2>
  78:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  79:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Construct(_T1* __p, const _T2& __value)
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
  81:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // 402. wrong new expression in [some_]allocator::construct
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       ::new(static_cast<void*>(__p)) _T1(__value);
  84:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
  85:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #endif
  86:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  87:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _T1>
  88:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Construct_novalue(_T1* __p)
  90:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1; }
  91:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
  92:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
  93:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy the object pointed to by a pointer type.
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _Tp>
  96:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_Tp* __pointer)
  98:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
  99:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 100:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<bool>
 101:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_aux
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 103:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator>
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static void
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy(_ForwardIterator __first, _ForwardIterator __last)
 106:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	{
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  for (; __first != __last; ++__first)
 108:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 109:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	}
 110:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 111:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 112:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<>
 113:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_aux<true>
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator>
 116:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static void
 117:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy(_ForwardIterator, _ForwardIterator) { }
 118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 120:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
 121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 122:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 123:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 124:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator>
 126:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
 127:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last)
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 129:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 130:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****                        _Value_type;
 131:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
ARM GAS  /tmp/ccszdRNt.s 			page 725


 132:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 134:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 		    "value type is destructible");
 135:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #endif
 136:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       std::_Destroy_aux<__has_trivial_destructor(_Value_type)>::
 137:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	__destroy(__first, __last);
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
 139:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 140:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<bool>
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_n_aux
 142:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static _ForwardIterator
 145:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	{
 147:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  for (; __count > 0; (void)++__first, --__count)
 148:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  return __first;
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	}
 151:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 153:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<>
 154:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     struct _Destroy_n_aux<true>
 155:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       template<typename _ForwardIterator, typename _Size>
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         static _ForwardIterator
 158:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****         __destroy_n(_ForwardIterator __first, _Size __count)
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	{
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  std::advance(__first, __count);
 161:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	  return __first;
 162:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	}
 163:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     };
 164:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 165:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
 166:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy a range of objects.  If the value_type of the object has
 167:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * a trivial destructor, the compiler should optimize all of this
 168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * away, otherwise the objects' destructors must be invoked.
 169:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
 170:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Size>
 171:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline _ForwardIterator
 172:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy_n(_ForwardIterator __first, _Size __count)
 173:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 174:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 175:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****                        _Value_type;
 176:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #if __cplusplus >= 201103L
 177:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       // A deleted destructor is trivial, this ensures we reject such types:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       static_assert(is_destructible<_Value_type>::value,
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 		    "value type is destructible");
 180:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** #endif
 181:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       return std::_Destroy_n_aux<__has_trivial_destructor(_Value_type)>::
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	__destroy_n(__first, __count);
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
 184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 185:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   /**
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * Destroy a range of objects using the supplied allocator.  For
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * nondefault allocators we do not optimize away invocation of 
 188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    * destroy() even if _Tp has a trivial destructor.
ARM GAS  /tmp/ccszdRNt.s 			page 726


 189:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****    */
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Allocator>
 192:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     void
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 194:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	     _Allocator& __alloc)
 195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     {
 196:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 197:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****       for (; __first != __last; ++__first)
 198:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	__traits::destroy(__alloc, std::__addressof(*__first));
 199:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     }
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 
 201:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****   template<typename _ForwardIterator, typename _Tp>
 202:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     inline void
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     _Destroy(_ForwardIterator __first, _ForwardIterator __last,
 21061              		.loc 24 203 5 is_stmt 1 view .LVU5500
 21062 023c 00E0     		b	.L433
 21063              	.LVL1563:
 21064              	.L432:
 21065              	.LBB11625:
 21066              	.LBB11626:
 21067              	.LBB11627:
 21068              	.LBB11628:
 21069              	.LBB11629:
 21070              	.LBB11630:
 21071              	.LBB11631:
 21072              	.LBI11631:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21073              		.loc 5 150 14 view .LVU5501
 21074              	.LBB11632:
 21075              	.LBI11632:
 21076              		.loc 6 153 7 view .LVU5502
 21077              	.LBB11633:
 21078              	.LBI11633:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21079              		.loc 7 89 7 view .LVU5503
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21080              		.loc 7 89 7 is_stmt 0 view .LVU5504
 21081              	.LBE11633:
 21082              	.LBE11632:
 21083              	.LBE11631:
 21084              	.LBE11630:
 21085              	.LBE11629:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 21086              		.loc 24 107 4 is_stmt 1 view .LVU5505
 21087 023e 1834     		adds	r4, r4, #24
 21088              	.LVL1564:
 21089              	.L433:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 21090              		.loc 24 107 19 view .LVU5506
 21091 0240 A542     		cmp	r5, r4
 21092 0242 07D0     		beq	.L431
 21093              	.LVL1565:
 21094              	.LBB11647:
 21095              	.LBI11629:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 21096              		.loc 24 97 5 view .LVU5507
ARM GAS  /tmp/ccszdRNt.s 			page 727


 21097              	.LBB11646:
 21098              	.LBI11630:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 21099              		.loc 5 657 7 view .LVU5508
 21100              	.LBB11634:
 21101              	.LBI11634:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21102              		.loc 5 229 7 view .LVU5509
 21103              	.LBB11635:
 21104              	.LBB11636:
 21105              	.LBI11636:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21106              		.loc 5 221 7 view .LVU5510
 21107              	.LBB11637:
 21108              	.LBI11637:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21109              		.loc 5 186 7 view .LVU5511
 21110              	.LBB11638:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21111              		.loc 5 187 28 is_stmt 0 view .LVU5512
 21112 0244 2068     		ldr	r0, [r4]
 21113              	.LVL1566:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21114              		.loc 5 187 28 view .LVU5513
 21115              	.LBE11638:
 21116              	.LBE11637:
 21117              	.LBB11639:
 21118              	.LBI11639:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21119              		.loc 5 200 7 is_stmt 1 view .LVU5514
 21120              	.LBB11640:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 21121              		.loc 5 203 57 is_stmt 0 view .LVU5515
 21122 0246 2300     		movs	r3, r4
 21123 0248 0833     		adds	r3, r3, #8
 21124              	.LVL1567:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 21125              		.loc 5 203 57 view .LVU5516
 21126              	.LBE11640:
 21127              	.LBE11639:
 21128              	.LBE11636:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21129              		.loc 5 231 2 view .LVU5517
 21130 024a 9842     		cmp	r0, r3
 21131 024c F7D0     		beq	.L432
 21132              	.LVL1568:
 21133              	.LBB11641:
 21134              	.LBI11641:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21135              		.loc 5 236 7 is_stmt 1 view .LVU5518
 21136              	.LBB11642:
 21137              	.LBB11643:
 21138              	.LBI11643:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21139              		.loc 10 469 7 view .LVU5519
 21140              	.LBB11644:
 21141              	.LBI11644:
ARM GAS  /tmp/ccszdRNt.s 			page 728


 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21142              		.loc 7 119 7 view .LVU5520
 21143              	.LBB11645:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21144              		.loc 7 128 19 is_stmt 0 view .LVU5521
 21145 024e FFF7FEFF 		bl	_ZdlPv
 21146              	.LVL1569:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21147              		.loc 7 128 19 view .LVU5522
 21148              	.LBE11645:
 21149              	.LBE11644:
 21150              	.LBE11643:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21151              		.loc 5 237 79 view .LVU5523
 21152 0252 F4E7     		b	.L432
 21153              	.LVL1570:
 21154              	.L431:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21155              		.loc 5 237 79 view .LVU5524
 21156              	.LBE11642:
 21157              	.LBE11641:
 21158              	.LBE11635:
 21159              	.LBE11634:
 21160              	.LBE11646:
 21161              	.LBE11647:
 21162              	.LBE11628:
 21163              	.LBE11627:
 21164              	.LBE11626:
 21165              	.LBE11625:
 21166              	.LBE11624:
 21167              	.LBB11648:
 21168              	.LBI11648:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21169              		.loc 13 330 7 is_stmt 1 view .LVU5525
 21170              	.LBB11649:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 21171              		.loc 13 332 2 is_stmt 0 view .LVU5526
 21172 0254 2998     		ldr	r0, [sp, #164]
 21173              	.LVL1571:
 21174              	.LBB11650:
 21175              	.LBI11650:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21176              		.loc 13 347 7 is_stmt 1 view .LVU5527
 21177              	.LBB11651:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 21178              		.loc 13 350 2 is_stmt 0 view .LVU5528
 21179 0256 0028     		cmp	r0, #0
 21180 0258 01D0     		beq	.L434
 21181              	.LVL1572:
 21182              	.LBB11652:
 21183              	.LBI11652:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21184              		.loc 10 469 7 is_stmt 1 view .LVU5529
 21185              	.LBB11653:
 21186              	.LBB11654:
 21187              	.LBI11654:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 729


 21188              		.loc 7 119 7 view .LVU5530
 21189              	.LBB11655:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21190              		.loc 7 128 19 is_stmt 0 view .LVU5531
 21191 025a FFF7FEFF 		bl	_ZdlPv
 21192              	.LVL1573:
 21193              	.L434:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21194              		.loc 7 128 19 view .LVU5532
 21195              	.LBE11655:
 21196              	.LBE11654:
 21197              	.LBE11653:
 21198              	.LBE11652:
 21199              	.LBE11651:
 21200              	.LBE11650:
 21201              	.LBB11656:
 21202              	.LBI11656:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 21203              		.loc 13 125 14 is_stmt 1 view .LVU5533
 21204              	.LBB11657:
 21205              	.LBI11657:
 21206              		.loc 6 153 7 view .LVU5534
 21207              	.LBB11658:
 21208              	.LBI11658:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21209              		.loc 7 89 7 view .LVU5535
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21210              		.loc 7 89 7 is_stmt 0 view .LVU5536
 21211              	.LBE11658:
 21212              	.LBE11657:
 21213              	.LBE11656:
 21214              	.LBE11649:
 21215              	.LBE11648:
 21216              	.LBE11622:
 21217              	.LBE11621:
 119:alohal/cli/cli.cpp ****     }
 21218              		.loc 2 119 9 is_stmt 1 view .LVU5537
 119:alohal/cli/cli.cpp ****     }
 21219              		.loc 2 119 16 is_stmt 0 view .LVU5538
 21220 025e 0027     		movs	r7, #0
 21221              	.LVL1574:
 119:alohal/cli/cli.cpp ****     }
 21222              		.loc 2 119 16 view .LVU5539
 21223 0260 04E1     		b	.L423
 21224              	.LVL1575:
 21225              	.L476:
 21226              	.LBB11659:
 21227              	.LBB11443:
 21228              	.LBB11444:
 21229              	.LBB11445:
 21230              	.LBB11446:
 21231              	.LBI11446:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 21232              		.loc 5 2312 7 is_stmt 1 view .LVU5540
 21233              	.LBB11447:
 21234              	.LBI11447:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 730


 21235              		.loc 5 186 7 view .LVU5541
 21236              	.LBB11448:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21237              		.loc 5 187 28 is_stmt 0 view .LVU5542
 21238 0262 4346     		mov	r3, r8
 21239 0264 1868     		ldr	r0, [r3]
 21240              	.LVL1576:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21241              		.loc 5 187 28 view .LVU5543
 21242              	.LBE11448:
 21243              	.LBE11447:
 21244              	.LBE11446:
 21245              	.LBB11449:
 21246              	.LBI11449:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 21247              		.loc 5 2312 7 is_stmt 1 view .LVU5544
 21248              	.LBB11450:
 21249              	.LBI11450:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21250              		.loc 5 186 7 view .LVU5545
 21251              	.LBB11451:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21252              		.loc 5 187 28 is_stmt 0 view .LVU5546
 21253 0266 2C99     		ldr	r1, [sp, #176]
 21254              	.LVL1577:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21255              		.loc 5 187 28 view .LVU5547
 21256              	.LBE11451:
 21257              	.LBE11450:
 21258              	.LBE11449:
 21259              	.LBB11452:
 21260              	.LBI11452:
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 21261              		.loc 4 315 7 is_stmt 1 view .LVU5548
 21262              	.LBB11453:
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 21263              		.loc 4 317 2 view .LVU5549
 21264 0268 002A     		cmp	r2, #0
 21265 026a 06D0     		beq	.L465
 21266              	.LVL1578:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 21267              		.loc 4 320 2 view .LVU5550
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 21268              		.loc 4 325 2 view .LVU5551
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 21269              		.loc 4 325 25 is_stmt 0 view .LVU5552
 21270 026c FFF7FEFF 		bl	memcmp
 21271              	.LVL1579:
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 21272              		.loc 4 325 25 view .LVU5553
 21273              	.LBE11453:
 21274              	.LBE11452:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21275              		.loc 5 6152 8 view .LVU5554
 21276 0270 0028     		cmp	r0, #0
 21277 0272 05D1     		bne	.L466
 21278 0274 0123     		movs	r3, #1
ARM GAS  /tmp/ccszdRNt.s 			page 731


 21279 0276 9846     		mov	r8, r3
 21280              	.LVL1580:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21281              		.loc 5 6152 8 view .LVU5555
 21282 0278 1CE0     		b	.L436
 21283              	.LVL1581:
 21284              	.L465:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21285              		.loc 5 6152 8 view .LVU5556
 21286 027a 0123     		movs	r3, #1
 21287              	.LVL1582:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21288              		.loc 5 6152 8 view .LVU5557
 21289 027c 9846     		mov	r8, r3
 21290              	.LVL1583:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21291              		.loc 5 6152 8 view .LVU5558
 21292 027e 19E0     		b	.L436
 21293              	.LVL1584:
 21294              	.L466:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21295              		.loc 5 6152 8 view .LVU5559
 21296 0280 0023     		movs	r3, #0
 21297 0282 9846     		mov	r8, r3
 21298              	.LVL1585:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21299              		.loc 5 6152 8 view .LVU5560
 21300 0284 16E0     		b	.L436
 21301              	.LVL1586:
 21302              	.L477:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21303              		.loc 5 6152 8 view .LVU5561
 21304              	.LBE11445:
 21305              	.LBE11444:
 21306              	.LBB11459:
 21307              	.LBB11460:
 21308              	.LBB11461:
 21309              	.LBB11462:
 21310              	.LBI11462:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21311              		.loc 5 236 7 is_stmt 1 view .LVU5562
 21312              	.LBB11463:
 21313              	.LBB11464:
 21314              	.LBI11464:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21315              		.loc 10 469 7 view .LVU5563
 21316              	.LBB11465:
 21317              	.LBI11465:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21318              		.loc 7 119 7 view .LVU5564
 21319              	.LBB11466:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21320              		.loc 7 128 19 is_stmt 0 view .LVU5565
 21321 0286 FFF7FEFF 		bl	_ZdlPv
 21322              	.LVL1587:
 21323              	.L437:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 732


 21324              		.loc 7 128 19 view .LVU5566
 21325              	.LBE11466:
 21326              	.LBE11465:
 21327              	.LBE11464:
 21328              	.LBE11463:
 21329              	.LBE11462:
 21330              	.LBE11461:
 21331              	.LBE11460:
 21332              	.LBB11472:
 21333              	.LBI11472:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21334              		.loc 5 150 14 is_stmt 1 view .LVU5567
 21335              	.LBB11473:
 21336              	.LBI11473:
 21337              		.loc 6 153 7 view .LVU5568
 21338              	.LBB11474:
 21339              	.LBI11474:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21340              		.loc 7 89 7 view .LVU5569
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21341              		.loc 7 89 7 is_stmt 0 view .LVU5570
 21342              	.LBE11474:
 21343              	.LBE11473:
 21344              	.LBE11472:
 21345              	.LBE11459:
 124:alohal/cli/cli.cpp ****             int ret = command->Invoke(args);
 21346              		.loc 2 124 9 view .LVU5571
 21347 028a 4346     		mov	r3, r8
 21348 028c 002B     		cmp	r3, #0
 21349 028e 16D1     		bne	.L475
 21350              	.LBE11443:
 123:alohal/cli/cli.cpp ****         if (args[0] == command->Get_command()) {
 21351              		.loc 2 123 5 is_stmt 1 view .LVU5572
 21352              	.LVL1588:
 21353              	.LBB11484:
 21354              	.LBI11484:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 21355              		.loc 14 827 7 view .LVU5573
 21356              	.LBB11485:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 21357              		.loc 14 829 2 is_stmt 0 view .LVU5574
 21358 0290 231D     		adds	r3, r4, #4
 21359              	.LVL1589:
 21360              	.L439:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 21361              		.loc 14 829 2 view .LVU5575
 21362              	.LBE11485:
 21363              	.LBE11484:
 123:alohal/cli/cli.cpp ****         if (args[0] == command->Get_command()) {
 21364              		.loc 2 123 24 is_stmt 1 discriminator 1 view .LVU5576
 21365              	.LBB11486:
 21366              	.LBI11486:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 21367              		.loc 14 907 5 discriminator 1 view .LVU5577
 21368              	.LBB11487:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 21369              		.loc 14 910 27 is_stmt 0 discriminator 1 view .LVU5578
ARM GAS  /tmp/ccszdRNt.s 			page 733


 21370 0292 1C00     		movs	r4, r3
 21371              	.LVL1590:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 21372              		.loc 14 910 27 discriminator 1 view .LVU5579
 21373              	.LBE11487:
 21374              	.LBE11486:
 123:alohal/cli/cli.cpp ****         if (args[0] == command->Get_command()) {
 21375              		.loc 2 123 24 discriminator 1 view .LVU5580
 21376 0294 9F42     		cmp	r7, r3
 21377 0296 21D0     		beq	.L435
 21378              	.LVL1591:
 123:alohal/cli/cli.cpp ****         if (args[0] == command->Get_command()) {
 21379              		.loc 2 123 24 discriminator 1 view .LVU5581
 21380              	.LBE11659:
 124:alohal/cli/cli.cpp ****             int ret = command->Invoke(args);
 21381              		.loc 2 124 9 is_stmt 1 view .LVU5582
 21382              	.LBB11660:
 21383              	.LBB11488:
 21384              	.LBB11476:
 21385              	.LBI11476:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21386              		.loc 13 1040 7 view .LVU5583
 21387              	.LBB11477:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21388              		.loc 13 1043 25 is_stmt 0 view .LVU5584
 21389 0298 089A     		ldr	r2, [sp, #32]
 21390 029a 9046     		mov	r8, r2
 21391              	.LVL1592:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21392              		.loc 13 1043 25 view .LVU5585
 21393              	.LBE11477:
 21394              	.LBE11476:
 124:alohal/cli/cli.cpp ****             int ret = command->Invoke(args);
 21395              		.loc 2 124 44 view .LVU5586
 21396 029c 1968     		ldr	r1, [r3]
 124:alohal/cli/cli.cpp ****             int ret = command->Invoke(args);
 21397              		.loc 2 124 45 view .LVU5587
 21398 029e 0B68     		ldr	r3, [r1]
 21399              	.LVL1593:
 124:alohal/cli/cli.cpp ****             int ret = command->Invoke(args);
 21400              		.loc 2 124 45 view .LVU5588
 21401 02a0 5B68     		ldr	r3, [r3, #4]
 124:alohal/cli/cli.cpp ****             int ret = command->Invoke(args);
 21402              		.loc 2 124 44 view .LVU5589
 21403 02a2 2CA8     		add	r0, sp, #176
 21404 02a4 9847     		blx	r3
 21405              	.LVL1594:
 21406              	.LBB11478:
 21407              	.LBI11444:
6149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 21408              		.loc 5 6149 5 is_stmt 1 view .LVU5590
 21409              	.LBB11458:
 21410              	.LBB11454:
 21411              	.LBI11454:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 21412              		.loc 5 930 7 view .LVU5591
 21413              	.LBB11455:
ARM GAS  /tmp/ccszdRNt.s 			page 734


 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21414              		.loc 5 931 16 is_stmt 0 view .LVU5592
 21415 02a6 4346     		mov	r3, r8
 21416 02a8 5A68     		ldr	r2, [r3, #4]
 21417              	.LVL1595:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21418              		.loc 5 931 16 view .LVU5593
 21419              	.LBE11455:
 21420              	.LBE11454:
 21421              	.LBB11456:
 21422              	.LBI11456:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 21423              		.loc 5 930 7 is_stmt 1 view .LVU5594
 21424              	.LBB11457:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21425              		.loc 5 931 16 is_stmt 0 view .LVU5595
 21426 02aa 2D9B     		ldr	r3, [sp, #180]
 21427              	.LVL1596:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21428              		.loc 5 931 16 view .LVU5596
 21429              	.LBE11457:
 21430              	.LBE11456:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21431              		.loc 5 6152 8 view .LVU5597
 21432 02ac 9A42     		cmp	r2, r3
 21433 02ae D8D0     		beq	.L476
 21434 02b0 0023     		movs	r3, #0
 21435 02b2 9846     		mov	r8, r3
 21436              	.LVL1597:
 21437              	.L436:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 21438              		.loc 5 6152 8 view .LVU5598
 21439              	.LBE11458:
 21440              	.LBE11478:
 21441              	.LBB11479:
 21442              	.LBI11459:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 21443              		.loc 5 657 7 is_stmt 1 view .LVU5599
 21444              	.LBB11475:
 21445              	.LBI11460:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21446              		.loc 5 229 7 view .LVU5600
 21447              	.LBB11471:
 21448              	.LBB11467:
 21449              	.LBI11467:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21450              		.loc 5 221 7 view .LVU5601
 21451              	.LBB11468:
 21452              	.LBI11468:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21453              		.loc 5 186 7 view .LVU5602
 21454              	.LBB11469:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21455              		.loc 5 187 28 is_stmt 0 view .LVU5603
 21456 02b4 2C98     		ldr	r0, [sp, #176]
 21457              	.LVL1598:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 735


 21458              		.loc 5 187 28 view .LVU5604
 21459              	.LBE11469:
 21460              	.LBE11468:
 21461              	.LBB11470:
 21462              	.LBI11470:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21463              		.loc 5 200 7 is_stmt 1 view .LVU5605
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21464              		.loc 5 200 7 is_stmt 0 view .LVU5606
 21465              	.LBE11470:
 21466              	.LBE11467:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21467              		.loc 5 231 2 view .LVU5607
 21468 02b6 2EAB     		add	r3, sp, #184
 21469 02b8 9842     		cmp	r0, r3
 21470 02ba E4D1     		bne	.L477
 21471 02bc E5E7     		b	.L437
 21472              	.LVL1599:
 21473              	.L475:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21474              		.loc 5 231 2 view .LVU5608
 21475              	.LBE11471:
 21476              	.LBE11475:
 21477              	.LBE11479:
 21478              	.LBB11480:
 125:alohal/cli/cli.cpp ****             actual_line = line_opening;
 21479              		.loc 2 125 13 is_stmt 1 view .LVU5609
 125:alohal/cli/cli.cpp ****             actual_line = line_opening;
 21480              		.loc 2 125 38 is_stmt 0 view .LVU5610
 21481 02be 2068     		ldr	r0, [r4]
 125:alohal/cli/cli.cpp ****             actual_line = line_opening;
 21482              		.loc 2 125 43 view .LVU5611
 21483 02c0 0368     		ldr	r3, [r0]
 21484 02c2 1B68     		ldr	r3, [r3]
 125:alohal/cli/cli.cpp ****             actual_line = line_opening;
 21485              		.loc 2 125 38 view .LVU5612
 21486 02c4 08A9     		add	r1, sp, #32
 21487 02c6 9847     		blx	r3
 21488              	.LVL1600:
 21489 02c8 0700     		movs	r7, r0
 21490              	.LVL1601:
 126:alohal/cli/cli.cpp ****             Clear_line();
 21491              		.loc 2 126 13 is_stmt 1 view .LVU5613
 126:alohal/cli/cli.cpp ****             Clear_line();
 21492              		.loc 2 126 27 is_stmt 0 view .LVU5614
 21493 02ca 2900     		movs	r1, r5
 21494 02cc 3431     		adds	r1, r1, #52
 21495              	.LVL1602:
 21496              	.LBB11481:
 21497              	.LBI11481:
 665:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21498              		.loc 5 665 7 is_stmt 1 view .LVU5615
 21499              	.LBB11482:
 21500              	.LBI11482:
1364:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21501              		.loc 5 1364 7 view .LVU5616
 21502              	.LBB11483:
ARM GAS  /tmp/ccszdRNt.s 			page 736


1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 21503              		.loc 5 1366 2 is_stmt 0 view .LVU5617
 21504 02ce 3000     		movs	r0, r6
 21505              	.LVL1603:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 21506              		.loc 5 1366 2 view .LVU5618
 21507 02d0 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
 21508              	.LVL1604:
1366:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return *this;
 21509              		.loc 5 1366 2 view .LVU5619
 21510              	.LBE11483:
 21511              	.LBE11482:
 21512              	.LBE11481:
 127:alohal/cli/cli.cpp ****             return ret;
 21513              		.loc 2 127 13 is_stmt 1 view .LVU5620
 127:alohal/cli/cli.cpp ****             return ret;
 21514              		.loc 2 127 23 is_stmt 0 view .LVU5621
 21515 02d4 2800     		movs	r0, r5
 21516 02d6 FFF7FEFF 		bl	_ZN3CLI10Clear_lineEv
 21517              	.LVL1605:
 128:alohal/cli/cli.cpp ****         }
 21518              		.loc 2 128 13 is_stmt 1 view .LVU5622
 21519 02da C7E0     		b	.L423
 21520              	.LVL1606:
 21521              	.L435:
 128:alohal/cli/cli.cpp ****         }
 21522              		.loc 2 128 13 is_stmt 0 view .LVU5623
 21523              	.LBE11480:
 21524              	.LBE11488:
 21525              	.LBE11660:
 133:alohal/cli/cli.cpp ****         string path = args[0];
 21526              		.loc 2 133 5 is_stmt 1 view .LVU5624
 21527              	.LBB11661:
 21528 02dc EB6C     		ldr	r3, [r5, #76]
 21529 02de 002B     		cmp	r3, #0
 21530 02e0 00D1     		bne	.LCB25192
 21531 02e2 85E0     		b	.L440	@long jump
 21532              	.LCB25192:
 21533              	.LBB11662:
 134:alohal/cli/cli.cpp ****         unsigned int position = path.find_last_of("/");
 21534              		.loc 2 134 9 view .LVU5625
 21535              	.LVL1607:
 21536              	.LBB11663:
 21537              	.LBI11663:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21538              		.loc 13 1040 7 view .LVU5626
 21539              	.LBB11664:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21540              		.loc 13 1043 25 is_stmt 0 view .LVU5627
 21541 02e4 089B     		ldr	r3, [sp, #32]
 21542              	.LVL1608:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21543              		.loc 13 1043 25 view .LVU5628
 21544              	.LBE11664:
 21545              	.LBE11663:
 21546              	.LBB11665:
 21547              	.LBI11665:
ARM GAS  /tmp/ccszdRNt.s 			page 737


 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 21548              		.loc 5 448 7 is_stmt 1 view .LVU5629
 21549              	.LBB11666:
 21550              	.LBB11667:
 21551              	.LBB11668:
 21552              	.LBI11668:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21553              		.loc 5 190 7 view .LVU5630
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21554              		.loc 5 190 7 is_stmt 0 view .LVU5631
 21555              	.LBE11668:
 21556              	.LBB11669:
 21557              	.LBI11669:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 21558              		.loc 5 290 7 is_stmt 1 view .LVU5632
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 21559              		.loc 5 290 7 is_stmt 0 view .LVU5633
 21560              	.LBE11669:
 21561              	.LBB11670:
 21562              	.LBI11670:
 21563              		.loc 20 97 19 is_stmt 1 view .LVU5634
 21564              	.LBB11671:
 21565              	.LBI11671:
 21566              		.loc 10 514 7 view .LVU5635
 21567              	.LBB11672:
 21568              	.LBI11672:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21569              		.loc 6 141 7 view .LVU5636
 21570              	.LBB11673:
 21571              	.LBI11673:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21572              		.loc 7 83 7 view .LVU5637
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21573              		.loc 7 83 7 is_stmt 0 view .LVU5638
 21574              	.LBE11673:
 21575              	.LBE11672:
 21576              	.LBE11671:
 21577              	.LBE11670:
 21578              	.LBB11674:
 21579              	.LBI11674:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 21580              		.loc 5 159 2 is_stmt 1 view .LVU5639
 21581              	.LBB11675:
 21582              	.LBB11676:
 21583              	.LBB11677:
 21584              	.LBI11677:
 21585              		.loc 8 99 5 view .LVU5640
 21586              		.loc 8 99 5 is_stmt 0 view .LVU5641
 21587              	.LBE11677:
 21588              	.LBB11678:
 21589              	.LBI11678:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21590              		.loc 6 141 7 is_stmt 1 view .LVU5642
 21591              	.LBB11679:
 21592              	.LBI11679:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21593              		.loc 7 83 7 view .LVU5643
ARM GAS  /tmp/ccszdRNt.s 			page 738


  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21594              		.loc 7 83 7 is_stmt 0 view .LVU5644
 21595              	.LBE11679:
 21596              	.LBE11678:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21597              		.loc 5 160 46 view .LVU5645
 21598 02e6 04AA     		add	r2, sp, #16
 21599              	.LVL1609:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21600              		.loc 5 160 46 view .LVU5646
 21601 02e8 0292     		str	r2, [sp, #8]
 21602              	.LVL1610:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21603              		.loc 5 160 46 view .LVU5647
 21604              	.LBE11676:
 21605              	.LBE11675:
 21606              	.LBE11674:
 21607              	.LBB11680:
 21608              	.LBI11680:
 21609              		.loc 6 153 7 is_stmt 1 view .LVU5648
 21610              	.LBB11681:
 21611              	.LBI11681:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21612              		.loc 7 89 7 view .LVU5649
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21613              		.loc 7 89 7 is_stmt 0 view .LVU5650
 21614              	.LBE11681:
 21615              	.LBE11680:
 21616              	.LBB11682:
 21617              	.LBI11682:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21618              		.loc 5 186 7 is_stmt 1 view .LVU5651
 21619              	.LBB11683:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21620              		.loc 5 187 28 is_stmt 0 view .LVU5652
 21621 02ea 1968     		ldr	r1, [r3]
 21622              	.LVL1611:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21623              		.loc 5 187 28 view .LVU5653
 21624              	.LBE11683:
 21625              	.LBE11682:
 21626              	.LBB11684:
 21627              	.LBI11684:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21628              		.loc 5 186 7 is_stmt 1 view .LVU5654
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21629              		.loc 5 186 7 is_stmt 0 view .LVU5655
 21630              	.LBE11684:
 21631              	.LBB11685:
 21632              	.LBI11685:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 21633              		.loc 5 936 7 is_stmt 1 view .LVU5656
 21634              	.LBB11686:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21635              		.loc 5 937 16 is_stmt 0 view .LVU5657
 21636 02ec 5A68     		ldr	r2, [r3, #4]
 21637              	.LVL1612:
ARM GAS  /tmp/ccszdRNt.s 			page 739


 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21638              		.loc 5 937 16 view .LVU5658
 21639              	.LBE11686:
 21640              	.LBE11685:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21641              		.loc 5 451 9 view .LVU5659
 21642 02ee 8A18     		adds	r2, r1, r2
 21643              	.LVL1613:
 21644              	.LBB11687:
 21645              	.LBI11687:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 21646              		.loc 5 263 9 is_stmt 1 view .LVU5660
 21647              	.LBB11688:
 21648              	.LBB11689:
 21649              	.LBI11689:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 21650              		.loc 5 243 9 view .LVU5661
 21651              	.LBB11690:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21652              		.loc 5 247 11 is_stmt 0 view .LVU5662
 21653 02f0 0023     		movs	r3, #0
 21654              	.LVL1614:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21655              		.loc 5 247 11 view .LVU5663
 21656 02f2 02A8     		add	r0, sp, #8
 21657              	.LVL1615:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21658              		.loc 5 247 11 view .LVU5664
 21659 02f4 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 21660              	.LVL1616:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21661              		.loc 5 247 11 view .LVU5665
 21662              	.LBE11690:
 21663              	.LBE11689:
 21664              	.LBE11688:
 21665              	.LBE11687:
 21666              	.LBE11667:
 21667              	.LBE11666:
 21668              	.LBE11665:
 135:alohal/cli/cli.cpp ****         if (position != string::npos) {
 21669              		.loc 2 135 9 is_stmt 1 view .LVU5666
 21670              	.LBB11691:
 21671              	.LBI11691:
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 21672              		.loc 5 2635 7 view .LVU5667
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 21673              		.loc 5 2635 7 is_stmt 0 view .LVU5668
 21674              	.LBE11691:
 21675              	.LBE11662:
 21676              	.LBE11661:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 21677              		.loc 4 332 2 is_stmt 1 view .LVU5669
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 21678              		.loc 4 335 2 view .LVU5670
 21679              	.LBB11831:
 21680              	.LBB11830:
 21681              	.LBB11693:
ARM GAS  /tmp/ccszdRNt.s 			page 740


 21682              	.LBB11692:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 21683              		.loc 5 2639 64 is_stmt 0 view .LVU5671
 21684 02f8 0122     		movs	r2, #1
 21685 02fa 0123     		movs	r3, #1
 21686 02fc 5242     		rsbs	r2, r2, #0
 21687 02fe 2B49     		ldr	r1, .L486+32
 21688 0300 02A8     		add	r0, sp, #8
 21689              	.LVL1617:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 21690              		.loc 5 2639 64 view .LVU5672
 21691 0302 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
 21692              	.LVL1618:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 21693              		.loc 5 2639 64 view .LVU5673
 21694              	.LBE11692:
 21695              	.LBE11693:
 136:alohal/cli/cli.cpp ****             args[0] = path.substr(position + 1);
 21696              		.loc 2 136 9 is_stmt 1 view .LVU5674
 21697 0306 431C     		adds	r3, r0, #1
 21698 0308 0DD1     		bne	.L478
 21699              	.LVL1619:
 21700              	.L441:
 139:alohal/cli/cli.cpp ****     }
 21701              		.loc 2 139 9 view .LVU5675
 139:alohal/cli/cli.cpp ****     }
 21702              		.loc 2 139 16 is_stmt 0 view .LVU5676
 21703 030a E86C     		ldr	r0, [r5, #76]
 139:alohal/cli/cli.cpp ****     }
 21704              		.loc 2 139 27 view .LVU5677
 21705 030c 08AA     		add	r2, sp, #32
 21706 030e 02A9     		add	r1, sp, #8
 21707 0310 FFF7FEFF 		bl	_ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS
 21708              	.LVL1620:
 21709 0314 0700     		movs	r7, r0
 21710              	.LVL1621:
 21711              	.LBB11694:
 21712              	.LBI11694:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 21713              		.loc 5 657 7 is_stmt 1 view .LVU5678
 21714              	.LBB11695:
 21715              	.LBI11695:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21716              		.loc 5 229 7 view .LVU5679
 21717              	.LBB11696:
 21718              	.LBB11697:
 21719              	.LBI11697:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21720              		.loc 5 221 7 view .LVU5680
 21721              	.LBB11698:
 21722              	.LBI11698:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21723              		.loc 5 186 7 view .LVU5681
 21724              	.LBB11699:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21725              		.loc 5 187 28 is_stmt 0 view .LVU5682
 21726 0316 0298     		ldr	r0, [sp, #8]
ARM GAS  /tmp/ccszdRNt.s 			page 741


 21727              	.LVL1622:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21728              		.loc 5 187 28 view .LVU5683
 21729              	.LBE11699:
 21730              	.LBE11698:
 21731              	.LBB11700:
 21732              	.LBI11700:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21733              		.loc 5 200 7 is_stmt 1 view .LVU5684
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21734              		.loc 5 200 7 is_stmt 0 view .LVU5685
 21735              	.LBE11700:
 21736              	.LBE11697:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 21737              		.loc 5 231 2 view .LVU5686
 21738 0318 04AB     		add	r3, sp, #16
 21739 031a 9842     		cmp	r0, r3
 21740 031c 00D1     		bne	.LCB25409
 21741 031e A5E0     		b	.L423	@long jump
 21742              	.LCB25409:
 21743              	.LVL1623:
 21744              	.LBB11701:
 21745              	.LBI11701:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 21746              		.loc 5 236 7 is_stmt 1 view .LVU5687
 21747              	.LBB11702:
 21748              	.LBB11703:
 21749              	.LBI11703:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 21750              		.loc 10 469 7 view .LVU5688
 21751              	.LBB11704:
 21752              	.LBI11704:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 21753              		.loc 7 119 7 view .LVU5689
 21754              	.LBB11705:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21755              		.loc 7 128 19 is_stmt 0 view .LVU5690
 21756 0320 FFF7FEFF 		bl	_ZdlPv
 21757              	.LVL1624:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 21758              		.loc 7 128 19 view .LVU5691
 21759              	.LBE11705:
 21760              	.LBE11704:
 21761              	.LBE11703:
 21762              	.LBE11702:
 21763              	.LBE11701:
 21764              	.LBE11696:
 21765              	.LBE11695:
 21766              	.LBB11709:
 21767              	.LBI11709:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21768              		.loc 5 150 14 is_stmt 1 view .LVU5692
 21769              	.LBB11710:
 21770              	.LBI11710:
 21771              		.loc 6 153 7 view .LVU5693
 21772              	.LBB11711:
 21773              	.LBI11711:
ARM GAS  /tmp/ccszdRNt.s 			page 742


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21774              		.loc 7 89 7 view .LVU5694
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21775              		.loc 7 89 7 is_stmt 0 view .LVU5695
 21776              	.LBE11711:
 21777              	.LBE11710:
 21778              	.LBE11709:
 21779              	.LBB11712:
 21780              	.LBB11708:
 21781              	.LBB11707:
 21782              	.LBB11706:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21783              		.loc 5 237 79 view .LVU5696
 21784 0324 A2E0     		b	.L423
 21785              	.LVL1625:
 21786              	.L478:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21787              		.loc 5 237 79 view .LVU5697
 21788              	.LBE11706:
 21789              	.LBE11707:
 21790              	.LBE11708:
 21791              	.LBE11712:
 21792              	.LBE11694:
 137:alohal/cli/cli.cpp ****         }
 21793              		.loc 2 137 13 is_stmt 1 view .LVU5698
 137:alohal/cli/cli.cpp ****         }
 21794              		.loc 2 137 34 is_stmt 0 view .LVU5699
 21795 0326 0130     		adds	r0, r0, #1
 21796              	.LVL1626:
 21797              	.LBB11713:
 21798              	.LBI11713:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 21799              		.loc 5 2834 7 is_stmt 1 view .LVU5700
 21800              	.LBB11714:
 21801              	.LBB11715:
 21802              	.LBI11715:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21803              		.loc 5 310 7 view .LVU5701
 21804              	.LBB11716:
 21805              	.LBB11717:
 21806              	.LBI11717:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 21807              		.loc 5 930 7 view .LVU5702
 21808              	.LBB11718:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21809              		.loc 5 931 16 is_stmt 0 view .LVU5703
 21810 0328 039B     		ldr	r3, [sp, #12]
 21811              	.LVL1627:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21812              		.loc 5 931 16 view .LVU5704
 21813              	.LBE11718:
 21814              	.LBE11717:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 21815              		.loc 5 312 2 view .LVU5705
 21816 032a 9842     		cmp	r0, r3
 21817 032c 40D8     		bhi	.L479
 21818              	.LVL1628:
ARM GAS  /tmp/ccszdRNt.s 			page 743


 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 21819              		.loc 5 312 2 view .LVU5706
 21820              	.LBE11716:
 21821              	.LBE11715:
 21822              	.LBB11720:
 21823              	.LBI11720:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 21824              		.loc 5 476 7 is_stmt 1 view .LVU5707
 21825              	.LBB11721:
 21826              	.LBB11722:
 21827              	.LBI11722:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21828              		.loc 5 190 7 view .LVU5708
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21829              		.loc 5 190 7 is_stmt 0 view .LVU5709
 21830              	.LBE11722:
 21831              	.LBB11723:
 21832              	.LBI11723:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 21833              		.loc 6 138 7 is_stmt 1 view .LVU5710
 21834              	.LBB11724:
 21835              	.LBI11724:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21836              		.loc 7 80 7 view .LVU5711
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21837              		.loc 7 80 7 is_stmt 0 view .LVU5712
 21838              	.LBE11724:
 21839              	.LBE11723:
 21840              	.LBB11725:
 21841              	.LBI11725:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 21842              		.loc 5 159 2 is_stmt 1 view .LVU5713
 21843              	.LBB11726:
 21844              	.LBB11727:
 21845              	.LBB11728:
 21846              	.LBI11728:
 21847              		.loc 8 99 5 view .LVU5714
 21848              		.loc 8 99 5 is_stmt 0 view .LVU5715
 21849              	.LBE11728:
 21850              	.LBB11729:
 21851              	.LBI11729:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 21852              		.loc 6 141 7 is_stmt 1 view .LVU5716
 21853              	.LBB11730:
 21854              	.LBI11730:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21855              		.loc 7 83 7 view .LVU5717
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21856              		.loc 7 83 7 is_stmt 0 view .LVU5718
 21857              	.LBE11730:
 21858              	.LBE11729:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21859              		.loc 5 160 46 view .LVU5719
 21860 032e 34AB     		add	r3, sp, #208
 21861              	.LVL1629:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21862              		.loc 5 160 46 view .LVU5720
ARM GAS  /tmp/ccszdRNt.s 			page 744


 21863 0330 3293     		str	r3, [sp, #200]
 21864              	.LVL1630:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 21865              		.loc 5 160 46 view .LVU5721
 21866              	.LBE11727:
 21867              	.LBE11726:
 21868              	.LBE11725:
 21869              	.LBB11731:
 21870              	.LBI11731:
 21871              		.loc 6 153 7 is_stmt 1 view .LVU5722
 21872              	.LBB11732:
 21873              	.LBI11732:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21874              		.loc 7 89 7 view .LVU5723
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 21875              		.loc 7 89 7 is_stmt 0 view .LVU5724
 21876              	.LBE11732:
 21877              	.LBE11731:
 21878              	.LBB11733:
 21879              	.LBB11734:
 21880              	.LBI11734:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21881              		.loc 5 186 7 is_stmt 1 view .LVU5725
 21882              	.LBB11735:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21883              		.loc 5 187 28 is_stmt 0 view .LVU5726
 21884 0332 0299     		ldr	r1, [sp, #8]
 21885              	.LVL1631:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21886              		.loc 5 187 28 view .LVU5727
 21887              	.LBE11735:
 21888              	.LBE11734:
 21889              	.LBB11736:
 21890              	.LBI11736:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21891              		.loc 5 310 7 is_stmt 1 view .LVU5728
 21892              	.LBB11737:
 21893              	.LBB11738:
 21894              	.LBI11738:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 21895              		.loc 5 930 7 view .LVU5729
 21896              	.LBB11739:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21897              		.loc 5 931 16 is_stmt 0 view .LVU5730
 21898 0334 039B     		ldr	r3, [sp, #12]
 21899              	.LVL1632:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21900              		.loc 5 931 16 view .LVU5731
 21901              	.LBE11739:
 21902              	.LBE11738:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 21903              		.loc 5 312 2 view .LVU5732
 21904 0336 9842     		cmp	r0, r3
 21905 0338 3FD8     		bhi	.L480
 21906              	.LVL1633:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 21907              		.loc 5 312 2 view .LVU5733
ARM GAS  /tmp/ccszdRNt.s 			page 745


 21908              	.LBE11737:
 21909              	.LBE11736:
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 21910              		.loc 5 480 16 view .LVU5734
 21911 033a 0918     		adds	r1, r1, r0
 21912              	.LVL1634:
 21913              	.LBB11741:
 21914              	.LBI11741:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21915              		.loc 5 329 7 is_stmt 1 view .LVU5735
 21916              	.LBB11742:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 21917              		.loc 5 331 47 is_stmt 0 view .LVU5736
 21918 033c 1A1A     		subs	r2, r3, r0
 21919              	.LVL1635:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 21920              		.loc 5 331 47 view .LVU5737
 21921              	.LBE11742:
 21922              	.LBE11741:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 21923              		.loc 5 482 2 view .LVU5738
 21924 033e 8A18     		adds	r2, r1, r2
 21925              	.LVL1636:
 21926              	.LBB11743:
 21927              	.LBI11743:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 21928              		.loc 5 263 9 is_stmt 1 view .LVU5739
 21929              	.LBB11744:
 21930              	.LBB11745:
 21931              	.LBI11745:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 21932              		.loc 5 243 9 view .LVU5740
 21933              	.LBB11746:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21934              		.loc 5 247 11 is_stmt 0 view .LVU5741
 21935 0340 0023     		movs	r3, #0
 21936 0342 32A8     		add	r0, sp, #200
 21937              	.LVL1637:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21938              		.loc 5 247 11 view .LVU5742
 21939 0344 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 21940              	.LVL1638:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 21941              		.loc 5 247 11 view .LVU5743
 21942              	.LBE11746:
 21943              	.LBE11745:
 21944              	.LBE11744:
 21945              	.LBE11743:
 21946              	.LBE11733:
 21947              	.LBE11721:
 21948              	.LBE11720:
 21949              	.LBE11714:
 21950              	.LBE11713:
 21951              	.LBB11753:
 21952              	.LBI11753:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 21953              		.loc 13 1040 7 is_stmt 1 view .LVU5744
ARM GAS  /tmp/ccszdRNt.s 			page 746


 21954              	.LBB11754:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21955              		.loc 13 1043 25 is_stmt 0 view .LVU5745
 21956 0348 089C     		ldr	r4, [sp, #32]
 21957              	.LVL1639:
1043:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 21958              		.loc 13 1043 25 view .LVU5746
 21959              	.LBE11754:
 21960              	.LBE11753:
 21961              	.LBB11755:
 21962              	.LBI11755:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 21963              		.loc 5 732 7 is_stmt 1 view .LVU5747
 21964              	.LBB11756:
 21965              	.LBI11756:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21966              		.loc 5 221 7 view .LVU5748
 21967              	.LBB11757:
 21968              	.LBI11757:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21969              		.loc 5 186 7 view .LVU5749
 21970              	.LBB11758:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21971              		.loc 5 187 28 is_stmt 0 view .LVU5750
 21972 034a 2068     		ldr	r0, [r4]
 21973              	.LVL1640:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21974              		.loc 5 187 28 view .LVU5751
 21975              	.LBE11758:
 21976              	.LBE11757:
 21977              	.LBB11759:
 21978              	.LBI11759:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 21979              		.loc 5 200 7 is_stmt 1 view .LVU5752
 21980              	.LBB11760:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 21981              		.loc 5 203 57 is_stmt 0 view .LVU5753
 21982 034c 2200     		movs	r2, r4
 21983 034e 0832     		adds	r2, r2, #8
 21984              	.LVL1641:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 21985              		.loc 5 203 57 view .LVU5754
 21986              	.LBE11760:
 21987              	.LBE11759:
 21988              	.LBE11756:
 21989              	.LBB11761:
 21990              	.LBB11762:
 21991              	.LBI11762:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 21992              		.loc 5 221 7 is_stmt 1 view .LVU5755
 21993              	.LBB11763:
 21994              	.LBI11763:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 21995              		.loc 5 186 7 view .LVU5756
 21996              	.LBB11764:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 21997              		.loc 5 187 28 is_stmt 0 view .LVU5757
ARM GAS  /tmp/ccszdRNt.s 			page 747


 21998 0350 3299     		ldr	r1, [sp, #200]
 21999              	.LVL1642:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22000              		.loc 5 187 28 view .LVU5758
 22001              	.LBE11764:
 22002              	.LBE11763:
 22003              	.LBB11765:
 22004              	.LBI11765:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22005              		.loc 5 200 7 is_stmt 1 view .LVU5759
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22006              		.loc 5 200 7 is_stmt 0 view .LVU5760
 22007              	.LBE11765:
 22008              	.LBE11762:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 22009              		.loc 5 747 2 view .LVU5761
 22010 0352 34AB     		add	r3, sp, #208
 22011 0354 9942     		cmp	r1, r3
 22012 0356 35D0     		beq	.L481
 22013              	.LVL1643:
 22014              	.LBB11766:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 22015              		.loc 5 761 6 view .LVU5762
 22016 0358 9042     		cmp	r0, r2
 22017 035a 44D0     		beq	.L467
 22018              	.LVL1644:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 22019              		.loc 5 767 7 view .LVU5763
 22020 035c A368     		ldr	r3, [r4, #8]
 22021 035e 9946     		mov	r9, r3
 22022              	.LVL1645:
 22023              	.L448:
 22024              	.LBB11767:
 22025              	.LBI11767:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 22026              		.loc 5 178 7 is_stmt 1 view .LVU5764
 22027              	.LBB11768:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22028              		.loc 5 179 9 is_stmt 0 view .LVU5765
 22029 0360 2160     		str	r1, [r4]
 22030              	.LVL1646:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22031              		.loc 5 179 9 view .LVU5766
 22032              	.LBE11768:
 22033              	.LBE11767:
 22034              	.LBB11769:
 22035              	.LBI11769:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22036              		.loc 5 936 7 is_stmt 1 view .LVU5767
 22037              	.LBB11770:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22038              		.loc 5 937 16 is_stmt 0 view .LVU5768
 22039 0362 339B     		ldr	r3, [sp, #204]
 22040 0364 0193     		str	r3, [sp, #4]
 22041              	.LVL1647:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22042              		.loc 5 937 16 view .LVU5769
ARM GAS  /tmp/ccszdRNt.s 			page 748


 22043              	.LBE11770:
 22044              	.LBE11769:
 22045              	.LBB11771:
 22046              	.LBI11771:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 22047              		.loc 5 182 7 is_stmt 1 view .LVU5770
 22048              	.LBB11772:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22049              		.loc 5 183 9 is_stmt 0 view .LVU5771
 22050 0366 6360     		str	r3, [r4, #4]
 22051              	.LVL1648:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22052              		.loc 5 183 9 view .LVU5772
 22053              	.LBE11772:
 22054              	.LBE11771:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 22055              		.loc 5 775 6 view .LVU5773
 22056 0368 349B     		ldr	r3, [sp, #208]
 22057 036a A360     		str	r3, [r4, #8]
 22058              	.LVL1649:
 22059              	.LBB11773:
 22060              	.LBI11773:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 22061              		.loc 5 210 7 is_stmt 1 view .LVU5774
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 22062              		.loc 5 210 7 is_stmt 0 view .LVU5775
 22063              	.LBE11773:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 22064              		.loc 5 776 6 view .LVU5776
 22065 036c 0028     		cmp	r0, #0
 22066 036e 3CD0     		beq	.L449
 22067              	.LVL1650:
 22068              	.LBB11774:
 22069              	.LBI11774:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 22070              		.loc 5 178 7 is_stmt 1 view .LVU5777
 22071              	.LBB11775:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22072              		.loc 5 179 9 is_stmt 0 view .LVU5778
 22073 0370 3290     		str	r0, [sp, #200]
 22074              	.LVL1651:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22075              		.loc 5 179 9 view .LVU5779
 22076              	.LBE11775:
 22077              	.LBE11774:
 22078              	.LBB11776:
 22079              	.LBI11776:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 22080              		.loc 5 210 7 is_stmt 1 view .LVU5780
 22081              	.LBB11777:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22082              		.loc 5 211 9 is_stmt 0 view .LVU5781
 22083 0372 4B46     		mov	r3, r9
 22084 0374 3493     		str	r3, [sp, #208]
 22085              	.LVL1652:
 22086              	.L447:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 749


 22087              		.loc 5 211 9 view .LVU5782
 22088              	.LBE11777:
 22089              	.LBE11776:
 22090              	.LBE11766:
 22091              	.LBE11761:
 22092              	.LBB11801:
 22093              	.LBI11801:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 22094              		.loc 5 1023 7 is_stmt 1 view .LVU5783
 22095              	.LBB11802:
 22096              	.LBI11802:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22097              		.loc 5 214 7 view .LVU5784
 22098              	.LBB11803:
 22099              	.LBI11803:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 22100              		.loc 5 182 7 view .LVU5785
 22101              	.LBB11804:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22102              		.loc 5 183 9 is_stmt 0 view .LVU5786
 22103 0376 0023     		movs	r3, #0
 22104 0378 3393     		str	r3, [sp, #204]
 22105              	.LVL1653:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22106              		.loc 5 183 9 view .LVU5787
 22107              	.LBE11804:
 22108              	.LBE11803:
 22109              	.LBB11805:
 22110              	.LBI11805:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22111              		.loc 5 186 7 is_stmt 1 view .LVU5788
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22112              		.loc 5 186 7 is_stmt 0 view .LVU5789
 22113              	.LBE11805:
 22114              	.LBB11806:
 22115              	.LBI11806:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 22116              		.loc 4 299 7 is_stmt 1 view .LVU5790
 22117              	.LBB11807:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22118              		.loc 4 300 9 view .LVU5791
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22119              		.loc 4 300 14 is_stmt 0 view .LVU5792
 22120 037a 329A     		ldr	r2, [sp, #200]
 22121 037c 1370     		strb	r3, [r2]
 22122              	.LVL1654:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22123              		.loc 4 300 14 view .LVU5793
 22124              	.LBE11807:
 22125              	.LBE11806:
 22126              	.LBE11802:
 22127              	.LBE11801:
 22128              	.LBE11755:
 22129              	.LBB11809:
 22130              	.LBI11809:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22131              		.loc 5 657 7 is_stmt 1 view .LVU5794
ARM GAS  /tmp/ccszdRNt.s 			page 750


 22132              	.LBB11810:
 22133              	.LBI11810:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22134              		.loc 5 229 7 view .LVU5795
 22135              	.LBB11811:
 22136              	.LBB11812:
 22137              	.LBI11812:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22138              		.loc 5 221 7 view .LVU5796
 22139              	.LBB11813:
 22140              	.LBI11813:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22141              		.loc 5 186 7 view .LVU5797
 22142              	.LBB11814:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22143              		.loc 5 187 28 is_stmt 0 view .LVU5798
 22144 037e 3298     		ldr	r0, [sp, #200]
 22145              	.LVL1655:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22146              		.loc 5 187 28 view .LVU5799
 22147              	.LBE11814:
 22148              	.LBE11813:
 22149              	.LBB11815:
 22150              	.LBI11815:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22151              		.loc 5 200 7 is_stmt 1 view .LVU5800
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22152              		.loc 5 200 7 is_stmt 0 view .LVU5801
 22153              	.LBE11815:
 22154              	.LBE11812:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22155              		.loc 5 231 2 view .LVU5802
 22156 0380 34AB     		add	r3, sp, #208
 22157 0382 9842     		cmp	r0, r3
 22158 0384 C1D0     		beq	.L441
 22159              	.LVL1656:
 22160              	.LBB11816:
 22161              	.LBI11816:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22162              		.loc 5 236 7 is_stmt 1 view .LVU5803
 22163              	.LBB11817:
 22164              	.LBB11818:
 22165              	.LBI11818:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22166              		.loc 10 469 7 view .LVU5804
 22167              	.LBB11819:
 22168              	.LBI11819:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22169              		.loc 7 119 7 view .LVU5805
 22170              	.LBB11820:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22171              		.loc 7 128 19 is_stmt 0 view .LVU5806
 22172 0386 FFF7FEFF 		bl	_ZdlPv
 22173              	.LVL1657:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22174              		.loc 7 128 19 view .LVU5807
 22175              	.LBE11820:
ARM GAS  /tmp/ccszdRNt.s 			page 751


 22176              	.LBE11819:
 22177              	.LBE11818:
 22178              	.LBE11817:
 22179              	.LBE11816:
 22180              	.LBE11811:
 22181              	.LBE11810:
 22182              	.LBB11824:
 22183              	.LBI11824:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22184              		.loc 5 150 14 is_stmt 1 view .LVU5808
 22185              	.LBB11825:
 22186              	.LBI11825:
 22187              		.loc 6 153 7 view .LVU5809
 22188              	.LBB11826:
 22189              	.LBI11826:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22190              		.loc 7 89 7 view .LVU5810
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22191              		.loc 7 89 7 is_stmt 0 view .LVU5811
 22192              	.LBE11826:
 22193              	.LBE11825:
 22194              	.LBE11824:
 22195              	.LBB11827:
 22196              	.LBB11823:
 22197              	.LBB11822:
 22198              	.LBB11821:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22199              		.loc 5 237 79 view .LVU5812
 22200 038a BEE7     		b	.L441
 22201              	.L487:
 22202              		.align	2
 22203              	.L486:
 22204 038c 34000000 		.word	.LC75
 22205 0390 00000000 		.word	.LC70
 22206 0394 14000000 		.word	.LC23
 22207 0398 18000000 		.word	.LC73
 22208 039c 02000000 		.word	.LC9+2
 22209 03a0 1C000000 		.word	.LC50
 22210 03a4 03000000 		.word	.LC80+3
 22211 03a8 55555505 		.word	89478485
 22212 03ac 3C000000 		.word	.LC83
 22213              	.LVL1658:
 22214              	.L479:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22215              		.loc 5 237 79 view .LVU5813
 22216              	.LBE11821:
 22217              	.LBE11822:
 22218              	.LBE11823:
 22219              	.LBE11827:
 22220              	.LBE11809:
 22221              	.LBB11828:
 22222              	.LBB11752:
 22223              	.LBB11750:
 22224              	.LBB11719:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 22225              		.loc 5 313 28 view .LVU5814
 22226 03b0 0200     		movs	r2, r0
ARM GAS  /tmp/ccszdRNt.s 			page 752


 22227 03b2 3E49     		ldr	r1, .L488
 22228 03b4 3E48     		ldr	r0, .L488+4
 22229              	.LVL1659:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 22230              		.loc 5 313 28 view .LVU5815
 22231 03b6 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 22232              	.LVL1660:
 22233              	.L480:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 22234              		.loc 5 313 28 view .LVU5816
 22235              	.LBE11719:
 22236              	.LBE11750:
 22237              	.LBB11751:
 22238              	.LBB11749:
 22239              	.LBB11748:
 22240              	.LBB11747:
 22241              	.LBB11740:
 22242 03ba 0200     		movs	r2, r0
 22243 03bc 3D49     		ldr	r1, .L488+8
 22244 03be 3C48     		ldr	r0, .L488+4
 22245              	.LVL1661:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 22246              		.loc 5 313 28 view .LVU5817
 22247 03c0 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 22248              	.LVL1662:
 22249              	.L481:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 22250              		.loc 5 313 28 view .LVU5818
 22251              	.LBE11740:
 22252              	.LBE11747:
 22253              	.LBE11748:
 22254              	.LBE11749:
 22255              	.LBE11751:
 22256              	.LBE11752:
 22257              	.LBE11828:
 22258              	.LBB11829:
 22259              	.LBB11808:
 22260              	.LBB11780:
 22261              	.LBI11780:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22262              		.loc 5 930 7 is_stmt 1 view .LVU5819
 22263              	.LBB11781:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22264              		.loc 5 931 16 is_stmt 0 view .LVU5820
 22265 03c4 339A     		ldr	r2, [sp, #204]
 22266              	.LVL1663:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22267              		.loc 5 931 16 view .LVU5821
 22268              	.LBE11781:
 22269              	.LBE11780:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 22270              		.loc 5 750 6 view .LVU5822
 22271 03c6 002A     		cmp	r2, #0
 22272 03c8 03D0     		beq	.L445
 22273              	.LVL1664:
 22274              	.LBB11782:
 22275              	.LBI11782:
ARM GAS  /tmp/ccszdRNt.s 			page 753


 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22276              		.loc 5 346 7 is_stmt 1 view .LVU5823
 22277              	.LBB11783:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 22278              		.loc 5 348 2 is_stmt 0 view .LVU5824
 22279 03ca 012A     		cmp	r2, #1
 22280 03cc 08D0     		beq	.L482
 22281              	.LVL1665:
 22282              	.LBB11784:
 22283              	.LBI11784:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 22284              		.loc 4 361 7 is_stmt 1 view .LVU5825
 22285              	.LBB11785:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 22286              		.loc 4 363 2 view .LVU5826
 22287              		.loc 4 365 2 view .LVU5827
 22288              		.loc 4 365 49 is_stmt 0 view .LVU5828
 22289 03ce FFF7FEFF 		bl	memcpy
 22290              	.LVL1666:
 22291              	.L445:
 22292              		.loc 4 365 49 view .LVU5829
 22293              	.LBE11785:
 22294              	.LBE11784:
 22295              	.LBE11783:
 22296              	.LBE11782:
 22297              	.LBB11789:
 22298              	.LBI11789:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22299              		.loc 5 930 7 is_stmt 1 view .LVU5830
 22300              	.LBB11790:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22301              		.loc 5 931 16 is_stmt 0 view .LVU5831
 22302 03d2 339A     		ldr	r2, [sp, #204]
 22303              	.LVL1667:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22304              		.loc 5 931 16 view .LVU5832
 22305              	.LBE11790:
 22306              	.LBE11789:
 22307              	.LBB11791:
 22308              	.LBI11791:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22309              		.loc 5 214 7 is_stmt 1 view .LVU5833
 22310              	.LBB11792:
 22311              	.LBB11793:
 22312              	.LBI11793:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 22313              		.loc 5 182 7 view .LVU5834
 22314              	.LBB11794:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22315              		.loc 5 183 9 is_stmt 0 view .LVU5835
 22316 03d4 6260     		str	r2, [r4, #4]
 22317              	.LVL1668:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22318              		.loc 5 183 9 view .LVU5836
 22319              	.LBE11794:
 22320              	.LBE11793:
 22321              	.LBB11795:
ARM GAS  /tmp/ccszdRNt.s 			page 754


 22322              	.LBI11795:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22323              		.loc 5 186 7 is_stmt 1 view .LVU5837
 22324              	.LBB11796:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22325              		.loc 5 187 28 is_stmt 0 view .LVU5838
 22326 03d6 2368     		ldr	r3, [r4]
 22327              	.LVL1669:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22328              		.loc 5 187 28 view .LVU5839
 22329              	.LBE11796:
 22330              	.LBE11795:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 22331              		.loc 5 217 31 view .LVU5840
 22332 03d8 9B18     		adds	r3, r3, r2
 22333              	.LVL1670:
 22334              	.LBB11797:
 22335              	.LBI11797:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 22336              		.loc 4 299 7 is_stmt 1 view .LVU5841
 22337              	.LBB11798:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22338              		.loc 4 300 9 view .LVU5842
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22339              		.loc 4 300 14 is_stmt 0 view .LVU5843
 22340 03da 0022     		movs	r2, #0
 22341              	.LVL1671:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22342              		.loc 4 300 14 view .LVU5844
 22343 03dc 1A70     		strb	r2, [r3]
 22344              	.LVL1672:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22345              		.loc 4 300 14 view .LVU5845
 22346              	.LBE11798:
 22347              	.LBE11797:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22348              		.loc 5 218 7 view .LVU5846
 22349 03de CAE7     		b	.L447
 22350              	.LVL1673:
 22351              	.L482:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22352              		.loc 5 218 7 view .LVU5847
 22353              	.LBE11792:
 22354              	.LBE11791:
 22355              	.LBB11799:
 22356              	.LBB11788:
 22357              	.LBB11786:
 22358              	.LBI11786:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 22359              		.loc 4 299 7 is_stmt 1 view .LVU5848
 22360              	.LBB11787:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22361              		.loc 4 300 9 view .LVU5849
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22362              		.loc 4 300 16 is_stmt 0 view .LVU5850
 22363 03e0 0B78     		ldrb	r3, [r1]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 755


 22364              		.loc 4 300 14 view .LVU5851
 22365 03e2 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22366              		.loc 4 300 22 view .LVU5852
 22367 03e4 F5E7     		b	.L445
 22368              	.LVL1674:
 22369              	.L467:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22370              		.loc 4 300 22 view .LVU5853
 22371              	.LBE11787:
 22372              	.LBE11786:
 22373              	.LBE11788:
 22374              	.LBE11799:
 22375              	.LBB11800:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 22376              		.loc 5 759 14 view .LVU5854
 22377 03e6 0020     		movs	r0, #0
 22378 03e8 BAE7     		b	.L448
 22379              	.LVL1675:
 22380              	.L449:
 22381              	.LBB11778:
 22382              	.LBI11778:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 22383              		.loc 5 178 7 is_stmt 1 view .LVU5855
 22384              	.LBB11779:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22385              		.loc 5 179 9 is_stmt 0 view .LVU5856
 22386 03ea 34AB     		add	r3, sp, #208
 22387              	.LVL1676:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22388              		.loc 5 179 9 view .LVU5857
 22389 03ec 3293     		str	r3, [sp, #200]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22390              		.loc 5 179 33 view .LVU5858
 22391 03ee C2E7     		b	.L447
 22392              	.LVL1677:
 22393              	.L440:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22394              		.loc 5 179 33 view .LVU5859
 22395              	.LBE11779:
 22396              	.LBE11778:
 22397              	.LBE11800:
 22398              	.LBE11808:
 22399              	.LBE11829:
 22400              	.LBE11830:
 22401              	.LBE11831:
 142:alohal/cli/cli.cpp ****     return -1;
 22402              		.loc 2 142 5 is_stmt 1 view .LVU5860
 22403              	.LBB11832:
 22404              	.LBI11832:
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 22405              		.loc 13 1040 7 view .LVU5861
1040:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 22406              		.loc 13 1040 7 is_stmt 0 view .LVU5862
 22407              	.LBE11832:
 142:alohal/cli/cli.cpp ****     return -1;
 22408              		.loc 2 142 24 view .LVU5863
ARM GAS  /tmp/ccszdRNt.s 			page 756


 22409 03f0 089A     		ldr	r2, [sp, #32]
 22410 03f2 3149     		ldr	r1, .L488+12
 22411 03f4 3EA8     		add	r0, sp, #248
 22412 03f6 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
 22413              	.LVL1678:
 22414              	.LBB11833:
 22415              	.LBI11833:
6121:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 22416              		.loc 5 6121 5 is_stmt 1 view .LVU5864
 22417              	.LBB11834:
 22418              	.LBI11834:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22419              		.loc 5 1263 7 view .LVU5865
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22420              		.loc 5 1263 7 is_stmt 0 view .LVU5866
 22421              	.LBE11834:
 22422              	.LBE11833:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 22423              		.loc 4 332 2 is_stmt 1 view .LVU5867
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 22424              		.loc 4 335 2 view .LVU5868
 22425              	.LBB11883:
 22426              	.LBB11843:
 22427              	.LBB11835:
 22428              	.LBB11836:
 22429              	.LBI11836:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22430              		.loc 5 320 7 view .LVU5869
 22431              	.LBB11837:
 22432              	.LBB11838:
 22433              	.LBI11838:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22434              		.loc 5 930 7 view .LVU5870
 22435              	.LBB11839:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22436              		.loc 5 931 16 is_stmt 0 view .LVU5871
 22437 03fa 3F9A     		ldr	r2, [sp, #252]
 22438              	.LVL1679:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22439              		.loc 5 931 16 view .LVU5872
 22440              	.LBE11839:
 22441              	.LBE11838:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 22442              		.loc 5 322 2 view .LVU5873
 22443 03fc 2F4B     		ldr	r3, .L488+16
 22444 03fe 9B1A     		subs	r3, r3, r2
 22445 0400 102B     		cmp	r3, #16
 22446 0402 28D9     		bls	.L483
 22447              	.LVL1680:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 22448              		.loc 5 322 2 view .LVU5874
 22449              	.LBE11837:
 22450              	.LBE11836:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 22451              		.loc 5 1268 27 view .LVU5875
 22452 0404 1122     		movs	r2, #17
 22453 0406 2E49     		ldr	r1, .L488+20
ARM GAS  /tmp/ccszdRNt.s 			page 757


 22454 0408 3EA8     		add	r0, sp, #248
 22455              	.LVL1681:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 22456              		.loc 5 1268 27 view .LVU5876
 22457 040a FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 22458              	.LVL1682:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 22459              		.loc 5 1268 27 view .LVU5877
 22460 040e 0400     		movs	r4, r0
 22461              	.LVL1683:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 22462              		.loc 5 1268 27 view .LVU5878
 22463              	.LBE11835:
 22464              	.LBE11843:
 22465              	.LBB11844:
 22466              	.LBI11844:
 552:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 22467              		.loc 5 552 7 is_stmt 1 view .LVU5879
 22468              	.LBB11845:
 22469              	.LBB11846:
 22470              	.LBB11847:
 22471              	.LBI11847:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22472              		.loc 5 190 7 view .LVU5880
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22473              		.loc 5 190 7 is_stmt 0 view .LVU5881
 22474              	.LBE11847:
 22475              	.LBB11848:
 22476              	.LBI11848:
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 22477              		.loc 5 286 7 is_stmt 1 view .LVU5882
 286:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 22478              		.loc 5 286 7 is_stmt 0 view .LVU5883
 22479              	.LBE11848:
 22480              	.LBB11849:
 22481              	.LBI11849:
 22482              		.loc 8 99 5 is_stmt 1 view .LVU5884
 22483              		.loc 8 99 5 is_stmt 0 view .LVU5885
 22484              	.LBE11849:
 22485              	.LBB11850:
 22486              	.LBI11850:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 22487              		.loc 5 159 2 is_stmt 1 view .LVU5886
 22488              	.LBB11851:
 22489              	.LBB11852:
 22490              	.LBB11853:
 22491              	.LBI11853:
 22492              		.loc 8 99 5 view .LVU5887
 22493              		.loc 8 99 5 is_stmt 0 view .LVU5888
 22494              	.LBE11853:
 22495              	.LBB11854:
 22496              	.LBI11854:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 22497              		.loc 6 141 7 is_stmt 1 view .LVU5889
 22498              	.LBB11855:
 22499              	.LBI11855:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 758


 22500              		.loc 7 83 7 view .LVU5890
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22501              		.loc 7 83 7 is_stmt 0 view .LVU5891
 22502              	.LBE11855:
 22503              	.LBE11854:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22504              		.loc 5 160 46 view .LVU5892
 22505 0410 3AAB     		add	r3, sp, #232
 22506              	.LVL1684:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22507              		.loc 5 160 46 view .LVU5893
 22508 0412 3893     		str	r3, [sp, #224]
 22509              	.LVL1685:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 22510              		.loc 5 160 46 view .LVU5894
 22511              	.LBE11852:
 22512              	.LBE11851:
 22513              	.LBE11850:
 22514              	.LBB11856:
 22515              	.LBI11856:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22516              		.loc 5 221 7 is_stmt 1 view .LVU5895
 22517              	.LBB11857:
 22518              	.LBI11857:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22519              		.loc 5 186 7 view .LVU5896
 22520              	.LBB11858:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22521              		.loc 5 187 28 is_stmt 0 view .LVU5897
 22522 0414 0368     		ldr	r3, [r0]
 22523              	.LVL1686:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22524              		.loc 5 187 28 view .LVU5898
 22525              	.LBE11858:
 22526              	.LBE11857:
 22527              	.LBB11859:
 22528              	.LBI11859:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22529              		.loc 5 200 7 is_stmt 1 view .LVU5899
 22530              	.LBB11860:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 22531              		.loc 5 203 57 is_stmt 0 view .LVU5900
 22532 0416 0600     		movs	r6, r0
 22533 0418 0836     		adds	r6, r6, #8
 22534              	.LVL1687:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 22535              		.loc 5 203 57 view .LVU5901
 22536              	.LBE11860:
 22537              	.LBE11859:
 22538              	.LBE11856:
 555:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 22539              		.loc 5 555 2 view .LVU5902
 22540 041a B342     		cmp	r3, r6
 22541 041c 1ED0     		beq	.L484
 22542              	.LVL1688:
 22543              	.LBB11861:
 22544              	.LBI11861:
ARM GAS  /tmp/ccszdRNt.s 			page 759


 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22545              		.loc 5 186 7 is_stmt 1 view .LVU5903
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22546              		.loc 5 186 7 is_stmt 0 view .LVU5904
 22547              	.LBE11861:
 22548              	.LBB11862:
 22549              	.LBI11862:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 22550              		.loc 5 178 7 is_stmt 1 view .LVU5905
 22551              	.LBB11863:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22552              		.loc 5 179 9 is_stmt 0 view .LVU5906
 22553 041e 3893     		str	r3, [sp, #224]
 22554              	.LVL1689:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22555              		.loc 5 179 9 view .LVU5907
 22556              	.LBE11863:
 22557              	.LBE11862:
 22558              	.LBB11864:
 22559              	.LBI11864:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 22560              		.loc 5 210 7 is_stmt 1 view .LVU5908
 22561              	.LBB11865:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22562              		.loc 5 211 9 is_stmt 0 view .LVU5909
 22563 0420 8368     		ldr	r3, [r0, #8]
 22564 0422 3A93     		str	r3, [sp, #232]
 22565              	.LVL1690:
 22566              	.L454:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22567              		.loc 5 211 9 view .LVU5910
 22568              	.LBE11865:
 22569              	.LBE11864:
 22570              	.LBB11866:
 22571              	.LBI11866:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22572              		.loc 5 936 7 is_stmt 1 view .LVU5911
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 22573              		.loc 5 936 7 is_stmt 0 view .LVU5912
 22574              	.LBE11866:
 22575              	.LBB11867:
 22576              	.LBI11867:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 22577              		.loc 5 182 7 is_stmt 1 view .LVU5913
 22578              	.LBB11868:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22579              		.loc 5 183 9 is_stmt 0 view .LVU5914
 22580 0424 6368     		ldr	r3, [r4, #4]
 22581 0426 3993     		str	r3, [sp, #228]
 22582              	.LVL1691:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22583              		.loc 5 183 9 view .LVU5915
 22584              	.LBE11868:
 22585              	.LBE11867:
 22586              	.LBB11869:
 22587              	.LBI11869:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 760


 22588              		.loc 5 190 7 is_stmt 1 view .LVU5916
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22589              		.loc 5 190 7 is_stmt 0 view .LVU5917
 22590              	.LBE11869:
 22591              	.LBB11870:
 22592              	.LBI11870:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 22593              		.loc 5 178 7 is_stmt 1 view .LVU5918
 22594              	.LBB11871:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22595              		.loc 5 179 9 is_stmt 0 view .LVU5919
 22596 0428 2660     		str	r6, [r4]
 22597              	.LVL1692:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22598              		.loc 5 179 9 view .LVU5920
 22599              	.LBE11871:
 22600              	.LBE11870:
 22601              	.LBB11872:
 22602              	.LBI11872:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22603              		.loc 5 214 7 is_stmt 1 view .LVU5921
 22604              	.LBB11873:
 22605              	.LBI11873:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 22606              		.loc 5 182 7 view .LVU5922
 22607              	.LBB11874:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22608              		.loc 5 183 9 is_stmt 0 view .LVU5923
 22609 042a 0023     		movs	r3, #0
 22610 042c 6360     		str	r3, [r4, #4]
 22611              	.LVL1693:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22612              		.loc 5 183 9 view .LVU5924
 22613              	.LBE11874:
 22614              	.LBE11873:
 22615              	.LBB11875:
 22616              	.LBI11875:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 22617              		.loc 4 299 7 is_stmt 1 view .LVU5925
 22618              	.LBB11876:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22619              		.loc 4 300 9 view .LVU5926
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22620              		.loc 4 300 14 is_stmt 0 view .LVU5927
 22621 042e 2372     		strb	r3, [r4, #8]
 22622              	.LVL1694:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 22623              		.loc 4 300 14 view .LVU5928
 22624              	.LBE11876:
 22625              	.LBE11875:
 22626              	.LBE11872:
 22627              	.LBE11846:
 22628              	.LBE11845:
 22629              	.LBE11844:
 22630              	.LBE11883:
 142:alohal/cli/cli.cpp ****     return -1;
 22631              		.loc 2 142 10 view .LVU5929
ARM GAS  /tmp/ccszdRNt.s 			page 761


 22632 0430 38A9     		add	r1, sp, #224
 22633 0432 2800     		movs	r0, r5
 22634 0434 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 22635              	.LVL1695:
 22636              	.LBB11884:
 22637              	.LBI11884:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22638              		.loc 5 657 7 is_stmt 1 view .LVU5930
 22639              	.LBB11885:
 22640              	.LBI11885:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22641              		.loc 5 229 7 view .LVU5931
 22642              	.LBB11886:
 22643              	.LBB11887:
 22644              	.LBI11887:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22645              		.loc 5 221 7 view .LVU5932
 22646              	.LBB11888:
 22647              	.LBI11888:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22648              		.loc 5 186 7 view .LVU5933
 22649              	.LBB11889:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22650              		.loc 5 187 28 is_stmt 0 view .LVU5934
 22651 0438 3898     		ldr	r0, [sp, #224]
 22652              	.LVL1696:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22653              		.loc 5 187 28 view .LVU5935
 22654              	.LBE11889:
 22655              	.LBE11888:
 22656              	.LBB11890:
 22657              	.LBI11890:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22658              		.loc 5 200 7 is_stmt 1 view .LVU5936
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22659              		.loc 5 200 7 is_stmt 0 view .LVU5937
 22660              	.LBE11890:
 22661              	.LBE11887:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22662              		.loc 5 231 2 view .LVU5938
 22663 043a 3AAB     		add	r3, sp, #232
 22664 043c 9842     		cmp	r0, r3
 22665 043e 01D0     		beq	.L455
 22666              	.LVL1697:
 22667              	.LBB11891:
 22668              	.LBI11891:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22669              		.loc 5 236 7 is_stmt 1 view .LVU5939
 22670              	.LBB11892:
 22671              	.LBB11893:
 22672              	.LBI11893:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22673              		.loc 10 469 7 view .LVU5940
 22674              	.LBB11894:
 22675              	.LBI11894:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22676              		.loc 7 119 7 view .LVU5941
ARM GAS  /tmp/ccszdRNt.s 			page 762


 22677              	.LBB11895:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22678              		.loc 7 128 19 is_stmt 0 view .LVU5942
 22679 0440 FFF7FEFF 		bl	_ZdlPv
 22680              	.LVL1698:
 22681              	.L455:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22682              		.loc 7 128 19 view .LVU5943
 22683              	.LBE11895:
 22684              	.LBE11894:
 22685              	.LBE11893:
 22686              	.LBE11892:
 22687              	.LBE11891:
 22688              	.LBE11886:
 22689              	.LBE11885:
 22690              	.LBB11896:
 22691              	.LBI11896:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22692              		.loc 5 150 14 is_stmt 1 view .LVU5944
 22693              	.LBB11897:
 22694              	.LBI11897:
 22695              		.loc 6 153 7 view .LVU5945
 22696              	.LBB11898:
 22697              	.LBI11898:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22698              		.loc 7 89 7 view .LVU5946
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22699              		.loc 7 89 7 is_stmt 0 view .LVU5947
 22700              	.LBE11898:
 22701              	.LBE11897:
 22702              	.LBE11896:
 22703              	.LBE11884:
 22704              	.LBB11899:
 22705              	.LBI11899:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22706              		.loc 5 657 7 is_stmt 1 view .LVU5948
 22707              	.LBB11900:
 22708              	.LBI11900:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22709              		.loc 5 229 7 view .LVU5949
 22710              	.LBB11901:
 22711              	.LBB11902:
 22712              	.LBI11902:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22713              		.loc 5 221 7 view .LVU5950
 22714              	.LBB11903:
 22715              	.LBI11903:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22716              		.loc 5 186 7 view .LVU5951
 22717              	.LBB11904:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22718              		.loc 5 187 28 is_stmt 0 view .LVU5952
 22719 0444 3E98     		ldr	r0, [sp, #248]
 22720              	.LVL1699:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22721              		.loc 5 187 28 view .LVU5953
 22722              	.LBE11904:
ARM GAS  /tmp/ccszdRNt.s 			page 763


 22723              	.LBE11903:
 22724              	.LBB11905:
 22725              	.LBI11905:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22726              		.loc 5 200 7 is_stmt 1 view .LVU5954
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22727              		.loc 5 200 7 is_stmt 0 view .LVU5955
 22728              	.LBE11905:
 22729              	.LBE11902:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22730              		.loc 5 231 2 view .LVU5956
 22731 0446 40AB     		add	r3, sp, #256
 22732 0448 9842     		cmp	r0, r3
 22733 044a 01D0     		beq	.L456
 22734              	.LVL1700:
 22735              	.LBB11906:
 22736              	.LBI11906:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22737              		.loc 5 236 7 is_stmt 1 view .LVU5957
 22738              	.LBB11907:
 22739              	.LBB11908:
 22740              	.LBI11908:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22741              		.loc 10 469 7 view .LVU5958
 22742              	.LBB11909:
 22743              	.LBI11909:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22744              		.loc 7 119 7 view .LVU5959
 22745              	.LBB11910:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22746              		.loc 7 128 19 is_stmt 0 view .LVU5960
 22747 044c FFF7FEFF 		bl	_ZdlPv
 22748              	.LVL1701:
 22749              	.L456:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22750              		.loc 7 128 19 view .LVU5961
 22751              	.LBE11910:
 22752              	.LBE11909:
 22753              	.LBE11908:
 22754              	.LBE11907:
 22755              	.LBE11906:
 22756              	.LBE11901:
 22757              	.LBE11900:
 22758              	.LBB11911:
 22759              	.LBI11911:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22760              		.loc 5 150 14 is_stmt 1 view .LVU5962
 22761              	.LBB11912:
 22762              	.LBI11912:
 22763              		.loc 6 153 7 view .LVU5963
 22764              	.LBB11913:
 22765              	.LBI11913:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22766              		.loc 7 89 7 view .LVU5964
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22767              		.loc 7 89 7 is_stmt 0 view .LVU5965
 22768              	.LBE11913:
ARM GAS  /tmp/ccszdRNt.s 			page 764


 22769              	.LBE11912:
 22770              	.LBE11911:
 22771              	.LBE11899:
 143:alohal/cli/cli.cpp **** } // CLI::Process_line
 22772              		.loc 2 143 5 is_stmt 1 view .LVU5966
 143:alohal/cli/cli.cpp **** } // CLI::Process_line
 22773              		.loc 2 143 13 is_stmt 0 view .LVU5967
 22774 0450 0127     		movs	r7, #1
 22775 0452 7F42     		rsbs	r7, r7, #0
 22776 0454 0AE0     		b	.L423
 22777              	.LVL1702:
 22778              	.L483:
 22779              	.LBB11914:
 22780              	.LBB11881:
 22781              	.LBB11842:
 22782              	.LBB11841:
 22783              	.LBB11840:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 22784              		.loc 5 323 24 view .LVU5968
 22785 0456 1B48     		ldr	r0, .L488+24
 22786 0458 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 22787              	.LVL1703:
 22788              	.L484:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 22789              		.loc 5 323 24 view .LVU5969
 22790              	.LBE11840:
 22791              	.LBE11841:
 22792              	.LBE11842:
 22793              	.LBE11881:
 22794              	.LBB11882:
 22795              	.LBB11880:
 22796              	.LBB11879:
 22797              	.LBB11877:
 22798              	.LBI11877:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 22799              		.loc 4 361 7 is_stmt 1 view .LVU5970
 22800              	.LBB11878:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 22801              		.loc 4 363 2 view .LVU5971
 22802              		.loc 4 365 2 view .LVU5972
 22803              		.loc 4 365 49 is_stmt 0 view .LVU5973
 22804 045c 1022     		movs	r2, #16
 22805 045e 3100     		movs	r1, r6
 22806 0460 3AA8     		add	r0, sp, #232
 22807              	.LVL1704:
 22808              		.loc 4 365 49 view .LVU5974
 22809 0462 FFF7FEFF 		bl	memcpy
 22810              	.LVL1705:
 22811              		.loc 4 365 49 view .LVU5975
 22812 0466 DDE7     		b	.L454
 22813              	.LVL1706:
 22814              	.L462:
 22815              		.loc 4 365 49 view .LVU5976
 22816              	.LBE11878:
 22817              	.LBE11877:
 22818              	.LBE11879:
 22819              	.LBE11880:
ARM GAS  /tmp/ccszdRNt.s 			page 765


 22820              	.LBE11882:
 22821              	.LBE11914:
 110:alohal/cli/cli.cpp ****     }
 22822              		.loc 2 110 17 view .LVU5977
 22823 0468 0127     		movs	r7, #1
 22824 046a 7F42     		rsbs	r7, r7, #0
 22825              	.LVL1707:
 22826              	.L423:
 22827              	.LBB11915:
 22828              	.LBI11915:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 22829              		.loc 13 675 7 is_stmt 1 view .LVU5978
 22830              	.LBB11916:
 22831              	.LBB11917:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 22832              		.loc 13 677 15 is_stmt 0 view .LVU5979
 22833 046c 089C     		ldr	r4, [sp, #32]
 22834 046e 099D     		ldr	r5, [sp, #36]
 22835              	.LVL1708:
 22836              	.LBB11918:
 22837              	.LBI11918:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 22838              		.loc 13 273 7 is_stmt 1 view .LVU5980
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 22839              		.loc 13 273 7 is_stmt 0 view .LVU5981
 22840              	.LBE11918:
 22841              	.LBB11919:
 22842              	.LBI11919:
 22843              		.loc 24 203 5 is_stmt 1 view .LVU5982
 22844 0470 02E0     		b	.L459
 22845              	.LVL1709:
 22846              	.L485:
 22847              	.LBB11920:
 22848              	.LBB11921:
 22849              	.LBB11922:
 22850              	.LBB11923:
 22851              	.LBB11924:
 22852              	.LBB11925:
 22853              	.LBB11926:
 22854              	.LBB11927:
 22855              	.LBB11928:
 22856              	.LBI11928:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 22857              		.loc 5 236 7 view .LVU5983
 22858              	.LBB11929:
 22859              	.LBB11930:
 22860              	.LBI11930:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22861              		.loc 10 469 7 view .LVU5984
 22862              	.LBB11931:
 22863              	.LBI11931:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22864              		.loc 7 119 7 view .LVU5985
 22865              	.LBB11932:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22866              		.loc 7 128 19 is_stmt 0 view .LVU5986
 22867 0472 FFF7FEFF 		bl	_ZdlPv
ARM GAS  /tmp/ccszdRNt.s 			page 766


 22868              	.LVL1710:
 22869              	.L458:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22870              		.loc 7 128 19 view .LVU5987
 22871              	.LBE11932:
 22872              	.LBE11931:
 22873              	.LBE11930:
 22874              	.LBE11929:
 22875              	.LBE11928:
 22876              	.LBE11927:
 22877              	.LBE11926:
 22878              	.LBB11939:
 22879              	.LBI11939:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22880              		.loc 5 150 14 is_stmt 1 view .LVU5988
 22881              	.LBB11940:
 22882              	.LBI11940:
 22883              		.loc 6 153 7 view .LVU5989
 22884              	.LBB11941:
 22885              	.LBI11941:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22886              		.loc 7 89 7 view .LVU5990
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22887              		.loc 7 89 7 is_stmt 0 view .LVU5991
 22888              	.LBE11941:
 22889              	.LBE11940:
 22890              	.LBE11939:
 22891              	.LBE11925:
 22892              	.LBE11924:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 22893              		.loc 24 107 4 is_stmt 1 view .LVU5992
 22894 0476 1834     		adds	r4, r4, #24
 22895              	.LVL1711:
 22896              	.L459:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 22897              		.loc 24 107 19 view .LVU5993
 22898 0478 A542     		cmp	r5, r4
 22899 047a 05D0     		beq	.L457
 22900              	.LVL1712:
 22901              	.LBB11944:
 22902              	.LBI11924:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 22903              		.loc 24 97 5 view .LVU5994
 22904              	.LBB11943:
 22905              	.LBI11925:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 22906              		.loc 5 657 7 view .LVU5995
 22907              	.LBB11942:
 22908              	.LBI11926:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22909              		.loc 5 229 7 view .LVU5996
 22910              	.LBB11938:
 22911              	.LBB11933:
 22912              	.LBI11933:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 22913              		.loc 5 221 7 view .LVU5997
 22914              	.LBB11934:
ARM GAS  /tmp/ccszdRNt.s 			page 767


 22915              	.LBI11934:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 22916              		.loc 5 186 7 view .LVU5998
 22917              	.LBB11935:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22918              		.loc 5 187 28 is_stmt 0 view .LVU5999
 22919 047c 2068     		ldr	r0, [r4]
 22920              	.LVL1713:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 22921              		.loc 5 187 28 view .LVU6000
 22922              	.LBE11935:
 22923              	.LBE11934:
 22924              	.LBB11936:
 22925              	.LBI11936:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 22926              		.loc 5 200 7 is_stmt 1 view .LVU6001
 22927              	.LBB11937:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 22928              		.loc 5 203 57 is_stmt 0 view .LVU6002
 22929 047e 2300     		movs	r3, r4
 22930 0480 0833     		adds	r3, r3, #8
 22931              	.LVL1714:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 22932              		.loc 5 203 57 view .LVU6003
 22933              	.LBE11937:
 22934              	.LBE11936:
 22935              	.LBE11933:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22936              		.loc 5 231 2 view .LVU6004
 22937 0482 9842     		cmp	r0, r3
 22938 0484 F5D1     		bne	.L485
 22939 0486 F6E7     		b	.L458
 22940              	.LVL1715:
 22941              	.L457:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 22942              		.loc 5 231 2 view .LVU6005
 22943              	.LBE11938:
 22944              	.LBE11942:
 22945              	.LBE11943:
 22946              	.LBE11944:
 22947              	.LBE11923:
 22948              	.LBE11922:
 22949              	.LBE11921:
 22950              	.LBE11920:
 22951              	.LBE11919:
 22952              	.LBB11945:
 22953              	.LBI11945:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 22954              		.loc 13 330 7 is_stmt 1 view .LVU6006
 22955              	.LBB11946:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 22956              		.loc 13 332 2 is_stmt 0 view .LVU6007
 22957 0488 0898     		ldr	r0, [sp, #32]
 22958              	.LVL1716:
 22959              	.LBB11947:
 22960              	.LBI11947:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 768


 22961              		.loc 13 347 7 is_stmt 1 view .LVU6008
 22962              	.LBB11948:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 22963              		.loc 13 350 2 is_stmt 0 view .LVU6009
 22964 048a 0028     		cmp	r0, #0
 22965 048c 01D0     		beq	.L412
 22966              	.LVL1717:
 22967              	.LBB11949:
 22968              	.LBI11949:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 22969              		.loc 10 469 7 is_stmt 1 view .LVU6010
 22970              	.LBB11950:
 22971              	.LBB11951:
 22972              	.LBI11951:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 22973              		.loc 7 119 7 view .LVU6011
 22974              	.LBB11952:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22975              		.loc 7 128 19 is_stmt 0 view .LVU6012
 22976 048e FFF7FEFF 		bl	_ZdlPv
 22977              	.LVL1718:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 22978              		.loc 7 128 19 view .LVU6013
 22979              	.LBE11952:
 22980              	.LBE11951:
 22981              	.LBE11950:
 22982              	.LBE11949:
 22983              	.LBE11948:
 22984              	.LBE11947:
 22985              	.LBB11953:
 22986              	.LBI11953:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 22987              		.loc 13 125 14 is_stmt 1 view .LVU6014
 22988              	.LBB11954:
 22989              	.LBI11954:
 22990              		.loc 6 153 7 view .LVU6015
 22991              	.LBB11955:
 22992              	.LBI11955:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22993              		.loc 7 89 7 view .LVU6016
 22994              	.L412:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 22995              		.loc 7 89 7 is_stmt 0 view .LVU6017
 22996              	.LBE11955:
 22997              	.LBE11954:
 22998              	.LBE11953:
 22999              	.LBE11946:
 23000              	.LBE11945:
 23001              	.LBE11917:
 23002              	.LBE11916:
 23003              	.LBE11915:
 23004              	.LBB11956:
 23005              	.LBI11956:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 23006              		.loc 5 657 7 is_stmt 1 view .LVU6018
 23007              	.LBB11957:
 23008              	.LBI11957:
ARM GAS  /tmp/ccszdRNt.s 			page 769


 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23009              		.loc 5 229 7 view .LVU6019
 23010              	.LBB11958:
 23011              	.LBB11959:
 23012              	.LBI11959:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 23013              		.loc 5 221 7 view .LVU6020
 23014              	.LBB11960:
 23015              	.LBI11960:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23016              		.loc 5 186 7 view .LVU6021
 23017              	.LBB11961:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23018              		.loc 5 187 28 is_stmt 0 view .LVU6022
 23019 0492 0B98     		ldr	r0, [sp, #44]
 23020              	.LVL1719:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23021              		.loc 5 187 28 view .LVU6023
 23022              	.LBE11961:
 23023              	.LBE11960:
 23024              	.LBB11962:
 23025              	.LBI11962:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23026              		.loc 5 200 7 is_stmt 1 view .LVU6024
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23027              		.loc 5 200 7 is_stmt 0 view .LVU6025
 23028              	.LBE11962:
 23029              	.LBE11959:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 23030              		.loc 5 231 2 view .LVU6026
 23031 0494 0DAB     		add	r3, sp, #52
 23032 0496 9842     		cmp	r0, r3
 23033 0498 01D0     		beq	.L405
 23034              	.LVL1720:
 23035              	.LBB11963:
 23036              	.LBI11963:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 23037              		.loc 5 236 7 is_stmt 1 view .LVU6027
 23038              	.LBB11964:
 23039              	.LBB11965:
 23040              	.LBI11965:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 23041              		.loc 10 469 7 view .LVU6028
 23042              	.LBB11966:
 23043              	.LBI11966:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 23044              		.loc 7 119 7 view .LVU6029
 23045              	.LBB11967:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23046              		.loc 7 128 19 is_stmt 0 view .LVU6030
 23047 049a FFF7FEFF 		bl	_ZdlPv
 23048              	.LVL1721:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23049              		.loc 7 128 19 view .LVU6031
 23050              	.LBE11967:
 23051              	.LBE11966:
 23052              	.LBE11965:
ARM GAS  /tmp/ccszdRNt.s 			page 770


 23053              	.LBE11964:
 23054              	.LBE11963:
 23055              	.LBE11958:
 23056              	.LBE11957:
 23057              	.LBB11968:
 23058              	.LBI11968:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23059              		.loc 5 150 14 is_stmt 1 view .LVU6032
 23060              	.LBB11969:
 23061              	.LBI11969:
 23062              		.loc 6 153 7 view .LVU6033
 23063              	.LBB11970:
 23064              	.LBI11970:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23065              		.loc 7 89 7 view .LVU6034
 23066              	.L405:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23067              		.loc 7 89 7 is_stmt 0 view .LVU6035
 23068              	.LBE11970:
 23069              	.LBE11969:
 23070              	.LBE11968:
 23071              	.LBE11956:
 144:alohal/cli/cli.cpp **** 
 23072              		.loc 2 144 1 view .LVU6036
 23073 049e 3800     		movs	r0, r7
 23074 04a0 45B0     		add	sp, sp, #276
 23075              		@ sp needed
 23076              	.LVL1722:
 144:alohal/cli/cli.cpp **** 
 23077              		.loc 2 144 1 view .LVU6037
 23078 04a2 C0BC     		pop	{r6, r7}
 23079 04a4 B946     		mov	r9, r7
 23080 04a6 B046     		mov	r8, r6
 23081 04a8 F0BD     		pop	{r4, r5, r6, r7, pc}
 23082              	.L489:
 23083 04aa C046     		.align	2
 23084              	.L488:
 23085 04ac 00000000 		.word	.LC70
 23086 04b0 14000000 		.word	.LC23
 23087 04b4 18000000 		.word	.LC73
 23088 04b8 40000000 		.word	.LC85
 23089 04bc FFFFFF3F 		.word	1073741823
 23090 04c0 4C000000 		.word	.LC88
 23091 04c4 00000000 		.word	.LC0
 23092              		.cfi_endproc
 23093              	.LFE3856:
 23095              		.section	.text._ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE,"ax",%pr
 23096              		.align	1
 23097              		.global	_ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 23098              		.syntax unified
 23099              		.code	16
 23100              		.thumb_func
 23101              		.fpu softvfp
 23103              	_ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:
 23104              	.LVL1723:
 23105              	.LFB3878:
 255:alohal/cli/cli.cpp **** 
ARM GAS  /tmp/ccszdRNt.s 			page 771


 256:alohal/cli/cli.cpp **** int CLI::Autocomplete(string to_complete){
 23106              		.loc 2 256 42 is_stmt 1 view -0
 23107              		.cfi_startproc
 23108              		@ args = 0, pretend = 0, frame = 104
 23109              		@ frame_needed = 0, uses_anonymous_args = 0
 23110              		.loc 2 256 42 is_stmt 0 view .LVU6039
 23111 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 23112              	.LCFI62:
 23113              		.cfi_def_cfa_offset 20
 23114              		.cfi_offset 4, -20
 23115              		.cfi_offset 5, -16
 23116              		.cfi_offset 6, -12
 23117              		.cfi_offset 7, -8
 23118              		.cfi_offset 14, -4
 23119 0002 9BB0     		sub	sp, sp, #108
 23120              	.LCFI63:
 23121              		.cfi_def_cfa_offset 128
 23122 0004 0600     		movs	r6, r0
 23123 0006 0D00     		movs	r5, r1
 257:alohal/cli/cli.cpp ****     // Print("To complete: " + to_complete + "\r\n");
 258:alohal/cli/cli.cpp **** 
 259:alohal/cli/cli.cpp ****     if (!fs) {
 23124              		.loc 2 259 5 is_stmt 1 view .LVU6040
 23125              		.loc 2 259 10 is_stmt 0 view .LVU6041
 23126 0008 C36C     		ldr	r3, [r0, #76]
 23127              		.loc 2 259 5 view .LVU6042
 23128 000a 002B     		cmp	r3, #0
 23129 000c 00D1     		bne	.LCB27083
 23130 000e CEE0     		b	.L516	@long jump
 23131              	.LCB27083:
 260:alohal/cli/cli.cpp ****         // Cannot perform autocomplete, FS is not available
 261:alohal/cli/cli.cpp ****         return -1;
 262:alohal/cli/cli.cpp ****     }
 263:alohal/cli/cli.cpp **** 
 264:alohal/cli/cli.cpp ****     // Get names of entries in actual location
 265:alohal/cli/cli.cpp ****     vector<string> all_names = fs->Current_location_content();
 23132              		.loc 2 265 5 is_stmt 1 view .LVU6043
 23133              	.LVL1724:
 23134              	.LBB12281:
 23135              	.LBI12281:
 23136              		.file 25 "alohal/filesystem/filesystem.hpp"
   1:alohal/filesystem/filesystem.hpp **** /**
   2:alohal/filesystem/filesystem.hpp ****  * @file filesystem.hpp
   3:alohal/filesystem/filesystem.hpp ****  * @author Petr Malaník (TheColonelYoung(at)gmail(dot)com)
   4:alohal/filesystem/filesystem.hpp ****  * @version 0.1
   5:alohal/filesystem/filesystem.hpp ****  * @date 05.09.2019
   6:alohal/filesystem/filesystem.hpp ****  */
   7:alohal/filesystem/filesystem.hpp **** #pragma once
   8:alohal/filesystem/filesystem.hpp **** 
   9:alohal/filesystem/filesystem.hpp **** #include "cli/cli.hpp"
  10:alohal/filesystem/filesystem.hpp **** #include "directory.hpp"
  11:alohal/filesystem/filesystem.hpp **** #include "entry.hpp"
  12:alohal/filesystem/filesystem.hpp **** #include "executable.hpp"
  13:alohal/filesystem/filesystem.hpp **** #include "file.hpp"
  14:alohal/filesystem/filesystem.hpp **** #include "misc/text_transform.hpp"
  15:alohal/filesystem/filesystem.hpp **** 
  16:alohal/filesystem/filesystem.hpp **** #include <algorithm>
ARM GAS  /tmp/ccszdRNt.s 			page 772


  17:alohal/filesystem/filesystem.hpp **** #include <cerrno>
  18:alohal/filesystem/filesystem.hpp **** #include <string>
  19:alohal/filesystem/filesystem.hpp **** #include <vector>
  20:alohal/filesystem/filesystem.hpp **** 
  21:alohal/filesystem/filesystem.hpp **** using namespace std;
  22:alohal/filesystem/filesystem.hpp **** 
  23:alohal/filesystem/filesystem.hpp **** class Filesystem
  24:alohal/filesystem/filesystem.hpp **** {
  25:alohal/filesystem/filesystem.hpp **** private:
  26:alohal/filesystem/filesystem.hpp ****     Directory* root = new Directory("/");
  27:alohal/filesystem/filesystem.hpp **** 
  28:alohal/filesystem/filesystem.hpp ****     Directory* actual_position = root;
  29:alohal/filesystem/filesystem.hpp **** 
  30:alohal/filesystem/filesystem.hpp ****     CLI* cli;
  31:alohal/filesystem/filesystem.hpp **** public:
  32:alohal/filesystem/filesystem.hpp ****     Filesystem() =default;
  33:alohal/filesystem/filesystem.hpp ****     Filesystem(CLI* cli);
  34:alohal/filesystem/filesystem.hpp **** 
  35:alohal/filesystem/filesystem.hpp ****     int Command_ls(vector<string> args);
  36:alohal/filesystem/filesystem.hpp ****     int Command_cd(vector<string> args);
  37:alohal/filesystem/filesystem.hpp ****     int Command_cat(vector<string> args);
  38:alohal/filesystem/filesystem.hpp ****     int Command_pwd(vector<string> args);
  39:alohal/filesystem/filesystem.hpp ****     int Command_fg(vector<string> args);
  40:alohal/filesystem/filesystem.hpp **** 
  41:alohal/filesystem/filesystem.hpp ****     /**
  42:alohal/filesystem/filesystem.hpp ****      * @brief   Creates empty directory at given path
  43:alohal/filesystem/filesystem.hpp ****      *
  44:alohal/filesystem/filesystem.hpp ****      * @param name Path to folder, last part of path is directory name
  45:alohal/filesystem/filesystem.hpp ****      * @return int Error number
  46:alohal/filesystem/filesystem.hpp ****      */
  47:alohal/filesystem/filesystem.hpp ****     int Make_directory(string path);
  48:alohal/filesystem/filesystem.hpp **** 
  49:alohal/filesystem/filesystem.hpp ****     /**
  50:alohal/filesystem/filesystem.hpp ****      * @brief   Create file inside RAM
  51:alohal/filesystem/filesystem.hpp ****      *
  52:alohal/filesystem/filesystem.hpp ****      * @param name          File name
  53:alohal/filesystem/filesystem.hpp ****      * @param content       Content of file, can be empty
  54:alohal/filesystem/filesystem.hpp ****      * @return int          Error number
  55:alohal/filesystem/filesystem.hpp ****      */
  56:alohal/filesystem/filesystem.hpp ****     int Make_file(string path, string content = "");
  57:alohal/filesystem/filesystem.hpp **** 
  58:alohal/filesystem/filesystem.hpp ****     /**
  59:alohal/filesystem/filesystem.hpp ****      * @brief   Create virtual file inside filesystem
  60:alohal/filesystem/filesystem.hpp ****      *
  61:alohal/filesystem/filesystem.hpp ****      * @tparam class_T  Class of object which is pass to method
  62:alohal/filesystem/filesystem.hpp ****      * @param path      Location at which will be file created
  63:alohal/filesystem/filesystem.hpp ****      * @param object    Pointer to object which will be providingcontent of file
  64:alohal/filesystem/filesystem.hpp ****      * @param method    Method which will invocated on saved object, must return string and receive
  65:alohal/filesystem/filesystem.hpp ****      * @return int      Error number
  66:alohal/filesystem/filesystem.hpp ****      */
  67:alohal/filesystem/filesystem.hpp ****     template<typename class_T>
  68:alohal/filesystem/filesystem.hpp ****     int Make_file(string path, class_T *object, string (class_T::*method) (void)){
  69:alohal/filesystem/filesystem.hpp ****         string filename = path.substr(path.find_last_of("/") + 1);
  70:alohal/filesystem/filesystem.hpp ****         File<class_T> *new_file = new File<class_T>(filename, object, method);
  71:alohal/filesystem/filesystem.hpp ****         return Add_entry(path, new_file);
  72:alohal/filesystem/filesystem.hpp ****     }
  73:alohal/filesystem/filesystem.hpp **** 
ARM GAS  /tmp/ccszdRNt.s 			page 773


  74:alohal/filesystem/filesystem.hpp ****     /**
  75:alohal/filesystem/filesystem.hpp ****      * @brief   Create executable inside filesystem
  76:alohal/filesystem/filesystem.hpp ****      *
  77:alohal/filesystem/filesystem.hpp ****      * @tparam class_T  Class of object which is pass to method
  78:alohal/filesystem/filesystem.hpp ****      * @param path      Location at which will be executable saved
  79:alohal/filesystem/filesystem.hpp ****      * @param object    Pointer to object which will be providing executable method
  80:alohal/filesystem/filesystem.hpp ****      * @param method    Method which will invocated on saved object, must return int and receive ve
  81:alohal/filesystem/filesystem.hpp ****      * @return int      Error number
  82:alohal/filesystem/filesystem.hpp ****      */
  83:alohal/filesystem/filesystem.hpp ****     template<typename class_T>
  84:alohal/filesystem/filesystem.hpp ****     int Make_executable(string path, class_T *object, int(class_T::*method)(vector<string>&)){
  85:alohal/filesystem/filesystem.hpp ****         auto iw = new Invocation_wrapper<class_T, int, vector<string> &>(object, method);
  86:alohal/filesystem/filesystem.hpp ****         return Make_executable(path, iw);
  87:alohal/filesystem/filesystem.hpp ****     }
  88:alohal/filesystem/filesystem.hpp **** 
  89:alohal/filesystem/filesystem.hpp ****     /**
  90:alohal/filesystem/filesystem.hpp ****      * @brief   Create executable inside filesystem
  91:alohal/filesystem/filesystem.hpp ****      *
  92:alohal/filesystem/filesystem.hpp ****      * @tparam class_T  Class of object which is pass to method
  93:alohal/filesystem/filesystem.hpp ****      * @param path      Location at which will be executable saved
  94:alohal/filesystem/filesystem.hpp ****      * @param object    Pointer to object which will be providing executable method
  95:alohal/filesystem/filesystem.hpp ****      * @param method    Method which will invocated on saved object, must return int and receive ve
  96:alohal/filesystem/filesystem.hpp ****      * @return int      Error number
  97:alohal/filesystem/filesystem.hpp ****      */
  98:alohal/filesystem/filesystem.hpp **** 
  99:alohal/filesystem/filesystem.hpp ****     template<typename class_T>
 100:alohal/filesystem/filesystem.hpp ****     int Make_executable(string path, Invocation_wrapper<class_T, int, vector<string> &> *iw){
 101:alohal/filesystem/filesystem.hpp ****         string filename = path.substr(path.find_last_of("/") + 1);
 102:alohal/filesystem/filesystem.hpp ****         Executable *new_exec = new Executable(filename, iw);
 103:alohal/filesystem/filesystem.hpp ****         return Add_entry(path, new_exec);
 104:alohal/filesystem/filesystem.hpp ****     }
 105:alohal/filesystem/filesystem.hpp **** 
 106:alohal/filesystem/filesystem.hpp ****     /**
 107:alohal/filesystem/filesystem.hpp ****      * @brief   Create executable inside filesystem
 108:alohal/filesystem/filesystem.hpp ****      *
 109:alohal/filesystem/filesystem.hpp ****      * @tparam class_T  Class of object which is pass to method
 110:alohal/filesystem/filesystem.hpp ****      * @param path      Location at which will be executable saved
 111:alohal/filesystem/filesystem.hpp ****      * @param object    Pointer to object which will be providing executable method
 112:alohal/filesystem/filesystem.hpp ****      * @param method    Method which will invocated on saved object, must return int and receive ve
 113:alohal/filesystem/filesystem.hpp ****      * @return int      Error number
 114:alohal/filesystem/filesystem.hpp ****      */
 115:alohal/filesystem/filesystem.hpp **** /*
 116:alohal/filesystem/filesystem.hpp ****     int Make_executable(string path, Invocation_wrapper_base<int, vector<string> &> *iw){
 117:alohal/filesystem/filesystem.hpp ****         string filename = path.substr(path.find_last_of("/") + 1);
 118:alohal/filesystem/filesystem.hpp ****         Executable *new_exec = new Executable(filename, iw);
 119:alohal/filesystem/filesystem.hpp ****         return Add_entry(path, new_exec);
 120:alohal/filesystem/filesystem.hpp ****     }*/
 121:alohal/filesystem/filesystem.hpp **** 
 122:alohal/filesystem/filesystem.hpp ****     /**
 123:alohal/filesystem/filesystem.hpp ****      * @brief return FS_entry defined by relative or absolute path
 124:alohal/filesystem/filesystem.hpp ****      *
 125:alohal/filesystem/filesystem.hpp ****      * @param filename          Name of file relative or absolute
 126:alohal/filesystem/filesystem.hpp ****      * @return const FS_entry   Pointer to FS_entry defined by filename, if not exist, nullptr is r
 127:alohal/filesystem/filesystem.hpp ****      */
 128:alohal/filesystem/filesystem.hpp ****     FS_entry* Get_entry(string filename) const;
 129:alohal/filesystem/filesystem.hpp **** 
 130:alohal/filesystem/filesystem.hpp ****     /**
ARM GAS  /tmp/ccszdRNt.s 			page 774


 131:alohal/filesystem/filesystem.hpp ****      * @brief return FS_entry defined by folder names from root
 132:alohal/filesystem/filesystem.hpp ****      *
 133:alohal/filesystem/filesystem.hpp ****      * @param path              Names of folders from root to file
 134:alohal/filesystem/filesystem.hpp ****      * @return const FS_entry   Pointer to FS_entry defined by path, if not exist, nullptr is retur
 135:alohal/filesystem/filesystem.hpp ****      */
 136:alohal/filesystem/filesystem.hpp ****     FS_entry* Get_entry(vector<string> path) const;
 137:alohal/filesystem/filesystem.hpp **** 
 138:alohal/filesystem/filesystem.hpp ****     /**
 139:alohal/filesystem/filesystem.hpp ****      * @brief Test if entry with given name exists
 140:alohal/filesystem/filesystem.hpp ****      *
 141:alohal/filesystem/filesystem.hpp ****      * @param filename  Absolute or relative path to filein form of string
 142:alohal/filesystem/filesystem.hpp ****      * @return true     Entry exist in filesystem and can be accessed
 143:alohal/filesystem/filesystem.hpp ****      * @return false    Entry with this name does not exists
 144:alohal/filesystem/filesystem.hpp ****      */
 145:alohal/filesystem/filesystem.hpp ****     bool Entry_exists(string filename) const;
 146:alohal/filesystem/filesystem.hpp **** 
 147:alohal/filesystem/filesystem.hpp ****     /**
 148:alohal/filesystem/filesystem.hpp ****      * @brief Test if entry exists on given path
 149:alohal/filesystem/filesystem.hpp ****      *
 150:alohal/filesystem/filesystem.hpp ****      * @param filename  Names of folders from root
 151:alohal/filesystem/filesystem.hpp ****      * @return true     Entry exist in filesystem and can be accessed
 152:alohal/filesystem/filesystem.hpp ****      * @return false    Entry with this name does not exists
 153:alohal/filesystem/filesystem.hpp ****      */
 154:alohal/filesystem/filesystem.hpp ****     bool Entry_exists(vector<string> path) const;
 155:alohal/filesystem/filesystem.hpp **** 
 156:alohal/filesystem/filesystem.hpp ****     /**
 157:alohal/filesystem/filesystem.hpp ****      * @brief   Determinate type of entry
 158:alohal/filesystem/filesystem.hpp ****      *
 159:alohal/filesystem/filesystem.hpp ****      * @param filename          Path to fs record
 160:alohal/filesystem/filesystem.hpp ****      * @return FS_entry::Type   Type of record at path
 161:alohal/filesystem/filesystem.hpp ****      */
 162:alohal/filesystem/filesystem.hpp ****     FS_entry::Type Entry_type(string filename) const;
 163:alohal/filesystem/filesystem.hpp **** 
 164:alohal/filesystem/filesystem.hpp ****     /**
 165:alohal/filesystem/filesystem.hpp ****      * @brief Add entry into file system
 166:alohal/filesystem/filesystem.hpp ****      *
 167:alohal/filesystem/filesystem.hpp ****      * @param path      Path to new file, with filename
 168:alohal/filesystem/filesystem.hpp ****      * @param entry     Entry to add
 169:alohal/filesystem/filesystem.hpp ****      * @return int      Error number
 170:alohal/filesystem/filesystem.hpp ****      */
 171:alohal/filesystem/filesystem.hpp ****     int Add_entry(string path, FS_entry *entry);
 172:alohal/filesystem/filesystem.hpp **** 
 173:alohal/filesystem/filesystem.hpp ****     /**
 174:alohal/filesystem/filesystem.hpp ****      * @brief Method called from CLI, which run executable from filesystem
 175:alohal/filesystem/filesystem.hpp ****      *
 176:alohal/filesystem/filesystem.hpp ****      * @param path  Path to executable
 177:alohal/filesystem/filesystem.hpp ****      * @param args  Arguments for executable
 178:alohal/filesystem/filesystem.hpp ****      * @return int  Return code of executable
 179:alohal/filesystem/filesystem.hpp ****      */
 180:alohal/filesystem/filesystem.hpp ****     int Execute(string &path, vector<string> &args);
 181:alohal/filesystem/filesystem.hpp **** 
 182:alohal/filesystem/filesystem.hpp ****     /**
 183:alohal/filesystem/filesystem.hpp ****      * @brief Delete entry from filesystem
 184:alohal/filesystem/filesystem.hpp ****      *
 185:alohal/filesystem/filesystem.hpp ****      * @param entry Pointer to entry which will be deleted
 186:alohal/filesystem/filesystem.hpp ****      * @return int  Error number
 187:alohal/filesystem/filesystem.hpp ****      */
ARM GAS  /tmp/ccszdRNt.s 			page 775


 188:alohal/filesystem/filesystem.hpp ****     int Delete(FS_entry *entry);
 189:alohal/filesystem/filesystem.hpp **** 
 190:alohal/filesystem/filesystem.hpp ****     /**
 191:alohal/filesystem/filesystem.hpp ****      * @brief Set current location in file system if exists
 192:alohal/filesystem/filesystem.hpp ****      *
 193:alohal/filesystem/filesystem.hpp ****      * @param path
 194:alohal/filesystem/filesystem.hpp ****      * @return int
 195:alohal/filesystem/filesystem.hpp ****      */
 196:alohal/filesystem/filesystem.hpp ****     int Set_location(string path);
 197:alohal/filesystem/filesystem.hpp **** 
 198:alohal/filesystem/filesystem.hpp ****     /**
 199:alohal/filesystem/filesystem.hpp ****      * @brief Return current location in filesystem
 200:alohal/filesystem/filesystem.hpp ****      *
 201:alohal/filesystem/filesystem.hpp ****      * @return Directory* Pointer to current directory
 202:alohal/filesystem/filesystem.hpp ****      */
 203:alohal/filesystem/filesystem.hpp ****     inline Directory *Current_location() const {return actual_position;};
 204:alohal/filesystem/filesystem.hpp **** 
 205:alohal/filesystem/filesystem.hpp ****     /**
 206:alohal/filesystem/filesystem.hpp ****      * @brief Return name of all entries in currently selected folder
 207:alohal/filesystem/filesystem.hpp ****      *
 208:alohal/filesystem/filesystem.hpp ****      * @return vector<string>   Names of entries
 209:alohal/filesystem/filesystem.hpp ****      */
 210:alohal/filesystem/filesystem.hpp ****     vector<string> Current_location_content() const {return Current_location()->Content_names();};
 23137              		.loc 25 210 20 view .LVU6044
 23138              	.LBB12282:
 23139              		.loc 25 210 54 view .LVU6045
 23140              	.LBB12283:
 23141              	.LBI12283:
 203:alohal/filesystem/filesystem.hpp **** 
 23142              		.loc 25 203 23 view .LVU6046
 23143              	.LBB12284:
 203:alohal/filesystem/filesystem.hpp **** 
 23144              		.loc 25 203 49 view .LVU6047
 203:alohal/filesystem/filesystem.hpp **** 
 23145              		.loc 25 203 56 is_stmt 0 view .LVU6048
 23146 0010 5968     		ldr	r1, [r3, #4]
 23147              	.LVL1725:
 203:alohal/filesystem/filesystem.hpp **** 
 23148              		.loc 25 203 56 view .LVU6049
 23149              	.LBE12284:
 23150              	.LBE12283:
 23151              		.loc 25 210 95 view .LVU6050
 23152 0012 05A8     		add	r0, sp, #20
 23153              	.LVL1726:
 23154              		.loc 25 210 95 view .LVU6051
 23155 0014 FFF7FEFF 		bl	_ZN9Directory13Content_namesB5cxx11Ev
 23156              	.LVL1727:
 23157              		.loc 25 210 95 view .LVU6052
 23158              	.LBE12282:
 23159              	.LBE12281:
 266:alohal/cli/cli.cpp **** 
 267:alohal/cli/cli.cpp ****     vector<string> candidate_names;
 23160              		.loc 2 267 5 is_stmt 1 view .LVU6053
 23161              	.LBB12285:
 23162              	.LBI12285:
 484:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 23163              		.loc 13 484 7 view .LVU6054
ARM GAS  /tmp/ccszdRNt.s 			page 776


 23164              	.LBB12286:
 23165              	.LBI12286:
 285:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** #else
 23166              		.loc 13 285 7 view .LVU6055
 23167              	.LBB12287:
 23168              	.LBI12287:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    is_nothrow_default_constructible<_Tp_alloc_type>::value)
 23169              		.loc 13 128 2 view .LVU6056
 23170              	.LBB12288:
 23171              	.LBI12288:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 23172              		.loc 6 138 7 view .LVU6057
 23173              	.LBB12289:
 23174              	.LBI12289:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23175              		.loc 7 80 7 view .LVU6058
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23176              		.loc 7 80 7 is_stmt 0 view .LVU6059
 23177              	.LBE12289:
 23178              	.LBE12288:
 23179              	.LBB12290:
 23180              	.LBI12290:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 23181              		.loc 13 94 2 is_stmt 1 view .LVU6060
 23182              	.LBB12291:
 23183              	.LBB12292:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 23184              		.loc 13 95 47 is_stmt 0 view .LVU6061
 23185 0018 0023     		movs	r3, #0
 23186 001a 0293     		str	r3, [sp, #8]
 23187 001c 0393     		str	r3, [sp, #12]
 23188 001e 0493     		str	r3, [sp, #16]
 23189              	.LVL1728:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 23190              		.loc 13 95 47 view .LVU6062
 23191              	.LBE12292:
 23192              	.LBE12291:
 23193              	.LBE12290:
 23194              	.LBE12287:
 23195              	.LBE12286:
 23196              	.LBE12285:
 268:alohal/cli/cli.cpp **** 
 269:alohal/cli/cli.cpp ****     for (auto &entry:all_names) {
 23197              		.loc 2 269 5 is_stmt 1 view .LVU6063
 23198              	.LBB12293:
 23199              	.LBB12294:
 23200              	.LBI12294:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 23201              		.loc 13 808 7 view .LVU6064
 23202              	.LBB12295:
 23203              	.LBB12296:
 23204              	.LBI12296:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23205              		.loc 14 806 7 view .LVU6065
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23206              		.loc 14 806 7 is_stmt 0 view .LVU6066
 23207              	.LBE12296:
ARM GAS  /tmp/ccszdRNt.s 			page 777


 23208              	.LBE12295:
 23209              	.LBE12294:
 23210              		.loc 2 269 22 view .LVU6067
 23211 0020 0598     		ldr	r0, [sp, #20]
 23212              	.LVL1729:
 23213              	.LBB12297:
 23214              	.LBI12297:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 23215              		.loc 13 826 7 is_stmt 1 view .LVU6068
 23216              	.LBB12298:
 23217              	.LBI12298:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23218              		.loc 14 806 7 view .LVU6069
 23219              	.LBB12299:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23220              		.loc 14 807 23 is_stmt 0 view .LVU6070
 23221 0022 069F     		ldr	r7, [sp, #24]
 23222              	.LVL1730:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23223              		.loc 14 807 23 view .LVU6071
 23224 0024 06E0     		b	.L496
 23225              	.LVL1731:
 23226              	.L494:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23227              		.loc 14 807 23 view .LVU6072
 23228              	.LBE12299:
 23229              	.LBE12298:
 23230              	.LBE12297:
 23231              	.LBB12300:
 23232              	.LBB12301:
 23233              	.LBB12302:
 23234              	.LBI12302:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 23235              		.loc 13 826 7 is_stmt 1 view .LVU6073
 23236              	.LBB12303:
 23237              	.LBB12304:
 23238              	.LBI12304:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23239              		.loc 14 806 7 view .LVU6074
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23240              		.loc 14 806 7 is_stmt 0 view .LVU6075
 23241              	.LBE12304:
 23242              	.LBE12303:
 23243              	.LBE12302:
1195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23244              		.loc 13 1195 4 view .LVU6076
 23245 0026 2200     		movs	r2, r4
 23246 0028 0100     		movs	r1, r0
 23247 002a 02A8     		add	r0, sp, #8
 23248              	.LVL1732:
1195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23249              		.loc 13 1195 4 view .LVU6077
 23250 002c FFF7FEFF 		bl	_ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJR
 23251              	.LVL1733:
 23252              	.L493:
1195:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 23253              		.loc 13 1195 4 view .LVU6078
ARM GAS  /tmp/ccszdRNt.s 			page 778


 23254              	.LBE12301:
 23255              	.LBE12300:
 23256              		.loc 2 269 5 is_stmt 1 discriminator 3 view .LVU6079
 23257              	.LBB12334:
 23258              	.LBI12334:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 23259              		.loc 14 827 7 discriminator 3 view .LVU6080
 23260              	.LBB12335:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 23261              		.loc 14 829 2 is_stmt 0 discriminator 3 view .LVU6081
 23262 0030 2000     		movs	r0, r4
 23263 0032 1830     		adds	r0, r0, #24
 23264              	.LVL1734:
 23265              	.L496:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 23266              		.loc 14 829 2 discriminator 3 view .LVU6082
 23267              	.LBE12335:
 23268              	.LBE12334:
 23269              		.loc 2 269 22 is_stmt 1 discriminator 1 view .LVU6083
 23270              	.LBB12336:
 23271              	.LBI12336:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 23272              		.loc 14 907 5 discriminator 1 view .LVU6084
 23273              	.LBB12337:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23274              		.loc 14 910 27 is_stmt 0 discriminator 1 view .LVU6085
 23275 0034 0400     		movs	r4, r0
 23276              	.LVL1735:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23277              		.loc 14 910 27 discriminator 1 view .LVU6086
 23278              	.LBE12337:
 23279              	.LBE12336:
 23280              		.loc 2 269 22 discriminator 1 view .LVU6087
 23281 0036 B842     		cmp	r0, r7
 23282 0038 1BD0     		beq	.L492
 23283              	.LVL1736:
 270:alohal/cli/cli.cpp ****         if (entry.find(to_complete) == 0) {
 23284              		.loc 2 270 9 is_stmt 1 view .LVU6088
 23285              	.LBB12338:
 23286              	.LBI12338:
2361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 23287              		.loc 5 2361 7 view .LVU6089
 23288              	.LBB12339:
 23289              	.LBB12340:
 23290              	.LBI12340:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 23291              		.loc 5 2312 7 view .LVU6090
 23292              	.LBB12341:
 23293              	.LBI12341:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23294              		.loc 5 186 7 view .LVU6091
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23295              		.loc 5 186 7 is_stmt 0 view .LVU6092
 23296              	.LBE12341:
 23297              	.LBE12340:
 23298              	.LBB12342:
 23299              	.LBI12342:
ARM GAS  /tmp/ccszdRNt.s 			page 779


 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23300              		.loc 5 930 7 is_stmt 1 view .LVU6093
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23301              		.loc 5 930 7 is_stmt 0 view .LVU6094
 23302              	.LBE12342:
2363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23303              		.loc 5 2363 60 view .LVU6095
 23304 003a 6B68     		ldr	r3, [r5, #4]
 23305 003c 0022     		movs	r2, #0
 23306 003e 2968     		ldr	r1, [r5]
 23307 0040 FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
 23308              	.LVL1737:
2363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23309              		.loc 5 2363 60 view .LVU6096
 23310              	.LBE12339:
 23311              	.LBE12338:
 23312              		.loc 2 270 9 view .LVU6097
 23313 0044 0028     		cmp	r0, #0
 23314 0046 F3D1     		bne	.L493
 271:alohal/cli/cli.cpp ****             candidate_names.push_back(entry);
 23315              		.loc 2 271 13 is_stmt 1 view .LVU6098
 23316              	.LVL1738:
 23317              	.LBB12343:
 23318              	.LBI12300:
1184:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 23319              		.loc 13 1184 7 view .LVU6099
 23320              	.LBB12332:
1186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 23321              		.loc 13 1186 20 is_stmt 0 view .LVU6100
 23322 0048 0398     		ldr	r0, [sp, #12]
1186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 23323              		.loc 13 1186 47 view .LVU6101
 23324 004a 049B     		ldr	r3, [sp, #16]
1186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  {
 23325              		.loc 13 1186 2 view .LVU6102
 23326 004c 9842     		cmp	r0, r3
 23327 004e EAD0     		beq	.L494
 23328              	.LVL1739:
 23329              	.LBB12305:
 23330              	.LBI12305:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 	noexcept(noexcept(__a.construct(__p, std::forward<_Args>(__args)...)))
 23331              		.loc 10 482 2 is_stmt 1 view .LVU6103
 23332              	.LBB12306:
 23333              	.LBI12306:
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 23334              		.loc 7 144 2 view .LVU6104
 144:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	noexcept(noexcept(::new((void *)__p)
 23335              		.loc 7 144 2 is_stmt 0 view .LVU6105
 23336              	.LBE12306:
 23337              	.LBE12305:
 23338              	.LBE12332:
 23339              	.LBE12343:
 23340              	.LBE12293:
 23341              		.loc 11 174 3 is_stmt 1 view .LVU6106
 23342              	.LBB12345:
 23343              	.LBB12344:
 23344              	.LBB12333:
ARM GAS  /tmp/ccszdRNt.s 			page 780


 23345              	.LBB12331:
 23346              	.LBB12330:
 23347              	.LBB12307:
 23348              	.LBI12307:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 23349              		.loc 5 448 7 view .LVU6107
 23350              	.LBB12308:
 23351              	.LBB12309:
 23352              	.LBI12309:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23353              		.loc 5 190 7 view .LVU6108
 23354              	.LBB12310:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 23355              		.loc 5 193 51 is_stmt 0 view .LVU6109
 23356 0050 0300     		movs	r3, r0
 23357 0052 0833     		adds	r3, r3, #8
 23358              	.LVL1740:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 23359              		.loc 5 193 51 view .LVU6110
 23360              	.LBE12310:
 23361              	.LBE12309:
 23362              	.LBB12311:
 23363              	.LBI12311:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23364              		.loc 5 290 7 is_stmt 1 view .LVU6111
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23365              		.loc 5 290 7 is_stmt 0 view .LVU6112
 23366              	.LBE12311:
 23367              	.LBB12312:
 23368              	.LBI12312:
 23369              		.loc 20 97 19 is_stmt 1 view .LVU6113
 23370              	.LBB12313:
 23371              	.LBI12313:
 23372              		.loc 10 514 7 view .LVU6114
 23373              	.LBB12314:
 23374              	.LBI12314:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23375              		.loc 6 141 7 view .LVU6115
 23376              	.LBB12315:
 23377              	.LBI12315:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23378              		.loc 7 83 7 view .LVU6116
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23379              		.loc 7 83 7 is_stmt 0 view .LVU6117
 23380              	.LBE12315:
 23381              	.LBE12314:
 23382              	.LBE12313:
 23383              	.LBE12312:
 23384              	.LBB12316:
 23385              	.LBI12316:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 23386              		.loc 5 159 2 is_stmt 1 view .LVU6118
 23387              	.LBB12317:
 23388              	.LBB12318:
 23389              	.LBI12318:
 23390              		.loc 8 99 5 view .LVU6119
 23391              		.loc 8 99 5 is_stmt 0 view .LVU6120
ARM GAS  /tmp/ccszdRNt.s 			page 781


 23392              	.LBE12318:
 23393              	.LBB12319:
 23394              	.LBI12319:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23395              		.loc 6 141 7 is_stmt 1 view .LVU6121
 23396              	.LBB12320:
 23397              	.LBI12320:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23398              		.loc 7 83 7 view .LVU6122
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23399              		.loc 7 83 7 is_stmt 0 view .LVU6123
 23400              	.LBE12320:
 23401              	.LBE12319:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23402              		.loc 5 160 46 view .LVU6124
 23403 0054 0360     		str	r3, [r0]
 23404              	.LVL1741:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23405              		.loc 5 160 46 view .LVU6125
 23406              	.LBE12317:
 23407              	.LBE12316:
 23408              	.LBB12321:
 23409              	.LBI12321:
 23410              		.loc 6 153 7 is_stmt 1 view .LVU6126
 23411              	.LBB12322:
 23412              	.LBI12322:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23413              		.loc 7 89 7 view .LVU6127
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23414              		.loc 7 89 7 is_stmt 0 view .LVU6128
 23415              	.LBE12322:
 23416              	.LBE12321:
 23417              	.LBB12323:
 23418              	.LBI12323:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23419              		.loc 5 186 7 is_stmt 1 view .LVU6129
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23420              		.loc 5 186 7 is_stmt 0 view .LVU6130
 23421              	.LBE12323:
 23422              	.LBB12324:
 23423              	.LBI12324:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23424              		.loc 5 186 7 is_stmt 1 view .LVU6131
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23425              		.loc 5 186 7 is_stmt 0 view .LVU6132
 23426              	.LBE12324:
 23427              	.LBB12325:
 23428              	.LBI12325:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23429              		.loc 5 936 7 is_stmt 1 view .LVU6133
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23430              		.loc 5 936 7 is_stmt 0 view .LVU6134
 23431              	.LBE12325:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23432              		.loc 5 451 9 view .LVU6135
 23433 0056 2368     		ldr	r3, [r4]
 23434 0058 6168     		ldr	r1, [r4, #4]
ARM GAS  /tmp/ccszdRNt.s 			page 782


 23435 005a 8C46     		mov	ip, r1
 23436 005c 6344     		add	r3, r3, ip
 23437 005e 1A00     		movs	r2, r3
 23438              	.LVL1742:
 23439              	.LBB12326:
 23440              	.LBI12326:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 23441              		.loc 5 263 9 is_stmt 1 view .LVU6136
 23442              	.LBB12327:
 23443              	.LBB12328:
 23444              	.LBI12328:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 23445              		.loc 5 243 9 view .LVU6137
 23446              	.LBB12329:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23447              		.loc 5 247 11 is_stmt 0 view .LVU6138
 23448 0060 0023     		movs	r3, #0
 23449 0062 2168     		ldr	r1, [r4]
 23450 0064 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 23451              	.LVL1743:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23452              		.loc 5 247 11 view .LVU6139
 23453              	.LBE12329:
 23454              	.LBE12328:
 23455              	.LBE12327:
 23456              	.LBE12326:
 23457              	.LBE12308:
 23458              	.LBE12307:
 23459              	.LBE12330:
 23460              	.LBE12331:
1191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 23461              		.loc 13 1191 22 view .LVU6140
 23462 0068 039B     		ldr	r3, [sp, #12]
 23463 006a 0193     		str	r3, [sp, #4]
1191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 23464              		.loc 13 1191 6 view .LVU6141
 23465 006c 1833     		adds	r3, r3, #24
 23466 006e 0393     		str	r3, [sp, #12]
 23467 0070 DEE7     		b	.L493
 23468              	.LVL1744:
 23469              	.L492:
1191:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	    _GLIBCXX_ASAN_ANNOTATE_GREW(1);
 23470              		.loc 13 1191 6 view .LVU6142
 23471              	.LBE12333:
 23472              	.LBE12344:
 23473              	.LBE12345:
 272:alohal/cli/cli.cpp ****         }
 273:alohal/cli/cli.cpp ****     }
 274:alohal/cli/cli.cpp **** 
 275:alohal/cli/cli.cpp ****     if (candidate_names.size() > 1) {
 23474              		.loc 2 275 5 is_stmt 1 view .LVU6143
 23475              	.LBB12346:
 23476              	.LBB12347:
 23477              	.LBI12347:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 23478              		.loc 13 915 7 view .LVU6144
 23479              	.LBB12348:
ARM GAS  /tmp/ccszdRNt.s 			page 783


 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23480              		.loc 13 916 66 is_stmt 0 view .LVU6145
 23481 0072 0298     		ldr	r0, [sp, #8]
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23482              		.loc 13 916 50 view .LVU6146
 23483 0074 039B     		ldr	r3, [sp, #12]
 23484 0076 1A1A     		subs	r2, r3, r0
 23485 0078 D110     		asrs	r1, r2, #3
 23486 007a 8B00     		lsls	r3, r1, #2
 23487 007c 5B18     		adds	r3, r3, r1
 23488 007e 1C01     		lsls	r4, r3, #4
 23489 0080 1B19     		adds	r3, r3, r4
 23490 0082 1C02     		lsls	r4, r3, #8
 23491 0084 1B19     		adds	r3, r3, r4
 23492 0086 1C04     		lsls	r4, r3, #16
 23493 0088 1B19     		adds	r3, r3, r4
 23494 008a 5B00     		lsls	r3, r3, #1
 23495 008c 5B18     		adds	r3, r3, r1
 23496              	.LVL1745:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 23497              		.loc 13 916 50 view .LVU6147
 23498              	.LBE12348:
 23499              	.LBE12347:
 23500              		.loc 2 275 5 view .LVU6148
 23501 008e 012B     		cmp	r3, #1
 23502 0090 04D8     		bhi	.L517
 276:alohal/cli/cli.cpp ****         Print("\r\n");
 277:alohal/cli/cli.cpp ****         for (auto &candidate:candidate_names) {
 278:alohal/cli/cli.cpp ****             Print(candidate + "\r\n");
 279:alohal/cli/cli.cpp ****         }
 280:alohal/cli/cli.cpp ****     } else if (candidate_names.size() == 1) {
 23503              		.loc 2 280 12 is_stmt 1 view .LVU6149
 23504 0092 182A     		cmp	r2, #24
 23505 0094 3CD0     		beq	.L518
 23506              	.LVL1746:
 23507              	.L503:
 23508              		.loc 2 280 12 is_stmt 0 view .LVU6150
 23509              	.LBE12346:
 281:alohal/cli/cli.cpp ****         actual_line += candidate_names.front().substr(to_complete.length(), candidate_names.front()
 282:alohal/cli/cli.cpp ****     }
 283:alohal/cli/cli.cpp **** 
 284:alohal/cli/cli.cpp ****     return 0;
 23510              		.loc 2 284 5 is_stmt 1 view .LVU6151
 23511              	.LBB12532:
 23512              	.LBI12532:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 23513              		.loc 13 675 7 view .LVU6152
 23514              	.LBB12533:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 23515              		.loc 13 677 15 is_stmt 0 view .LVU6153
 23516 0096 029C     		ldr	r4, [sp, #8]
 23517 0098 039D     		ldr	r5, [sp, #12]
 23518              	.LVL1747:
 23519              	.LBB12534:
 23520              	.LBI12534:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23521              		.loc 13 273 7 is_stmt 1 view .LVU6154
ARM GAS  /tmp/ccszdRNt.s 			page 784


 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 23522              		.loc 13 273 7 is_stmt 0 view .LVU6155
 23523              	.LBE12534:
 23524              	.LBB12535:
 23525              	.LBI12535:
 23526              		.loc 24 203 5 is_stmt 1 view .LVU6156
 23527 009a 65E0     		b	.L510
 23528              	.LVL1748:
 23529              	.L517:
 23530              		.loc 24 203 5 is_stmt 0 view .LVU6157
 23531              	.LBE12535:
 23532              	.LBE12533:
 23533              	.LBE12532:
 23534              	.LBB12574:
 23535              	.LBB12349:
 276:alohal/cli/cli.cpp ****         for (auto &candidate:candidate_names) {
 23536              		.loc 2 276 9 is_stmt 1 view .LVU6158
 23537              	.LBB12350:
 23538              	.LBI12350:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 23539              		.loc 6 138 7 view .LVU6159
 23540              	.LBB12351:
 23541              	.LBI12351:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23542              		.loc 7 80 7 view .LVU6160
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23543              		.loc 7 80 7 is_stmt 0 view .LVU6161
 23544              	.LBE12351:
 23545              	.LBE12350:
 23546              	.LBB12352:
 23547              	.LBI12352:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 23548              		.loc 5 525 7 is_stmt 1 view .LVU6162
 23549              	.LBB12353:
 23550              	.LBB12354:
 23551              	.LBB12355:
 23552              	.LBI12355:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23553              		.loc 5 190 7 view .LVU6163
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23554              		.loc 5 190 7 is_stmt 0 view .LVU6164
 23555              	.LBE12355:
 23556              	.LBB12356:
 23557              	.LBI12356:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 23558              		.loc 5 156 2 is_stmt 1 view .LVU6165
 23559              	.LBB12357:
 23560              	.LBB12358:
 23561              	.LBB12359:
 23562              	.LBI12359:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23563              		.loc 6 141 7 view .LVU6166
 23564              	.LBB12360:
 23565              	.LBI12360:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23566              		.loc 7 83 7 view .LVU6167
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 785


 23567              		.loc 7 83 7 is_stmt 0 view .LVU6168
 23568              	.LBE12360:
 23569              	.LBE12359:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23570              		.loc 5 157 35 view .LVU6169
 23571 009c 0AAC     		add	r4, sp, #40
 23572              	.LVL1749:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23573              		.loc 5 157 35 view .LVU6170
 23574 009e 0894     		str	r4, [sp, #32]
 23575              	.LVL1750:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23576              		.loc 5 157 35 view .LVU6171
 23577              	.LBE12358:
 23578              	.LBE12357:
 23579              	.LBE12356:
 23580              	.LBB12361:
 23581              	.LBI12361:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 23582              		.loc 4 329 7 is_stmt 1 view .LVU6172
 23583              	.LBE12361:
 23584              	.LBE12354:
 23585              	.LBE12353:
 23586              	.LBE12352:
 23587              	.LBE12349:
 23588              	.LBE12574:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 23589              		.loc 4 332 2 view .LVU6173
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 23590              		.loc 4 335 2 view .LVU6174
 23591              	.LBB12575:
 23592              	.LBB12455:
 23593              	.LBB12368:
 23594              	.LBB12367:
 23595              	.LBB12366:
 23596              	.LBB12362:
 23597              	.LBI12362:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 23598              		.loc 5 263 9 view .LVU6175
 23599              	.LBB12363:
 23600              	.LBB12364:
 23601              	.LBI12364:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 23602              		.loc 5 243 9 view .LVU6176
 23603              	.LBB12365:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23604              		.loc 5 247 11 is_stmt 0 view .LVU6177
 23605 00a0 444A     		ldr	r2, .L524
 23606              	.LVL1751:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23607              		.loc 5 247 11 view .LVU6178
 23608 00a2 911E     		subs	r1, r2, #2
 23609 00a4 0023     		movs	r3, #0
 23610 00a6 08A8     		add	r0, sp, #32
 23611              	.LVL1752:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23612              		.loc 5 247 11 view .LVU6179
ARM GAS  /tmp/ccszdRNt.s 			page 786


 23613 00a8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 23614              	.LVL1753:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23615              		.loc 5 247 11 view .LVU6180
 23616              	.LBE12365:
 23617              	.LBE12364:
 23618              	.LBE12363:
 23619              	.LBE12362:
 23620              	.LBE12366:
 23621              	.LBE12367:
 23622              	.LBE12368:
 276:alohal/cli/cli.cpp ****         for (auto &candidate:candidate_names) {
 23623              		.loc 2 276 14 view .LVU6181
 23624 00ac 08A9     		add	r1, sp, #32
 23625 00ae 3000     		movs	r0, r6
 23626 00b0 FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 23627              	.LVL1754:
 23628              	.LBB12369:
 23629              	.LBI12369:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 23630              		.loc 5 657 7 is_stmt 1 view .LVU6182
 23631              	.LBB12370:
 23632              	.LBI12370:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23633              		.loc 5 229 7 view .LVU6183
 23634              	.LBB12371:
 23635              	.LBB12372:
 23636              	.LBI12372:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 23637              		.loc 5 221 7 view .LVU6184
 23638              	.LBB12373:
 23639              	.LBI12373:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23640              		.loc 5 186 7 view .LVU6185
 23641              	.LBB12374:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23642              		.loc 5 187 28 is_stmt 0 view .LVU6186
 23643 00b4 0898     		ldr	r0, [sp, #32]
 23644              	.LVL1755:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23645              		.loc 5 187 28 view .LVU6187
 23646              	.LBE12374:
 23647              	.LBE12373:
 23648              	.LBB12375:
 23649              	.LBI12375:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23650              		.loc 5 200 7 is_stmt 1 view .LVU6188
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23651              		.loc 5 200 7 is_stmt 0 view .LVU6189
 23652              	.LBE12375:
 23653              	.LBE12372:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 23654              		.loc 5 231 2 view .LVU6190
 23655 00b6 A042     		cmp	r0, r4
 23656 00b8 01D0     		beq	.L498
 23657              	.LVL1756:
 23658              	.LBB12376:
ARM GAS  /tmp/ccszdRNt.s 			page 787


 23659              	.LBI12376:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 23660              		.loc 5 236 7 is_stmt 1 view .LVU6191
 23661              	.LBB12377:
 23662              	.LBB12378:
 23663              	.LBI12378:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 23664              		.loc 10 469 7 view .LVU6192
 23665              	.LBB12379:
 23666              	.LBI12379:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 23667              		.loc 7 119 7 view .LVU6193
 23668              	.LBB12380:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23669              		.loc 7 128 19 is_stmt 0 view .LVU6194
 23670 00ba FFF7FEFF 		bl	_ZdlPv
 23671              	.LVL1757:
 23672              	.L498:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 23673              		.loc 7 128 19 view .LVU6195
 23674              	.LBE12380:
 23675              	.LBE12379:
 23676              	.LBE12378:
 23677              	.LBE12377:
 23678              	.LBE12376:
 23679              	.LBE12371:
 23680              	.LBE12370:
 23681              	.LBB12381:
 23682              	.LBI12381:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23683              		.loc 5 150 14 is_stmt 1 view .LVU6196
 23684              	.LBB12382:
 23685              	.LBI12382:
 23686              		.loc 6 153 7 view .LVU6197
 23687              	.LBB12383:
 23688              	.LBI12383:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23689              		.loc 7 89 7 view .LVU6198
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23690              		.loc 7 89 7 is_stmt 0 view .LVU6199
 23691              	.LBE12383:
 23692              	.LBE12382:
 23693              	.LBE12381:
 23694              	.LBE12369:
 23695              	.LBB12384:
 23696              	.LBI12384:
 23697              		.loc 6 153 7 is_stmt 1 view .LVU6200
 23698              	.LBB12385:
 23699              	.LBI12385:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23700              		.loc 7 89 7 view .LVU6201
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23701              		.loc 7 89 7 is_stmt 0 view .LVU6202
 23702              	.LBE12385:
 23703              	.LBE12384:
 277:alohal/cli/cli.cpp ****             Print(candidate + "\r\n");
 23704              		.loc 2 277 9 is_stmt 1 view .LVU6203
ARM GAS  /tmp/ccszdRNt.s 			page 788


 23705              	.LBB12386:
 23706              	.LBB12387:
 23707              	.LBI12387:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 23708              		.loc 13 808 7 view .LVU6204
 23709              	.LBB12388:
 23710              	.LBB12389:
 23711              	.LBI12389:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23712              		.loc 14 806 7 view .LVU6205
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23713              		.loc 14 806 7 is_stmt 0 view .LVU6206
 23714              	.LBE12389:
 23715              	.LBE12388:
 23716              	.LBE12387:
 277:alohal/cli/cli.cpp ****             Print(candidate + "\r\n");
 23717              		.loc 2 277 30 view .LVU6207
 23718 00be 029B     		ldr	r3, [sp, #8]
 23719              	.LVL1758:
 23720              	.LBB12390:
 23721              	.LBI12390:
 826:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 23722              		.loc 13 826 7 is_stmt 1 view .LVU6208
 23723              	.LBB12391:
 23724              	.LBI12391:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 23725              		.loc 14 806 7 view .LVU6209
 23726              	.LBB12392:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23727              		.loc 14 807 23 is_stmt 0 view .LVU6210
 23728 00c0 039D     		ldr	r5, [sp, #12]
 23729              	.LVL1759:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23730              		.loc 14 807 23 view .LVU6211
 23731 00c2 04E0     		b	.L502
 23732              	.LVL1760:
 23733              	.L519:
 807:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23734              		.loc 14 807 23 view .LVU6212
 23735              	.LBE12392:
 23736              	.LBE12391:
 23737              	.LBE12390:
 23738              	.LBB12393:
 23739              	.LBB12394:
 23740              	.LBB12395:
 23741              	.LBB12396:
 23742              	.LBB12397:
 23743              	.LBB12398:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 23744              		.loc 5 323 24 view .LVU6213
 23745 00c4 3C48     		ldr	r0, .L524+4
 23746 00c6 FFF7FEFF 		bl	_ZSt20__throw_length_errorPKc
 23747              	.LVL1761:
 23748              	.L501:
 323:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 23749              		.loc 5 323 24 view .LVU6214
 23750              	.LBE12398:
ARM GAS  /tmp/ccszdRNt.s 			page 789


 23751              	.LBE12397:
 23752              	.LBE12396:
 23753              	.LBE12395:
 23754              	.LBE12394:
 23755              	.LBE12393:
 23756              	.LBB12432:
 23757              	.LBB12433:
 23758              	.LBI12433:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23759              		.loc 5 150 14 is_stmt 1 view .LVU6215
 23760              	.LBB12434:
 23761              	.LBI12434:
 23762              		.loc 6 153 7 view .LVU6216
 23763              	.LBB12435:
 23764              	.LBI12435:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23765              		.loc 7 89 7 view .LVU6217
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23766              		.loc 7 89 7 is_stmt 0 view .LVU6218
 23767              	.LBE12435:
 23768              	.LBE12434:
 23769              	.LBE12433:
 23770              	.LBE12432:
 277:alohal/cli/cli.cpp ****             Print(candidate + "\r\n");
 23771              		.loc 2 277 9 is_stmt 1 view .LVU6219
 23772              	.LBB12447:
 23773              	.LBI12447:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 23774              		.loc 14 827 7 view .LVU6220
 23775              	.LBB12448:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 23776              		.loc 14 829 2 is_stmt 0 view .LVU6221
 23777 00ca 2300     		movs	r3, r4
 23778 00cc 1833     		adds	r3, r3, #24
 23779              	.LVL1762:
 23780              	.L502:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 23781              		.loc 14 829 2 view .LVU6222
 23782              	.LBE12448:
 23783              	.LBE12447:
 277:alohal/cli/cli.cpp ****             Print(candidate + "\r\n");
 23784              		.loc 2 277 30 is_stmt 1 discriminator 3 view .LVU6223
 23785              	.LBB12449:
 23786              	.LBI12449:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 23787              		.loc 14 907 5 discriminator 3 view .LVU6224
 23788              	.LBB12450:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23789              		.loc 14 910 27 is_stmt 0 discriminator 3 view .LVU6225
 23790 00ce 1C00     		movs	r4, r3
 23791              	.LVL1763:
 910:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 
 23792              		.loc 14 910 27 discriminator 3 view .LVU6226
 23793              	.LBE12450:
 23794              	.LBE12449:
 277:alohal/cli/cli.cpp ****             Print(candidate + "\r\n");
 23795              		.loc 2 277 30 discriminator 3 view .LVU6227
ARM GAS  /tmp/ccszdRNt.s 			page 790


 23796 00d0 9D42     		cmp	r5, r3
 23797 00d2 E0D0     		beq	.L503
 23798              	.LVL1764:
 278:alohal/cli/cli.cpp ****         }
 23799              		.loc 2 278 13 is_stmt 1 view .LVU6228
 23800              	.LBB12451:
 23801              	.LBI12393:
6057:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      const _CharT* __rhs)
 23802              		.loc 5 6057 5 view .LVU6229
 23803              	.LBB12430:
 23804              	.LBB12404:
 23805              	.LBI12404:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 23806              		.loc 5 448 7 view .LVU6230
 23807              	.LBB12405:
 23808              	.LBB12406:
 23809              	.LBI12406:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23810              		.loc 5 190 7 view .LVU6231
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23811              		.loc 5 190 7 is_stmt 0 view .LVU6232
 23812              	.LBE12406:
 23813              	.LBB12407:
 23814              	.LBI12407:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23815              		.loc 5 290 7 is_stmt 1 view .LVU6233
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 23816              		.loc 5 290 7 is_stmt 0 view .LVU6234
 23817              	.LBE12407:
 23818              	.LBB12408:
 23819              	.LBI12408:
 23820              		.loc 20 97 19 is_stmt 1 view .LVU6235
 23821              	.LBB12409:
 23822              	.LBI12409:
 23823              		.loc 10 514 7 view .LVU6236
 23824              	.LBB12410:
 23825              	.LBI12410:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23826              		.loc 6 141 7 view .LVU6237
 23827              	.LBB12411:
 23828              	.LBI12411:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23829              		.loc 7 83 7 view .LVU6238
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23830              		.loc 7 83 7 is_stmt 0 view .LVU6239
 23831              	.LBE12411:
 23832              	.LBE12410:
 23833              	.LBE12409:
 23834              	.LBE12408:
 23835              	.LBB12412:
 23836              	.LBI12412:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 23837              		.loc 5 159 2 is_stmt 1 view .LVU6240
 23838              	.LBB12413:
 23839              	.LBB12414:
 23840              	.LBI12414:
 23841              		.loc 8 99 5 view .LVU6241
ARM GAS  /tmp/ccszdRNt.s 			page 791


 23842              		.loc 8 99 5 is_stmt 0 view .LVU6242
 23843              	.LBE12414:
 23844              	.LBB12415:
 23845              	.LBI12415:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 23846              		.loc 6 141 7 is_stmt 1 view .LVU6243
 23847              	.LBB12416:
 23848              	.LBI12416:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23849              		.loc 7 83 7 view .LVU6244
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23850              		.loc 7 83 7 is_stmt 0 view .LVU6245
 23851              	.LBE12416:
 23852              	.LBE12415:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23853              		.loc 5 160 46 view .LVU6246
 23854 00d4 10AA     		add	r2, sp, #64
 23855              	.LVL1765:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23856              		.loc 5 160 46 view .LVU6247
 23857 00d6 0E92     		str	r2, [sp, #56]
 23858              	.LVL1766:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 23859              		.loc 5 160 46 view .LVU6248
 23860              	.LBE12413:
 23861              	.LBE12412:
 23862              	.LBB12417:
 23863              	.LBI12417:
 23864              		.loc 6 153 7 is_stmt 1 view .LVU6249
 23865              	.LBB12418:
 23866              	.LBI12418:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 23867              		.loc 7 89 7 view .LVU6250
 23868              	.LBE12418:
 23869              	.LBE12417:
 23870              	.LBB12419:
 23871              	.LBI12419:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23872              		.loc 5 186 7 view .LVU6251
 23873              	.LBB12420:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23874              		.loc 5 187 28 is_stmt 0 view .LVU6252
 23875 00d8 1968     		ldr	r1, [r3]
 23876              	.LBE12420:
 23877              	.LBE12419:
 23878              	.LBB12421:
 23879              	.LBI12421:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23880              		.loc 5 186 7 is_stmt 1 view .LVU6253
 23881              	.LBE12421:
 23882              	.LBB12422:
 23883              	.LBI12422:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23884              		.loc 5 936 7 view .LVU6254
 23885              	.LBB12423:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23886              		.loc 5 937 16 is_stmt 0 view .LVU6255
ARM GAS  /tmp/ccszdRNt.s 			page 792


 23887 00da 5A68     		ldr	r2, [r3, #4]
 23888              	.LBE12423:
 23889              	.LBE12422:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23890              		.loc 5 451 9 view .LVU6256
 23891 00dc 8A18     		adds	r2, r1, r2
 23892              	.LVL1767:
 23893              	.LBB12424:
 23894              	.LBI12424:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 23895              		.loc 5 263 9 is_stmt 1 view .LVU6257
 23896              	.LBB12425:
 23897              	.LBB12426:
 23898              	.LBI12426:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 23899              		.loc 5 243 9 view .LVU6258
 23900              	.LBB12427:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23901              		.loc 5 247 11 is_stmt 0 view .LVU6259
 23902 00de 0023     		movs	r3, #0
 23903              	.LVL1768:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23904              		.loc 5 247 11 view .LVU6260
 23905 00e0 0EA8     		add	r0, sp, #56
 23906              	.LVL1769:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23907              		.loc 5 247 11 view .LVU6261
 23908 00e2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 23909              	.LVL1770:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 23910              		.loc 5 247 11 view .LVU6262
 23911              	.LBE12427:
 23912              	.LBE12426:
 23913              	.LBE12425:
 23914              	.LBE12424:
 23915              	.LBE12405:
 23916              	.LBE12404:
 23917              	.LBB12428:
 23918              	.LBI12395:
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23919              		.loc 5 1263 7 is_stmt 1 view .LVU6263
1263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23920              		.loc 5 1263 7 is_stmt 0 view .LVU6264
 23921              	.LBE12428:
 23922              	.LBE12430:
 23923              	.LBE12451:
 23924              	.LBE12386:
 23925              	.LBE12455:
 23926              	.LBE12575:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 23927              		.loc 4 332 2 is_stmt 1 view .LVU6265
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 23928              		.loc 4 335 2 view .LVU6266
 23929              	.LBB12576:
 23930              	.LBB12456:
 23931              	.LBB12454:
 23932              	.LBB12452:
ARM GAS  /tmp/ccszdRNt.s 			page 793


 23933              	.LBB12431:
 23934              	.LBB12429:
 23935              	.LBB12403:
 23936              	.LBB12402:
 23937              	.LBI12397:
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23938              		.loc 5 320 7 view .LVU6267
 23939              	.LBB12401:
 23940              	.LBB12399:
 23941              	.LBI12399:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 23942              		.loc 5 930 7 view .LVU6268
 23943              	.LBB12400:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23944              		.loc 5 931 16 is_stmt 0 view .LVU6269
 23945 00e6 0F9A     		ldr	r2, [sp, #60]
 23946              	.LVL1771:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23947              		.loc 5 931 16 view .LVU6270
 23948              	.LBE12400:
 23949              	.LBE12399:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 23950              		.loc 5 322 2 view .LVU6271
 23951 00e8 344B     		ldr	r3, .L524+8
 23952 00ea 9B1A     		subs	r3, r3, r2
 23953 00ec 012B     		cmp	r3, #1
 23954 00ee E9D9     		bls	.L519
 23955              	.LVL1772:
 322:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 23956              		.loc 5 322 2 view .LVU6272
 23957              	.LBE12401:
 23958              	.LBE12402:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 23959              		.loc 5 1268 27 view .LVU6273
 23960 00f0 0222     		movs	r2, #2
 23961 00f2 3349     		ldr	r1, .L524+12
 23962 00f4 0EA8     		add	r0, sp, #56
 23963              	.LVL1773:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 23964              		.loc 5 1268 27 view .LVU6274
 23965 00f6 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 23966              	.LVL1774:
1268:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 23967              		.loc 5 1268 27 view .LVU6275
 23968              	.LBE12403:
 23969              	.LBE12429:
 23970              	.LBE12431:
 23971              	.LBE12452:
 278:alohal/cli/cli.cpp ****         }
 23972              		.loc 2 278 18 view .LVU6276
 23973 00fa 0EA9     		add	r1, sp, #56
 23974 00fc 3000     		movs	r0, r6
 23975 00fe FFF7FEFF 		bl	_ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 23976              	.LVL1775:
 23977              	.LBB12453:
 23978              	.LBI12432:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
ARM GAS  /tmp/ccszdRNt.s 			page 794


 23979              		.loc 5 657 7 is_stmt 1 view .LVU6277
 23980              	.LBB12436:
 23981              	.LBI12436:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23982              		.loc 5 229 7 view .LVU6278
 23983              	.LBB12437:
 23984              	.LBB12438:
 23985              	.LBI12438:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 23986              		.loc 5 221 7 view .LVU6279
 23987              	.LBB12439:
 23988              	.LBI12439:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 23989              		.loc 5 186 7 view .LVU6280
 23990              	.LBB12440:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23991              		.loc 5 187 28 is_stmt 0 view .LVU6281
 23992 0102 0E98     		ldr	r0, [sp, #56]
 23993              	.LVL1776:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 23994              		.loc 5 187 28 view .LVU6282
 23995              	.LBE12440:
 23996              	.LBE12439:
 23997              	.LBB12441:
 23998              	.LBI12441:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 23999              		.loc 5 200 7 is_stmt 1 view .LVU6283
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24000              		.loc 5 200 7 is_stmt 0 view .LVU6284
 24001              	.LBE12441:
 24002              	.LBE12438:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24003              		.loc 5 231 2 view .LVU6285
 24004 0104 10AB     		add	r3, sp, #64
 24005 0106 9842     		cmp	r0, r3
 24006 0108 DFD0     		beq	.L501
 24007              	.LVL1777:
 24008              	.LBB12442:
 24009              	.LBI12442:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24010              		.loc 5 236 7 is_stmt 1 view .LVU6286
 24011              	.LBB12443:
 24012              	.LBB12444:
 24013              	.LBI12444:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24014              		.loc 10 469 7 view .LVU6287
 24015              	.LBB12445:
 24016              	.LBI12445:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24017              		.loc 7 119 7 view .LVU6288
 24018              	.LBB12446:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24019              		.loc 7 128 19 is_stmt 0 view .LVU6289
 24020 010a FFF7FEFF 		bl	_ZdlPv
 24021              	.LVL1778:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24022              		.loc 7 128 19 view .LVU6290
ARM GAS  /tmp/ccszdRNt.s 			page 795


 24023              	.LBE12446:
 24024              	.LBE12445:
 24025              	.LBE12444:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24026              		.loc 5 237 79 view .LVU6291
 24027 010e DCE7     		b	.L501
 24028              	.LVL1779:
 24029              	.L518:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24030              		.loc 5 237 79 view .LVU6292
 24031              	.LBE12443:
 24032              	.LBE12442:
 24033              	.LBE12437:
 24034              	.LBE12436:
 24035              	.LBE12453:
 24036              	.LBE12454:
 24037              	.LBE12456:
 281:alohal/cli/cli.cpp ****     }
 24038              		.loc 2 281 9 is_stmt 1 view .LVU6293
 24039              	.LBB12457:
 24040              	.LBI12457:
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 24041              		.loc 13 1118 7 view .LVU6294
 24042              	.LBB12458:
 24043              	.LBI12458:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 24044              		.loc 13 808 7 view .LVU6295
 24045              	.LBB12459:
 24046              	.LBI12459:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 24047              		.loc 14 806 7 view .LVU6296
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 24048              		.loc 14 806 7 is_stmt 0 view .LVU6297
 24049              	.LBE12459:
 24050              	.LBE12458:
 24051              	.LBE12457:
 24052              	.LBB12460:
 24053              	.LBI12460:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24054              		.loc 5 936 7 is_stmt 1 view .LVU6298
 24055              	.LBB12461:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24056              		.loc 5 937 16 is_stmt 0 view .LVU6299
 24057 0110 6A68     		ldr	r2, [r5, #4]
 24058              	.LVL1780:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24059              		.loc 5 937 16 view .LVU6300
 24060              	.LBE12461:
 24061              	.LBE12460:
 24062              	.LBB12462:
 24063              	.LBI12462:
1118:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 24064              		.loc 13 1118 7 is_stmt 1 view .LVU6301
 24065              	.LBB12463:
 24066              	.LBI12463:
 808:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 24067              		.loc 13 808 7 view .LVU6302
ARM GAS  /tmp/ccszdRNt.s 			page 796


 24068              	.LBB12464:
 24069              	.LBI12464:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 24070              		.loc 14 806 7 view .LVU6303
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 24071              		.loc 14 806 7 is_stmt 0 view .LVU6304
 24072              	.LBE12464:
 24073              	.LBE12463:
 24074              	.LBE12462:
 24075              	.LBB12465:
 24076              	.LBI12465:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24077              		.loc 5 936 7 is_stmt 1 view .LVU6305
 24078              	.LBB12466:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24079              		.loc 5 937 16 is_stmt 0 view .LVU6306
 24080 0112 4468     		ldr	r4, [r0, #4]
 24081              	.LVL1781:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24082              		.loc 5 937 16 view .LVU6307
 24083              	.LBE12466:
 24084              	.LBE12465:
 24085              	.LBB12467:
 24086              	.LBI12467:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 24087              		.loc 5 2834 7 is_stmt 1 view .LVU6308
 24088              	.LBB12468:
 24089              	.LBB12469:
 24090              	.LBI12469:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24091              		.loc 5 310 7 view .LVU6309
 24092              	.LBB12470:
 24093              	.LBB12471:
 24094              	.LBI12471:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24095              		.loc 5 930 7 view .LVU6310
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24096              		.loc 5 930 7 is_stmt 0 view .LVU6311
 24097              	.LBE12471:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24098              		.loc 5 312 2 view .LVU6312
 24099 0114 A242     		cmp	r2, r4
 24100 0116 1BD8     		bhi	.L520
 24101              	.LVL1782:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24102              		.loc 5 312 2 view .LVU6313
 24103              	.LBE12470:
 24104              	.LBE12469:
 24105              	.LBB12473:
 24106              	.LBI12473:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 24107              		.loc 5 476 7 is_stmt 1 view .LVU6314
 24108              	.LBB12474:
 24109              	.LBB12475:
 24110              	.LBI12475:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24111              		.loc 5 190 7 view .LVU6315
ARM GAS  /tmp/ccszdRNt.s 			page 797


 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24112              		.loc 5 190 7 is_stmt 0 view .LVU6316
 24113              	.LBE12475:
 24114              	.LBB12476:
 24115              	.LBI12476:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 24116              		.loc 6 138 7 is_stmt 1 view .LVU6317
 24117              	.LBB12477:
 24118              	.LBI12477:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24119              		.loc 7 80 7 view .LVU6318
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24120              		.loc 7 80 7 is_stmt 0 view .LVU6319
 24121              	.LBE12477:
 24122              	.LBE12476:
 24123              	.LBB12478:
 24124              	.LBI12478:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 24125              		.loc 5 159 2 is_stmt 1 view .LVU6320
 24126              	.LBB12479:
 24127              	.LBB12480:
 24128              	.LBB12481:
 24129              	.LBI12481:
 24130              		.loc 8 99 5 view .LVU6321
 24131              		.loc 8 99 5 is_stmt 0 view .LVU6322
 24132              	.LBE12481:
 24133              	.LBB12482:
 24134              	.LBI12482:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24135              		.loc 6 141 7 is_stmt 1 view .LVU6323
 24136              	.LBB12483:
 24137              	.LBI12483:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24138              		.loc 7 83 7 view .LVU6324
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24139              		.loc 7 83 7 is_stmt 0 view .LVU6325
 24140              	.LBE12483:
 24141              	.LBE12482:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24142              		.loc 5 160 46 view .LVU6326
 24143 0118 16AB     		add	r3, sp, #88
 24144              	.LVL1783:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24145              		.loc 5 160 46 view .LVU6327
 24146 011a 1493     		str	r3, [sp, #80]
 24147              	.LVL1784:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 24148              		.loc 5 160 46 view .LVU6328
 24149              	.LBE12480:
 24150              	.LBE12479:
 24151              	.LBE12478:
 24152              	.LBB12484:
 24153              	.LBI12484:
 24154              		.loc 6 153 7 is_stmt 1 view .LVU6329
 24155              	.LBB12485:
 24156              	.LBI12485:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 798


 24157              		.loc 7 89 7 view .LVU6330
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24158              		.loc 7 89 7 is_stmt 0 view .LVU6331
 24159              	.LBE12485:
 24160              	.LBE12484:
 24161              	.LBB12486:
 24162              	.LBB12487:
 24163              	.LBI12487:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24164              		.loc 5 186 7 is_stmt 1 view .LVU6332
 24165              	.LBB12488:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24166              		.loc 5 187 28 is_stmt 0 view .LVU6333
 24167 011c 0168     		ldr	r1, [r0]
 24168              	.LVL1785:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24169              		.loc 5 187 28 view .LVU6334
 24170              	.LBE12488:
 24171              	.LBE12487:
 24172              	.LBB12489:
 24173              	.LBI12489:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24174              		.loc 5 310 7 is_stmt 1 view .LVU6335
 24175              	.LBB12490:
 24176              	.LBB12491:
 24177              	.LBI12491:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24178              		.loc 5 930 7 view .LVU6336
 24179              	.LBB12492:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24180              		.loc 5 931 16 is_stmt 0 view .LVU6337
 24181 011e 4368     		ldr	r3, [r0, #4]
 24182              	.LVL1786:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24183              		.loc 5 931 16 view .LVU6338
 24184              	.LBE12492:
 24185              	.LBE12491:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24186              		.loc 5 312 2 view .LVU6339
 24187 0120 9A42     		cmp	r2, r3
 24188 0122 1AD8     		bhi	.L521
 24189              	.LVL1787:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 24190              		.loc 5 312 2 view .LVU6340
 24191              	.LBE12490:
 24192              	.LBE12489:
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 24193              		.loc 5 480 16 view .LVU6341
 24194 0124 8918     		adds	r1, r1, r2
 24195              	.LVL1788:
 24196              	.LBB12494:
 24197              	.LBI12494:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24198              		.loc 5 329 7 is_stmt 1 view .LVU6342
 24199              	.LBB12495:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 24200              		.loc 5 331 47 is_stmt 0 view .LVU6343
ARM GAS  /tmp/ccszdRNt.s 			page 799


 24201 0126 9A1A     		subs	r2, r3, r2
 24202              	.LVL1789:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 24203              		.loc 5 332 19 view .LVU6344
 24204 0128 9442     		cmp	r4, r2
 24205 012a 00D2     		bcs	.L506
 24206 012c 2200     		movs	r2, r4
 24207              	.LVL1790:
 24208              	.L506:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 24209              		.loc 5 332 19 view .LVU6345
 24210              	.LBE12495:
 24211              	.LBE12494:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 24212              		.loc 5 482 2 view .LVU6346
 24213 012e 8A18     		adds	r2, r1, r2
 24214              	.LVL1791:
 24215              	.LBB12496:
 24216              	.LBI12496:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 24217              		.loc 5 263 9 is_stmt 1 view .LVU6347
 24218              	.LBB12497:
 24219              	.LBB12498:
 24220              	.LBI12498:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 24221              		.loc 5 243 9 view .LVU6348
 24222              	.LBB12499:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24223              		.loc 5 247 11 is_stmt 0 view .LVU6349
 24224 0130 0023     		movs	r3, #0
 24225              	.LVL1792:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24226              		.loc 5 247 11 view .LVU6350
 24227 0132 14A8     		add	r0, sp, #80
 24228              	.LVL1793:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24229              		.loc 5 247 11 view .LVU6351
 24230 0134 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 24231              	.LVL1794:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 24232              		.loc 5 247 11 view .LVU6352
 24233              	.LBE12499:
 24234              	.LBE12498:
 24235              	.LBE12497:
 24236              	.LBE12496:
 24237              	.LBE12486:
 24238              	.LBE12474:
 24239              	.LBE12473:
 24240              	.LBE12468:
 24241              	.LBE12467:
 281:alohal/cli/cli.cpp ****     }
 24242              		.loc 2 281 109 view .LVU6353
 24243 0138 301D     		adds	r0, r6, #4
 24244              	.LVL1795:
 24245              	.LBB12506:
 24246              	.LBI12506:
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
ARM GAS  /tmp/ccszdRNt.s 			page 800


 24247              		.loc 5 1168 7 is_stmt 1 view .LVU6354
 24248              	.LBB12507:
 24249              	.LBI12507:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 24250              		.loc 5 1221 7 view .LVU6355
 24251              	.LBB12508:
 24252              	.LBB12509:
 24253              	.LBI12509:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24254              		.loc 5 186 7 view .LVU6356
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24255              		.loc 5 186 7 is_stmt 0 view .LVU6357
 24256              	.LBE12509:
 24257              	.LBB12510:
 24258              	.LBI12510:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24259              		.loc 5 930 7 is_stmt 1 view .LVU6358
 24260              	.LBB12511:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24261              		.loc 5 931 16 is_stmt 0 view .LVU6359
 24262 013a 159A     		ldr	r2, [sp, #84]
 24263              	.LVL1796:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24264              		.loc 5 931 16 view .LVU6360
 24265              	.LBE12511:
 24266              	.LBE12510:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24267              		.loc 5 1222 55 view .LVU6361
 24268 013c 1499     		ldr	r1, [sp, #80]
 24269 013e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 24270              	.LVL1797:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24271              		.loc 5 1222 55 view .LVU6362
 24272              	.LBE12508:
 24273              	.LBE12507:
 24274              	.LBE12506:
 24275              	.LBB12512:
 24276              	.LBI12512:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24277              		.loc 5 657 7 is_stmt 1 view .LVU6363
 24278              	.LBB12513:
 24279              	.LBI12513:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24280              		.loc 5 229 7 view .LVU6364
 24281              	.LBB12514:
 24282              	.LBB12515:
 24283              	.LBI12515:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 24284              		.loc 5 221 7 view .LVU6365
 24285              	.LBB12516:
 24286              	.LBI12516:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24287              		.loc 5 186 7 view .LVU6366
 24288              	.LBB12517:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24289              		.loc 5 187 28 is_stmt 0 view .LVU6367
 24290 0142 1498     		ldr	r0, [sp, #80]
ARM GAS  /tmp/ccszdRNt.s 			page 801


 24291              	.LVL1798:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24292              		.loc 5 187 28 view .LVU6368
 24293              	.LBE12517:
 24294              	.LBE12516:
 24295              	.LBB12518:
 24296              	.LBI12518:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24297              		.loc 5 200 7 is_stmt 1 view .LVU6369
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24298              		.loc 5 200 7 is_stmt 0 view .LVU6370
 24299              	.LBE12518:
 24300              	.LBE12515:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24301              		.loc 5 231 2 view .LVU6371
 24302 0144 16AB     		add	r3, sp, #88
 24303 0146 9842     		cmp	r0, r3
 24304 0148 A5D0     		beq	.L503
 24305              	.LVL1799:
 24306              	.LBB12519:
 24307              	.LBI12519:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24308              		.loc 5 236 7 is_stmt 1 view .LVU6372
 24309              	.LBB12520:
 24310              	.LBB12521:
 24311              	.LBI12521:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24312              		.loc 10 469 7 view .LVU6373
 24313              	.LBB12522:
 24314              	.LBI12522:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24315              		.loc 7 119 7 view .LVU6374
 24316              	.LBB12523:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24317              		.loc 7 128 19 is_stmt 0 view .LVU6375
 24318 014a FFF7FEFF 		bl	_ZdlPv
 24319              	.LVL1800:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24320              		.loc 7 128 19 view .LVU6376
 24321              	.LBE12523:
 24322              	.LBE12522:
 24323              	.LBE12521:
 24324              	.LBE12520:
 24325              	.LBE12519:
 24326              	.LBE12514:
 24327              	.LBE12513:
 24328              	.LBB12527:
 24329              	.LBI12527:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24330              		.loc 5 150 14 is_stmt 1 view .LVU6377
 24331              	.LBB12528:
 24332              	.LBI12528:
 24333              		.loc 6 153 7 view .LVU6378
 24334              	.LBB12529:
 24335              	.LBI12529:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24336              		.loc 7 89 7 view .LVU6379
ARM GAS  /tmp/ccszdRNt.s 			page 802


  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24337              		.loc 7 89 7 is_stmt 0 view .LVU6380
 24338              	.LBE12529:
 24339              	.LBE12528:
 24340              	.LBE12527:
 24341              	.LBB12530:
 24342              	.LBB12526:
 24343              	.LBB12525:
 24344              	.LBB12524:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24345              		.loc 5 237 79 view .LVU6381
 24346 014e A2E7     		b	.L503
 24347              	.LVL1801:
 24348              	.L520:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24349              		.loc 5 237 79 view .LVU6382
 24350              	.LBE12524:
 24351              	.LBE12525:
 24352              	.LBE12526:
 24353              	.LBE12530:
 24354              	.LBE12512:
 24355              	.LBB12531:
 24356              	.LBB12505:
 24357              	.LBB12503:
 24358              	.LBB12472:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 24359              		.loc 5 313 28 view .LVU6383
 24360 0150 2300     		movs	r3, r4
 24361 0152 1C49     		ldr	r1, .L524+16
 24362 0154 1C48     		ldr	r0, .L524+20
 24363              	.LVL1802:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 24364              		.loc 5 313 28 view .LVU6384
 24365 0156 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 24366              	.LVL1803:
 24367              	.L521:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 24368              		.loc 5 313 28 view .LVU6385
 24369              	.LBE12472:
 24370              	.LBE12503:
 24371              	.LBB12504:
 24372              	.LBB12502:
 24373              	.LBB12501:
 24374              	.LBB12500:
 24375              	.LBB12493:
 24376 015a 1C49     		ldr	r1, .L524+24
 24377 015c 1A48     		ldr	r0, .L524+20
 24378              	.LVL1804:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 24379              		.loc 5 313 28 view .LVU6386
 24380 015e FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 24381              	.LVL1805:
 24382              	.L522:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 24383              		.loc 5 313 28 view .LVU6387
 24384              	.LBE12493:
 24385              	.LBE12500:
ARM GAS  /tmp/ccszdRNt.s 			page 803


 24386              	.LBE12501:
 24387              	.LBE12502:
 24388              	.LBE12504:
 24389              	.LBE12505:
 24390              	.LBE12531:
 24391              	.LBE12576:
 24392              	.LBB12577:
 24393              	.LBB12573:
 24394              	.LBB12561:
 24395              	.LBB12536:
 24396              	.LBB12537:
 24397              	.LBB12538:
 24398              	.LBB12539:
 24399              	.LBB12540:
 24400              	.LBB12541:
 24401              	.LBB12542:
 24402              	.LBB12543:
 24403              	.LBB12544:
 24404              	.LBI12544:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24405              		.loc 5 236 7 is_stmt 1 view .LVU6388
 24406              	.LBB12545:
 24407              	.LBB12546:
 24408              	.LBI12546:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24409              		.loc 10 469 7 view .LVU6389
 24410              	.LBB12547:
 24411              	.LBI12547:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24412              		.loc 7 119 7 view .LVU6390
 24413              	.LBB12548:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24414              		.loc 7 128 19 is_stmt 0 view .LVU6391
 24415 0162 FFF7FEFF 		bl	_ZdlPv
 24416              	.LVL1806:
 24417              	.L509:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24418              		.loc 7 128 19 view .LVU6392
 24419              	.LBE12548:
 24420              	.LBE12547:
 24421              	.LBE12546:
 24422              	.LBE12545:
 24423              	.LBE12544:
 24424              	.LBE12543:
 24425              	.LBE12542:
 24426              	.LBB12555:
 24427              	.LBI12555:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24428              		.loc 5 150 14 is_stmt 1 view .LVU6393
 24429              	.LBB12556:
 24430              	.LBI12556:
 24431              		.loc 6 153 7 view .LVU6394
 24432              	.LBB12557:
 24433              	.LBI12557:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24434              		.loc 7 89 7 view .LVU6395
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 804


 24435              		.loc 7 89 7 is_stmt 0 view .LVU6396
 24436              	.LBE12557:
 24437              	.LBE12556:
 24438              	.LBE12555:
 24439              	.LBE12541:
 24440              	.LBE12540:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 24441              		.loc 24 107 4 is_stmt 1 view .LVU6397
 24442 0166 1834     		adds	r4, r4, #24
 24443              	.LVL1807:
 24444              	.L510:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 24445              		.loc 24 107 19 view .LVU6398
 24446 0168 A542     		cmp	r5, r4
 24447 016a 05D0     		beq	.L508
 24448              	.LVL1808:
 24449              	.LBB12560:
 24450              	.LBI12540:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 24451              		.loc 24 97 5 view .LVU6399
 24452              	.LBB12559:
 24453              	.LBI12541:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24454              		.loc 5 657 7 view .LVU6400
 24455              	.LBB12558:
 24456              	.LBI12542:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24457              		.loc 5 229 7 view .LVU6401
 24458              	.LBB12554:
 24459              	.LBB12549:
 24460              	.LBI12549:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 24461              		.loc 5 221 7 view .LVU6402
 24462              	.LBB12550:
 24463              	.LBI12550:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24464              		.loc 5 186 7 view .LVU6403
 24465              	.LBB12551:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24466              		.loc 5 187 28 is_stmt 0 view .LVU6404
 24467 016c 2068     		ldr	r0, [r4]
 24468              	.LVL1809:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24469              		.loc 5 187 28 view .LVU6405
 24470              	.LBE12551:
 24471              	.LBE12550:
 24472              	.LBB12552:
 24473              	.LBI12552:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24474              		.loc 5 200 7 is_stmt 1 view .LVU6406
 24475              	.LBB12553:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 24476              		.loc 5 203 57 is_stmt 0 view .LVU6407
 24477 016e 2300     		movs	r3, r4
 24478 0170 0833     		adds	r3, r3, #8
 24479              	.LVL1810:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
ARM GAS  /tmp/ccszdRNt.s 			page 805


 24480              		.loc 5 203 57 view .LVU6408
 24481              	.LBE12553:
 24482              	.LBE12552:
 24483              	.LBE12549:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24484              		.loc 5 231 2 view .LVU6409
 24485 0172 9842     		cmp	r0, r3
 24486 0174 F5D1     		bne	.L522
 24487 0176 F6E7     		b	.L509
 24488              	.LVL1811:
 24489              	.L508:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24490              		.loc 5 231 2 view .LVU6410
 24491              	.LBE12554:
 24492              	.LBE12558:
 24493              	.LBE12559:
 24494              	.LBE12560:
 24495              	.LBE12539:
 24496              	.LBE12538:
 24497              	.LBE12537:
 24498              	.LBE12536:
 24499              	.LBE12561:
 24500              	.LBB12562:
 24501              	.LBI12562:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 24502              		.loc 13 330 7 is_stmt 1 view .LVU6411
 24503              	.LBB12563:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 24504              		.loc 13 332 2 is_stmt 0 view .LVU6412
 24505 0178 0298     		ldr	r0, [sp, #8]
 24506              	.LVL1812:
 24507              	.LBB12564:
 24508              	.LBI12564:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 24509              		.loc 13 347 7 is_stmt 1 view .LVU6413
 24510              	.LBB12565:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 24511              		.loc 13 350 2 is_stmt 0 view .LVU6414
 24512 017a 0028     		cmp	r0, #0
 24513 017c 01D0     		beq	.L511
 24514              	.LVL1813:
 24515              	.LBB12566:
 24516              	.LBI12566:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24517              		.loc 10 469 7 is_stmt 1 view .LVU6415
 24518              	.LBB12567:
 24519              	.LBB12568:
 24520              	.LBI12568:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24521              		.loc 7 119 7 view .LVU6416
 24522              	.LBB12569:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24523              		.loc 7 128 19 is_stmt 0 view .LVU6417
 24524 017e FFF7FEFF 		bl	_ZdlPv
 24525              	.LVL1814:
 24526              	.L511:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 806


 24527              		.loc 7 128 19 view .LVU6418
 24528              	.LBE12569:
 24529              	.LBE12568:
 24530              	.LBE12567:
 24531              	.LBE12566:
 24532              	.LBE12565:
 24533              	.LBE12564:
 24534              	.LBB12570:
 24535              	.LBI12570:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 24536              		.loc 13 125 14 is_stmt 1 view .LVU6419
 24537              	.LBB12571:
 24538              	.LBI12571:
 24539              		.loc 6 153 7 view .LVU6420
 24540              	.LBB12572:
 24541              	.LBI12572:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24542              		.loc 7 89 7 view .LVU6421
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24543              		.loc 7 89 7 is_stmt 0 view .LVU6422
 24544              	.LBE12572:
 24545              	.LBE12571:
 24546              	.LBE12570:
 24547              	.LBE12563:
 24548              	.LBE12562:
 24549              	.LBE12573:
 24550              	.LBE12577:
 24551              	.LBB12578:
 24552              	.LBI12578:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 24553              		.loc 13 675 7 is_stmt 1 view .LVU6423
 24554              	.LBB12579:
 24555              	.LBB12580:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 24556              		.loc 13 677 15 is_stmt 0 view .LVU6424
 24557 0182 059C     		ldr	r4, [sp, #20]
 24558 0184 069D     		ldr	r5, [sp, #24]
 24559              	.LVL1815:
 24560              	.LBB12581:
 24561              	.LBI12581:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 24562              		.loc 13 273 7 is_stmt 1 view .LVU6425
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 24563              		.loc 13 273 7 is_stmt 0 view .LVU6426
 24564              	.LBE12581:
 24565              	.LBB12582:
 24566              	.LBI12582:
 24567              		.loc 24 203 5 is_stmt 1 view .LVU6427
 24568 0186 02E0     		b	.L514
 24569              	.LVL1816:
 24570              	.L523:
 24571              	.LBB12583:
 24572              	.LBB12584:
 24573              	.LBB12585:
 24574              	.LBB12586:
 24575              	.LBB12587:
 24576              	.LBB12588:
ARM GAS  /tmp/ccszdRNt.s 			page 807


 24577              	.LBB12589:
 24578              	.LBB12590:
 24579              	.LBB12591:
 24580              	.LBI12591:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24581              		.loc 5 236 7 view .LVU6428
 24582              	.LBB12592:
 24583              	.LBB12593:
 24584              	.LBI12593:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24585              		.loc 10 469 7 view .LVU6429
 24586              	.LBB12594:
 24587              	.LBI12594:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24588              		.loc 7 119 7 view .LVU6430
 24589              	.LBB12595:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24590              		.loc 7 128 19 is_stmt 0 view .LVU6431
 24591 0188 FFF7FEFF 		bl	_ZdlPv
 24592              	.LVL1817:
 24593              	.L513:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24594              		.loc 7 128 19 view .LVU6432
 24595              	.LBE12595:
 24596              	.LBE12594:
 24597              	.LBE12593:
 24598              	.LBE12592:
 24599              	.LBE12591:
 24600              	.LBE12590:
 24601              	.LBE12589:
 24602              	.LBB12602:
 24603              	.LBI12602:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24604              		.loc 5 150 14 is_stmt 1 view .LVU6433
 24605              	.LBB12603:
 24606              	.LBI12603:
 24607              		.loc 6 153 7 view .LVU6434
 24608              	.LBB12604:
 24609              	.LBI12604:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24610              		.loc 7 89 7 view .LVU6435
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24611              		.loc 7 89 7 is_stmt 0 view .LVU6436
 24612              	.LBE12604:
 24613              	.LBE12603:
 24614              	.LBE12602:
 24615              	.LBE12588:
 24616              	.LBE12587:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 24617              		.loc 24 107 4 is_stmt 1 view .LVU6437
 24618 018c 1834     		adds	r4, r4, #24
 24619              	.LVL1818:
 24620              	.L514:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 24621              		.loc 24 107 19 view .LVU6438
 24622 018e A542     		cmp	r5, r4
 24623 0190 05D0     		beq	.L512
ARM GAS  /tmp/ccszdRNt.s 			page 808


 24624              	.LVL1819:
 24625              	.LBB12607:
 24626              	.LBI12587:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 24627              		.loc 24 97 5 view .LVU6439
 24628              	.LBB12606:
 24629              	.LBI12588:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24630              		.loc 5 657 7 view .LVU6440
 24631              	.LBB12605:
 24632              	.LBI12589:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24633              		.loc 5 229 7 view .LVU6441
 24634              	.LBB12601:
 24635              	.LBB12596:
 24636              	.LBI12596:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 24637              		.loc 5 221 7 view .LVU6442
 24638              	.LBB12597:
 24639              	.LBI12597:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24640              		.loc 5 186 7 view .LVU6443
 24641              	.LBB12598:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24642              		.loc 5 187 28 is_stmt 0 view .LVU6444
 24643 0192 2068     		ldr	r0, [r4]
 24644              	.LVL1820:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24645              		.loc 5 187 28 view .LVU6445
 24646              	.LBE12598:
 24647              	.LBE12597:
 24648              	.LBB12599:
 24649              	.LBI12599:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24650              		.loc 5 200 7 is_stmt 1 view .LVU6446
 24651              	.LBB12600:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 24652              		.loc 5 203 57 is_stmt 0 view .LVU6447
 24653 0194 2300     		movs	r3, r4
 24654 0196 0833     		adds	r3, r3, #8
 24655              	.LVL1821:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 24656              		.loc 5 203 57 view .LVU6448
 24657              	.LBE12600:
 24658              	.LBE12599:
 24659              	.LBE12596:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24660              		.loc 5 231 2 view .LVU6449
 24661 0198 9842     		cmp	r0, r3
 24662 019a F5D1     		bne	.L523
 24663 019c F6E7     		b	.L513
 24664              	.LVL1822:
 24665              	.L512:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24666              		.loc 5 231 2 view .LVU6450
 24667              	.LBE12601:
 24668              	.LBE12605:
ARM GAS  /tmp/ccszdRNt.s 			page 809


 24669              	.LBE12606:
 24670              	.LBE12607:
 24671              	.LBE12586:
 24672              	.LBE12585:
 24673              	.LBE12584:
 24674              	.LBE12583:
 24675              	.LBE12582:
 24676              	.LBB12608:
 24677              	.LBI12608:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 24678              		.loc 13 330 7 is_stmt 1 view .LVU6451
 24679              	.LBB12609:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 24680              		.loc 13 332 2 is_stmt 0 view .LVU6452
 24681 019e 0598     		ldr	r0, [sp, #20]
 24682              	.LVL1823:
 24683              	.LBB12610:
 24684              	.LBI12610:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 24685              		.loc 13 347 7 is_stmt 1 view .LVU6453
 24686              	.LBB12611:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 24687              		.loc 13 350 2 is_stmt 0 view .LVU6454
 24688 01a0 0028     		cmp	r0, #0
 24689 01a2 01D0     		beq	.L515
 24690              	.LVL1824:
 24691              	.LBB12612:
 24692              	.LBI12612:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24693              		.loc 10 469 7 is_stmt 1 view .LVU6455
 24694              	.LBB12613:
 24695              	.LBB12614:
 24696              	.LBI12614:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24697              		.loc 7 119 7 view .LVU6456
 24698              	.LBB12615:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24699              		.loc 7 128 19 is_stmt 0 view .LVU6457
 24700 01a4 FFF7FEFF 		bl	_ZdlPv
 24701              	.LVL1825:
 24702              	.L515:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24703              		.loc 7 128 19 view .LVU6458
 24704              	.LBE12615:
 24705              	.LBE12614:
 24706              	.LBE12613:
 24707              	.LBE12612:
 24708              	.LBE12611:
 24709              	.LBE12610:
 24710              	.LBB12616:
 24711              	.LBI12616:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 24712              		.loc 13 125 14 is_stmt 1 view .LVU6459
 24713              	.LBB12617:
 24714              	.LBI12617:
 24715              		.loc 6 153 7 view .LVU6460
 24716              	.LBB12618:
ARM GAS  /tmp/ccszdRNt.s 			page 810


 24717              	.LBI12618:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24718              		.loc 7 89 7 view .LVU6461
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24719              		.loc 7 89 7 is_stmt 0 view .LVU6462
 24720              	.LBE12618:
 24721              	.LBE12617:
 24722              	.LBE12616:
 24723              	.LBE12609:
 24724              	.LBE12608:
 24725              	.LBE12580:
 24726              	.LBE12579:
 24727              	.LBE12578:
 24728              		.loc 2 284 12 view .LVU6463
 24729 01a8 0020     		movs	r0, #0
 24730              	.LVL1826:
 24731              	.L490:
 285:alohal/cli/cli.cpp **** }
 24732              		.loc 2 285 1 view .LVU6464
 24733 01aa 1BB0     		add	sp, sp, #108
 24734              		@ sp needed
 24735              	.LVL1827:
 24736              		.loc 2 285 1 view .LVU6465
 24737 01ac F0BD     		pop	{r4, r5, r6, r7, pc}
 24738              	.LVL1828:
 24739              	.L516:
 261:alohal/cli/cli.cpp ****     }
 24740              		.loc 2 261 17 view .LVU6466
 24741 01ae 0120     		movs	r0, #1
 24742              	.LVL1829:
 261:alohal/cli/cli.cpp ****     }
 24743              		.loc 2 261 17 view .LVU6467
 24744 01b0 4042     		rsbs	r0, r0, #0
 24745 01b2 FAE7     		b	.L490
 24746              	.L525:
 24747              		.align	2
 24748              	.L524:
 24749 01b4 02000000 		.word	.LC9+2
 24750 01b8 00000000 		.word	.LC0
 24751 01bc FFFFFF3F 		.word	1073741823
 24752 01c0 00000000 		.word	.LC9
 24753 01c4 00000000 		.word	.LC70
 24754 01c8 14000000 		.word	.LC23
 24755 01cc 18000000 		.word	.LC73
 24756              		.cfi_endproc
 24757              	.LFE3878:
 24759              		.section	.text._ZN3CLI17Process_characterEv,"ax",%progbits
 24760              		.align	1
 24761              		.global	_ZN3CLI17Process_characterEv
 24762              		.syntax unified
 24763              		.code	16
 24764              		.thumb_func
 24765              		.fpu softvfp
 24767              	_ZN3CLI17Process_characterEv:
 24768              	.LVL1830:
 24769              	.LFB3852:
  25:alohal/cli/cli.cpp ****     char received_char = serial_connection->Read(1)[0];
ARM GAS  /tmp/ccszdRNt.s 			page 811


 24770              		.loc 2 25 30 is_stmt 1 view -0
 24771              		.cfi_startproc
 24772              		@ args = 0, pretend = 0, frame = 176
 24773              		@ frame_needed = 0, uses_anonymous_args = 0
  25:alohal/cli/cli.cpp ****     char received_char = serial_connection->Read(1)[0];
 24774              		.loc 2 25 30 is_stmt 0 view .LVU6469
 24775 0000 70B5     		push	{r4, r5, r6, lr}
 24776              	.LCFI64:
 24777              		.cfi_def_cfa_offset 16
 24778              		.cfi_offset 4, -16
 24779              		.cfi_offset 5, -12
 24780              		.cfi_offset 6, -8
 24781              		.cfi_offset 14, -4
 24782 0002 ACB0     		sub	sp, sp, #176
 24783              	.LCFI65:
 24784              		.cfi_def_cfa_offset 192
 24785 0004 0400     		movs	r4, r0
  26:alohal/cli/cli.cpp **** 
 24786              		.loc 2 26 5 is_stmt 1 view .LVU6470
  26:alohal/cli/cli.cpp **** 
 24787              		.loc 2 26 49 is_stmt 0 view .LVU6471
 24788 0006 0122     		movs	r2, #1
 24789 0008 0168     		ldr	r1, [r0]
 24790 000a 02A8     		add	r0, sp, #8
 24791              	.LVL1831:
  26:alohal/cli/cli.cpp **** 
 24792              		.loc 2 26 49 view .LVU6472
 24793 000c FFF7FEFF 		bl	_ZN11Serial_line4ReadB5cxx11Ei
 24794              	.LVL1832:
 24795              	.LBB12900:
 24796              	.LBI12900:
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24797              		.loc 5 1063 7 is_stmt 1 view .LVU6473
 24798              	.LBB12901:
 24799              	.LBI12901:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24800              		.loc 5 186 7 view .LVU6474
 24801              	.LBB12902:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24802              		.loc 5 187 28 is_stmt 0 view .LVU6475
 24803 0010 0298     		ldr	r0, [sp, #8]
 24804              	.LVL1833:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24805              		.loc 5 187 28 view .LVU6476
 24806              	.LBE12902:
 24807              	.LBE12901:
 24808              	.LBE12900:
  26:alohal/cli/cli.cpp **** 
 24809              		.loc 2 26 54 view .LVU6477
 24810 0012 0578     		ldrb	r5, [r0]
 24811              	.LVL1834:
 24812              	.LBB12903:
 24813              	.LBI12903:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24814              		.loc 5 657 7 is_stmt 1 view .LVU6478
 24815              	.LBB12904:
 24816              	.LBI12904:
ARM GAS  /tmp/ccszdRNt.s 			page 812


 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24817              		.loc 5 229 7 view .LVU6479
 24818              	.LBB12905:
 24819              	.LBB12906:
 24820              	.LBI12906:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 24821              		.loc 5 221 7 view .LVU6480
 24822              	.LBB12907:
 24823              	.LBI12907:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24824              		.loc 5 200 7 view .LVU6481
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24825              		.loc 5 200 7 is_stmt 0 view .LVU6482
 24826              	.LBE12907:
 24827              	.LBE12906:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 24828              		.loc 5 231 2 view .LVU6483
 24829 0014 04AB     		add	r3, sp, #16
 24830 0016 9842     		cmp	r0, r3
 24831 0018 01D0     		beq	.L527
 24832              	.LVL1835:
 24833              	.LBB12908:
 24834              	.LBI12908:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 24835              		.loc 5 236 7 is_stmt 1 view .LVU6484
 24836              	.LBB12909:
 24837              	.LBB12910:
 24838              	.LBI12910:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 24839              		.loc 10 469 7 view .LVU6485
 24840              	.LBB12911:
 24841              	.LBI12911:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 24842              		.loc 7 119 7 view .LVU6486
 24843              	.LBB12912:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24844              		.loc 7 128 19 is_stmt 0 view .LVU6487
 24845 001a FFF7FEFF 		bl	_ZdlPv
 24846              	.LVL1836:
 24847              	.L527:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 24848              		.loc 7 128 19 view .LVU6488
 24849              	.LBE12912:
 24850              	.LBE12911:
 24851              	.LBE12910:
 24852              	.LBE12909:
 24853              	.LBE12908:
 24854              	.LBE12905:
 24855              	.LBE12904:
 24856              	.LBB12913:
 24857              	.LBI12913:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24858              		.loc 5 150 14 is_stmt 1 view .LVU6489
 24859              	.LBB12914:
 24860              	.LBI12914:
 24861              		.loc 6 153 7 view .LVU6490
 24862              	.LBB12915:
ARM GAS  /tmp/ccszdRNt.s 			page 813


 24863              	.LBI12915:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24864              		.loc 7 89 7 view .LVU6491
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24865              		.loc 7 89 7 is_stmt 0 view .LVU6492
 24866              	.LBE12915:
 24867              	.LBE12914:
 24868              	.LBE12913:
 24869              	.LBE12903:
  28:alohal/cli/cli.cpp ****         escape_sequency_remaining--;
 24870              		.loc 2 28 5 is_stmt 1 view .LVU6493
  28:alohal/cli/cli.cpp ****         escape_sequency_remaining--;
 24871              		.loc 2 28 9 is_stmt 0 view .LVU6494
 24872 001e 7823     		movs	r3, #120
 24873 0020 E35A     		ldrh	r3, [r4, r3]
  28:alohal/cli/cli.cpp ****         escape_sequency_remaining--;
 24874              		.loc 2 28 5 view .LVU6495
 24875 0022 012B     		cmp	r3, #1
 24876 0024 22D8     		bhi	.L565
  34:alohal/cli/cli.cpp ****         Process_line();
 24877              		.loc 2 34 5 is_stmt 1 view .LVU6496
 24878 0026 0D2D     		cmp	r5, #13
 24879 0028 25D0     		beq	.L566
  40:alohal/cli/cli.cpp ****         escape_sequency_remaining = 2;
 24880              		.loc 2 40 10 view .LVU6497
 24881 002a 1B2D     		cmp	r5, #27
 24882 002c 2AD0     		beq	.L567
  45:alohal/cli/cli.cpp ****         if (actual_line.length() > (line_opening.length() + line_prefix.length())) {
 24883              		.loc 2 45 10 view .LVU6498
 24884 002e 7F2D     		cmp	r5, #127
 24885 0030 2CD0     		beq	.L568
  51:alohal/cli/cli.cpp ****         if (command_history) {
 24886              		.loc 2 51 10 view .LVU6499
 24887 0032 012B     		cmp	r3, #1
 24888 0034 00D1     		bne	.LCB29221
 24889 0036 78E0     		b	.L569	@long jump
 24890              	.LCB29221:
  65:alohal/cli/cli.cpp ****         // If nothing on line skip autocomplete
 24891              		.loc 2 65 10 view .LVU6500
 24892 0038 092D     		cmp	r5, #9
 24893 003a 00D1     		bne	.LCB29224
 24894 003c 9CE0     		b	.L570	@long jump
 24895              	.LCB29224:
  73:alohal/cli/cli.cpp ****         actual_line += string(1, received_char);
 24896              		.loc 2 73 10 view .LVU6501
  73:alohal/cli/cli.cpp ****         actual_line += string(1, received_char);
 24897              		.loc 2 73 21 is_stmt 0 view .LVU6502
 24898 003e 2800     		movs	r0, r5
 24899 0040 FFF7FEFF 		bl	isprint
 24900              	.LVL1837:
  73:alohal/cli/cli.cpp ****         actual_line += string(1, received_char);
 24901              		.loc 2 73 10 view .LVU6503
 24902 0044 0028     		cmp	r0, #0
 24903 0046 28D0     		beq	.L533
  74:alohal/cli/cli.cpp ****     }
 24904              		.loc 2 74 9 is_stmt 1 view .LVU6504
 24905              	.LVL1838:
ARM GAS  /tmp/ccszdRNt.s 			page 814


 24906              	.LBB12916:
 24907              	.LBI12916:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 24908              		.loc 6 138 7 view .LVU6505
 24909              	.LBB12917:
 24910              	.LBI12917:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24911              		.loc 7 80 7 view .LVU6506
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24912              		.loc 7 80 7 is_stmt 0 view .LVU6507
 24913              	.LBE12917:
 24914              	.LBE12916:
 24915              	.LBB12918:
 24916              	.LBI12918:
 540:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 24917              		.loc 5 540 7 is_stmt 1 view .LVU6508
 24918              	.LBB12919:
 24919              	.LBB12920:
 24920              	.LBB12921:
 24921              	.LBI12921:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24922              		.loc 5 190 7 view .LVU6509
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24923              		.loc 5 190 7 is_stmt 0 view .LVU6510
 24924              	.LBE12921:
 24925              	.LBB12922:
 24926              	.LBI12922:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 24927              		.loc 5 156 2 is_stmt 1 view .LVU6511
 24928              	.LBB12923:
 24929              	.LBB12924:
 24930              	.LBB12925:
 24931              	.LBI12925:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 24932              		.loc 6 141 7 view .LVU6512
 24933              	.LBB12926:
 24934              	.LBI12926:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24935              		.loc 7 83 7 view .LVU6513
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 24936              		.loc 7 83 7 is_stmt 0 view .LVU6514
 24937              	.LBE12926:
 24938              	.LBE12925:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24939              		.loc 5 157 35 view .LVU6515
 24940 0048 28AE     		add	r6, sp, #160
 24941              	.LVL1839:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24942              		.loc 5 157 35 view .LVU6516
 24943 004a 2696     		str	r6, [sp, #152]
 24944              	.LVL1840:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24945              		.loc 5 157 35 view .LVU6517
 24946              	.LBE12924:
 24947              	.LBE12923:
 24948              	.LBE12922:
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 815


 24949              		.loc 5 542 9 view .LVU6518
 24950 004c 2A00     		movs	r2, r5
 24951 004e 0121     		movs	r1, #1
 24952 0050 26A8     		add	r0, sp, #152
 24953              	.LVL1841:
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24954              		.loc 5 542 9 view .LVU6519
 24955 0052 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc
 24956              	.LVL1842:
 542:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24957              		.loc 5 542 9 view .LVU6520
 24958              	.LBE12920:
 24959              	.LBE12919:
 24960              	.LBE12918:
  74:alohal/cli/cli.cpp ****     }
 24961              		.loc 2 74 47 view .LVU6521
 24962 0056 201D     		adds	r0, r4, #4
 24963              	.LVL1843:
 24964              	.LBB12927:
 24965              	.LBI12927:
1168:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return this->append(__str); }
 24966              		.loc 5 1168 7 is_stmt 1 view .LVU6522
 24967              	.LBB12928:
 24968              	.LBI12928:
1221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_append(__str._M_data(), __str.size()); }
 24969              		.loc 5 1221 7 view .LVU6523
 24970              	.LBB12929:
 24971              	.LBB12930:
 24972              	.LBI12930:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24973              		.loc 5 186 7 view .LVU6524
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 24974              		.loc 5 186 7 is_stmt 0 view .LVU6525
 24975              	.LBE12930:
 24976              	.LBB12931:
 24977              	.LBI12931:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 24978              		.loc 5 930 7 is_stmt 1 view .LVU6526
 24979              	.LBB12932:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24980              		.loc 5 931 16 is_stmt 0 view .LVU6527
 24981 0058 279A     		ldr	r2, [sp, #156]
 24982              	.LVL1844:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24983              		.loc 5 931 16 view .LVU6528
 24984              	.LBE12932:
 24985              	.LBE12931:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24986              		.loc 5 1222 55 view .LVU6529
 24987 005a 2699     		ldr	r1, [sp, #152]
 24988 005c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
 24989              	.LVL1845:
1222:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 24990              		.loc 5 1222 55 view .LVU6530
 24991              	.LBE12929:
 24992              	.LBE12928:
 24993              	.LBE12927:
ARM GAS  /tmp/ccszdRNt.s 			page 816


 24994              	.LBB12933:
 24995              	.LBI12933:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 24996              		.loc 5 657 7 is_stmt 1 view .LVU6531
 24997              	.LBB12934:
 24998              	.LBI12934:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 24999              		.loc 5 229 7 view .LVU6532
 25000              	.LBB12935:
 25001              	.LBB12936:
 25002              	.LBI12936:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25003              		.loc 5 221 7 view .LVU6533
 25004              	.LBB12937:
 25005              	.LBI12937:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25006              		.loc 5 186 7 view .LVU6534
 25007              	.LBB12938:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25008              		.loc 5 187 28 is_stmt 0 view .LVU6535
 25009 0060 2698     		ldr	r0, [sp, #152]
 25010              	.LVL1846:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25011              		.loc 5 187 28 view .LVU6536
 25012              	.LBE12938:
 25013              	.LBE12937:
 25014              	.LBB12939:
 25015              	.LBI12939:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25016              		.loc 5 200 7 is_stmt 1 view .LVU6537
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25017              		.loc 5 200 7 is_stmt 0 view .LVU6538
 25018              	.LBE12939:
 25019              	.LBE12936:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25020              		.loc 5 231 2 view .LVU6539
 25021 0062 B042     		cmp	r0, r6
 25022 0064 19D0     		beq	.L533
 25023              	.LVL1847:
 25024              	.LBB12940:
 25025              	.LBI12940:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25026              		.loc 5 236 7 is_stmt 1 view .LVU6540
 25027              	.LBB12941:
 25028              	.LBB12942:
 25029              	.LBI12942:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25030              		.loc 10 469 7 view .LVU6541
 25031              	.LBB12943:
 25032              	.LBI12943:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25033              		.loc 7 119 7 view .LVU6542
 25034              	.LBB12944:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25035              		.loc 7 128 19 is_stmt 0 view .LVU6543
 25036 0066 FFF7FEFF 		bl	_ZdlPv
 25037              	.LVL1848:
ARM GAS  /tmp/ccszdRNt.s 			page 817


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25038              		.loc 7 128 19 view .LVU6544
 25039              	.LBE12944:
 25040              	.LBE12943:
 25041              	.LBE12942:
 25042              	.LBE12941:
 25043              	.LBE12940:
 25044              	.LBE12935:
 25045              	.LBE12934:
 25046              	.LBB12948:
 25047              	.LBI12948:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25048              		.loc 5 150 14 is_stmt 1 view .LVU6545
 25049              	.LBB12949:
 25050              	.LBI12949:
 25051              		.loc 6 153 7 view .LVU6546
 25052              	.LBB12950:
 25053              	.LBI12950:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25054              		.loc 7 89 7 view .LVU6547
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25055              		.loc 7 89 7 is_stmt 0 view .LVU6548
 25056              	.LBE12950:
 25057              	.LBE12949:
 25058              	.LBE12948:
 25059              	.LBE12933:
 25060              	.LBB12952:
 25061              	.LBI12952:
 25062              		.loc 6 153 7 is_stmt 1 view .LVU6549
 25063              	.LBB12953:
 25064              	.LBI12953:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25065              		.loc 7 89 7 view .LVU6550
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25066              		.loc 7 89 7 is_stmt 0 view .LVU6551
 25067              	.LBE12953:
 25068              	.LBE12952:
 25069              	.LBB12954:
 25070              	.LBB12951:
 25071              	.LBB12947:
 25072              	.LBB12946:
 25073              	.LBB12945:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25074              		.loc 5 237 79 view .LVU6552
 25075 006a 16E0     		b	.L533
 25076              	.L565:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25077              		.loc 5 237 79 view .LVU6553
 25078              	.LBE12945:
 25079              	.LBE12946:
 25080              	.LBE12947:
 25081              	.LBE12951:
 25082              	.LBE12954:
  29:alohal/cli/cli.cpp ****         return;
 25083              		.loc 2 29 9 is_stmt 1 view .LVU6554
  29:alohal/cli/cli.cpp ****         return;
 25084              		.loc 2 29 34 is_stmt 0 view .LVU6555
ARM GAS  /tmp/ccszdRNt.s 			page 818


 25085 006c 013B     		subs	r3, r3, #1
 25086 006e 7822     		movs	r2, #120
 25087 0070 A352     		strh	r3, [r4, r2]
  30:alohal/cli/cli.cpp ****     }
 25088              		.loc 2 30 9 is_stmt 1 view .LVU6556
 25089              	.LVL1849:
 25090              	.L526:
  77:alohal/cli/cli.cpp **** 
 25091              		.loc 2 77 1 is_stmt 0 view .LVU6557
 25092 0072 2CB0     		add	sp, sp, #176
 25093              		@ sp needed
 25094              	.LVL1850:
  77:alohal/cli/cli.cpp **** 
 25095              		.loc 2 77 1 view .LVU6558
 25096 0074 70BD     		pop	{r4, r5, r6, pc}
 25097              	.LVL1851:
 25098              	.L566:
  35:alohal/cli/cli.cpp ****         Clear_line();
 25099              		.loc 2 35 9 is_stmt 1 view .LVU6559
  35:alohal/cli/cli.cpp ****         Clear_line();
 25100              		.loc 2 35 21 is_stmt 0 view .LVU6560
 25101 0076 2000     		movs	r0, r4
 25102 0078 FFF7FEFF 		bl	_ZN3CLI12Process_lineEv
 25103              	.LVL1852:
  36:alohal/cli/cli.cpp ****         return;
 25104              		.loc 2 36 9 is_stmt 1 view .LVU6561
  36:alohal/cli/cli.cpp ****         return;
 25105              		.loc 2 36 19 is_stmt 0 view .LVU6562
 25106 007c 2000     		movs	r0, r4
 25107 007e FFF7FEFF 		bl	_ZN3CLI10Clear_lineEv
 25108              	.LVL1853:
  37:alohal/cli/cli.cpp ****     }
 25109              		.loc 2 37 9 is_stmt 1 view .LVU6563
 25110 0082 F6E7     		b	.L526
 25111              	.L567:
  41:alohal/cli/cli.cpp ****         return;
 25112              		.loc 2 41 9 view .LVU6564
  41:alohal/cli/cli.cpp ****         return;
 25113              		.loc 2 41 35 is_stmt 0 view .LVU6565
 25114 0084 7823     		movs	r3, #120
 25115 0086 0222     		movs	r2, #2
 25116 0088 E252     		strh	r2, [r4, r3]
  42:alohal/cli/cli.cpp ****     }
 25117              		.loc 2 42 9 is_stmt 1 view .LVU6566
 25118 008a F2E7     		b	.L526
 25119              	.L568:
  46:alohal/cli/cli.cpp ****             actual_line = actual_line.substr(0, actual_line.length() - 1);
 25120              		.loc 2 46 9 view .LVU6567
 25121              	.LVL1854:
 25122              	.LBB12955:
 25123              	.LBI12955:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25124              		.loc 5 936 7 view .LVU6568
 25125              	.LBB12956:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25126              		.loc 5 937 16 is_stmt 0 view .LVU6569
 25127 008c A268     		ldr	r2, [r4, #8]
ARM GAS  /tmp/ccszdRNt.s 			page 819


 25128              	.LVL1855:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25129              		.loc 5 937 16 view .LVU6570
 25130              	.LBE12956:
 25131              	.LBE12955:
 25132              	.LBB12957:
 25133              	.LBI12957:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25134              		.loc 5 936 7 is_stmt 1 view .LVU6571
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25135              		.loc 5 936 7 is_stmt 0 view .LVU6572
 25136              	.LBE12957:
 25137              	.LBB12958:
 25138              	.LBI12958:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25139              		.loc 5 936 7 is_stmt 1 view .LVU6573
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25140              		.loc 5 936 7 is_stmt 0 view .LVU6574
 25141              	.LBE12958:
  46:alohal/cli/cli.cpp ****             actual_line = actual_line.substr(0, actual_line.length() - 1);
 25142              		.loc 2 46 59 view .LVU6575
 25143 008e 636D     		ldr	r3, [r4, #84]
 25144 0090 A16B     		ldr	r1, [r4, #56]
 25145 0092 8C46     		mov	ip, r1
 25146 0094 6344     		add	r3, r3, ip
  46:alohal/cli/cli.cpp ****             actual_line = actual_line.substr(0, actual_line.length() - 1);
 25147              		.loc 2 46 9 view .LVU6576
 25148 0096 9342     		cmp	r3, r2
 25149 0098 03D3     		bcc	.L571
 25150              	.LVL1856:
 25151              	.L533:
  76:alohal/cli/cli.cpp **** } // CLI::Process_character
 25152              		.loc 2 76 5 is_stmt 1 view .LVU6577
  76:alohal/cli/cli.cpp **** } // CLI::Process_character
 25153              		.loc 2 76 16 is_stmt 0 view .LVU6578
 25154 009a 2000     		movs	r0, r4
 25155 009c FFF7FEFF 		bl	_ZN3CLI11Redraw_lineEv
 25156              	.LVL1857:
 25157 00a0 E7E7     		b	.L526
 25158              	.LVL1858:
 25159              	.L571:
  47:alohal/cli/cli.cpp ****         }
 25160              		.loc 2 47 13 is_stmt 1 view .LVU6579
  47:alohal/cli/cli.cpp ****         }
 25161              		.loc 2 47 45 is_stmt 0 view .LVU6580
 25162 00a2 251D     		adds	r5, r4, #4
 25163              	.LVL1859:
  47:alohal/cli/cli.cpp ****         }
 25164              		.loc 2 47 45 view .LVU6581
 25165 00a4 013A     		subs	r2, r2, #1
 25166              	.LVL1860:
 25167              	.LBB12959:
 25168              	.LBI12959:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 25169              		.loc 5 2834 7 is_stmt 1 view .LVU6582
 25170              	.LBB12960:
 25171              	.LBI12960:
ARM GAS  /tmp/ccszdRNt.s 			page 820


 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 25172              		.loc 5 476 7 view .LVU6583
 25173              	.LBB12961:
 25174              	.LBB12962:
 25175              	.LBI12962:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25176              		.loc 5 190 7 view .LVU6584
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25177              		.loc 5 190 7 is_stmt 0 view .LVU6585
 25178              	.LBE12962:
 25179              	.LBB12963:
 25180              	.LBI12963:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 25181              		.loc 6 138 7 is_stmt 1 view .LVU6586
 25182              	.LBB12964:
 25183              	.LBI12964:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25184              		.loc 7 80 7 view .LVU6587
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25185              		.loc 7 80 7 is_stmt 0 view .LVU6588
 25186              	.LBE12964:
 25187              	.LBE12963:
 25188              	.LBB12965:
 25189              	.LBI12965:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 25190              		.loc 5 159 2 is_stmt 1 view .LVU6589
 25191              	.LBB12966:
 25192              	.LBB12967:
 25193              	.LBB12968:
 25194              	.LBI12968:
 25195              		.loc 8 99 5 view .LVU6590
 25196              		.loc 8 99 5 is_stmt 0 view .LVU6591
 25197              	.LBE12968:
 25198              	.LBB12969:
 25199              	.LBI12969:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 25200              		.loc 6 141 7 is_stmt 1 view .LVU6592
 25201              	.LBB12970:
 25202              	.LBI12970:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25203              		.loc 7 83 7 view .LVU6593
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25204              		.loc 7 83 7 is_stmt 0 view .LVU6594
 25205              	.LBE12970:
 25206              	.LBE12969:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25207              		.loc 5 160 46 view .LVU6595
 25208 00a6 0AAB     		add	r3, sp, #40
 25209              	.LVL1861:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25210              		.loc 5 160 46 view .LVU6596
 25211 00a8 0893     		str	r3, [sp, #32]
 25212              	.LVL1862:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 25213              		.loc 5 160 46 view .LVU6597
 25214              	.LBE12967:
 25215              	.LBE12966:
ARM GAS  /tmp/ccszdRNt.s 			page 821


 25216              	.LBE12965:
 25217              	.LBB12971:
 25218              	.LBI12971:
 25219              		.loc 6 153 7 is_stmt 1 view .LVU6598
 25220              	.LBB12972:
 25221              	.LBI12972:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25222              		.loc 7 89 7 view .LVU6599
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25223              		.loc 7 89 7 is_stmt 0 view .LVU6600
 25224              	.LBE12972:
 25225              	.LBE12971:
 25226              	.LBB12973:
 25227              	.LBB12974:
 25228              	.LBI12974:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25229              		.loc 5 186 7 is_stmt 1 view .LVU6601
 25230              	.LBB12975:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25231              		.loc 5 187 28 is_stmt 0 view .LVU6602
 25232 00aa 6168     		ldr	r1, [r4, #4]
 25233              	.LVL1863:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25234              		.loc 5 187 28 view .LVU6603
 25235              	.LBE12975:
 25236              	.LBE12974:
 25237              	.LBB12976:
 25238              	.LBI12976:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25239              		.loc 5 310 7 is_stmt 1 view .LVU6604
 25240              	.LBB12977:
 25241              	.LBI12977:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25242              		.loc 5 930 7 view .LVU6605
 25243              	.LBB12978:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25244              		.loc 5 931 16 is_stmt 0 view .LVU6606
 25245 00ac 6B68     		ldr	r3, [r5, #4]
 25246              	.LVL1864:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25247              		.loc 5 931 16 view .LVU6607
 25248              	.LBE12978:
 25249              	.LBE12977:
 25250              	.LBE12976:
 25251              	.LBB12979:
 25252              	.LBI12979:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25253              		.loc 5 329 7 is_stmt 1 view .LVU6608
 25254              	.LBB12980:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25255              		.loc 5 332 19 is_stmt 0 view .LVU6609
 25256 00ae 9A42     		cmp	r2, r3
 25257 00b0 00D2     		bcs	.L534
 25258 00b2 1300     		movs	r3, r2
 25259              	.LVL1865:
 25260              	.L534:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
ARM GAS  /tmp/ccszdRNt.s 			page 822


 25261              		.loc 5 332 19 view .LVU6610
 25262              	.LBE12980:
 25263              	.LBE12979:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25264              		.loc 5 482 2 view .LVU6611
 25265 00b4 CA18     		adds	r2, r1, r3
 25266              	.LVL1866:
 25267              	.LBB12981:
 25268              	.LBI12981:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 25269              		.loc 5 263 9 is_stmt 1 view .LVU6612
 25270              	.LBB12982:
 25271              	.LBB12983:
 25272              	.LBI12983:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 25273              		.loc 5 243 9 view .LVU6613
 25274              	.LBB12984:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25275              		.loc 5 247 11 is_stmt 0 view .LVU6614
 25276 00b6 0023     		movs	r3, #0
 25277 00b8 08A8     		add	r0, sp, #32
 25278              	.LVL1867:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25279              		.loc 5 247 11 view .LVU6615
 25280 00ba FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 25281              	.LVL1868:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 25282              		.loc 5 247 11 view .LVU6616
 25283              	.LBE12984:
 25284              	.LBE12983:
 25285              	.LBE12982:
 25286              	.LBE12981:
 25287              	.LBE12973:
 25288              	.LBE12961:
 25289              	.LBE12960:
 25290              	.LBE12959:
 25291              	.LBB12985:
 25292              	.LBI12985:
 732:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 25293              		.loc 5 732 7 is_stmt 1 view .LVU6617
 25294              	.LBB12986:
 25295              	.LBI12986:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25296              		.loc 5 221 7 view .LVU6618
 25297              	.LBB12987:
 25298              	.LBI12987:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25299              		.loc 5 186 7 view .LVU6619
 25300              	.LBB12988:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25301              		.loc 5 187 28 is_stmt 0 view .LVU6620
 25302 00be 6068     		ldr	r0, [r4, #4]
 25303              	.LVL1869:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25304              		.loc 5 187 28 view .LVU6621
 25305              	.LBE12988:
 25306              	.LBE12987:
ARM GAS  /tmp/ccszdRNt.s 			page 823


 25307              	.LBB12989:
 25308              	.LBI12989:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25309              		.loc 5 200 7 is_stmt 1 view .LVU6622
 25310              	.LBB12990:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 25311              		.loc 5 203 57 is_stmt 0 view .LVU6623
 25312 00c0 2A00     		movs	r2, r5
 25313 00c2 0832     		adds	r2, r2, #8
 25314              	.LVL1870:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 25315              		.loc 5 203 57 view .LVU6624
 25316              	.LBE12990:
 25317              	.LBE12989:
 25318              	.LBE12986:
 25319              	.LBB12991:
 25320              	.LBB12992:
 25321              	.LBI12992:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25322              		.loc 5 221 7 is_stmt 1 view .LVU6625
 25323              	.LBB12993:
 25324              	.LBI12993:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25325              		.loc 5 186 7 view .LVU6626
 25326              	.LBB12994:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25327              		.loc 5 187 28 is_stmt 0 view .LVU6627
 25328 00c4 0899     		ldr	r1, [sp, #32]
 25329              	.LVL1871:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25330              		.loc 5 187 28 view .LVU6628
 25331              	.LBE12994:
 25332              	.LBE12993:
 25333              	.LBB12995:
 25334              	.LBI12995:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25335              		.loc 5 200 7 is_stmt 1 view .LVU6629
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25336              		.loc 5 200 7 is_stmt 0 view .LVU6630
 25337              	.LBE12995:
 25338              	.LBE12992:
 747:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  {
 25339              		.loc 5 747 2 view .LVU6631
 25340 00c6 0AAB     		add	r3, sp, #40
 25341 00c8 9942     		cmp	r1, r3
 25342 00ca 17D0     		beq	.L572
 25343              	.LVL1872:
 25344              	.LBB12996:
 761:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 25345              		.loc 5 761 6 view .LVU6632
 25346 00cc 9042     		cmp	r0, r2
 25347 00ce 27D0     		beq	.L558
 25348              	.LVL1873:
 767:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		  }
 25349              		.loc 5 767 7 view .LVU6633
 25350 00d0 AE68     		ldr	r6, [r5, #8]
 25351              	.LVL1874:
ARM GAS  /tmp/ccszdRNt.s 			page 824


 25352              	.L539:
 25353              	.LBB12997:
 25354              	.LBI12997:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 25355              		.loc 5 178 7 is_stmt 1 view .LVU6634
 25356              	.LBB12998:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25357              		.loc 5 179 9 is_stmt 0 view .LVU6635
 25358 00d2 6160     		str	r1, [r4, #4]
 25359              	.LVL1875:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25360              		.loc 5 179 9 view .LVU6636
 25361              	.LBE12998:
 25362              	.LBE12997:
 25363              	.LBB12999:
 25364              	.LBI12999:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25365              		.loc 5 936 7 is_stmt 1 view .LVU6637
 25366              	.LBB13000:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25367              		.loc 5 937 16 is_stmt 0 view .LVU6638
 25368 00d4 099B     		ldr	r3, [sp, #36]
 25369 00d6 0193     		str	r3, [sp, #4]
 25370              	.LVL1876:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25371              		.loc 5 937 16 view .LVU6639
 25372              	.LBE13000:
 25373              	.LBE12999:
 25374              	.LBB13001:
 25375              	.LBI13001:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 25376              		.loc 5 182 7 is_stmt 1 view .LVU6640
 25377              	.LBB13002:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25378              		.loc 5 183 9 is_stmt 0 view .LVU6641
 25379 00d8 6B60     		str	r3, [r5, #4]
 25380              	.LVL1877:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25381              		.loc 5 183 9 view .LVU6642
 25382              	.LBE13002:
 25383              	.LBE13001:
 775:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    if (__data)
 25384              		.loc 5 775 6 view .LVU6643
 25385 00da 0A9B     		ldr	r3, [sp, #40]
 25386 00dc AB60     		str	r3, [r5, #8]
 25387              	.LVL1878:
 25388              	.LBB13003:
 25389              	.LBI13003:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 25390              		.loc 5 210 7 is_stmt 1 view .LVU6644
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 25391              		.loc 5 210 7 is_stmt 0 view .LVU6645
 25392              	.LBE13003:
 776:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      {
 25393              		.loc 5 776 6 view .LVU6646
 25394 00de 0028     		cmp	r0, #0
 25395 00e0 20D0     		beq	.L540
ARM GAS  /tmp/ccszdRNt.s 			page 825


 25396              	.LVL1879:
 25397              	.LBB13004:
 25398              	.LBI13004:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 25399              		.loc 5 178 7 is_stmt 1 view .LVU6647
 25400              	.LBB13005:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25401              		.loc 5 179 9 is_stmt 0 view .LVU6648
 25402 00e2 0890     		str	r0, [sp, #32]
 25403              	.LVL1880:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25404              		.loc 5 179 9 view .LVU6649
 25405              	.LBE13005:
 25406              	.LBE13004:
 25407              	.LBB13006:
 25408              	.LBI13006:
 210:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 25409              		.loc 5 210 7 is_stmt 1 view .LVU6650
 25410              	.LBB13007:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25411              		.loc 5 211 9 is_stmt 0 view .LVU6651
 25412 00e4 0A96     		str	r6, [sp, #40]
 25413              	.LVL1881:
 25414              	.L538:
 211:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25415              		.loc 5 211 9 view .LVU6652
 25416              	.LBE13007:
 25417              	.LBE13006:
 25418              	.LBE12996:
 25419              	.LBE12991:
 25420              	.LBB13030:
 25421              	.LBI13030:
1023:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_set_length(0); }
 25422              		.loc 5 1023 7 is_stmt 1 view .LVU6653
 25423              	.LBB13031:
 25424              	.LBI13031:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25425              		.loc 5 214 7 view .LVU6654
 25426              	.LBB13032:
 25427              	.LBI13032:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 25428              		.loc 5 182 7 view .LVU6655
 25429              	.LBB13033:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25430              		.loc 5 183 9 is_stmt 0 view .LVU6656
 25431 00e6 0023     		movs	r3, #0
 25432 00e8 0993     		str	r3, [sp, #36]
 25433              	.LVL1882:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25434              		.loc 5 183 9 view .LVU6657
 25435              	.LBE13033:
 25436              	.LBE13032:
 25437              	.LBB13034:
 25438              	.LBI13034:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25439              		.loc 5 186 7 is_stmt 1 view .LVU6658
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 826


 25440              		.loc 5 186 7 is_stmt 0 view .LVU6659
 25441              	.LBE13034:
 25442              	.LBB13035:
 25443              	.LBI13035:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 25444              		.loc 4 299 7 is_stmt 1 view .LVU6660
 25445              	.LBB13036:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25446              		.loc 4 300 9 view .LVU6661
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25447              		.loc 4 300 14 is_stmt 0 view .LVU6662
 25448 00ea 089A     		ldr	r2, [sp, #32]
 25449 00ec 1370     		strb	r3, [r2]
 25450              	.LVL1883:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25451              		.loc 4 300 14 view .LVU6663
 25452              	.LBE13036:
 25453              	.LBE13035:
 25454              	.LBE13031:
 25455              	.LBE13030:
 25456              	.LBE12985:
 25457              	.LBB13038:
 25458              	.LBI13038:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25459              		.loc 5 657 7 is_stmt 1 view .LVU6664
 25460              	.LBB13039:
 25461              	.LBI13039:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25462              		.loc 5 229 7 view .LVU6665
 25463              	.LBB13040:
 25464              	.LBB13041:
 25465              	.LBI13041:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25466              		.loc 5 221 7 view .LVU6666
 25467              	.LBB13042:
 25468              	.LBI13042:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25469              		.loc 5 186 7 view .LVU6667
 25470              	.LBB13043:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25471              		.loc 5 187 28 is_stmt 0 view .LVU6668
 25472 00ee 0898     		ldr	r0, [sp, #32]
 25473              	.LVL1884:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25474              		.loc 5 187 28 view .LVU6669
 25475              	.LBE13043:
 25476              	.LBE13042:
 25477              	.LBB13044:
 25478              	.LBI13044:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25479              		.loc 5 200 7 is_stmt 1 view .LVU6670
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25480              		.loc 5 200 7 is_stmt 0 view .LVU6671
 25481              	.LBE13044:
 25482              	.LBE13041:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25483              		.loc 5 231 2 view .LVU6672
ARM GAS  /tmp/ccszdRNt.s 			page 827


 25484 00f0 0AAB     		add	r3, sp, #40
 25485 00f2 9842     		cmp	r0, r3
 25486 00f4 D1D0     		beq	.L533
 25487              	.LVL1885:
 25488              	.LBB13045:
 25489              	.LBI13045:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25490              		.loc 5 236 7 is_stmt 1 view .LVU6673
 25491              	.LBB13046:
 25492              	.LBB13047:
 25493              	.LBI13047:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25494              		.loc 10 469 7 view .LVU6674
 25495              	.LBB13048:
 25496              	.LBI13048:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25497              		.loc 7 119 7 view .LVU6675
 25498              	.LBB13049:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25499              		.loc 7 128 19 is_stmt 0 view .LVU6676
 25500 00f6 FFF7FEFF 		bl	_ZdlPv
 25501              	.LVL1886:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25502              		.loc 7 128 19 view .LVU6677
 25503              	.LBE13049:
 25504              	.LBE13048:
 25505              	.LBE13047:
 25506              	.LBE13046:
 25507              	.LBE13045:
 25508              	.LBE13040:
 25509              	.LBE13039:
 25510              	.LBB13053:
 25511              	.LBI13053:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25512              		.loc 5 150 14 is_stmt 1 view .LVU6678
 25513              	.LBB13054:
 25514              	.LBI13054:
 25515              		.loc 6 153 7 view .LVU6679
 25516              	.LBB13055:
 25517              	.LBI13055:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25518              		.loc 7 89 7 view .LVU6680
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25519              		.loc 7 89 7 is_stmt 0 view .LVU6681
 25520              	.LBE13055:
 25521              	.LBE13054:
 25522              	.LBE13053:
 25523              	.LBB13056:
 25524              	.LBB13052:
 25525              	.LBB13051:
 25526              	.LBB13050:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25527              		.loc 5 237 79 view .LVU6682
 25528 00fa CEE7     		b	.L533
 25529              	.LVL1887:
 25530              	.L572:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 828


 25531              		.loc 5 237 79 view .LVU6683
 25532              	.LBE13050:
 25533              	.LBE13051:
 25534              	.LBE13052:
 25535              	.LBE13056:
 25536              	.LBE13038:
 25537              	.LBB13057:
 25538              	.LBB13037:
 25539              	.LBB13010:
 25540              	.LBI13010:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25541              		.loc 5 930 7 is_stmt 1 view .LVU6684
 25542              	.LBB13011:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25543              		.loc 5 931 16 is_stmt 0 view .LVU6685
 25544 00fc 099A     		ldr	r2, [sp, #36]
 25545              	.LVL1888:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25546              		.loc 5 931 16 view .LVU6686
 25547              	.LBE13011:
 25548              	.LBE13010:
 750:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	      this->_S_copy(_M_data(), __str._M_data(), __str.size());
 25549              		.loc 5 750 6 view .LVU6687
 25550 00fe 002A     		cmp	r2, #0
 25551 0100 03D0     		beq	.L536
 25552              	.LVL1889:
 25553              	.LBB13012:
 25554              	.LBI13012:
 346:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25555              		.loc 5 346 7 is_stmt 1 view .LVU6688
 25556              	.LBB13013:
 348:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 25557              		.loc 5 348 2 is_stmt 0 view .LVU6689
 25558 0102 012A     		cmp	r2, #1
 25559 0104 09D0     		beq	.L573
 25560              	.LVL1890:
 25561              	.LBB13014:
 25562              	.LBI13014:
 361:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 25563              		.loc 4 361 7 is_stmt 1 view .LVU6690
 25564              	.LBB13015:
 363:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __s1;
 25565              		.loc 4 363 2 view .LVU6691
 25566              		.loc 4 365 2 view .LVU6692
 25567              		.loc 4 365 49 is_stmt 0 view .LVU6693
 25568 0106 FFF7FEFF 		bl	memcpy
 25569              	.LVL1891:
 25570              	.L536:
 25571              		.loc 4 365 49 view .LVU6694
 25572              	.LBE13015:
 25573              	.LBE13014:
 25574              	.LBE13013:
 25575              	.LBE13012:
 25576              	.LBB13019:
 25577              	.LBI13019:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25578              		.loc 5 930 7 is_stmt 1 view .LVU6695
ARM GAS  /tmp/ccszdRNt.s 			page 829


 25579              	.LBB13020:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25580              		.loc 5 931 16 is_stmt 0 view .LVU6696
 25581 010a 099B     		ldr	r3, [sp, #36]
 25582              	.LVL1892:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25583              		.loc 5 931 16 view .LVU6697
 25584              	.LBE13020:
 25585              	.LBE13019:
 25586              	.LBB13021:
 25587              	.LBI13021:
 214:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25588              		.loc 5 214 7 is_stmt 1 view .LVU6698
 25589              	.LBB13022:
 25590              	.LBB13023:
 25591              	.LBI13023:
 182:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_string_length = __length; }
 25592              		.loc 5 182 7 view .LVU6699
 25593              	.LBB13024:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25594              		.loc 5 183 9 is_stmt 0 view .LVU6700
 25595 010c 6B60     		str	r3, [r5, #4]
 25596              	.LVL1893:
 183:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25597              		.loc 5 183 9 view .LVU6701
 25598              	.LBE13024:
 25599              	.LBE13023:
 25600              	.LBB13025:
 25601              	.LBI13025:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25602              		.loc 5 186 7 is_stmt 1 view .LVU6702
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25603              		.loc 5 186 7 is_stmt 0 view .LVU6703
 25604              	.LBE13025:
 217:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25605              		.loc 5 217 31 view .LVU6704
 25606 010e 6268     		ldr	r2, [r4, #4]
 25607 0110 9446     		mov	ip, r2
 25608 0112 6344     		add	r3, r3, ip
 25609              	.LVL1894:
 25610              	.LBB13026:
 25611              	.LBI13026:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 25612              		.loc 4 299 7 is_stmt 1 view .LVU6705
 25613              	.LBB13027:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25614              		.loc 4 300 9 view .LVU6706
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25615              		.loc 4 300 14 is_stmt 0 view .LVU6707
 25616 0114 0022     		movs	r2, #0
 25617 0116 1A70     		strb	r2, [r3]
 25618              	.LVL1895:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25619              		.loc 4 300 14 view .LVU6708
 25620              	.LBE13027:
 25621              	.LBE13026:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 830


 25622              		.loc 5 218 7 view .LVU6709
 25623 0118 E5E7     		b	.L538
 25624              	.LVL1896:
 25625              	.L573:
 218:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25626              		.loc 5 218 7 view .LVU6710
 25627              	.LBE13022:
 25628              	.LBE13021:
 25629              	.LBB13028:
 25630              	.LBB13018:
 25631              	.LBB13016:
 25632              	.LBI13016:
 299:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       { __c1 = __c2; }
 25633              		.loc 4 299 7 is_stmt 1 view .LVU6711
 25634              	.LBB13017:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25635              		.loc 4 300 9 view .LVU6712
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25636              		.loc 4 300 16 is_stmt 0 view .LVU6713
 25637 011a 0B78     		ldrb	r3, [r1]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25638              		.loc 4 300 14 view .LVU6714
 25639 011c 0370     		strb	r3, [r0]
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25640              		.loc 4 300 22 view .LVU6715
 25641 011e F4E7     		b	.L536
 25642              	.LVL1897:
 25643              	.L558:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 
 25644              		.loc 4 300 22 view .LVU6716
 25645              	.LBE13017:
 25646              	.LBE13016:
 25647              	.LBE13018:
 25648              	.LBE13028:
 25649              	.LBB13029:
 759:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	    size_type __capacity;
 25650              		.loc 5 759 14 view .LVU6717
 25651 0120 0020     		movs	r0, #0
 25652 0122 D6E7     		b	.L539
 25653              	.LVL1898:
 25654              	.L540:
 25655              	.LBB13008:
 25656              	.LBI13008:
 178:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 25657              		.loc 5 178 7 is_stmt 1 view .LVU6718
 25658              	.LBB13009:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25659              		.loc 5 179 9 is_stmt 0 view .LVU6719
 25660 0124 0AAB     		add	r3, sp, #40
 25661              	.LVL1899:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25662              		.loc 5 179 9 view .LVU6720
 25663 0126 0893     		str	r3, [sp, #32]
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25664              		.loc 5 179 33 view .LVU6721
 25665 0128 DDE7     		b	.L538
 25666              	.LVL1900:
ARM GAS  /tmp/ccszdRNt.s 			page 831


 25667              	.L569:
 179:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25668              		.loc 5 179 33 view .LVU6722
 25669              	.LBE13009:
 25670              	.LBE13008:
 25671              	.LBE13029:
 25672              	.LBE13037:
 25673              	.LBE13057:
  52:alohal/cli/cli.cpp ****             // History arrow up
 25674              		.loc 2 52 9 is_stmt 1 view .LVU6723
  52:alohal/cli/cli.cpp ****             // History arrow up
 25675              		.loc 2 52 13 is_stmt 0 view .LVU6724
 25676 012a 616F     		ldr	r1, [r4, #116]
  52:alohal/cli/cli.cpp ****             // History arrow up
 25677              		.loc 2 52 9 view .LVU6725
 25678 012c 0029     		cmp	r1, #0
 25679 012e 03D0     		beq	.L543
  54:alohal/cli/cli.cpp ****                 Set_line(command_history->Up());
 25680              		.loc 2 54 13 is_stmt 1 view .LVU6726
 25681 0130 412D     		cmp	r5, #65
 25682 0132 05D0     		beq	.L574
  58:alohal/cli/cli.cpp ****                 Set_line(command_history->Down());
 25683              		.loc 2 58 18 view .LVU6727
 25684 0134 422D     		cmp	r5, #66
 25685 0136 11D0     		beq	.L575
 25686              	.L543:
  62:alohal/cli/cli.cpp ****     }
 25687              		.loc 2 62 9 view .LVU6728
  62:alohal/cli/cli.cpp ****     }
 25688              		.loc 2 62 35 is_stmt 0 view .LVU6729
 25689 0138 7823     		movs	r3, #120
 25690 013a 0022     		movs	r2, #0
 25691 013c E252     		strh	r2, [r4, r3]
 25692 013e ACE7     		b	.L533
 25693              	.L574:
  55:alohal/cli/cli.cpp ****             }
 25694              		.loc 2 55 17 is_stmt 1 view .LVU6730
  55:alohal/cli/cli.cpp ****             }
 25695              		.loc 2 55 45 is_stmt 0 view .LVU6731
 25696 0140 0EA8     		add	r0, sp, #56
 25697 0142 FFF7FEFF 		bl	_ZN11CLI_history2UpB5cxx11Ev
 25698              	.LVL1901:
  55:alohal/cli/cli.cpp ****             }
 25699              		.loc 2 55 25 view .LVU6732
 25700 0146 0EA9     		add	r1, sp, #56
 25701 0148 2000     		movs	r0, r4
 25702 014a FFF7FEFF 		bl	_ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 25703              	.LVL1902:
 25704              	.LBB13058:
 25705              	.LBI13058:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25706              		.loc 5 657 7 is_stmt 1 view .LVU6733
 25707              	.LBB13059:
 25708              	.LBI13059:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25709              		.loc 5 229 7 view .LVU6734
 25710              	.LBB13060:
ARM GAS  /tmp/ccszdRNt.s 			page 832


 25711              	.LBB13061:
 25712              	.LBI13061:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25713              		.loc 5 221 7 view .LVU6735
 25714              	.LBB13062:
 25715              	.LBI13062:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25716              		.loc 5 186 7 view .LVU6736
 25717              	.LBB13063:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25718              		.loc 5 187 28 is_stmt 0 view .LVU6737
 25719 014e 0E98     		ldr	r0, [sp, #56]
 25720              	.LVL1903:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25721              		.loc 5 187 28 view .LVU6738
 25722              	.LBE13063:
 25723              	.LBE13062:
 25724              	.LBB13064:
 25725              	.LBI13064:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25726              		.loc 5 200 7 is_stmt 1 view .LVU6739
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25727              		.loc 5 200 7 is_stmt 0 view .LVU6740
 25728              	.LBE13064:
 25729              	.LBE13061:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25730              		.loc 5 231 2 view .LVU6741
 25731 0150 10AB     		add	r3, sp, #64
 25732 0152 9842     		cmp	r0, r3
 25733 0154 F0D0     		beq	.L543
 25734              	.LVL1904:
 25735              	.LBB13065:
 25736              	.LBI13065:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25737              		.loc 5 236 7 is_stmt 1 view .LVU6742
 25738              	.LBB13066:
 25739              	.LBB13067:
 25740              	.LBI13067:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25741              		.loc 10 469 7 view .LVU6743
 25742              	.LBB13068:
 25743              	.LBI13068:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25744              		.loc 7 119 7 view .LVU6744
 25745              	.LBB13069:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25746              		.loc 7 128 19 is_stmt 0 view .LVU6745
 25747 0156 FFF7FEFF 		bl	_ZdlPv
 25748              	.LVL1905:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25749              		.loc 7 128 19 view .LVU6746
 25750              	.LBE13069:
 25751              	.LBE13068:
 25752              	.LBE13067:
 25753              	.LBE13066:
 25754              	.LBE13065:
 25755              	.LBE13060:
ARM GAS  /tmp/ccszdRNt.s 			page 833


 25756              	.LBE13059:
 25757              	.LBB13073:
 25758              	.LBI13073:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25759              		.loc 5 150 14 is_stmt 1 view .LVU6747
 25760              	.LBB13074:
 25761              	.LBI13074:
 25762              		.loc 6 153 7 view .LVU6748
 25763              	.LBB13075:
 25764              	.LBI13075:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25765              		.loc 7 89 7 view .LVU6749
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25766              		.loc 7 89 7 is_stmt 0 view .LVU6750
 25767              	.LBE13075:
 25768              	.LBE13074:
 25769              	.LBE13073:
 25770              	.LBB13076:
 25771              	.LBB13072:
 25772              	.LBB13071:
 25773              	.LBB13070:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25774              		.loc 5 237 79 view .LVU6751
 25775 015a EDE7     		b	.L543
 25776              	.L575:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25777              		.loc 5 237 79 view .LVU6752
 25778              	.LBE13070:
 25779              	.LBE13071:
 25780              	.LBE13072:
 25781              	.LBE13076:
 25782              	.LBE13058:
  59:alohal/cli/cli.cpp ****             }
 25783              		.loc 2 59 17 is_stmt 1 view .LVU6753
  59:alohal/cli/cli.cpp ****             }
 25784              		.loc 2 59 47 is_stmt 0 view .LVU6754
 25785 015c 14A8     		add	r0, sp, #80
 25786 015e FFF7FEFF 		bl	_ZN11CLI_history4DownB5cxx11Ev
 25787              	.LVL1906:
  59:alohal/cli/cli.cpp ****             }
 25788              		.loc 2 59 25 view .LVU6755
 25789 0162 14A9     		add	r1, sp, #80
 25790 0164 2000     		movs	r0, r4
 25791 0166 FFF7FEFF 		bl	_ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 25792              	.LVL1907:
 25793              	.LBB13077:
 25794              	.LBI13077:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25795              		.loc 5 657 7 is_stmt 1 view .LVU6756
 25796              	.LBB13078:
 25797              	.LBI13078:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25798              		.loc 5 229 7 view .LVU6757
 25799              	.LBB13079:
 25800              	.LBB13080:
 25801              	.LBI13080:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
ARM GAS  /tmp/ccszdRNt.s 			page 834


 25802              		.loc 5 221 7 view .LVU6758
 25803              	.LBB13081:
 25804              	.LBI13081:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25805              		.loc 5 186 7 view .LVU6759
 25806              	.LBB13082:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25807              		.loc 5 187 28 is_stmt 0 view .LVU6760
 25808 016a 1498     		ldr	r0, [sp, #80]
 25809              	.LVL1908:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25810              		.loc 5 187 28 view .LVU6761
 25811              	.LBE13082:
 25812              	.LBE13081:
 25813              	.LBB13083:
 25814              	.LBI13083:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25815              		.loc 5 200 7 is_stmt 1 view .LVU6762
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25816              		.loc 5 200 7 is_stmt 0 view .LVU6763
 25817              	.LBE13083:
 25818              	.LBE13080:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25819              		.loc 5 231 2 view .LVU6764
 25820 016c 16AB     		add	r3, sp, #88
 25821 016e 9842     		cmp	r0, r3
 25822 0170 E2D0     		beq	.L543
 25823              	.LVL1909:
 25824              	.LBB13084:
 25825              	.LBI13084:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25826              		.loc 5 236 7 is_stmt 1 view .LVU6765
 25827              	.LBB13085:
 25828              	.LBB13086:
 25829              	.LBI13086:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25830              		.loc 10 469 7 view .LVU6766
 25831              	.LBB13087:
 25832              	.LBI13087:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25833              		.loc 7 119 7 view .LVU6767
 25834              	.LBB13088:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25835              		.loc 7 128 19 is_stmt 0 view .LVU6768
 25836 0172 FFF7FEFF 		bl	_ZdlPv
 25837              	.LVL1910:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25838              		.loc 7 128 19 view .LVU6769
 25839              	.LBE13088:
 25840              	.LBE13087:
 25841              	.LBE13086:
 25842              	.LBE13085:
 25843              	.LBE13084:
 25844              	.LBE13079:
 25845              	.LBE13078:
 25846              	.LBB13092:
 25847              	.LBI13092:
ARM GAS  /tmp/ccszdRNt.s 			page 835


 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25848              		.loc 5 150 14 is_stmt 1 view .LVU6770
 25849              	.LBB13093:
 25850              	.LBI13093:
 25851              		.loc 6 153 7 view .LVU6771
 25852              	.LBB13094:
 25853              	.LBI13094:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25854              		.loc 7 89 7 view .LVU6772
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25855              		.loc 7 89 7 is_stmt 0 view .LVU6773
 25856              	.LBE13094:
 25857              	.LBE13093:
 25858              	.LBE13092:
 25859              	.LBB13095:
 25860              	.LBB13091:
 25861              	.LBB13090:
 25862              	.LBB13089:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25863              		.loc 5 237 79 view .LVU6774
 25864 0176 DFE7     		b	.L543
 25865              	.L570:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25866              		.loc 5 237 79 view .LVU6775
 25867              	.LBE13089:
 25868              	.LBE13090:
 25869              	.LBE13091:
 25870              	.LBE13095:
 25871              	.LBE13077:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 25872              		.loc 2 67 9 is_stmt 1 view .LVU6776
 25873              	.LVL1911:
 25874              	.LBB13096:
 25875              	.LBI13096:
1143:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25876              		.loc 5 1143 7 view .LVU6777
 25877              	.LBB13097:
 25878              	.LBB13098:
 25879              	.LBI13098:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25880              		.loc 5 930 7 view .LVU6778
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 25881              		.loc 5 930 7 is_stmt 0 view .LVU6779
 25882              	.LBE13098:
1146:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 25883              		.loc 5 1146 36 view .LVU6780
 25884 0178 A368     		ldr	r3, [r4, #8]
 25885 017a 013B     		subs	r3, r3, #1
 25886              	.LVL1912:
 25887              	.LBB13099:
 25888              	.LBI13099:
1063:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25889              		.loc 5 1063 7 is_stmt 1 view .LVU6781
 25890              	.LBB13100:
 25891              	.LBB13101:
 25892              	.LBI13101:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 836


 25893              		.loc 5 186 7 view .LVU6782
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25894              		.loc 5 186 7 is_stmt 0 view .LVU6783
 25895              	.LBE13101:
 25896              	.LBE13100:
 25897              	.LBE13099:
 25898              	.LBE13097:
 25899              	.LBE13096:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 25900              		.loc 2 67 30 view .LVU6784
 25901 017c 6268     		ldr	r2, [r4, #4]
 25902 017e D35C     		ldrb	r3, [r2, r3]
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 25903              		.loc 2 67 41 view .LVU6785
 25904 0180 202B     		cmp	r3, #32
 25905 0182 09D0     		beq	.L576
 25906 0184 0025     		movs	r5, #0
 25907              	.LVL1913:
 25908              	.L548:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 25909              		.loc 2 67 72 discriminator 3 view .LVU6786
 25910 0186 002D     		cmp	r5, #0
 25911 0188 26D0     		beq	.L564
 25912              	.L550:
 25913              	.LVL1914:
 25914              	.LBB13102:
 25915              	.LBI13102:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 25916              		.loc 5 657 7 is_stmt 1 view .LVU6787
 25917              	.LBB13103:
 25918              	.LBB13104:
 25919              	.LBI13104:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25920              		.loc 5 229 7 view .LVU6788
 25921              	.LBB13105:
 25922              	.LBB13106:
 25923              	.LBI13106:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 25924              		.loc 5 221 7 view .LVU6789
 25925              	.LBB13107:
 25926              	.LBI13107:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 25927              		.loc 5 186 7 view .LVU6790
 25928              	.LBB13108:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25929              		.loc 5 187 28 is_stmt 0 view .LVU6791
 25930 018a 1A98     		ldr	r0, [sp, #104]
 25931              	.LVL1915:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25932              		.loc 5 187 28 view .LVU6792
 25933              	.LBE13108:
 25934              	.LBE13107:
 25935              	.LBB13109:
 25936              	.LBI13109:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25937              		.loc 5 200 7 is_stmt 1 view .LVU6793
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 837


 25938              		.loc 5 200 7 is_stmt 0 view .LVU6794
 25939              	.LBE13109:
 25940              	.LBE13106:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 25941              		.loc 5 231 2 view .LVU6795
 25942 018c 1CAB     		add	r3, sp, #112
 25943 018e 9842     		cmp	r0, r3
 25944 0190 23D0     		beq	.L551
 25945              	.LVL1916:
 25946              	.LBB13110:
 25947              	.LBI13110:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 25948              		.loc 5 236 7 is_stmt 1 view .LVU6796
 25949              	.LBB13111:
 25950              	.LBB13112:
 25951              	.LBI13112:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 25952              		.loc 10 469 7 view .LVU6797
 25953              	.LBB13113:
 25954              	.LBI13113:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 25955              		.loc 7 119 7 view .LVU6798
 25956              	.LBB13114:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25957              		.loc 7 128 19 is_stmt 0 view .LVU6799
 25958 0192 FFF7FEFF 		bl	_ZdlPv
 25959              	.LVL1917:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 25960              		.loc 7 128 19 view .LVU6800
 25961              	.LBE13114:
 25962              	.LBE13113:
 25963              	.LBE13112:
 25964              	.LBE13111:
 25965              	.LBE13110:
 25966              	.LBE13105:
 25967              	.LBE13104:
 25968              	.LBB13115:
 25969              	.LBI13115:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 25970              		.loc 5 150 14 is_stmt 1 view .LVU6801
 25971              	.LBB13116:
 25972              	.LBI13116:
 25973              		.loc 6 153 7 view .LVU6802
 25974              	.LBB13117:
 25975              	.LBI13117:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25976              		.loc 7 89 7 view .LVU6803
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 25977              		.loc 7 89 7 is_stmt 0 view .LVU6804
 25978              	.LBE13117:
 25979              	.LBE13116:
 25980              	.LBE13115:
 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25981              		.loc 5 658 23 view .LVU6805
 25982 0196 20E0     		b	.L551
 25983              	.LVL1918:
 25984              	.L576:
ARM GAS  /tmp/ccszdRNt.s 			page 838


 658:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 25985              		.loc 5 658 23 view .LVU6806
 25986              	.LBE13103:
 25987              	.LBE13102:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 25988              		.loc 2 67 60 discriminator 2 view .LVU6807
 25989 0198 2100     		movs	r1, r4
 25990 019a 5031     		adds	r1, r1, #80
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 25991              		.loc 2 67 74 discriminator 2 view .LVU6808
 25992 019c 2200     		movs	r2, r4
 25993 019e 3432     		adds	r2, r2, #52
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 25994              		.loc 2 67 72 discriminator 2 view .LVU6809
 25995 01a0 1AA8     		add	r0, sp, #104
 25996 01a2 FFF7FEFF 		bl	_ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
 25997              	.LVL1919:
 25998              	.LBB13118:
 25999              	.LBI13118:
6188:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
 26000              		.loc 5 6188 5 is_stmt 1 discriminator 2 view .LVU6810
 26001              	.LBB13119:
 26002              	.LBI13119:
6149:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	       const basic_string<_CharT>& __rhs) _GLIBCXX_NOEXCEPT
 26003              		.loc 5 6149 5 discriminator 2 view .LVU6811
 26004              	.LBB13120:
 26005              	.LBB13121:
 26006              	.LBI13121:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26007              		.loc 5 930 7 discriminator 2 view .LVU6812
 26008              	.LBB13122:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26009              		.loc 5 931 16 is_stmt 0 discriminator 2 view .LVU6813
 26010 01a6 A268     		ldr	r2, [r4, #8]
 26011              	.LVL1920:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26012              		.loc 5 931 16 discriminator 2 view .LVU6814
 26013              	.LBE13122:
 26014              	.LBE13121:
 26015              	.LBB13123:
 26016              	.LBI13123:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26017              		.loc 5 930 7 is_stmt 1 discriminator 2 view .LVU6815
 26018              	.LBB13124:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26019              		.loc 5 931 16 is_stmt 0 discriminator 2 view .LVU6816
 26020 01a8 1B9B     		ldr	r3, [sp, #108]
 26021              	.LVL1921:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26022              		.loc 5 931 16 discriminator 2 view .LVU6817
 26023              	.LBE13124:
 26024              	.LBE13123:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 26025              		.loc 5 6152 8 discriminator 2 view .LVU6818
 26026 01aa 9A42     		cmp	r2, r3
 26027 01ac 04D0     		beq	.L577
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
ARM GAS  /tmp/ccszdRNt.s 			page 839


 26028              		.loc 5 6152 8 view .LVU6819
 26029 01ae 0023     		movs	r3, #0
 26030              	.L549:
 26031              	.LVL1922:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 26032              		.loc 5 6152 8 view .LVU6820
 26033              	.LBE13120:
 26034              	.LBE13119:
 26035              	.LBE13118:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 26036              		.loc 2 67 41 view .LVU6821
 26037 01b0 002B     		cmp	r3, #0
 26038 01b2 0FD1     		bne	.L563
 26039 01b4 0125     		movs	r5, #1
 26040              	.LVL1923:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 26041              		.loc 2 67 41 view .LVU6822
 26042 01b6 E6E7     		b	.L548
 26043              	.LVL1924:
 26044              	.L577:
 26045              	.LBB13135:
 26046              	.LBB13134:
 26047              	.LBB13133:
 26048              	.LBB13125:
 26049              	.LBI13125:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 26050              		.loc 5 2312 7 is_stmt 1 view .LVU6823
 26051              	.LBB13126:
 26052              	.LBI13126:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26053              		.loc 5 186 7 view .LVU6824
 26054              	.LBB13127:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26055              		.loc 5 187 28 is_stmt 0 view .LVU6825
 26056 01b8 6068     		ldr	r0, [r4, #4]
 26057              	.LVL1925:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26058              		.loc 5 187 28 view .LVU6826
 26059              	.LBE13127:
 26060              	.LBE13126:
 26061              	.LBE13125:
 26062              	.LBB13128:
 26063              	.LBI13128:
2312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data(); }
 26064              		.loc 5 2312 7 is_stmt 1 view .LVU6827
 26065              	.LBB13129:
 26066              	.LBI13129:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26067              		.loc 5 186 7 view .LVU6828
 26068              	.LBB13130:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26069              		.loc 5 187 28 is_stmt 0 view .LVU6829
 26070 01ba 1A99     		ldr	r1, [sp, #104]
 26071              	.LVL1926:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26072              		.loc 5 187 28 view .LVU6830
 26073              	.LBE13130:
ARM GAS  /tmp/ccszdRNt.s 			page 840


 26074              	.LBE13129:
 26075              	.LBE13128:
 26076              	.LBB13131:
 26077              	.LBI13131:
 315:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 26078              		.loc 4 315 7 is_stmt 1 view .LVU6831
 26079              	.LBB13132:
 317:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return 0;
 26080              		.loc 4 317 2 view .LVU6832
 26081 01bc 002A     		cmp	r2, #0
 26082 01be 05D0     		beq	.L561
 320:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	    && __constant_char_array_p(__s1, __n)
 26083              		.loc 4 320 2 view .LVU6833
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26084              		.loc 4 325 2 view .LVU6834
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26085              		.loc 4 325 25 is_stmt 0 view .LVU6835
 26086 01c0 FFF7FEFF 		bl	memcmp
 26087              	.LVL1927:
 325:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26088              		.loc 4 325 25 view .LVU6836
 26089              	.LBE13132:
 26090              	.LBE13131:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 26091              		.loc 5 6152 8 view .LVU6837
 26092 01c4 0028     		cmp	r0, #0
 26093 01c6 03D1     		bne	.L562
 26094 01c8 0123     		movs	r3, #1
 26095 01ca F1E7     		b	.L549
 26096              	.LVL1928:
 26097              	.L561:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 26098              		.loc 5 6152 8 view .LVU6838
 26099 01cc 0123     		movs	r3, #1
 26100 01ce EFE7     		b	.L549
 26101              	.LVL1929:
 26102              	.L562:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 26103              		.loc 5 6152 8 view .LVU6839
 26104 01d0 0023     		movs	r3, #0
 26105 01d2 EDE7     		b	.L549
 26106              	.LVL1930:
 26107              	.L563:
6152:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 						    __lhs.size())); }
 26108              		.loc 5 6152 8 view .LVU6840
 26109              	.LBE13133:
 26110              	.LBE13134:
 26111              	.LBE13135:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 26112              		.loc 2 67 41 view .LVU6841
 26113 01d4 0025     		movs	r5, #0
 26114              	.LVL1931:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 26115              		.loc 2 67 41 view .LVU6842
 26116 01d6 D8E7     		b	.L550
 26117              	.L564:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
ARM GAS  /tmp/ccszdRNt.s 			page 841


 26118              		.loc 2 67 41 view .LVU6843
 26119 01d8 0125     		movs	r5, #1
 26120              	.L551:
  67:alohal/cli/cli.cpp ****             // Autocomplete for string between last space and and of line
 26121              		.loc 2 67 9 discriminator 9 view .LVU6844
 26122 01da 002D     		cmp	r5, #0
 26123 01dc 00D1     		bne	.LCB30618
 26124 01de 5CE7     		b	.L533	@long jump
 26125              	.LCB30618:
  69:alohal/cli/cli.cpp ****         }
 26126              		.loc 2 69 13 is_stmt 1 view .LVU6845
  69:alohal/cli/cli.cpp ****         }
 26127              		.loc 2 69 44 is_stmt 0 view .LVU6846
 26128 01e0 251D     		adds	r5, r4, #4
 26129              	.LVL1932:
 26130              	.LBB13136:
 26131              	.LBI13136:
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 26132              		.loc 5 2635 7 is_stmt 1 view .LVU6847
2635:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 26133              		.loc 5 2635 7 is_stmt 0 view .LVU6848
 26134              	.LBE13136:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 26135              		.loc 4 332 2 is_stmt 1 view .LVU6849
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26136              		.loc 4 335 2 view .LVU6850
 26137              	.LBB13138:
 26138              	.LBB13137:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26139              		.loc 5 2639 64 is_stmt 0 view .LVU6851
 26140 01e2 0122     		movs	r2, #1
 26141 01e4 0123     		movs	r3, #1
 26142 01e6 5242     		rsbs	r2, r2, #0
 26143 01e8 1749     		ldr	r1, .L580
 26144 01ea 2800     		movs	r0, r5
 26145 01ec FFF7FEFF 		bl	_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
 26146              	.LVL1933:
2639:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26147              		.loc 5 2639 64 view .LVU6852
 26148              	.LBE13137:
 26149              	.LBE13138:
  69:alohal/cli/cli.cpp ****         }
 26150              		.loc 2 69 44 view .LVU6853
 26151 01f0 0130     		adds	r0, r0, #1
 26152              	.LVL1934:
 26153              	.LBB13139:
 26154              	.LBI13139:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26155              		.loc 5 936 7 is_stmt 1 view .LVU6854
 26156              	.LBB13140:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26157              		.loc 5 937 16 is_stmt 0 view .LVU6855
 26158 01f2 A668     		ldr	r6, [r4, #8]
 26159              	.LVL1935:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26160              		.loc 5 937 16 view .LVU6856
 26161              	.LBE13140:
ARM GAS  /tmp/ccszdRNt.s 			page 842


 26162              	.LBE13139:
 26163              	.LBB13141:
 26164              	.LBI13141:
2834:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return basic_string(*this,
 26165              		.loc 5 2834 7 is_stmt 1 view .LVU6857
 26166              	.LBB13142:
 26167              	.LBB13143:
 26168              	.LBI13143:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26169              		.loc 5 310 7 view .LVU6858
 26170              	.LBB13144:
 26171              	.LBB13145:
 26172              	.LBI13145:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26173              		.loc 5 930 7 view .LVU6859
 26174              	.LBB13146:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26175              		.loc 5 931 16 is_stmt 0 view .LVU6860
 26176 01f4 6B68     		ldr	r3, [r5, #4]
 26177              	.LVL1936:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26178              		.loc 5 931 16 view .LVU6861
 26179              	.LBE13146:
 26180              	.LBE13145:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 26181              		.loc 5 312 2 view .LVU6862
 26182 01f6 9842     		cmp	r0, r3
 26183 01f8 1BD8     		bhi	.L578
 26184              	.LVL1937:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 26185              		.loc 5 312 2 view .LVU6863
 26186              	.LBE13144:
 26187              	.LBE13143:
 26188              	.LBB13148:
 26189              	.LBI13148:
 476:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 		   size_type __n)
 26190              		.loc 5 476 7 is_stmt 1 view .LVU6864
 26191              	.LBB13149:
 26192              	.LBB13150:
 26193              	.LBI13150:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26194              		.loc 5 190 7 view .LVU6865
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26195              		.loc 5 190 7 is_stmt 0 view .LVU6866
 26196              	.LBE13150:
 26197              	.LBB13151:
 26198              	.LBI13151:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 26199              		.loc 6 138 7 is_stmt 1 view .LVU6867
 26200              	.LBB13152:
 26201              	.LBI13152:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26202              		.loc 7 80 7 view .LVU6868
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26203              		.loc 7 80 7 is_stmt 0 view .LVU6869
 26204              	.LBE13152:
 26205              	.LBE13151:
ARM GAS  /tmp/ccszdRNt.s 			page 843


 26206              	.LBB13153:
 26207              	.LBI13153:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 26208              		.loc 5 159 2 is_stmt 1 view .LVU6870
 26209              	.LBB13154:
 26210              	.LBB13155:
 26211              	.LBB13156:
 26212              	.LBI13156:
 26213              		.loc 8 99 5 view .LVU6871
 26214              		.loc 8 99 5 is_stmt 0 view .LVU6872
 26215              	.LBE13156:
 26216              	.LBB13157:
 26217              	.LBI13157:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26218              		.loc 6 141 7 is_stmt 1 view .LVU6873
 26219              	.LBB13158:
 26220              	.LBI13158:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26221              		.loc 7 83 7 view .LVU6874
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26222              		.loc 7 83 7 is_stmt 0 view .LVU6875
 26223              	.LBE13158:
 26224              	.LBE13157:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26225              		.loc 5 160 46 view .LVU6876
 26226 01fa 22AB     		add	r3, sp, #136
 26227              	.LVL1938:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26228              		.loc 5 160 46 view .LVU6877
 26229 01fc 2093     		str	r3, [sp, #128]
 26230              	.LVL1939:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26231              		.loc 5 160 46 view .LVU6878
 26232              	.LBE13155:
 26233              	.LBE13154:
 26234              	.LBE13153:
 26235              	.LBB13159:
 26236              	.LBI13159:
 26237              		.loc 6 153 7 is_stmt 1 view .LVU6879
 26238              	.LBB13160:
 26239              	.LBI13160:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26240              		.loc 7 89 7 view .LVU6880
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26241              		.loc 7 89 7 is_stmt 0 view .LVU6881
 26242              	.LBE13160:
 26243              	.LBE13159:
 26244              	.LBB13161:
 26245              	.LBB13162:
 26246              	.LBI13162:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26247              		.loc 5 186 7 is_stmt 1 view .LVU6882
 26248              	.LBB13163:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26249              		.loc 5 187 28 is_stmt 0 view .LVU6883
 26250 01fe 6168     		ldr	r1, [r4, #4]
 26251              	.LVL1940:
ARM GAS  /tmp/ccszdRNt.s 			page 844


 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26252              		.loc 5 187 28 view .LVU6884
 26253              	.LBE13163:
 26254              	.LBE13162:
 26255              	.LBB13164:
 26256              	.LBI13164:
 310:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26257              		.loc 5 310 7 is_stmt 1 view .LVU6885
 26258              	.LBB13165:
 26259              	.LBB13166:
 26260              	.LBI13166:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26261              		.loc 5 930 7 view .LVU6886
 26262              	.LBB13167:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26263              		.loc 5 931 16 is_stmt 0 view .LVU6887
 26264 0200 6B68     		ldr	r3, [r5, #4]
 26265              	.LVL1941:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26266              		.loc 5 931 16 view .LVU6888
 26267              	.LBE13167:
 26268              	.LBE13166:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 26269              		.loc 5 312 2 view .LVU6889
 26270 0202 9842     		cmp	r0, r3
 26271 0204 1AD8     		bhi	.L579
 26272              	.LVL1942:
 312:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 26273              		.loc 5 312 2 view .LVU6890
 26274              	.LBE13165:
 26275              	.LBE13164:
 480:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 26276              		.loc 5 480 16 view .LVU6891
 26277 0206 0918     		adds	r1, r1, r0
 26278              	.LVL1943:
 26279              	.LBB13169:
 26280              	.LBI13169:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26281              		.loc 5 329 7 is_stmt 1 view .LVU6892
 26282              	.LBB13170:
 331:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 26283              		.loc 5 331 47 is_stmt 0 view .LVU6893
 26284 0208 1A1A     		subs	r2, r3, r0
 26285              	.LVL1944:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26286              		.loc 5 332 19 view .LVU6894
 26287 020a 9642     		cmp	r6, r2
 26288 020c 00D2     		bcs	.L555
 26289 020e 3200     		movs	r2, r6
 26290              	.LVL1945:
 26291              	.L555:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26292              		.loc 5 332 19 view .LVU6895
 26293              	.LBE13170:
 26294              	.LBE13169:
 482:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       }
 26295              		.loc 5 482 2 view .LVU6896
ARM GAS  /tmp/ccszdRNt.s 			page 845


 26296 0210 8A18     		adds	r2, r1, r2
 26297              	.LVL1946:
 26298              	.LBB13171:
 26299              	.LBI13171:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26300              		.loc 5 263 9 is_stmt 1 view .LVU6897
 26301              	.LBB13172:
 26302              	.LBB13173:
 26303              	.LBI13173:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 26304              		.loc 5 243 9 view .LVU6898
 26305              	.LBB13174:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26306              		.loc 5 247 11 is_stmt 0 view .LVU6899
 26307 0212 0023     		movs	r3, #0
 26308              	.LVL1947:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26309              		.loc 5 247 11 view .LVU6900
 26310 0214 20A8     		add	r0, sp, #128
 26311              	.LVL1948:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26312              		.loc 5 247 11 view .LVU6901
 26313 0216 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 26314              	.LVL1949:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26315              		.loc 5 247 11 view .LVU6902
 26316              	.LBE13174:
 26317              	.LBE13173:
 26318              	.LBE13172:
 26319              	.LBE13171:
 26320              	.LBE13161:
 26321              	.LBE13149:
 26322              	.LBE13148:
 26323              	.LBE13142:
 26324              	.LBE13141:
  69:alohal/cli/cli.cpp ****         }
 26325              		.loc 2 69 25 view .LVU6903
 26326 021a 20A9     		add	r1, sp, #128
 26327 021c 2000     		movs	r0, r4
 26328 021e FFF7FEFF 		bl	_ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 26329              	.LVL1950:
 26330              	.LBB13181:
 26331              	.LBI13181:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 26332              		.loc 5 657 7 is_stmt 1 view .LVU6904
 26333              	.LBB13182:
 26334              	.LBI13182:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26335              		.loc 5 229 7 view .LVU6905
 26336              	.LBB13183:
 26337              	.LBB13184:
 26338              	.LBI13184:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 26339              		.loc 5 221 7 view .LVU6906
 26340              	.LBB13185:
 26341              	.LBI13185:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 846


 26342              		.loc 5 186 7 view .LVU6907
 26343              	.LBB13186:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26344              		.loc 5 187 28 is_stmt 0 view .LVU6908
 26345 0222 2098     		ldr	r0, [sp, #128]
 26346              	.LVL1951:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26347              		.loc 5 187 28 view .LVU6909
 26348              	.LBE13186:
 26349              	.LBE13185:
 26350              	.LBB13187:
 26351              	.LBI13187:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26352              		.loc 5 200 7 is_stmt 1 view .LVU6910
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26353              		.loc 5 200 7 is_stmt 0 view .LVU6911
 26354              	.LBE13187:
 26355              	.LBE13184:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 26356              		.loc 5 231 2 view .LVU6912
 26357 0224 22AB     		add	r3, sp, #136
 26358 0226 9842     		cmp	r0, r3
 26359 0228 00D1     		bne	.LCB30874
 26360 022a 36E7     		b	.L533	@long jump
 26361              	.LCB30874:
 26362              	.LVL1952:
 26363              	.LBB13188:
 26364              	.LBI13188:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 26365              		.loc 5 236 7 is_stmt 1 view .LVU6913
 26366              	.LBB13189:
 26367              	.LBB13190:
 26368              	.LBI13190:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 26369              		.loc 10 469 7 view .LVU6914
 26370              	.LBB13191:
 26371              	.LBI13191:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 26372              		.loc 7 119 7 view .LVU6915
 26373              	.LBB13192:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26374              		.loc 7 128 19 is_stmt 0 view .LVU6916
 26375 022c FFF7FEFF 		bl	_ZdlPv
 26376              	.LVL1953:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 26377              		.loc 7 128 19 view .LVU6917
 26378              	.LBE13192:
 26379              	.LBE13191:
 26380              	.LBE13190:
 26381              	.LBE13189:
 26382              	.LBE13188:
 26383              	.LBE13183:
 26384              	.LBE13182:
 26385              	.LBB13196:
 26386              	.LBI13196:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26387              		.loc 5 150 14 is_stmt 1 view .LVU6918
ARM GAS  /tmp/ccszdRNt.s 			page 847


 26388              	.LBB13197:
 26389              	.LBI13197:
 26390              		.loc 6 153 7 view .LVU6919
 26391              	.LBB13198:
 26392              	.LBI13198:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26393              		.loc 7 89 7 view .LVU6920
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26394              		.loc 7 89 7 is_stmt 0 view .LVU6921
 26395              	.LBE13198:
 26396              	.LBE13197:
 26397              	.LBE13196:
 26398              	.LBB13199:
 26399              	.LBB13195:
 26400              	.LBB13194:
 26401              	.LBB13193:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26402              		.loc 5 237 79 view .LVU6922
 26403 0230 33E7     		b	.L533
 26404              	.LVL1954:
 26405              	.L578:
 237:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26406              		.loc 5 237 79 view .LVU6923
 26407              	.LBE13193:
 26408              	.LBE13194:
 26409              	.LBE13195:
 26410              	.LBE13199:
 26411              	.LBE13181:
 26412              	.LBB13200:
 26413              	.LBB13180:
 26414              	.LBB13178:
 26415              	.LBB13147:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 26416              		.loc 5 313 28 view .LVU6924
 26417 0232 0200     		movs	r2, r0
 26418 0234 0549     		ldr	r1, .L580+4
 26419 0236 0648     		ldr	r0, .L580+8
 26420              	.LVL1955:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 26421              		.loc 5 313 28 view .LVU6925
 26422 0238 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 26423              	.LVL1956:
 26424              	.L579:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 26425              		.loc 5 313 28 view .LVU6926
 26426              	.LBE13147:
 26427              	.LBE13178:
 26428              	.LBB13179:
 26429              	.LBB13177:
 26430              	.LBB13176:
 26431              	.LBB13175:
 26432              	.LBB13168:
 26433 023c 0200     		movs	r2, r0
 26434 023e 0549     		ldr	r1, .L580+12
 26435 0240 0348     		ldr	r0, .L580+8
 26436              	.LVL1957:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
ARM GAS  /tmp/ccszdRNt.s 			page 848


 26437              		.loc 5 313 28 view .LVU6927
 26438 0242 FFF7FEFF 		bl	_ZSt24__throw_out_of_range_fmtPKcz
 26439              	.LVL1958:
 26440              	.L581:
 313:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 26441              		.loc 5 313 28 view .LVU6928
 26442 0246 C046     		.align	2
 26443              	.L580:
 26444 0248 1C000000 		.word	.LC50
 26445 024c 00000000 		.word	.LC70
 26446 0250 14000000 		.word	.LC23
 26447 0254 18000000 		.word	.LC73
 26448              	.LBE13168:
 26449              	.LBE13175:
 26450              	.LBE13176:
 26451              	.LBE13177:
 26452              	.LBE13179:
 26453              	.LBE13180:
 26454              	.LBE13200:
 26455              		.cfi_endproc
 26456              	.LFE3852:
 26458              		.section	.text._ZN3CLI9Char_loadEv,"ax",%progbits
 26459              		.align	1
 26460              		.global	_ZN3CLI9Char_loadEv
 26461              		.syntax unified
 26462              		.code	16
 26463              		.thumb_func
 26464              		.fpu softvfp
 26466              	_ZN3CLI9Char_loadEv:
 26467              	.LVL1959:
 26468              	.LFB3851:
  19:alohal/cli/cli.cpp ****     while (serial_connection->Buffer_size() > 0) {
 26469              		.loc 2 19 22 is_stmt 1 view -0
 26470              		.cfi_startproc
 26471              		@ args = 0, pretend = 0, frame = 0
 26472              		@ frame_needed = 0, uses_anonymous_args = 0
  19:alohal/cli/cli.cpp ****     while (serial_connection->Buffer_size() > 0) {
 26473              		.loc 2 19 22 is_stmt 0 view .LVU6930
 26474 0000 10B5     		push	{r4, lr}
 26475              	.LCFI66:
 26476              		.cfi_def_cfa_offset 8
 26477              		.cfi_offset 4, -8
 26478              		.cfi_offset 14, -4
 26479 0002 0400     		movs	r4, r0
 26480              	.LVL1960:
 26481              	.L584:
  20:alohal/cli/cli.cpp ****         Process_character();
 26482              		.loc 2 20 5 is_stmt 1 view .LVU6931
  20:alohal/cli/cli.cpp ****         Process_character();
 26483              		.loc 2 20 45 view .LVU6932
  20:alohal/cli/cli.cpp ****         Process_character();
 26484              		.loc 2 20 12 is_stmt 0 view .LVU6933
 26485 0004 2368     		ldr	r3, [r4]
 26486              	.LVL1961:
 26487              	.LBB13201:
 26488              	.LBI13201:
  68:alohal/uart/serial_line.hpp ****     }
ARM GAS  /tmp/ccszdRNt.s 			page 849


  69:alohal/uart/serial_line.hpp **** 
  70:alohal/uart/serial_line.hpp ****     /**
  71:alohal/uart/serial_line.hpp ****      * @brief   After IRQ occurs will copy received character from temporal buffer to internal RX b
  72:alohal/uart/serial_line.hpp ****      *
  73:alohal/uart/serial_line.hpp ****      * @return int  Actual size of RX buffer
  74:alohal/uart/serial_line.hpp ****      */
  75:alohal/uart/serial_line.hpp ****     virtual int Receive() = 0;
  76:alohal/uart/serial_line.hpp **** 
  77:alohal/uart/serial_line.hpp ****     /**
  78:alohal/uart/serial_line.hpp ****      * @brief   Read selected number of characters from internal serial line buffer
  79:alohal/uart/serial_line.hpp ****      *          After this operation data which are returned are removed from buffer
  80:alohal/uart/serial_line.hpp ****      *
  81:alohal/uart/serial_line.hpp ****      * @param length    Number of characters to read
  82:alohal/uart/serial_line.hpp ****      * @return string   Message from start of buffer with given length
  83:alohal/uart/serial_line.hpp ****      */
  84:alohal/uart/serial_line.hpp ****     string Read(int length);
  85:alohal/uart/serial_line.hpp **** 
  86:alohal/uart/serial_line.hpp ****     /**
  87:alohal/uart/serial_line.hpp ****      * @brief   Read part of buffer which is before delimiter in string
  88:alohal/uart/serial_line.hpp ****      *          After this operation data which are returned are removed from buffer
  89:alohal/uart/serial_line.hpp ****      *
  90:alohal/uart/serial_line.hpp ****      * @param delimiter     Delimiter which borders which part of string is read
  91:alohal/uart/serial_line.hpp ****      * @return string       Message from start of buffer to delimiter (delimiter is included)
  92:alohal/uart/serial_line.hpp ****      */
  93:alohal/uart/serial_line.hpp ****     string Read(string delimiter);
  94:alohal/uart/serial_line.hpp **** 
  95:alohal/uart/serial_line.hpp ****     /**
  96:alohal/uart/serial_line.hpp ****      * @brief   Return number of characters in RX buffer
  97:alohal/uart/serial_line.hpp ****      *
  98:alohal/uart/serial_line.hpp ****      * @return int  Number of characters in RX buffer
  99:alohal/uart/serial_line.hpp ****      */
 100:alohal/uart/serial_line.hpp ****     unsigned int Buffer_size() const {return RX_buffer.size();}
 26489              		.loc 18 100 18 is_stmt 1 view .LVU6934
 26490              	.LBE13201:
 26491              		.loc 18 100 39 view .LVU6935
 26492              	.LBB13204:
 26493              	.LBB13202:
 26494              	.LBI13202:
 930:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26495              		.loc 5 930 7 view .LVU6936
 26496              	.LBB13203:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26497              		.loc 5 931 16 is_stmt 0 view .LVU6937
 26498 0006 9B68     		ldr	r3, [r3, #8]
 26499              	.LVL1962:
 931:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26500              		.loc 5 931 16 view .LVU6938
 26501              	.LBE13203:
 26502              	.LBE13202:
 26503              	.LBE13204:
  20:alohal/cli/cli.cpp ****         Process_character();
 26504              		.loc 2 20 45 view .LVU6939
 26505 0008 002B     		cmp	r3, #0
 26506 000a 03D0     		beq	.L582
  21:alohal/cli/cli.cpp ****     }
 26507              		.loc 2 21 9 is_stmt 1 view .LVU6940
  21:alohal/cli/cli.cpp ****     }
ARM GAS  /tmp/ccszdRNt.s 			page 850


 26508              		.loc 2 21 26 is_stmt 0 view .LVU6941
 26509 000c 2000     		movs	r0, r4
 26510 000e FFF7FEFF 		bl	_ZN3CLI17Process_characterEv
 26511              	.LVL1963:
  20:alohal/cli/cli.cpp ****         Process_character();
 26512              		.loc 2 20 5 view .LVU6942
 26513 0012 F7E7     		b	.L584
 26514              	.L582:
  23:alohal/cli/cli.cpp **** 
 26515              		.loc 2 23 1 view .LVU6943
 26516              		@ sp needed
 26517              	.LVL1964:
  23:alohal/cli/cli.cpp **** 
 26518              		.loc 2 23 1 view .LVU6944
 26519 0014 10BD     		pop	{r4, pc}
 26520              		.cfi_endproc
 26521              	.LFE3851:
 26523              		.section	.rodata._ZN3CLI5StartEv.str1.4,"aMS",%progbits,1
 26524              		.align	2
 26525              	.LC100:
 26526 0000 68656C70 		.ascii	"help\000"
 26526      00
 26527 0005 000000   		.align	2
 26528              	.LC103:
 26529 0008 5072696E 		.ascii	"Print available commands or help for given command,"
 26529      74206176 
 26529      61696C61 
 26529      626C6520 
 26529      636F6D6D 
 26530 003b 20657861 		.ascii	" example: help, help build\000"
 26530      6D706C65 
 26530      3A206865 
 26530      6C702C20 
 26530      68656C70 
 26531 0056 0000     		.align	2
 26532              	.LC108:
 26533 0058 6275696C 		.ascii	"build_info\000"
 26533      645F696E 
 26533      666F00
 26534 0063 00       		.align	2
 26535              	.LC111:
 26536 0064 5072696E 		.ascii	"Print information about compilation as compiler ver"
 26536      7420696E 
 26536      666F726D 
 26536      6174696F 
 26536      6E206162 
 26537 0097 73696F6E 		.ascii	"sion and date of compilation\000"
 26537      20616E64 
 26537      20646174 
 26537      65206F66 
 26537      20636F6D 
 26538              		.section	.text._ZN3CLI5StartEv,"ax",%progbits
 26539              		.align	1
 26540              		.global	_ZN3CLI5StartEv
 26541              		.syntax unified
 26542              		.code	16
 26543              		.thumb_func
ARM GAS  /tmp/ccszdRNt.s 			page 851


 26544              		.fpu softvfp
 26546              	_ZN3CLI5StartEv:
 26547              	.LVL1965:
 26548              	.LFB3850:
  13:alohal/cli/cli.cpp ****     Register_command("help", "Print available commands or help for given command, example: help, he
 26549              		.loc 2 13 18 is_stmt 1 view -0
 26550              		.cfi_startproc
 26551              		@ args = 0, pretend = 0, frame = 232
 26552              		@ frame_needed = 0, uses_anonymous_args = 0
  13:alohal/cli/cli.cpp ****     Register_command("help", "Print available commands or help for given command, example: help, he
 26553              		.loc 2 13 18 is_stmt 0 view .LVU6946
 26554 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 26555              	.LCFI67:
 26556              		.cfi_def_cfa_offset 20
 26557              		.cfi_offset 4, -20
 26558              		.cfi_offset 5, -16
 26559              		.cfi_offset 6, -12
 26560              		.cfi_offset 7, -8
 26561              		.cfi_offset 14, -4
 26562 0002 C646     		mov	lr, r8
 26563 0004 00B5     		push	{lr}
 26564              	.LCFI68:
 26565              		.cfi_def_cfa_offset 24
 26566              		.cfi_offset 8, -24
 26567 0006 BAB0     		sub	sp, sp, #232
 26568              	.LCFI69:
 26569              		.cfi_def_cfa_offset 256
 26570 0008 0500     		movs	r5, r0
  14:alohal/cli/cli.cpp ****     Register_command("build_info", "Print information about compilation as compiler version and dat
 26571              		.loc 2 14 5 is_stmt 1 view .LVU6947
 26572              	.LVL1966:
 26573              	.LBB13629:
 26574              	.LBI13629:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 26575              		.loc 6 138 7 view .LVU6948
 26576              	.LBB13630:
 26577              	.LBI13630:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26578              		.loc 7 80 7 view .LVU6949
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26579              		.loc 7 80 7 is_stmt 0 view .LVU6950
 26580              	.LBE13630:
 26581              	.LBE13629:
 26582              	.LBB13631:
 26583              	.LBI13631:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 26584              		.loc 5 525 7 is_stmt 1 view .LVU6951
 26585              	.LBB13632:
 26586              	.LBB13633:
 26587              	.LBB13634:
 26588              	.LBI13634:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26589              		.loc 5 190 7 view .LVU6952
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26590              		.loc 5 190 7 is_stmt 0 view .LVU6953
 26591              	.LBE13634:
 26592              	.LBB13635:
ARM GAS  /tmp/ccszdRNt.s 			page 852


 26593              	.LBI13635:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 26594              		.loc 5 156 2 is_stmt 1 view .LVU6954
 26595              	.LBB13636:
 26596              	.LBB13637:
 26597              	.LBB13638:
 26598              	.LBI13638:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26599              		.loc 6 141 7 view .LVU6955
 26600              	.LBB13639:
 26601              	.LBI13639:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26602              		.loc 7 83 7 view .LVU6956
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26603              		.loc 7 83 7 is_stmt 0 view .LVU6957
 26604              	.LBE13639:
 26605              	.LBE13638:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26606              		.loc 5 157 35 view .LVU6958
 26607 000a 06AB     		add	r3, sp, #24
 26608              	.LVL1967:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26609              		.loc 5 157 35 view .LVU6959
 26610 000c 0493     		str	r3, [sp, #16]
 26611              	.LVL1968:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26612              		.loc 5 157 35 view .LVU6960
 26613              	.LBE13637:
 26614              	.LBE13636:
 26615              	.LBE13635:
 26616              	.LBB13640:
 26617              	.LBI13640:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 26618              		.loc 4 329 7 is_stmt 1 view .LVU6961
 26619              	.LBE13640:
 26620              	.LBE13633:
 26621              	.LBE13632:
 26622              	.LBE13631:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 26623              		.loc 4 332 2 view .LVU6962
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26624              		.loc 4 335 2 view .LVU6963
 26625              	.LBB13647:
 26626              	.LBB13646:
 26627              	.LBB13645:
 26628              	.LBB13641:
 26629              	.LBI13641:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26630              		.loc 5 263 9 view .LVU6964
 26631              	.LBB13642:
 26632              	.LBB13643:
 26633              	.LBI13643:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 26634              		.loc 5 243 9 view .LVU6965
 26635              	.LBB13644:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26636              		.loc 5 247 11 is_stmt 0 view .LVU6966
ARM GAS  /tmp/ccszdRNt.s 			page 853


 26637 000e 7D4A     		ldr	r2, .L594
 26638              	.LVL1969:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26639              		.loc 5 247 11 view .LVU6967
 26640 0010 111F     		subs	r1, r2, #4
 26641 0012 0023     		movs	r3, #0
 26642 0014 04A8     		add	r0, sp, #16
 26643              	.LVL1970:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26644              		.loc 5 247 11 view .LVU6968
 26645 0016 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 26646              	.LVL1971:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26647              		.loc 5 247 11 view .LVU6969
 26648              	.LBE13644:
 26649              	.LBE13643:
 26650              	.LBE13642:
 26651              	.LBE13641:
 26652              	.LBE13645:
 26653              	.LBE13646:
 26654              	.LBE13647:
 26655              	.LBB13648:
 26656              	.LBI13648:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 26657              		.loc 6 138 7 is_stmt 1 view .LVU6970
 26658              	.LBB13649:
 26659              	.LBI13649:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26660              		.loc 7 80 7 view .LVU6971
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26661              		.loc 7 80 7 is_stmt 0 view .LVU6972
 26662              	.LBE13649:
 26663              	.LBE13648:
 26664              	.LBB13650:
 26665              	.LBI13650:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 26666              		.loc 5 525 7 is_stmt 1 view .LVU6973
 26667              	.LBB13651:
 26668              	.LBB13652:
 26669              	.LBB13653:
 26670              	.LBI13653:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26671              		.loc 5 190 7 view .LVU6974
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26672              		.loc 5 190 7 is_stmt 0 view .LVU6975
 26673              	.LBE13653:
 26674              	.LBB13654:
 26675              	.LBI13654:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 26676              		.loc 5 156 2 is_stmt 1 view .LVU6976
 26677              	.LBB13655:
 26678              	.LBB13656:
 26679              	.LBB13657:
 26680              	.LBI13657:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26681              		.loc 6 141 7 view .LVU6977
 26682              	.LBB13658:
ARM GAS  /tmp/ccszdRNt.s 			page 854


 26683              	.LBI13658:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26684              		.loc 7 83 7 view .LVU6978
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26685              		.loc 7 83 7 is_stmt 0 view .LVU6979
 26686              	.LBE13658:
 26687              	.LBE13657:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26688              		.loc 5 157 35 view .LVU6980
 26689 001a 0CAB     		add	r3, sp, #48
 26690              	.LVL1972:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26691              		.loc 5 157 35 view .LVU6981
 26692 001c 0A93     		str	r3, [sp, #40]
 26693              	.LVL1973:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26694              		.loc 5 157 35 view .LVU6982
 26695              	.LBE13656:
 26696              	.LBE13655:
 26697              	.LBE13654:
 26698              	.LBB13659:
 26699              	.LBI13659:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 26700              		.loc 4 329 7 is_stmt 1 view .LVU6983
 26701              	.LBE13659:
 26702              	.LBE13652:
 26703              	.LBE13651:
 26704              	.LBE13650:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 26705              		.loc 4 332 2 view .LVU6984
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 26706              		.loc 4 335 2 view .LVU6985
 26707              	.LBB13666:
 26708              	.LBB13665:
 26709              	.LBB13664:
 26710              	.LBB13660:
 26711              	.LBI13660:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26712              		.loc 5 263 9 view .LVU6986
 26713              	.LBB13661:
 26714              	.LBB13662:
 26715              	.LBI13662:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 26716              		.loc 5 243 9 view .LVU6987
 26717              	.LBB13663:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26718              		.loc 5 247 11 is_stmt 0 view .LVU6988
 26719 001e 7A4A     		ldr	r2, .L594+4
 26720              	.LVL1974:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26721              		.loc 5 247 11 view .LVU6989
 26722 0020 1100     		movs	r1, r2
 26723 0022 4D39     		subs	r1, r1, #77
 26724 0024 0023     		movs	r3, #0
 26725 0026 0AA8     		add	r0, sp, #40
 26726              	.LVL1975:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 855


 26727              		.loc 5 247 11 view .LVU6990
 26728 0028 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 26729              	.LVL1976:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26730              		.loc 5 247 11 view .LVU6991
 26731              	.LBE13663:
 26732              	.LBE13662:
 26733              	.LBE13661:
 26734              	.LBE13660:
 26735              	.LBE13664:
 26736              	.LBE13665:
 26737              	.LBE13666:
  14:alohal/cli/cli.cpp ****     Register_command("build_info", "Print information about compilation as compiler version and dat
 26738              		.loc 2 14 21 view .LVU6992
 26739 002c 774B     		ldr	r3, .L594+8
 26740 002e 1093     		str	r3, [sp, #64]
 26741 0030 0023     		movs	r3, #0
 26742 0032 9846     		mov	r8, r3
 26743 0034 1193     		str	r3, [sp, #68]
 26744              	.LVL1977:
  14:alohal/cli/cli.cpp ****     Register_command("build_info", "Print information about compilation as compiler version and dat
 26745              		.loc 2 14 21 view .LVU6993
 26746 0036 0822     		movs	r2, #8
 26747 0038 10A9     		add	r1, sp, #64
 26748 003a 6846     		mov	r0, sp
 26749 003c FFF7FEFF 		bl	memcpy
 26750              	.LVL1978:
 26751              	.LBB13667:
 26752              	.LBI13667:
 141:alohal/cli/cli.hpp ****         commands.emplace_back(new Command<registrator_class>(command, help, object, method));
 26753              		.loc 23 141 10 is_stmt 1 view .LVU6994
 26754              	.LBB13668:
 26755              	.LBB13669:
 26756              	.LBI13669:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 26757              		.loc 5 448 7 view .LVU6995
 26758              	.LBB13670:
 26759              	.LBB13671:
 26760              	.LBB13672:
 26761              	.LBI13672:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26762              		.loc 5 190 7 view .LVU6996
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26763              		.loc 5 190 7 is_stmt 0 view .LVU6997
 26764              	.LBE13672:
 26765              	.LBB13673:
 26766              	.LBI13673:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26767              		.loc 5 290 7 is_stmt 1 view .LVU6998
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26768              		.loc 5 290 7 is_stmt 0 view .LVU6999
 26769              	.LBE13673:
 26770              	.LBB13674:
 26771              	.LBI13674:
 26772              		.loc 20 97 19 is_stmt 1 view .LVU7000
 26773              	.LBB13675:
 26774              	.LBI13675:
ARM GAS  /tmp/ccszdRNt.s 			page 856


 26775              		.loc 10 514 7 view .LVU7001
 26776              	.LBB13676:
 26777              	.LBI13676:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26778              		.loc 6 141 7 view .LVU7002
 26779              	.LBB13677:
 26780              	.LBI13677:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26781              		.loc 7 83 7 view .LVU7003
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26782              		.loc 7 83 7 is_stmt 0 view .LVU7004
 26783              	.LBE13677:
 26784              	.LBE13676:
 26785              	.LBE13675:
 26786              	.LBE13674:
 26787              	.LBB13678:
 26788              	.LBI13678:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 26789              		.loc 5 159 2 is_stmt 1 view .LVU7005
 26790              	.LBB13679:
 26791              	.LBB13680:
 26792              	.LBB13681:
 26793              	.LBI13681:
 26794              		.loc 8 99 5 view .LVU7006
 26795              		.loc 8 99 5 is_stmt 0 view .LVU7007
 26796              	.LBE13681:
 26797              	.LBB13682:
 26798              	.LBI13682:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26799              		.loc 6 141 7 is_stmt 1 view .LVU7008
 26800              	.LBB13683:
 26801              	.LBI13683:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26802              		.loc 7 83 7 view .LVU7009
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26803              		.loc 7 83 7 is_stmt 0 view .LVU7010
 26804              	.LBE13683:
 26805              	.LBE13682:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26806              		.loc 5 160 46 view .LVU7011
 26807 0040 28AB     		add	r3, sp, #160
 26808              	.LVL1979:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26809              		.loc 5 160 46 view .LVU7012
 26810 0042 2693     		str	r3, [sp, #152]
 26811              	.LVL1980:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26812              		.loc 5 160 46 view .LVU7013
 26813              	.LBE13680:
 26814              	.LBE13679:
 26815              	.LBE13678:
 26816              	.LBB13684:
 26817              	.LBI13684:
 26818              		.loc 6 153 7 is_stmt 1 view .LVU7014
 26819              	.LBB13685:
 26820              	.LBI13685:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 857


 26821              		.loc 7 89 7 view .LVU7015
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26822              		.loc 7 89 7 is_stmt 0 view .LVU7016
 26823              	.LBE13685:
 26824              	.LBE13684:
 26825              	.LBB13686:
 26826              	.LBI13686:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26827              		.loc 5 186 7 is_stmt 1 view .LVU7017
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26828              		.loc 5 186 7 is_stmt 0 view .LVU7018
 26829              	.LBE13686:
 26830              	.LBB13687:
 26831              	.LBI13687:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26832              		.loc 5 186 7 is_stmt 1 view .LVU7019
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26833              		.loc 5 186 7 is_stmt 0 view .LVU7020
 26834              	.LBE13687:
 26835              	.LBB13688:
 26836              	.LBI13688:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26837              		.loc 5 936 7 is_stmt 1 view .LVU7021
 26838              	.LBB13689:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26839              		.loc 5 937 16 is_stmt 0 view .LVU7022
 26840 0044 059A     		ldr	r2, [sp, #20]
 26841              	.LVL1981:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26842              		.loc 5 937 16 view .LVU7023
 26843              	.LBE13689:
 26844              	.LBE13688:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26845              		.loc 5 451 9 view .LVU7024
 26846 0046 049B     		ldr	r3, [sp, #16]
 26847 0048 9C46     		mov	ip, r3
 26848 004a 6244     		add	r2, r2, ip
 26849              	.LVL1982:
 26850              	.LBB13690:
 26851              	.LBI13690:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26852              		.loc 5 263 9 is_stmt 1 view .LVU7025
 26853              	.LBB13691:
 26854              	.LBB13692:
 26855              	.LBI13692:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 26856              		.loc 5 243 9 view .LVU7026
 26857              	.LBB13693:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26858              		.loc 5 247 11 is_stmt 0 view .LVU7027
 26859 004c 0023     		movs	r3, #0
 26860              	.LVL1983:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26861              		.loc 5 247 11 view .LVU7028
 26862 004e 6146     		mov	r1, ip
 26863 0050 26A8     		add	r0, sp, #152
 26864              	.LVL1984:
ARM GAS  /tmp/ccszdRNt.s 			page 858


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26865              		.loc 5 247 11 view .LVU7029
 26866 0052 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 26867              	.LVL1985:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26868              		.loc 5 247 11 view .LVU7030
 26869              	.LBE13693:
 26870              	.LBE13692:
 26871              	.LBE13691:
 26872              	.LBE13690:
 26873              	.LBE13671:
 26874              	.LBE13670:
 26875              	.LBE13669:
 26876              	.LBB13694:
 26877              	.LBI13694:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 26878              		.loc 5 448 7 is_stmt 1 view .LVU7031
 26879              	.LBB13695:
 26880              	.LBB13696:
 26881              	.LBB13697:
 26882              	.LBI13697:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26883              		.loc 5 190 7 view .LVU7032
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 26884              		.loc 5 190 7 is_stmt 0 view .LVU7033
 26885              	.LBE13697:
 26886              	.LBB13698:
 26887              	.LBI13698:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26888              		.loc 5 290 7 is_stmt 1 view .LVU7034
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 26889              		.loc 5 290 7 is_stmt 0 view .LVU7035
 26890              	.LBE13698:
 26891              	.LBB13699:
 26892              	.LBI13699:
 26893              		.loc 20 97 19 is_stmt 1 view .LVU7036
 26894              	.LBB13700:
 26895              	.LBI13700:
 26896              		.loc 10 514 7 view .LVU7037
 26897              	.LBB13701:
 26898              	.LBI13701:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26899              		.loc 6 141 7 view .LVU7038
 26900              	.LBB13702:
 26901              	.LBI13702:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26902              		.loc 7 83 7 view .LVU7039
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26903              		.loc 7 83 7 is_stmt 0 view .LVU7040
 26904              	.LBE13702:
 26905              	.LBE13701:
 26906              	.LBE13700:
 26907              	.LBE13699:
 26908              	.LBB13703:
 26909              	.LBI13703:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 26910              		.loc 5 159 2 is_stmt 1 view .LVU7041
ARM GAS  /tmp/ccszdRNt.s 			page 859


 26911              	.LBB13704:
 26912              	.LBB13705:
 26913              	.LBB13706:
 26914              	.LBI13706:
 26915              		.loc 8 99 5 view .LVU7042
 26916              		.loc 8 99 5 is_stmt 0 view .LVU7043
 26917              	.LBE13706:
 26918              	.LBB13707:
 26919              	.LBI13707:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 26920              		.loc 6 141 7 is_stmt 1 view .LVU7044
 26921              	.LBB13708:
 26922              	.LBI13708:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26923              		.loc 7 83 7 view .LVU7045
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26924              		.loc 7 83 7 is_stmt 0 view .LVU7046
 26925              	.LBE13708:
 26926              	.LBE13707:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26927              		.loc 5 160 46 view .LVU7047
 26928 0056 22AF     		add	r7, sp, #136
 26929              	.LVL1986:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26930              		.loc 5 160 46 view .LVU7048
 26931 0058 2097     		str	r7, [sp, #128]
 26932              	.LVL1987:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 26933              		.loc 5 160 46 view .LVU7049
 26934              	.LBE13705:
 26935              	.LBE13704:
 26936              	.LBE13703:
 26937              	.LBB13709:
 26938              	.LBI13709:
 26939              		.loc 6 153 7 is_stmt 1 view .LVU7050
 26940              	.LBB13710:
 26941              	.LBI13710:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26942              		.loc 7 89 7 view .LVU7051
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 26943              		.loc 7 89 7 is_stmt 0 view .LVU7052
 26944              	.LBE13710:
 26945              	.LBE13709:
 26946              	.LBB13711:
 26947              	.LBI13711:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26948              		.loc 5 186 7 is_stmt 1 view .LVU7053
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26949              		.loc 5 186 7 is_stmt 0 view .LVU7054
 26950              	.LBE13711:
 26951              	.LBB13712:
 26952              	.LBI13712:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26953              		.loc 5 186 7 is_stmt 1 view .LVU7055
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 26954              		.loc 5 186 7 is_stmt 0 view .LVU7056
 26955              	.LBE13712:
ARM GAS  /tmp/ccszdRNt.s 			page 860


 26956              	.LBB13713:
 26957              	.LBI13713:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 26958              		.loc 5 936 7 is_stmt 1 view .LVU7057
 26959              	.LBB13714:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26960              		.loc 5 937 16 is_stmt 0 view .LVU7058
 26961 005a 0B9A     		ldr	r2, [sp, #44]
 26962              	.LVL1988:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26963              		.loc 5 937 16 view .LVU7059
 26964              	.LBE13714:
 26965              	.LBE13713:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 26966              		.loc 5 451 9 view .LVU7060
 26967 005c 0A9B     		ldr	r3, [sp, #40]
 26968 005e 9C46     		mov	ip, r3
 26969 0060 6244     		add	r2, r2, ip
 26970              	.LVL1989:
 26971              	.LBB13715:
 26972              	.LBI13715:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 26973              		.loc 5 263 9 is_stmt 1 view .LVU7061
 26974              	.LBB13716:
 26975              	.LBB13717:
 26976              	.LBI13717:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 26977              		.loc 5 243 9 view .LVU7062
 26978              	.LBB13718:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26979              		.loc 5 247 11 is_stmt 0 view .LVU7063
 26980 0062 0023     		movs	r3, #0
 26981              	.LVL1990:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26982              		.loc 5 247 11 view .LVU7064
 26983 0064 6146     		mov	r1, ip
 26984 0066 20A8     		add	r0, sp, #128
 26985              	.LVL1991:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26986              		.loc 5 247 11 view .LVU7065
 26987 0068 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 26988              	.LVL1992:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 26989              		.loc 5 247 11 view .LVU7066
 26990              	.LBE13718:
 26991              	.LBE13717:
 26992              	.LBE13716:
 26993              	.LBE13715:
 26994              	.LBE13696:
 26995              	.LBE13695:
 26996              	.LBE13694:
 142:alohal/cli/cli.hpp ****     }
 26997              		.loc 23 142 31 view .LVU7067
 26998 006c 4420     		movs	r0, #68
 26999 006e FFF7FEFF 		bl	_Znwj
 27000              	.LVL1993:
 27001 0072 0400     		movs	r4, r0
ARM GAS  /tmp/ccszdRNt.s 			page 861


 27002              	.LVL1994:
 142:alohal/cli/cli.hpp ****     }
 27003              		.loc 23 142 31 view .LVU7068
 27004 0074 02AE     		add	r6, sp, #8
 27005 0076 0822     		movs	r2, #8
 27006 0078 6946     		mov	r1, sp
 27007 007a 3000     		movs	r0, r6
 27008              	.LVL1995:
 142:alohal/cli/cli.hpp ****     }
 27009              		.loc 23 142 31 view .LVU7069
 27010 007c FFF7FEFF 		bl	memcpy
 27011              	.LVL1996:
 27012              	.LBB13719:
 27013              	.LBI13719:
  71:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
 27014              		.loc 19 71 5 is_stmt 1 view .LVU7070
 27015              	.LBB13720:
 27016              	.LBB13721:
 27017              	.LBI13721:
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 27018              		.loc 19 16 5 view .LVU7071
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 27019              		.loc 19 16 5 is_stmt 0 view .LVU7072
 27020              	.LBE13721:
  72:alohal/cli/command.hpp ****     {}
 27021              		.loc 19 72 81 view .LVU7073
 27022 0080 2000     		movs	r0, r4
 27023 0082 634B     		ldr	r3, .L594+12
 27024 0084 08C0     		stmia	r0!, {r3}
 27025              	.LVL1997:
 27026              	.LBB13722:
 27027              	.LBI13722:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 27028              		.loc 5 448 7 is_stmt 1 view .LVU7074
 27029              	.LBB13723:
 27030              	.LBB13724:
 27031              	.LBI13724:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27032              		.loc 5 190 7 view .LVU7075
 27033              	.LBB13725:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 27034              		.loc 5 193 51 is_stmt 0 view .LVU7076
 27035 0086 2300     		movs	r3, r4
 27036 0088 0C33     		adds	r3, r3, #12
 27037              	.LVL1998:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 27038              		.loc 5 193 51 view .LVU7077
 27039              	.LBE13725:
 27040              	.LBE13724:
 27041              	.LBB13726:
 27042              	.LBI13726:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27043              		.loc 5 290 7 is_stmt 1 view .LVU7078
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27044              		.loc 5 290 7 is_stmt 0 view .LVU7079
 27045              	.LBE13726:
 27046              	.LBB13727:
ARM GAS  /tmp/ccszdRNt.s 			page 862


 27047              	.LBI13727:
 27048              		.loc 20 97 19 is_stmt 1 view .LVU7080
 27049              	.LBB13728:
 27050              	.LBI13728:
 27051              		.loc 10 514 7 view .LVU7081
 27052              	.LBB13729:
 27053              	.LBI13729:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27054              		.loc 6 141 7 view .LVU7082
 27055              	.LBB13730:
 27056              	.LBI13730:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27057              		.loc 7 83 7 view .LVU7083
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27058              		.loc 7 83 7 is_stmt 0 view .LVU7084
 27059              	.LBE13730:
 27060              	.LBE13729:
 27061              	.LBE13728:
 27062              	.LBE13727:
 27063              	.LBB13731:
 27064              	.LBI13731:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 27065              		.loc 5 159 2 is_stmt 1 view .LVU7085
 27066              	.LBB13732:
 27067              	.LBB13733:
 27068              	.LBI13733:
 27069              		.loc 8 99 5 view .LVU7086
 27070              		.loc 8 99 5 is_stmt 0 view .LVU7087
 27071              	.LBE13733:
 27072              	.LBB13734:
 27073              	.LBI13734:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27074              		.loc 6 141 7 is_stmt 1 view .LVU7088
 27075              	.LBB13735:
 27076              	.LBI13735:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27077              		.loc 7 83 7 view .LVU7089
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27078              		.loc 7 83 7 is_stmt 0 view .LVU7090
 27079              	.LBE13735:
 27080              	.LBE13734:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27081              		.loc 5 160 46 view .LVU7091
 27082 008a 6360     		str	r3, [r4, #4]
 27083              	.LVL1999:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27084              		.loc 5 160 46 view .LVU7092
 27085              	.LBE13732:
 27086              	.LBE13731:
 27087              	.LBB13736:
 27088              	.LBI13736:
 27089              		.loc 6 153 7 is_stmt 1 view .LVU7093
 27090              	.LBB13737:
 27091              	.LBI13737:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27092              		.loc 7 89 7 view .LVU7094
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 863


 27093              		.loc 7 89 7 is_stmt 0 view .LVU7095
 27094              	.LBE13737:
 27095              	.LBE13736:
 27096              	.LBB13738:
 27097              	.LBI13738:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27098              		.loc 5 186 7 is_stmt 1 view .LVU7096
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27099              		.loc 5 186 7 is_stmt 0 view .LVU7097
 27100              	.LBE13738:
 27101              	.LBB13739:
 27102              	.LBI13739:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27103              		.loc 5 186 7 is_stmt 1 view .LVU7098
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27104              		.loc 5 186 7 is_stmt 0 view .LVU7099
 27105              	.LBE13739:
 27106              	.LBB13740:
 27107              	.LBI13740:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27108              		.loc 5 936 7 is_stmt 1 view .LVU7100
 27109              	.LBB13741:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27110              		.loc 5 937 16 is_stmt 0 view .LVU7101
 27111 008c 279A     		ldr	r2, [sp, #156]
 27112              	.LVL2000:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27113              		.loc 5 937 16 view .LVU7102
 27114              	.LBE13741:
 27115              	.LBE13740:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27116              		.loc 5 451 9 view .LVU7103
 27117 008e 269B     		ldr	r3, [sp, #152]
 27118 0090 9C46     		mov	ip, r3
 27119 0092 6244     		add	r2, r2, ip
 27120              	.LVL2001:
 27121              	.LBB13742:
 27122              	.LBI13742:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27123              		.loc 5 263 9 is_stmt 1 view .LVU7104
 27124              	.LBB13743:
 27125              	.LBB13744:
 27126              	.LBI13744:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27127              		.loc 5 243 9 view .LVU7105
 27128              	.LBB13745:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27129              		.loc 5 247 11 is_stmt 0 view .LVU7106
 27130 0094 0023     		movs	r3, #0
 27131              	.LVL2002:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27132              		.loc 5 247 11 view .LVU7107
 27133 0096 6146     		mov	r1, ip
 27134 0098 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 27135              	.LVL2003:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27136              		.loc 5 247 11 view .LVU7108
ARM GAS  /tmp/ccszdRNt.s 			page 864


 27137              	.LBE13745:
 27138              	.LBE13744:
 27139              	.LBE13743:
 27140              	.LBE13742:
 27141              	.LBE13723:
 27142              	.LBE13722:
  72:alohal/cli/command.hpp ****     {}
 27143              		.loc 19 72 81 view .LVU7109
 27144 009c 2000     		movs	r0, r4
 27145 009e 1C30     		adds	r0, r0, #28
 27146              	.LVL2004:
 27147              	.LBB13746:
 27148              	.LBI13746:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 27149              		.loc 5 448 7 is_stmt 1 view .LVU7110
 27150              	.LBB13747:
 27151              	.LBB13748:
 27152              	.LBI13748:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27153              		.loc 5 190 7 view .LVU7111
 27154              	.LBB13749:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 27155              		.loc 5 193 51 is_stmt 0 view .LVU7112
 27156 00a0 2300     		movs	r3, r4
 27157 00a2 2433     		adds	r3, r3, #36
 27158              	.LVL2005:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 27159              		.loc 5 193 51 view .LVU7113
 27160              	.LBE13749:
 27161              	.LBE13748:
 27162              	.LBB13750:
 27163              	.LBI13750:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27164              		.loc 5 290 7 is_stmt 1 view .LVU7114
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27165              		.loc 5 290 7 is_stmt 0 view .LVU7115
 27166              	.LBE13750:
 27167              	.LBB13751:
 27168              	.LBI13751:
 27169              		.loc 20 97 19 is_stmt 1 view .LVU7116
 27170              	.LBB13752:
 27171              	.LBI13752:
 27172              		.loc 10 514 7 view .LVU7117
 27173              	.LBB13753:
 27174              	.LBI13753:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27175              		.loc 6 141 7 view .LVU7118
 27176              	.LBB13754:
 27177              	.LBI13754:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27178              		.loc 7 83 7 view .LVU7119
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27179              		.loc 7 83 7 is_stmt 0 view .LVU7120
 27180              	.LBE13754:
 27181              	.LBE13753:
 27182              	.LBE13752:
 27183              	.LBE13751:
ARM GAS  /tmp/ccszdRNt.s 			page 865


 27184              	.LBB13755:
 27185              	.LBI13755:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 27186              		.loc 5 159 2 is_stmt 1 view .LVU7121
 27187              	.LBB13756:
 27188              	.LBB13757:
 27189              	.LBI13757:
 27190              		.loc 8 99 5 view .LVU7122
 27191              		.loc 8 99 5 is_stmt 0 view .LVU7123
 27192              	.LBE13757:
 27193              	.LBB13758:
 27194              	.LBI13758:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27195              		.loc 6 141 7 is_stmt 1 view .LVU7124
 27196              	.LBB13759:
 27197              	.LBI13759:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27198              		.loc 7 83 7 view .LVU7125
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27199              		.loc 7 83 7 is_stmt 0 view .LVU7126
 27200              	.LBE13759:
 27201              	.LBE13758:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27202              		.loc 5 160 46 view .LVU7127
 27203 00a4 E361     		str	r3, [r4, #28]
 27204              	.LVL2006:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27205              		.loc 5 160 46 view .LVU7128
 27206              	.LBE13756:
 27207              	.LBE13755:
 27208              	.LBB13760:
 27209              	.LBI13760:
 27210              		.loc 6 153 7 is_stmt 1 view .LVU7129
 27211              	.LBB13761:
 27212              	.LBI13761:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27213              		.loc 7 89 7 view .LVU7130
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27214              		.loc 7 89 7 is_stmt 0 view .LVU7131
 27215              	.LBE13761:
 27216              	.LBE13760:
 27217              	.LBB13762:
 27218              	.LBI13762:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27219              		.loc 5 186 7 is_stmt 1 view .LVU7132
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27220              		.loc 5 186 7 is_stmt 0 view .LVU7133
 27221              	.LBE13762:
 27222              	.LBB13763:
 27223              	.LBI13763:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27224              		.loc 5 186 7 is_stmt 1 view .LVU7134
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27225              		.loc 5 186 7 is_stmt 0 view .LVU7135
 27226              	.LBE13763:
 27227              	.LBB13764:
 27228              	.LBI13764:
ARM GAS  /tmp/ccszdRNt.s 			page 866


 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27229              		.loc 5 936 7 is_stmt 1 view .LVU7136
 27230              	.LBB13765:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27231              		.loc 5 937 16 is_stmt 0 view .LVU7137
 27232 00a6 219A     		ldr	r2, [sp, #132]
 27233              	.LVL2007:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27234              		.loc 5 937 16 view .LVU7138
 27235              	.LBE13765:
 27236              	.LBE13764:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27237              		.loc 5 451 9 view .LVU7139
 27238 00a8 209B     		ldr	r3, [sp, #128]
 27239 00aa 9C46     		mov	ip, r3
 27240 00ac 6244     		add	r2, r2, ip
 27241              	.LVL2008:
 27242              	.LBB13766:
 27243              	.LBI13766:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27244              		.loc 5 263 9 is_stmt 1 view .LVU7140
 27245              	.LBB13767:
 27246              	.LBB13768:
 27247              	.LBI13768:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27248              		.loc 5 243 9 view .LVU7141
 27249              	.LBB13769:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27250              		.loc 5 247 11 is_stmt 0 view .LVU7142
 27251 00ae 0023     		movs	r3, #0
 27252              	.LVL2009:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27253              		.loc 5 247 11 view .LVU7143
 27254 00b0 6146     		mov	r1, ip
 27255 00b2 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 27256              	.LVL2010:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27257              		.loc 5 247 11 view .LVU7144
 27258              	.LBE13769:
 27259              	.LBE13768:
 27260              	.LBE13767:
 27261              	.LBE13766:
 27262              	.LBE13747:
 27263              	.LBE13746:
  72:alohal/cli/command.hpp ****     {}
 27264              		.loc 19 72 81 view .LVU7145
 27265 00b6 6563     		str	r5, [r4, #52]
 27266 00b8 2300     		movs	r3, r4
 27267 00ba 3833     		adds	r3, r3, #56
 27268 00bc 06CE     		ldmia	r6!, {r1, r2}
 27269 00be 06C3     		stmia	r3!, {r1, r2}
 27270 00c0 4346     		mov	r3, r8
 27271 00c2 2364     		str	r3, [r4, #64]
 27272              	.LVL2011:
  72:alohal/cli/command.hpp ****     {}
 27273              		.loc 19 72 81 view .LVU7146
 27274              	.LBE13720:
ARM GAS  /tmp/ccszdRNt.s 			page 867


 27275              	.LBE13719:
 142:alohal/cli/cli.hpp ****     }
 27276              		.loc 23 142 9 view .LVU7147
 27277 00c4 2C94     		str	r4, [sp, #176]
 27278 00c6 2800     		movs	r0, r5
 27279 00c8 6830     		adds	r0, r0, #104
 27280 00ca 2CA9     		add	r1, sp, #176
 27281 00cc FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_
 27282              	.LVL2012:
 27283              	.LBB13770:
 27284              	.LBI13770:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27285              		.loc 5 657 7 is_stmt 1 view .LVU7148
 27286              	.LBB13771:
 27287              	.LBI13771:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27288              		.loc 5 229 7 view .LVU7149
 27289              	.LBB13772:
 27290              	.LBB13773:
 27291              	.LBI13773:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27292              		.loc 5 221 7 view .LVU7150
 27293              	.LBB13774:
 27294              	.LBI13774:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27295              		.loc 5 186 7 view .LVU7151
 27296              	.LBB13775:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27297              		.loc 5 187 28 is_stmt 0 view .LVU7152
 27298 00d0 2098     		ldr	r0, [sp, #128]
 27299              	.LVL2013:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27300              		.loc 5 187 28 view .LVU7153
 27301              	.LBE13775:
 27302              	.LBE13774:
 27303              	.LBB13776:
 27304              	.LBI13776:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27305              		.loc 5 200 7 is_stmt 1 view .LVU7154
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27306              		.loc 5 200 7 is_stmt 0 view .LVU7155
 27307              	.LBE13776:
 27308              	.LBE13773:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27309              		.loc 5 231 2 view .LVU7156
 27310 00d2 B842     		cmp	r0, r7
 27311 00d4 01D0     		beq	.L586
 27312              	.LVL2014:
 27313              	.LBB13777:
 27314              	.LBI13777:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27315              		.loc 5 236 7 is_stmt 1 view .LVU7157
 27316              	.LBB13778:
 27317              	.LBB13779:
 27318              	.LBI13779:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27319              		.loc 10 469 7 view .LVU7158
ARM GAS  /tmp/ccszdRNt.s 			page 868


 27320              	.LBB13780:
 27321              	.LBI13780:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27322              		.loc 7 119 7 view .LVU7159
 27323              	.LBB13781:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27324              		.loc 7 128 19 is_stmt 0 view .LVU7160
 27325 00d6 FFF7FEFF 		bl	_ZdlPv
 27326              	.LVL2015:
 27327              	.L586:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27328              		.loc 7 128 19 view .LVU7161
 27329              	.LBE13781:
 27330              	.LBE13780:
 27331              	.LBE13779:
 27332              	.LBE13778:
 27333              	.LBE13777:
 27334              	.LBE13772:
 27335              	.LBE13771:
 27336              	.LBB13782:
 27337              	.LBI13782:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27338              		.loc 5 150 14 is_stmt 1 view .LVU7162
 27339              	.LBB13783:
 27340              	.LBI13783:
 27341              		.loc 6 153 7 view .LVU7163
 27342              	.LBB13784:
 27343              	.LBI13784:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27344              		.loc 7 89 7 view .LVU7164
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27345              		.loc 7 89 7 is_stmt 0 view .LVU7165
 27346              	.LBE13784:
 27347              	.LBE13783:
 27348              	.LBE13782:
 27349              	.LBE13770:
 27350              	.LBB13785:
 27351              	.LBI13785:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27352              		.loc 5 657 7 is_stmt 1 view .LVU7166
 27353              	.LBB13786:
 27354              	.LBI13786:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27355              		.loc 5 229 7 view .LVU7167
 27356              	.LBB13787:
 27357              	.LBB13788:
 27358              	.LBI13788:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27359              		.loc 5 221 7 view .LVU7168
 27360              	.LBB13789:
 27361              	.LBI13789:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27362              		.loc 5 186 7 view .LVU7169
 27363              	.LBB13790:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27364              		.loc 5 187 28 is_stmt 0 view .LVU7170
 27365 00da 2698     		ldr	r0, [sp, #152]
ARM GAS  /tmp/ccszdRNt.s 			page 869


 27366              	.LVL2016:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27367              		.loc 5 187 28 view .LVU7171
 27368              	.LBE13790:
 27369              	.LBE13789:
 27370              	.LBB13791:
 27371              	.LBI13791:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27372              		.loc 5 200 7 is_stmt 1 view .LVU7172
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27373              		.loc 5 200 7 is_stmt 0 view .LVU7173
 27374              	.LBE13791:
 27375              	.LBE13788:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27376              		.loc 5 231 2 view .LVU7174
 27377 00dc 28AB     		add	r3, sp, #160
 27378 00de 9842     		cmp	r0, r3
 27379 00e0 01D0     		beq	.L587
 27380              	.LVL2017:
 27381              	.LBB13792:
 27382              	.LBI13792:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27383              		.loc 5 236 7 is_stmt 1 view .LVU7175
 27384              	.LBB13793:
 27385              	.LBB13794:
 27386              	.LBI13794:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27387              		.loc 10 469 7 view .LVU7176
 27388              	.LBB13795:
 27389              	.LBI13795:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27390              		.loc 7 119 7 view .LVU7177
 27391              	.LBB13796:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27392              		.loc 7 128 19 is_stmt 0 view .LVU7178
 27393 00e2 FFF7FEFF 		bl	_ZdlPv
 27394              	.LVL2018:
 27395              	.L587:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27396              		.loc 7 128 19 view .LVU7179
 27397              	.LBE13796:
 27398              	.LBE13795:
 27399              	.LBE13794:
 27400              	.LBE13793:
 27401              	.LBE13792:
 27402              	.LBE13787:
 27403              	.LBE13786:
 27404              	.LBB13797:
 27405              	.LBI13797:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27406              		.loc 5 150 14 is_stmt 1 view .LVU7180
 27407              	.LBB13798:
 27408              	.LBI13798:
 27409              		.loc 6 153 7 view .LVU7181
 27410              	.LBB13799:
 27411              	.LBI13799:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 870


 27412              		.loc 7 89 7 view .LVU7182
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27413              		.loc 7 89 7 is_stmt 0 view .LVU7183
 27414              	.LBE13799:
 27415              	.LBE13798:
 27416              	.LBE13797:
 27417              	.LBE13785:
 27418              	.LBE13668:
 27419              	.LBE13667:
 27420              	.LBB13800:
 27421              	.LBI13800:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27422              		.loc 5 657 7 is_stmt 1 view .LVU7184
 27423              	.LBB13801:
 27424              	.LBI13801:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27425              		.loc 5 229 7 view .LVU7185
 27426              	.LBB13802:
 27427              	.LBB13803:
 27428              	.LBI13803:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27429              		.loc 5 221 7 view .LVU7186
 27430              	.LBB13804:
 27431              	.LBI13804:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27432              		.loc 5 186 7 view .LVU7187
 27433              	.LBB13805:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27434              		.loc 5 187 28 is_stmt 0 view .LVU7188
 27435 00e6 0A98     		ldr	r0, [sp, #40]
 27436              	.LVL2019:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27437              		.loc 5 187 28 view .LVU7189
 27438              	.LBE13805:
 27439              	.LBE13804:
 27440              	.LBB13806:
 27441              	.LBI13806:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27442              		.loc 5 200 7 is_stmt 1 view .LVU7190
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27443              		.loc 5 200 7 is_stmt 0 view .LVU7191
 27444              	.LBE13806:
 27445              	.LBE13803:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27446              		.loc 5 231 2 view .LVU7192
 27447 00e8 0CAB     		add	r3, sp, #48
 27448 00ea 9842     		cmp	r0, r3
 27449 00ec 01D0     		beq	.L588
 27450              	.LVL2020:
 27451              	.LBB13807:
 27452              	.LBI13807:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27453              		.loc 5 236 7 is_stmt 1 view .LVU7193
 27454              	.LBB13808:
 27455              	.LBB13809:
 27456              	.LBI13809:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
ARM GAS  /tmp/ccszdRNt.s 			page 871


 27457              		.loc 10 469 7 view .LVU7194
 27458              	.LBB13810:
 27459              	.LBI13810:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27460              		.loc 7 119 7 view .LVU7195
 27461              	.LBB13811:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27462              		.loc 7 128 19 is_stmt 0 view .LVU7196
 27463 00ee FFF7FEFF 		bl	_ZdlPv
 27464              	.LVL2021:
 27465              	.L588:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27466              		.loc 7 128 19 view .LVU7197
 27467              	.LBE13811:
 27468              	.LBE13810:
 27469              	.LBE13809:
 27470              	.LBE13808:
 27471              	.LBE13807:
 27472              	.LBE13802:
 27473              	.LBE13801:
 27474              	.LBB13812:
 27475              	.LBI13812:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27476              		.loc 5 150 14 is_stmt 1 view .LVU7198
 27477              	.LBB13813:
 27478              	.LBI13813:
 27479              		.loc 6 153 7 view .LVU7199
 27480              	.LBB13814:
 27481              	.LBI13814:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27482              		.loc 7 89 7 view .LVU7200
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27483              		.loc 7 89 7 is_stmt 0 view .LVU7201
 27484              	.LBE13814:
 27485              	.LBE13813:
 27486              	.LBE13812:
 27487              	.LBE13800:
 27488              	.LBB13815:
 27489              	.LBI13815:
 27490              		.loc 6 153 7 is_stmt 1 view .LVU7202
 27491              	.LBB13816:
 27492              	.LBI13816:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27493              		.loc 7 89 7 view .LVU7203
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27494              		.loc 7 89 7 is_stmt 0 view .LVU7204
 27495              	.LBE13816:
 27496              	.LBE13815:
 27497              	.LBB13817:
 27498              	.LBI13817:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 27499              		.loc 5 657 7 is_stmt 1 view .LVU7205
 27500              	.LBB13818:
 27501              	.LBI13818:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27502              		.loc 5 229 7 view .LVU7206
 27503              	.LBB13819:
ARM GAS  /tmp/ccszdRNt.s 			page 872


 27504              	.LBB13820:
 27505              	.LBI13820:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 27506              		.loc 5 221 7 view .LVU7207
 27507              	.LBB13821:
 27508              	.LBI13821:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27509              		.loc 5 186 7 view .LVU7208
 27510              	.LBB13822:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27511              		.loc 5 187 28 is_stmt 0 view .LVU7209
 27512 00f2 0498     		ldr	r0, [sp, #16]
 27513              	.LVL2022:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27514              		.loc 5 187 28 view .LVU7210
 27515              	.LBE13822:
 27516              	.LBE13821:
 27517              	.LBB13823:
 27518              	.LBI13823:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27519              		.loc 5 200 7 is_stmt 1 view .LVU7211
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27520              		.loc 5 200 7 is_stmt 0 view .LVU7212
 27521              	.LBE13823:
 27522              	.LBE13820:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 27523              		.loc 5 231 2 view .LVU7213
 27524 00f4 06AB     		add	r3, sp, #24
 27525 00f6 9842     		cmp	r0, r3
 27526 00f8 01D0     		beq	.L589
 27527              	.LVL2023:
 27528              	.LBB13824:
 27529              	.LBI13824:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 27530              		.loc 5 236 7 is_stmt 1 view .LVU7214
 27531              	.LBB13825:
 27532              	.LBB13826:
 27533              	.LBI13826:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 27534              		.loc 10 469 7 view .LVU7215
 27535              	.LBB13827:
 27536              	.LBI13827:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 27537              		.loc 7 119 7 view .LVU7216
 27538              	.LBB13828:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27539              		.loc 7 128 19 is_stmt 0 view .LVU7217
 27540 00fa FFF7FEFF 		bl	_ZdlPv
 27541              	.LVL2024:
 27542              	.L589:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 27543              		.loc 7 128 19 view .LVU7218
 27544              	.LBE13828:
 27545              	.LBE13827:
 27546              	.LBE13826:
 27547              	.LBE13825:
 27548              	.LBE13824:
ARM GAS  /tmp/ccszdRNt.s 			page 873


 27549              	.LBE13819:
 27550              	.LBE13818:
 27551              	.LBB13829:
 27552              	.LBI13829:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27553              		.loc 5 150 14 is_stmt 1 view .LVU7219
 27554              	.LBB13830:
 27555              	.LBI13830:
 27556              		.loc 6 153 7 view .LVU7220
 27557              	.LBB13831:
 27558              	.LBI13831:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27559              		.loc 7 89 7 view .LVU7221
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27560              		.loc 7 89 7 is_stmt 0 view .LVU7222
 27561              	.LBE13831:
 27562              	.LBE13830:
 27563              	.LBE13829:
 27564              	.LBE13817:
 27565              	.LBB13832:
 27566              	.LBI13832:
 27567              		.loc 6 153 7 is_stmt 1 view .LVU7223
 27568              	.LBB13833:
 27569              	.LBI13833:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27570              		.loc 7 89 7 view .LVU7224
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27571              		.loc 7 89 7 is_stmt 0 view .LVU7225
 27572              	.LBE13833:
 27573              	.LBE13832:
  15:alohal/cli/cli.cpp ****     Clear_line();
 27574              		.loc 2 15 5 is_stmt 1 view .LVU7226
 27575              	.LBB13834:
 27576              	.LBI13834:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 27577              		.loc 6 138 7 view .LVU7227
 27578              	.LBB13835:
 27579              	.LBI13835:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27580              		.loc 7 80 7 view .LVU7228
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27581              		.loc 7 80 7 is_stmt 0 view .LVU7229
 27582              	.LBE13835:
 27583              	.LBE13834:
 27584              	.LBB13836:
 27585              	.LBI13836:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 27586              		.loc 5 525 7 is_stmt 1 view .LVU7230
 27587              	.LBB13837:
 27588              	.LBB13838:
 27589              	.LBB13839:
 27590              	.LBI13839:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27591              		.loc 5 190 7 view .LVU7231
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27592              		.loc 5 190 7 is_stmt 0 view .LVU7232
 27593              	.LBE13839:
ARM GAS  /tmp/ccszdRNt.s 			page 874


 27594              	.LBB13840:
 27595              	.LBI13840:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 27596              		.loc 5 156 2 is_stmt 1 view .LVU7233
 27597              	.LBB13841:
 27598              	.LBB13842:
 27599              	.LBB13843:
 27600              	.LBI13843:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27601              		.loc 6 141 7 view .LVU7234
 27602              	.LBB13844:
 27603              	.LBI13844:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27604              		.loc 7 83 7 view .LVU7235
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27605              		.loc 7 83 7 is_stmt 0 view .LVU7236
 27606              	.LBE13844:
 27607              	.LBE13843:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27608              		.loc 5 157 35 view .LVU7237
 27609 00fe 14AB     		add	r3, sp, #80
 27610              	.LVL2025:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27611              		.loc 5 157 35 view .LVU7238
 27612 0100 1293     		str	r3, [sp, #72]
 27613              	.LVL2026:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27614              		.loc 5 157 35 view .LVU7239
 27615              	.LBE13842:
 27616              	.LBE13841:
 27617              	.LBE13840:
 27618              	.LBB13845:
 27619              	.LBI13845:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 27620              		.loc 4 329 7 is_stmt 1 view .LVU7240
 27621              	.LBE13845:
 27622              	.LBE13838:
 27623              	.LBE13837:
 27624              	.LBE13836:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 27625              		.loc 4 332 2 view .LVU7241
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 27626              		.loc 4 335 2 view .LVU7242
 27627              	.LBB13852:
 27628              	.LBB13851:
 27629              	.LBB13850:
 27630              	.LBB13846:
 27631              	.LBI13846:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27632              		.loc 5 263 9 view .LVU7243
 27633              	.LBB13847:
 27634              	.LBB13848:
 27635              	.LBI13848:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27636              		.loc 5 243 9 view .LVU7244
 27637              	.LBB13849:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
ARM GAS  /tmp/ccszdRNt.s 			page 875


 27638              		.loc 5 247 11 is_stmt 0 view .LVU7245
 27639 0102 444A     		ldr	r2, .L594+16
 27640              	.LVL2027:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27641              		.loc 5 247 11 view .LVU7246
 27642 0104 1100     		movs	r1, r2
 27643 0106 0A39     		subs	r1, r1, #10
 27644 0108 0023     		movs	r3, #0
 27645 010a 12A8     		add	r0, sp, #72
 27646              	.LVL2028:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27647              		.loc 5 247 11 view .LVU7247
 27648 010c FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 27649              	.LVL2029:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27650              		.loc 5 247 11 view .LVU7248
 27651              	.LBE13849:
 27652              	.LBE13848:
 27653              	.LBE13847:
 27654              	.LBE13846:
 27655              	.LBE13850:
 27656              	.LBE13851:
 27657              	.LBE13852:
 27658              	.LBB13853:
 27659              	.LBI13853:
 138:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h **** 
 27660              		.loc 6 138 7 is_stmt 1 view .LVU7249
 27661              	.LBB13854:
 27662              	.LBI13854:
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27663              		.loc 7 80 7 view .LVU7250
  80:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27664              		.loc 7 80 7 is_stmt 0 view .LVU7251
 27665              	.LBE13854:
 27666              	.LBE13853:
 27667              	.LBB13855:
 27668              	.LBI13855:
 525:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 27669              		.loc 5 525 7 is_stmt 1 view .LVU7252
 27670              	.LBB13856:
 27671              	.LBB13857:
 27672              	.LBB13858:
 27673              	.LBI13858:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27674              		.loc 5 190 7 view .LVU7253
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27675              		.loc 5 190 7 is_stmt 0 view .LVU7254
 27676              	.LBE13858:
 27677              	.LBB13859:
 27678              	.LBI13859:
 156:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 27679              		.loc 5 156 2 is_stmt 1 view .LVU7255
 27680              	.LBB13860:
 27681              	.LBB13861:
 27682              	.LBB13862:
 27683              	.LBI13862:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
ARM GAS  /tmp/ccszdRNt.s 			page 876


 27684              		.loc 6 141 7 view .LVU7256
 27685              	.LBB13863:
 27686              	.LBI13863:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27687              		.loc 7 83 7 view .LVU7257
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27688              		.loc 7 83 7 is_stmt 0 view .LVU7258
 27689              	.LBE13863:
 27690              	.LBE13862:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27691              		.loc 5 157 35 view .LVU7259
 27692 0110 1AAB     		add	r3, sp, #104
 27693              	.LVL2030:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27694              		.loc 5 157 35 view .LVU7260
 27695 0112 1893     		str	r3, [sp, #96]
 27696              	.LVL2031:
 157:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27697              		.loc 5 157 35 view .LVU7261
 27698              	.LBE13861:
 27699              	.LBE13860:
 27700              	.LBE13859:
 27701              	.LBB13864:
 27702              	.LBI13864:
 329:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       {
 27703              		.loc 4 329 7 is_stmt 1 view .LVU7262
 27704              	.LBE13864:
 27705              	.LBE13857:
 27706              	.LBE13856:
 27707              	.LBE13855:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h **** 	  return __gnu_cxx::char_traits<char_type>::length(__s);
 27708              		.loc 4 332 2 view .LVU7263
 335:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/char_traits.h ****       }
 27709              		.loc 4 335 2 view .LVU7264
 27710              	.LBB13871:
 27711              	.LBB13870:
 27712              	.LBB13869:
 27713              	.LBB13865:
 27714              	.LBI13865:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27715              		.loc 5 263 9 view .LVU7265
 27716              	.LBB13866:
 27717              	.LBB13867:
 27718              	.LBI13867:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27719              		.loc 5 243 9 view .LVU7266
 27720              	.LBB13868:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27721              		.loc 5 247 11 is_stmt 0 view .LVU7267
 27722 0114 404A     		ldr	r2, .L594+20
 27723              	.LVL2032:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27724              		.loc 5 247 11 view .LVU7268
 27725 0116 1100     		movs	r1, r2
 27726 0118 4F39     		subs	r1, r1, #79
 27727 011a 0023     		movs	r3, #0
 27728 011c 18A8     		add	r0, sp, #96
ARM GAS  /tmp/ccszdRNt.s 			page 877


 27729              	.LVL2033:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27730              		.loc 5 247 11 view .LVU7269
 27731 011e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iter
 27732              	.LVL2034:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27733              		.loc 5 247 11 view .LVU7270
 27734              	.LBE13868:
 27735              	.LBE13867:
 27736              	.LBE13866:
 27737              	.LBE13865:
 27738              	.LBE13869:
 27739              	.LBE13870:
 27740              	.LBE13871:
  15:alohal/cli/cli.cpp ****     Clear_line();
 27741              		.loc 2 15 21 view .LVU7271
 27742 0122 3E4B     		ldr	r3, .L594+24
 27743 0124 1E93     		str	r3, [sp, #120]
 27744 0126 0023     		movs	r3, #0
 27745 0128 9846     		mov	r8, r3
 27746 012a 1F93     		str	r3, [sp, #124]
 27747              	.LVL2035:
  15:alohal/cli/cli.cpp ****     Clear_line();
 27748              		.loc 2 15 21 view .LVU7272
 27749 012c 0822     		movs	r2, #8
 27750 012e 1EA9     		add	r1, sp, #120
 27751 0130 6846     		mov	r0, sp
 27752 0132 FFF7FEFF 		bl	memcpy
 27753              	.LVL2036:
 27754              	.LBB13872:
 27755              	.LBI13872:
 141:alohal/cli/cli.hpp ****         commands.emplace_back(new Command<registrator_class>(command, help, object, method));
 27756              		.loc 23 141 10 is_stmt 1 view .LVU7273
 27757              	.LBB13873:
 27758              	.LBB13874:
 27759              	.LBI13874:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 27760              		.loc 5 448 7 view .LVU7274
 27761              	.LBB13875:
 27762              	.LBB13876:
 27763              	.LBB13877:
 27764              	.LBI13877:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27765              		.loc 5 190 7 view .LVU7275
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27766              		.loc 5 190 7 is_stmt 0 view .LVU7276
 27767              	.LBE13877:
 27768              	.LBB13878:
 27769              	.LBI13878:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27770              		.loc 5 290 7 is_stmt 1 view .LVU7277
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27771              		.loc 5 290 7 is_stmt 0 view .LVU7278
 27772              	.LBE13878:
 27773              	.LBB13879:
 27774              	.LBI13879:
 27775              		.loc 20 97 19 is_stmt 1 view .LVU7279
ARM GAS  /tmp/ccszdRNt.s 			page 878


 27776              	.LBB13880:
 27777              	.LBI13880:
 27778              		.loc 10 514 7 view .LVU7280
 27779              	.LBB13881:
 27780              	.LBI13881:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27781              		.loc 6 141 7 view .LVU7281
 27782              	.LBB13882:
 27783              	.LBI13882:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27784              		.loc 7 83 7 view .LVU7282
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27785              		.loc 7 83 7 is_stmt 0 view .LVU7283
 27786              	.LBE13882:
 27787              	.LBE13881:
 27788              	.LBE13880:
 27789              	.LBE13879:
 27790              	.LBB13883:
 27791              	.LBI13883:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 27792              		.loc 5 159 2 is_stmt 1 view .LVU7284
 27793              	.LBB13884:
 27794              	.LBB13885:
 27795              	.LBB13886:
 27796              	.LBI13886:
 27797              		.loc 8 99 5 view .LVU7285
 27798              		.loc 8 99 5 is_stmt 0 view .LVU7286
 27799              	.LBE13886:
 27800              	.LBB13887:
 27801              	.LBI13887:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27802              		.loc 6 141 7 is_stmt 1 view .LVU7287
 27803              	.LBB13888:
 27804              	.LBI13888:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27805              		.loc 7 83 7 view .LVU7288
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27806              		.loc 7 83 7 is_stmt 0 view .LVU7289
 27807              	.LBE13888:
 27808              	.LBE13887:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27809              		.loc 5 160 46 view .LVU7290
 27810 0136 35AB     		add	r3, sp, #212
 27811              	.LVL2037:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27812              		.loc 5 160 46 view .LVU7291
 27813 0138 3393     		str	r3, [sp, #204]
 27814              	.LVL2038:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27815              		.loc 5 160 46 view .LVU7292
 27816              	.LBE13885:
 27817              	.LBE13884:
 27818              	.LBE13883:
 27819              	.LBB13889:
 27820              	.LBI13889:
 27821              		.loc 6 153 7 is_stmt 1 view .LVU7293
 27822              	.LBB13890:
ARM GAS  /tmp/ccszdRNt.s 			page 879


 27823              	.LBI13890:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27824              		.loc 7 89 7 view .LVU7294
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27825              		.loc 7 89 7 is_stmt 0 view .LVU7295
 27826              	.LBE13890:
 27827              	.LBE13889:
 27828              	.LBB13891:
 27829              	.LBI13891:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27830              		.loc 5 186 7 is_stmt 1 view .LVU7296
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27831              		.loc 5 186 7 is_stmt 0 view .LVU7297
 27832              	.LBE13891:
 27833              	.LBB13892:
 27834              	.LBI13892:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27835              		.loc 5 186 7 is_stmt 1 view .LVU7298
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27836              		.loc 5 186 7 is_stmt 0 view .LVU7299
 27837              	.LBE13892:
 27838              	.LBB13893:
 27839              	.LBI13893:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27840              		.loc 5 936 7 is_stmt 1 view .LVU7300
 27841              	.LBB13894:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27842              		.loc 5 937 16 is_stmt 0 view .LVU7301
 27843 013a 139A     		ldr	r2, [sp, #76]
 27844              	.LVL2039:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27845              		.loc 5 937 16 view .LVU7302
 27846              	.LBE13894:
 27847              	.LBE13893:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27848              		.loc 5 451 9 view .LVU7303
 27849 013c 129B     		ldr	r3, [sp, #72]
 27850 013e 9C46     		mov	ip, r3
 27851 0140 6244     		add	r2, r2, ip
 27852              	.LVL2040:
 27853              	.LBB13895:
 27854              	.LBI13895:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27855              		.loc 5 263 9 is_stmt 1 view .LVU7304
 27856              	.LBB13896:
 27857              	.LBB13897:
 27858              	.LBI13897:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27859              		.loc 5 243 9 view .LVU7305
 27860              	.LBB13898:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27861              		.loc 5 247 11 is_stmt 0 view .LVU7306
 27862 0142 0023     		movs	r3, #0
 27863              	.LVL2041:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27864              		.loc 5 247 11 view .LVU7307
 27865 0144 6146     		mov	r1, ip
ARM GAS  /tmp/ccszdRNt.s 			page 880


 27866 0146 33A8     		add	r0, sp, #204
 27867              	.LVL2042:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27868              		.loc 5 247 11 view .LVU7308
 27869 0148 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 27870              	.LVL2043:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27871              		.loc 5 247 11 view .LVU7309
 27872              	.LBE13898:
 27873              	.LBE13897:
 27874              	.LBE13896:
 27875              	.LBE13895:
 27876              	.LBE13876:
 27877              	.LBE13875:
 27878              	.LBE13874:
 27879              	.LBB13899:
 27880              	.LBI13899:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 27881              		.loc 5 448 7 is_stmt 1 view .LVU7310
 27882              	.LBB13900:
 27883              	.LBB13901:
 27884              	.LBB13902:
 27885              	.LBI13902:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27886              		.loc 5 190 7 view .LVU7311
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 27887              		.loc 5 190 7 is_stmt 0 view .LVU7312
 27888              	.LBE13902:
 27889              	.LBB13903:
 27890              	.LBI13903:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27891              		.loc 5 290 7 is_stmt 1 view .LVU7313
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 27892              		.loc 5 290 7 is_stmt 0 view .LVU7314
 27893              	.LBE13903:
 27894              	.LBB13904:
 27895              	.LBI13904:
 27896              		.loc 20 97 19 is_stmt 1 view .LVU7315
 27897              	.LBB13905:
 27898              	.LBI13905:
 27899              		.loc 10 514 7 view .LVU7316
 27900              	.LBB13906:
 27901              	.LBI13906:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27902              		.loc 6 141 7 view .LVU7317
 27903              	.LBB13907:
 27904              	.LBI13907:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27905              		.loc 7 83 7 view .LVU7318
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27906              		.loc 7 83 7 is_stmt 0 view .LVU7319
 27907              	.LBE13907:
 27908              	.LBE13906:
 27909              	.LBE13905:
 27910              	.LBE13904:
 27911              	.LBB13908:
 27912              	.LBI13908:
ARM GAS  /tmp/ccszdRNt.s 			page 881


 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 27913              		.loc 5 159 2 is_stmt 1 view .LVU7320
 27914              	.LBB13909:
 27915              	.LBB13910:
 27916              	.LBB13911:
 27917              	.LBI13911:
 27918              		.loc 8 99 5 view .LVU7321
 27919              		.loc 8 99 5 is_stmt 0 view .LVU7322
 27920              	.LBE13911:
 27921              	.LBB13912:
 27922              	.LBI13912:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 27923              		.loc 6 141 7 is_stmt 1 view .LVU7323
 27924              	.LBB13913:
 27925              	.LBI13913:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27926              		.loc 7 83 7 view .LVU7324
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27927              		.loc 7 83 7 is_stmt 0 view .LVU7325
 27928              	.LBE13913:
 27929              	.LBE13912:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27930              		.loc 5 160 46 view .LVU7326
 27931 014c 2FAF     		add	r7, sp, #188
 27932              	.LVL2044:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27933              		.loc 5 160 46 view .LVU7327
 27934 014e 2D97     		str	r7, [sp, #180]
 27935              	.LVL2045:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 27936              		.loc 5 160 46 view .LVU7328
 27937              	.LBE13910:
 27938              	.LBE13909:
 27939              	.LBE13908:
 27940              	.LBB13914:
 27941              	.LBI13914:
 27942              		.loc 6 153 7 is_stmt 1 view .LVU7329
 27943              	.LBB13915:
 27944              	.LBI13915:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27945              		.loc 7 89 7 view .LVU7330
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 27946              		.loc 7 89 7 is_stmt 0 view .LVU7331
 27947              	.LBE13915:
 27948              	.LBE13914:
 27949              	.LBB13916:
 27950              	.LBI13916:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27951              		.loc 5 186 7 is_stmt 1 view .LVU7332
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27952              		.loc 5 186 7 is_stmt 0 view .LVU7333
 27953              	.LBE13916:
 27954              	.LBB13917:
 27955              	.LBI13917:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 27956              		.loc 5 186 7 is_stmt 1 view .LVU7334
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
ARM GAS  /tmp/ccszdRNt.s 			page 882


 27957              		.loc 5 186 7 is_stmt 0 view .LVU7335
 27958              	.LBE13917:
 27959              	.LBB13918:
 27960              	.LBI13918:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 27961              		.loc 5 936 7 is_stmt 1 view .LVU7336
 27962              	.LBB13919:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27963              		.loc 5 937 16 is_stmt 0 view .LVU7337
 27964 0150 199A     		ldr	r2, [sp, #100]
 27965              	.LVL2046:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27966              		.loc 5 937 16 view .LVU7338
 27967              	.LBE13919:
 27968              	.LBE13918:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 27969              		.loc 5 451 9 view .LVU7339
 27970 0152 189B     		ldr	r3, [sp, #96]
 27971 0154 9C46     		mov	ip, r3
 27972 0156 6244     		add	r2, r2, ip
 27973              	.LVL2047:
 27974              	.LBB13920:
 27975              	.LBI13920:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 27976              		.loc 5 263 9 is_stmt 1 view .LVU7340
 27977              	.LBB13921:
 27978              	.LBB13922:
 27979              	.LBI13922:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 27980              		.loc 5 243 9 view .LVU7341
 27981              	.LBB13923:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27982              		.loc 5 247 11 is_stmt 0 view .LVU7342
 27983 0158 0023     		movs	r3, #0
 27984              	.LVL2048:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27985              		.loc 5 247 11 view .LVU7343
 27986 015a 6146     		mov	r1, ip
 27987 015c 2DA8     		add	r0, sp, #180
 27988              	.LVL2049:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27989              		.loc 5 247 11 view .LVU7344
 27990 015e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 27991              	.LVL2050:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 27992              		.loc 5 247 11 view .LVU7345
 27993              	.LBE13923:
 27994              	.LBE13922:
 27995              	.LBE13921:
 27996              	.LBE13920:
 27997              	.LBE13901:
 27998              	.LBE13900:
 27999              	.LBE13899:
 142:alohal/cli/cli.hpp ****     }
 28000              		.loc 23 142 31 view .LVU7346
 28001 0162 4420     		movs	r0, #68
 28002 0164 FFF7FEFF 		bl	_Znwj
ARM GAS  /tmp/ccszdRNt.s 			page 883


 28003              	.LVL2051:
 28004 0168 0400     		movs	r4, r0
 28005              	.LVL2052:
 142:alohal/cli/cli.hpp ****     }
 28006              		.loc 23 142 31 view .LVU7347
 28007 016a 02AE     		add	r6, sp, #8
 28008 016c 0822     		movs	r2, #8
 28009 016e 6946     		mov	r1, sp
 28010 0170 3000     		movs	r0, r6
 28011              	.LVL2053:
 142:alohal/cli/cli.hpp ****     }
 28012              		.loc 23 142 31 view .LVU7348
 28013 0172 FFF7FEFF 		bl	memcpy
 28014              	.LVL2054:
 28015              	.LBB13924:
 28016              	.LBI13924:
  71:alohal/cli/command.hpp ****         :command(command), help(help), object_ptr(object), method_pointer(method)
 28017              		.loc 19 71 5 is_stmt 1 view .LVU7349
 28018              	.LBB13925:
 28019              	.LBB13926:
 28020              	.LBI13926:
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 28021              		.loc 19 16 5 view .LVU7350
  16:alohal/cli/command.hpp ****     ~Command_base() = default;
 28022              		.loc 19 16 5 is_stmt 0 view .LVU7351
 28023              	.LBE13926:
  72:alohal/cli/command.hpp ****     {}
 28024              		.loc 19 72 81 view .LVU7352
 28025 0176 2000     		movs	r0, r4
 28026 0178 254B     		ldr	r3, .L594+12
 28027 017a 08C0     		stmia	r0!, {r3}
 28028              	.LVL2055:
 28029              	.LBB13927:
 28030              	.LBI13927:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 28031              		.loc 5 448 7 is_stmt 1 view .LVU7353
 28032              	.LBB13928:
 28033              	.LBB13929:
 28034              	.LBI13929:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28035              		.loc 5 190 7 view .LVU7354
 28036              	.LBB13930:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28037              		.loc 5 193 51 is_stmt 0 view .LVU7355
 28038 017c 2300     		movs	r3, r4
 28039 017e 0C33     		adds	r3, r3, #12
 28040              	.LVL2056:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28041              		.loc 5 193 51 view .LVU7356
 28042              	.LBE13930:
 28043              	.LBE13929:
 28044              	.LBB13931:
 28045              	.LBI13931:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28046              		.loc 5 290 7 is_stmt 1 view .LVU7357
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28047              		.loc 5 290 7 is_stmt 0 view .LVU7358
ARM GAS  /tmp/ccszdRNt.s 			page 884


 28048              	.LBE13931:
 28049              	.LBB13932:
 28050              	.LBI13932:
 28051              		.loc 20 97 19 is_stmt 1 view .LVU7359
 28052              	.LBB13933:
 28053              	.LBI13933:
 28054              		.loc 10 514 7 view .LVU7360
 28055              	.LBB13934:
 28056              	.LBI13934:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28057              		.loc 6 141 7 view .LVU7361
 28058              	.LBB13935:
 28059              	.LBI13935:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28060              		.loc 7 83 7 view .LVU7362
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28061              		.loc 7 83 7 is_stmt 0 view .LVU7363
 28062              	.LBE13935:
 28063              	.LBE13934:
 28064              	.LBE13933:
 28065              	.LBE13932:
 28066              	.LBB13936:
 28067              	.LBI13936:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 28068              		.loc 5 159 2 is_stmt 1 view .LVU7364
 28069              	.LBB13937:
 28070              	.LBB13938:
 28071              	.LBI13938:
 28072              		.loc 8 99 5 view .LVU7365
 28073              		.loc 8 99 5 is_stmt 0 view .LVU7366
 28074              	.LBE13938:
 28075              	.LBB13939:
 28076              	.LBI13939:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28077              		.loc 6 141 7 is_stmt 1 view .LVU7367
 28078              	.LBB13940:
 28079              	.LBI13940:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28080              		.loc 7 83 7 view .LVU7368
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28081              		.loc 7 83 7 is_stmt 0 view .LVU7369
 28082              	.LBE13940:
 28083              	.LBE13939:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28084              		.loc 5 160 46 view .LVU7370
 28085 0180 6360     		str	r3, [r4, #4]
 28086              	.LVL2057:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28087              		.loc 5 160 46 view .LVU7371
 28088              	.LBE13937:
 28089              	.LBE13936:
 28090              	.LBB13941:
 28091              	.LBI13941:
 28092              		.loc 6 153 7 is_stmt 1 view .LVU7372
 28093              	.LBB13942:
 28094              	.LBI13942:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 885


 28095              		.loc 7 89 7 view .LVU7373
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28096              		.loc 7 89 7 is_stmt 0 view .LVU7374
 28097              	.LBE13942:
 28098              	.LBE13941:
 28099              	.LBB13943:
 28100              	.LBI13943:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28101              		.loc 5 186 7 is_stmt 1 view .LVU7375
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28102              		.loc 5 186 7 is_stmt 0 view .LVU7376
 28103              	.LBE13943:
 28104              	.LBB13944:
 28105              	.LBI13944:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28106              		.loc 5 186 7 is_stmt 1 view .LVU7377
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28107              		.loc 5 186 7 is_stmt 0 view .LVU7378
 28108              	.LBE13944:
 28109              	.LBB13945:
 28110              	.LBI13945:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28111              		.loc 5 936 7 is_stmt 1 view .LVU7379
 28112              	.LBB13946:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28113              		.loc 5 937 16 is_stmt 0 view .LVU7380
 28114 0182 349A     		ldr	r2, [sp, #208]
 28115              	.LVL2058:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28116              		.loc 5 937 16 view .LVU7381
 28117              	.LBE13946:
 28118              	.LBE13945:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28119              		.loc 5 451 9 view .LVU7382
 28120 0184 339B     		ldr	r3, [sp, #204]
 28121 0186 9C46     		mov	ip, r3
 28122 0188 6244     		add	r2, r2, ip
 28123              	.LVL2059:
 28124              	.LBB13947:
 28125              	.LBI13947:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 28126              		.loc 5 263 9 is_stmt 1 view .LVU7383
 28127              	.LBB13948:
 28128              	.LBB13949:
 28129              	.LBI13949:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28130              		.loc 5 243 9 view .LVU7384
 28131              	.LBB13950:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28132              		.loc 5 247 11 is_stmt 0 view .LVU7385
 28133 018a 0023     		movs	r3, #0
 28134              	.LVL2060:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28135              		.loc 5 247 11 view .LVU7386
 28136 018c 6146     		mov	r1, ip
 28137 018e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 28138              	.LVL2061:
ARM GAS  /tmp/ccszdRNt.s 			page 886


 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28139              		.loc 5 247 11 view .LVU7387
 28140              	.LBE13950:
 28141              	.LBE13949:
 28142              	.LBE13948:
 28143              	.LBE13947:
 28144              	.LBE13928:
 28145              	.LBE13927:
  72:alohal/cli/command.hpp ****     {}
 28146              		.loc 19 72 81 view .LVU7388
 28147 0192 2000     		movs	r0, r4
 28148 0194 1C30     		adds	r0, r0, #28
 28149              	.LVL2062:
 28150              	.LBB13951:
 28151              	.LBI13951:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 28152              		.loc 5 448 7 is_stmt 1 view .LVU7389
 28153              	.LBB13952:
 28154              	.LBB13953:
 28155              	.LBI13953:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28156              		.loc 5 190 7 view .LVU7390
 28157              	.LBB13954:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28158              		.loc 5 193 51 is_stmt 0 view .LVU7391
 28159 0196 2300     		movs	r3, r4
 28160 0198 2433     		adds	r3, r3, #36
 28161              	.LVL2063:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28162              		.loc 5 193 51 view .LVU7392
 28163              	.LBE13954:
 28164              	.LBE13953:
 28165              	.LBB13955:
 28166              	.LBI13955:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28167              		.loc 5 290 7 is_stmt 1 view .LVU7393
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28168              		.loc 5 290 7 is_stmt 0 view .LVU7394
 28169              	.LBE13955:
 28170              	.LBB13956:
 28171              	.LBI13956:
 28172              		.loc 20 97 19 is_stmt 1 view .LVU7395
 28173              	.LBB13957:
 28174              	.LBI13957:
 28175              		.loc 10 514 7 view .LVU7396
 28176              	.LBB13958:
 28177              	.LBI13958:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28178              		.loc 6 141 7 view .LVU7397
 28179              	.LBB13959:
 28180              	.LBI13959:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28181              		.loc 7 83 7 view .LVU7398
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28182              		.loc 7 83 7 is_stmt 0 view .LVU7399
 28183              	.LBE13959:
 28184              	.LBE13958:
ARM GAS  /tmp/ccszdRNt.s 			page 887


 28185              	.LBE13957:
 28186              	.LBE13956:
 28187              	.LBB13960:
 28188              	.LBI13960:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 28189              		.loc 5 159 2 is_stmt 1 view .LVU7400
 28190              	.LBB13961:
 28191              	.LBB13962:
 28192              	.LBI13962:
 28193              		.loc 8 99 5 view .LVU7401
 28194              		.loc 8 99 5 is_stmt 0 view .LVU7402
 28195              	.LBE13962:
 28196              	.LBB13963:
 28197              	.LBI13963:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28198              		.loc 6 141 7 is_stmt 1 view .LVU7403
 28199              	.LBB13964:
 28200              	.LBI13964:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28201              		.loc 7 83 7 view .LVU7404
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28202              		.loc 7 83 7 is_stmt 0 view .LVU7405
 28203              	.LBE13964:
 28204              	.LBE13963:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28205              		.loc 5 160 46 view .LVU7406
 28206 019a E361     		str	r3, [r4, #28]
 28207              	.LVL2064:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28208              		.loc 5 160 46 view .LVU7407
 28209              	.LBE13961:
 28210              	.LBE13960:
 28211              	.LBB13965:
 28212              	.LBI13965:
 28213              		.loc 6 153 7 is_stmt 1 view .LVU7408
 28214              	.LBB13966:
 28215              	.LBI13966:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28216              		.loc 7 89 7 view .LVU7409
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28217              		.loc 7 89 7 is_stmt 0 view .LVU7410
 28218              	.LBE13966:
 28219              	.LBE13965:
 28220              	.LBB13967:
 28221              	.LBI13967:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28222              		.loc 5 186 7 is_stmt 1 view .LVU7411
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28223              		.loc 5 186 7 is_stmt 0 view .LVU7412
 28224              	.LBE13967:
 28225              	.LBB13968:
 28226              	.LBI13968:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28227              		.loc 5 186 7 is_stmt 1 view .LVU7413
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28228              		.loc 5 186 7 is_stmt 0 view .LVU7414
 28229              	.LBE13968:
ARM GAS  /tmp/ccszdRNt.s 			page 888


 28230              	.LBB13969:
 28231              	.LBI13969:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28232              		.loc 5 936 7 is_stmt 1 view .LVU7415
 28233              	.LBB13970:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28234              		.loc 5 937 16 is_stmt 0 view .LVU7416
 28235 019c 2E9A     		ldr	r2, [sp, #184]
 28236              	.LVL2065:
 937:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28237              		.loc 5 937 16 view .LVU7417
 28238              	.LBE13970:
 28239              	.LBE13969:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28240              		.loc 5 451 9 view .LVU7418
 28241 019e 2D9B     		ldr	r3, [sp, #180]
 28242 01a0 9C46     		mov	ip, r3
 28243 01a2 6244     		add	r2, r2, ip
 28244              	.LVL2066:
 28245              	.LBB13971:
 28246              	.LBI13971:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 28247              		.loc 5 263 9 is_stmt 1 view .LVU7419
 28248              	.LBB13972:
 28249              	.LBB13973:
 28250              	.LBI13973:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28251              		.loc 5 243 9 view .LVU7420
 28252              	.LBB13974:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28253              		.loc 5 247 11 is_stmt 0 view .LVU7421
 28254 01a4 0023     		movs	r3, #0
 28255              	.LVL2067:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28256              		.loc 5 247 11 view .LVU7422
 28257 01a6 6146     		mov	r1, ip
 28258 01a8 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 28259              	.LVL2068:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28260              		.loc 5 247 11 view .LVU7423
 28261              	.LBE13974:
 28262              	.LBE13973:
 28263              	.LBE13972:
 28264              	.LBE13971:
 28265              	.LBE13952:
 28266              	.LBE13951:
  72:alohal/cli/command.hpp ****     {}
 28267              		.loc 19 72 81 view .LVU7424
 28268 01ac 6563     		str	r5, [r4, #52]
 28269 01ae 2300     		movs	r3, r4
 28270 01b0 3833     		adds	r3, r3, #56
 28271 01b2 06CE     		ldmia	r6!, {r1, r2}
 28272 01b4 06C3     		stmia	r3!, {r1, r2}
 28273 01b6 4346     		mov	r3, r8
 28274 01b8 2364     		str	r3, [r4, #64]
 28275              	.LVL2069:
  72:alohal/cli/command.hpp ****     {}
ARM GAS  /tmp/ccszdRNt.s 			page 889


 28276              		.loc 19 72 81 view .LVU7425
 28277              	.LBE13925:
 28278              	.LBE13924:
 142:alohal/cli/cli.hpp ****     }
 28279              		.loc 23 142 9 view .LVU7426
 28280 01ba 3994     		str	r4, [sp, #228]
 28281 01bc 2800     		movs	r0, r5
 28282 01be 6830     		adds	r0, r0, #104
 28283 01c0 39A9     		add	r1, sp, #228
 28284 01c2 FFF7FEFF 		bl	_ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_
 28285              	.LVL2070:
 28286              	.LBB13975:
 28287              	.LBI13975:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 28288              		.loc 5 657 7 is_stmt 1 view .LVU7427
 28289              	.LBB13976:
 28290              	.LBI13976:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28291              		.loc 5 229 7 view .LVU7428
 28292              	.LBB13977:
 28293              	.LBB13978:
 28294              	.LBI13978:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 28295              		.loc 5 221 7 view .LVU7429
 28296              	.LBB13979:
 28297              	.LBI13979:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28298              		.loc 5 186 7 view .LVU7430
 28299              	.LBB13980:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28300              		.loc 5 187 28 is_stmt 0 view .LVU7431
 28301 01c6 2D98     		ldr	r0, [sp, #180]
 28302              	.LVL2071:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28303              		.loc 5 187 28 view .LVU7432
 28304              	.LBE13980:
 28305              	.LBE13979:
 28306              	.LBB13981:
 28307              	.LBI13981:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28308              		.loc 5 200 7 is_stmt 1 view .LVU7433
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28309              		.loc 5 200 7 is_stmt 0 view .LVU7434
 28310              	.LBE13981:
 28311              	.LBE13978:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 28312              		.loc 5 231 2 view .LVU7435
 28313 01c8 B842     		cmp	r0, r7
 28314 01ca 01D0     		beq	.L590
 28315              	.LVL2072:
 28316              	.LBB13982:
 28317              	.LBI13982:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 28318              		.loc 5 236 7 is_stmt 1 view .LVU7436
 28319              	.LBB13983:
 28320              	.LBB13984:
 28321              	.LBI13984:
ARM GAS  /tmp/ccszdRNt.s 			page 890


 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 28322              		.loc 10 469 7 view .LVU7437
 28323              	.LBB13985:
 28324              	.LBI13985:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28325              		.loc 7 119 7 view .LVU7438
 28326              	.LBB13986:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28327              		.loc 7 128 19 is_stmt 0 view .LVU7439
 28328 01cc FFF7FEFF 		bl	_ZdlPv
 28329              	.LVL2073:
 28330              	.L590:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28331              		.loc 7 128 19 view .LVU7440
 28332              	.LBE13986:
 28333              	.LBE13985:
 28334              	.LBE13984:
 28335              	.LBE13983:
 28336              	.LBE13982:
 28337              	.LBE13977:
 28338              	.LBE13976:
 28339              	.LBB13987:
 28340              	.LBI13987:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28341              		.loc 5 150 14 is_stmt 1 view .LVU7441
 28342              	.LBB13988:
 28343              	.LBI13988:
 28344              		.loc 6 153 7 view .LVU7442
 28345              	.LBB13989:
 28346              	.LBI13989:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28347              		.loc 7 89 7 view .LVU7443
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28348              		.loc 7 89 7 is_stmt 0 view .LVU7444
 28349              	.LBE13989:
 28350              	.LBE13988:
 28351              	.LBE13987:
 28352              	.LBE13975:
 28353              	.LBB13990:
 28354              	.LBI13990:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 28355              		.loc 5 657 7 is_stmt 1 view .LVU7445
 28356              	.LBB13991:
 28357              	.LBI13991:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28358              		.loc 5 229 7 view .LVU7446
 28359              	.LBB13992:
 28360              	.LBB13993:
 28361              	.LBI13993:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 28362              		.loc 5 221 7 view .LVU7447
 28363              	.LBB13994:
 28364              	.LBI13994:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28365              		.loc 5 186 7 view .LVU7448
 28366              	.LBB13995:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
ARM GAS  /tmp/ccszdRNt.s 			page 891


 28367              		.loc 5 187 28 is_stmt 0 view .LVU7449
 28368 01d0 3398     		ldr	r0, [sp, #204]
 28369              	.LVL2074:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28370              		.loc 5 187 28 view .LVU7450
 28371              	.LBE13995:
 28372              	.LBE13994:
 28373              	.LBB13996:
 28374              	.LBI13996:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28375              		.loc 5 200 7 is_stmt 1 view .LVU7451
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28376              		.loc 5 200 7 is_stmt 0 view .LVU7452
 28377              	.LBE13996:
 28378              	.LBE13993:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 28379              		.loc 5 231 2 view .LVU7453
 28380 01d2 35AB     		add	r3, sp, #212
 28381 01d4 9842     		cmp	r0, r3
 28382 01d6 01D0     		beq	.L591
 28383              	.LVL2075:
 28384              	.LBB13997:
 28385              	.LBI13997:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 28386              		.loc 5 236 7 is_stmt 1 view .LVU7454
 28387              	.LBB13998:
 28388              	.LBB13999:
 28389              	.LBI13999:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 28390              		.loc 10 469 7 view .LVU7455
 28391              	.LBB14000:
 28392              	.LBI14000:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28393              		.loc 7 119 7 view .LVU7456
 28394              	.LBB14001:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28395              		.loc 7 128 19 is_stmt 0 view .LVU7457
 28396 01d8 FFF7FEFF 		bl	_ZdlPv
 28397              	.LVL2076:
 28398              	.L591:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28399              		.loc 7 128 19 view .LVU7458
 28400              	.LBE14001:
 28401              	.LBE14000:
 28402              	.LBE13999:
 28403              	.LBE13998:
 28404              	.LBE13997:
 28405              	.LBE13992:
 28406              	.LBE13991:
 28407              	.LBB14002:
 28408              	.LBI14002:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28409              		.loc 5 150 14 is_stmt 1 view .LVU7459
 28410              	.LBB14003:
 28411              	.LBI14003:
 28412              		.loc 6 153 7 view .LVU7460
 28413              	.LBB14004:
ARM GAS  /tmp/ccszdRNt.s 			page 892


 28414              	.LBI14004:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28415              		.loc 7 89 7 view .LVU7461
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28416              		.loc 7 89 7 is_stmt 0 view .LVU7462
 28417              	.LBE14004:
 28418              	.LBE14003:
 28419              	.LBE14002:
 28420              	.LBE13990:
 28421              	.LBE13873:
 28422              	.LBE13872:
 28423              	.LBB14005:
 28424              	.LBI14005:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 28425              		.loc 5 657 7 is_stmt 1 view .LVU7463
 28426              	.LBB14006:
 28427              	.LBI14006:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28428              		.loc 5 229 7 view .LVU7464
 28429              	.LBB14007:
 28430              	.LBB14008:
 28431              	.LBI14008:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 28432              		.loc 5 221 7 view .LVU7465
 28433              	.LBB14009:
 28434              	.LBI14009:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28435              		.loc 5 186 7 view .LVU7466
 28436              	.LBB14010:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28437              		.loc 5 187 28 is_stmt 0 view .LVU7467
 28438 01dc 1898     		ldr	r0, [sp, #96]
 28439              	.LVL2077:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28440              		.loc 5 187 28 view .LVU7468
 28441              	.LBE14010:
 28442              	.LBE14009:
 28443              	.LBB14011:
 28444              	.LBI14011:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28445              		.loc 5 200 7 is_stmt 1 view .LVU7469
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28446              		.loc 5 200 7 is_stmt 0 view .LVU7470
 28447              	.LBE14011:
 28448              	.LBE14008:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 28449              		.loc 5 231 2 view .LVU7471
 28450 01de 1AAB     		add	r3, sp, #104
 28451 01e0 9842     		cmp	r0, r3
 28452 01e2 01D0     		beq	.L592
 28453              	.LVL2078:
 28454              	.LBB14012:
 28455              	.LBI14012:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 28456              		.loc 5 236 7 is_stmt 1 view .LVU7472
 28457              	.LBB14013:
 28458              	.LBB14014:
ARM GAS  /tmp/ccszdRNt.s 			page 893


 28459              	.LBI14014:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 28460              		.loc 10 469 7 view .LVU7473
 28461              	.LBB14015:
 28462              	.LBI14015:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28463              		.loc 7 119 7 view .LVU7474
 28464              	.LBB14016:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28465              		.loc 7 128 19 is_stmt 0 view .LVU7475
 28466 01e4 FFF7FEFF 		bl	_ZdlPv
 28467              	.LVL2079:
 28468              	.L592:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28469              		.loc 7 128 19 view .LVU7476
 28470              	.LBE14016:
 28471              	.LBE14015:
 28472              	.LBE14014:
 28473              	.LBE14013:
 28474              	.LBE14012:
 28475              	.LBE14007:
 28476              	.LBE14006:
 28477              	.LBB14017:
 28478              	.LBI14017:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28479              		.loc 5 150 14 is_stmt 1 view .LVU7477
 28480              	.LBB14018:
 28481              	.LBI14018:
 28482              		.loc 6 153 7 view .LVU7478
 28483              	.LBB14019:
 28484              	.LBI14019:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28485              		.loc 7 89 7 view .LVU7479
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28486              		.loc 7 89 7 is_stmt 0 view .LVU7480
 28487              	.LBE14019:
 28488              	.LBE14018:
 28489              	.LBE14017:
 28490              	.LBE14005:
 28491              	.LBB14020:
 28492              	.LBI14020:
 28493              		.loc 6 153 7 is_stmt 1 view .LVU7481
 28494              	.LBB14021:
 28495              	.LBI14021:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28496              		.loc 7 89 7 view .LVU7482
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28497              		.loc 7 89 7 is_stmt 0 view .LVU7483
 28498              	.LBE14021:
 28499              	.LBE14020:
 28500              	.LBB14022:
 28501              	.LBI14022:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 28502              		.loc 5 657 7 is_stmt 1 view .LVU7484
 28503              	.LBB14023:
 28504              	.LBI14023:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
ARM GAS  /tmp/ccszdRNt.s 			page 894


 28505              		.loc 5 229 7 view .LVU7485
 28506              	.LBB14024:
 28507              	.LBB14025:
 28508              	.LBI14025:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 28509              		.loc 5 221 7 view .LVU7486
 28510              	.LBB14026:
 28511              	.LBI14026:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28512              		.loc 5 186 7 view .LVU7487
 28513              	.LBB14027:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28514              		.loc 5 187 28 is_stmt 0 view .LVU7488
 28515 01e8 1298     		ldr	r0, [sp, #72]
 28516              	.LVL2080:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28517              		.loc 5 187 28 view .LVU7489
 28518              	.LBE14027:
 28519              	.LBE14026:
 28520              	.LBB14028:
 28521              	.LBI14028:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28522              		.loc 5 200 7 is_stmt 1 view .LVU7490
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28523              		.loc 5 200 7 is_stmt 0 view .LVU7491
 28524              	.LBE14028:
 28525              	.LBE14025:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 28526              		.loc 5 231 2 view .LVU7492
 28527 01ea 14AB     		add	r3, sp, #80
 28528 01ec 9842     		cmp	r0, r3
 28529 01ee 01D0     		beq	.L593
 28530              	.LVL2081:
 28531              	.LBB14029:
 28532              	.LBI14029:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 28533              		.loc 5 236 7 is_stmt 1 view .LVU7493
 28534              	.LBB14030:
 28535              	.LBB14031:
 28536              	.LBI14031:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 28537              		.loc 10 469 7 view .LVU7494
 28538              	.LBB14032:
 28539              	.LBI14032:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28540              		.loc 7 119 7 view .LVU7495
 28541              	.LBB14033:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28542              		.loc 7 128 19 is_stmt 0 view .LVU7496
 28543 01f0 FFF7FEFF 		bl	_ZdlPv
 28544              	.LVL2082:
 28545              	.L593:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28546              		.loc 7 128 19 view .LVU7497
 28547              	.LBE14033:
 28548              	.LBE14032:
 28549              	.LBE14031:
ARM GAS  /tmp/ccszdRNt.s 			page 895


 28550              	.LBE14030:
 28551              	.LBE14029:
 28552              	.LBE14024:
 28553              	.LBE14023:
 28554              	.LBB14034:
 28555              	.LBI14034:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28556              		.loc 5 150 14 is_stmt 1 view .LVU7498
 28557              	.LBB14035:
 28558              	.LBI14035:
 28559              		.loc 6 153 7 view .LVU7499
 28560              	.LBB14036:
 28561              	.LBI14036:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28562              		.loc 7 89 7 view .LVU7500
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28563              		.loc 7 89 7 is_stmt 0 view .LVU7501
 28564              	.LBE14036:
 28565              	.LBE14035:
 28566              	.LBE14034:
 28567              	.LBE14022:
 28568              	.LBB14037:
 28569              	.LBI14037:
 28570              		.loc 6 153 7 is_stmt 1 view .LVU7502
 28571              	.LBB14038:
 28572              	.LBI14038:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28573              		.loc 7 89 7 view .LVU7503
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28574              		.loc 7 89 7 is_stmt 0 view .LVU7504
 28575              	.LBE14038:
 28576              	.LBE14037:
  16:alohal/cli/cli.cpp **** }
 28577              		.loc 2 16 5 is_stmt 1 view .LVU7505
  16:alohal/cli/cli.cpp **** }
 28578              		.loc 2 16 15 is_stmt 0 view .LVU7506
 28579 01f4 2800     		movs	r0, r5
 28580 01f6 FFF7FEFF 		bl	_ZN3CLI10Clear_lineEv
 28581              	.LVL2083:
  17:alohal/cli/cli.cpp **** 
 28582              		.loc 2 17 1 view .LVU7507
 28583 01fa 3AB0     		add	sp, sp, #232
 28584              		@ sp needed
 28585              	.LVL2084:
  17:alohal/cli/cli.cpp **** 
 28586              		.loc 2 17 1 view .LVU7508
 28587 01fc 80BC     		pop	{r7}
 28588 01fe B846     		mov	r8, r7
 28589 0200 F0BD     		pop	{r4, r5, r6, r7, pc}
 28590              	.L595:
 28591 0202 C046     		.align	2
 28592              	.L594:
 28593 0204 04000000 		.word	.LC100+4
 28594 0208 4D000000 		.word	.LC103+77
 28595 020c 00000000 		.word	_ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 28596 0210 08000000 		.word	_ZTV7CommandI3CLIE+8
 28597 0214 0A000000 		.word	.LC108+10
ARM GAS  /tmp/ccszdRNt.s 			page 896


 28598 0218 4F000000 		.word	.LC111+79
 28599 021c 00000000 		.word	_ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
 28600              		.cfi_endproc
 28601              	.LFE3850:
 28603              		.section	.text._ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESa
 28604              		.align	1
 28605              		.weak	_ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS
 28606              		.syntax unified
 28607              		.code	16
 28608              		.thumb_func
 28609              		.fpu softvfp
 28611              	_ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE:
 28612              	.LVL2085:
 28613              	.LFB4923:
  92:alohal/cli/command.hpp ****         if (function) {
 28614              		.loc 19 92 15 is_stmt 1 view -0
 28615              		.cfi_startproc
 28616              		@ args = 0, pretend = 0, frame = 24
 28617              		@ frame_needed = 0, uses_anonymous_args = 0
  92:alohal/cli/command.hpp ****         if (function) {
 28618              		.loc 19 92 15 is_stmt 0 view .LVU7510
 28619 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 28620              	.LCFI70:
 28621              		.cfi_def_cfa_offset 20
 28622              		.cfi_offset 4, -20
 28623              		.cfi_offset 5, -16
 28624              		.cfi_offset 6, -12
 28625              		.cfi_offset 7, -8
 28626              		.cfi_offset 14, -4
 28627 0002 C646     		mov	lr, r8
 28628 0004 00B5     		push	{lr}
 28629              	.LCFI71:
 28630              		.cfi_def_cfa_offset 24
 28631              		.cfi_offset 8, -24
 28632 0006 86B0     		sub	sp, sp, #24
 28633              	.LCFI72:
 28634              		.cfi_def_cfa_offset 48
 28635 0008 0C00     		movs	r4, r1
  93:alohal/cli/command.hpp ****             return (*(function))(args);
 28636              		.loc 19 93 13 view .LVU7511
 28637 000a 066C     		ldr	r6, [r0, #64]
  93:alohal/cli/command.hpp ****             return (*(function))(args);
 28638              		.loc 19 93 9 view .LVU7512
 28639 000c 002E     		cmp	r6, #0
 28640 000e 54D0     		beq	.L597
 28641              	.LVL2086:
 28642              	.LBB14265:
 28643              	.LBI14265:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 28644              		.loc 13 550 7 is_stmt 1 view .LVU7513
 28645              	.LBB14266:
 28646              	.LBB14267:
 28647              	.LBB14268:
 28648              	.LBI14268:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 28649              		.loc 13 915 7 view .LVU7514
 28650              	.LBB14269:
ARM GAS  /tmp/ccszdRNt.s 			page 897


 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 28651              		.loc 13 916 50 is_stmt 0 view .LVU7515
 28652 0010 4B68     		ldr	r3, [r1, #4]
 28653 0012 0A68     		ldr	r2, [r1]
 28654 0014 9D1A     		subs	r5, r3, r2
 28655 0016 EA10     		asrs	r2, r5, #3
 28656 0018 9300     		lsls	r3, r2, #2
 28657 001a 9B18     		adds	r3, r3, r2
 28658 001c 1801     		lsls	r0, r3, #4
 28659              	.LVL2087:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 28660              		.loc 13 916 50 view .LVU7516
 28661 001e 1B18     		adds	r3, r3, r0
 28662 0020 1802     		lsls	r0, r3, #8
 28663 0022 1B18     		adds	r3, r3, r0
 28664 0024 1804     		lsls	r0, r3, #16
 28665 0026 1818     		adds	r0, r3, r0
 28666 0028 4000     		lsls	r0, r0, #1
 28667 002a 8018     		adds	r0, r0, r2
 28668              	.LVL2088:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 28669              		.loc 13 916 50 view .LVU7517
 28670              	.LBE14269:
 28671              	.LBE14268:
 28672              	.LBB14270:
 28673              	.LBI14270:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 28674              		.loc 13 277 7 is_stmt 1 view .LVU7518
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 28675              		.loc 13 277 7 is_stmt 0 view .LVU7519
 28676              	.LBE14270:
 28677              	.LBB14271:
 28678              	.LBI14271:
 28679              		.loc 20 97 19 is_stmt 1 view .LVU7520
 28680              	.LBB14272:
 28681              	.LBI14272:
 28682              		.loc 10 514 7 view .LVU7521
 28683              	.LBB14273:
 28684              	.LBI14273:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28685              		.loc 6 141 7 view .LVU7522
 28686              	.LBB14274:
 28687              	.LBI14274:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28688              		.loc 7 83 7 view .LVU7523
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28689              		.loc 7 83 7 is_stmt 0 view .LVU7524
 28690              	.LBE14274:
 28691              	.LBE14273:
 28692              	.LBE14272:
 28693              	.LBE14271:
 28694              	.LBB14275:
 28695              	.LBI14275:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 28696              		.loc 13 300 7 is_stmt 1 view .LVU7525
 28697              	.LBB14276:
 28698              	.LBI14276:
ARM GAS  /tmp/ccszdRNt.s 			page 898


 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 28699              		.loc 13 133 2 view .LVU7526
 28700              	.LBB14277:
 28701              	.LBI14277:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28702              		.loc 6 141 7 view .LVU7527
 28703              	.LBB14278:
 28704              	.LBI14278:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28705              		.loc 7 83 7 view .LVU7528
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28706              		.loc 7 83 7 is_stmt 0 view .LVU7529
 28707              	.LBE14278:
 28708              	.LBE14277:
 28709              	.LBB14279:
 28710              	.LBI14279:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 28711              		.loc 13 94 2 is_stmt 1 view .LVU7530
 28712              	.LBB14280:
 28713              	.LBB14281:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 28714              		.loc 13 95 47 is_stmt 0 view .LVU7531
 28715 002c 0023     		movs	r3, #0
 28716 002e 0093     		str	r3, [sp]
 28717 0030 0193     		str	r3, [sp, #4]
 28718 0032 0293     		str	r3, [sp, #8]
 28719              	.LVL2089:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 28720              		.loc 13 95 47 view .LVU7532
 28721              	.LBE14281:
 28722              	.LBE14280:
 28723              	.LBE14279:
 28724              	.LBE14276:
 28725              	.LBB14282:
 28726              	.LBI14282:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 28727              		.loc 13 356 7 is_stmt 1 view .LVU7533
 28728              	.LBB14283:
 28729              	.LBB14284:
 28730              	.LBI14284:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 28731              		.loc 13 340 7 view .LVU7534
 28732              	.LBB14285:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 28733              		.loc 13 343 18 is_stmt 0 view .LVU7535
 28734 0034 0028     		cmp	r0, #0
 28735 0036 22D0     		beq	.L617
 28736              	.LVL2090:
 28737              	.LBB14286:
 28738              	.LBI14286:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 28739              		.loc 10 443 7 is_stmt 1 view .LVU7536
 28740              	.LBB14287:
 28741              	.LBI14287:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 28742              		.loc 7 102 7 view .LVU7537
 28743              	.LBB14288:
ARM GAS  /tmp/ccszdRNt.s 			page 899


 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 28744              		.loc 7 104 2 is_stmt 0 view .LVU7538
 28745 0038 524B     		ldr	r3, .L624
 28746 003a 9842     		cmp	r0, r3
 28747 003c 1DD8     		bhi	.L620
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28748              		.loc 7 114 41 view .LVU7539
 28749 003e 4300     		lsls	r3, r0, #1
 28750 0040 1818     		adds	r0, r3, r0
 28751              	.LVL2091:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28752              		.loc 7 114 41 view .LVU7540
 28753 0042 C000     		lsls	r0, r0, #3
 28754 0044 FFF7FEFF 		bl	_Znwj
 28755              	.LVL2092:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28756              		.loc 7 114 41 view .LVU7541
 28757 0048 0700     		movs	r7, r0
 28758              	.LVL2093:
 28759              	.L598:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 28760              		.loc 7 114 41 view .LVU7542
 28761              	.LBE14288:
 28762              	.LBE14287:
 28763              	.LBE14286:
 28764              	.LBE14285:
 28765              	.LBE14284:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 28766              		.loc 13 358 2 view .LVU7543
 28767 004a 0097     		str	r7, [sp]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 28768              		.loc 13 359 2 view .LVU7544
 28769 004c 0197     		str	r7, [sp, #4]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 28770              		.loc 13 360 59 view .LVU7545
 28771 004e 7D19     		adds	r5, r7, r5
 28772              	.LVL2094:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 28773              		.loc 13 360 2 view .LVU7546
 28774 0050 0295     		str	r5, [sp, #8]
 28775              	.LVL2095:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 28776              		.loc 13 360 2 view .LVU7547
 28777              	.LBE14283:
 28778              	.LBE14282:
 28779              	.LBE14275:
 28780              	.LBB14296:
 28781              	.LBI14296:
 28782              		.loc 6 153 7 is_stmt 1 view .LVU7548
 28783              	.LBB14297:
 28784              	.LBI14297:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28785              		.loc 7 89 7 view .LVU7549
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28786              		.loc 7 89 7 is_stmt 0 view .LVU7550
 28787              	.LBE14297:
 28788              	.LBE14296:
ARM GAS  /tmp/ccszdRNt.s 			page 900


 28789              	.LBB14298:
 28790              	.LBI14298:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 28791              		.loc 13 817 7 is_stmt 1 view .LVU7551
 28792              	.LBB14299:
 28793              	.LBB14300:
 28794              	.LBI14300:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 28795              		.loc 14 806 7 view .LVU7552
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 28796              		.loc 14 806 7 is_stmt 0 view .LVU7553
 28797              	.LBE14300:
 28798              	.LBE14299:
 28799              	.LBE14298:
 28800              	.LBB14301:
 28801              	.LBI14301:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 28802              		.loc 13 835 7 is_stmt 1 view .LVU7554
 28803              	.LBB14302:
 28804              	.LBB14303:
 28805              	.LBI14303:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 28806              		.loc 14 806 7 view .LVU7555
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 28807              		.loc 14 806 7 is_stmt 0 view .LVU7556
 28808              	.LBE14303:
 28809              	.LBE14302:
 28810              	.LBE14301:
 28811              	.LBB14304:
 28812              	.LBI14304:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 28813              		.loc 13 273 7 is_stmt 1 view .LVU7557
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 28814              		.loc 13 273 7 is_stmt 0 view .LVU7558
 28815              	.LBE14304:
 28816              	.LBB14305:
 28817              	.LBI14305:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 28818              		.loc 15 305 5 is_stmt 1 view .LVU7559
 28819              	.LBB14306:
 28820              	.LBB14307:
 28821              	.LBI14307:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 28822              		.loc 15 115 5 view .LVU7560
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 28823              		.loc 15 115 5 is_stmt 0 view .LVU7561
 28824 0052 2568     		ldr	r5, [r4]
 28825              	.LVL2096:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 28826              		.loc 15 115 5 view .LVU7562
 28827 0054 6468     		ldr	r4, [r4, #4]
 28828              	.LVL2097:
 28829              	.LBB14308:
 28830              	.LBB14309:
 28831              	.LBI14309:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 28832              		.loc 15 76 9 is_stmt 1 view .LVU7563
ARM GAS  /tmp/ccszdRNt.s 			page 901


 28833              	.L601:
 28834              	.LBB14310:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 28835              		.loc 15 82 23 view .LVU7564
 28836              	.LBB14311:
 28837              	.LBI14311:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 28838              		.loc 14 907 5 view .LVU7565
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 28839              		.loc 14 907 5 is_stmt 0 view .LVU7566
 28840              	.LBE14311:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 28841              		.loc 15 82 23 view .LVU7567
 28842 0056 A542     		cmp	r5, r4
 28843 0058 13D0     		beq	.L600
 28844              	.LVL2098:
 28845              	.LBB14312:
 28846              	.LBI14312:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 28847              		.loc 24 74 5 is_stmt 1 view .LVU7568
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 28848              		.loc 24 74 5 is_stmt 0 view .LVU7569
 28849              	.LBE14312:
 28850              	.LBE14310:
 28851              	.LBE14309:
 28852              	.LBE14308:
 28853              	.LBE14307:
 28854              	.LBE14306:
 28855              	.LBE14305:
 28856              	.LBE14267:
 28857              	.LBE14266:
 28858              	.LBE14265:
 28859              		.loc 11 174 3 is_stmt 1 view .LVU7570
 28860              	.LBB14348:
 28861              	.LBB14347:
 28862              	.LBB14346:
 28863              	.LBB14344:
 28864              	.LBB14343:
 28865              	.LBB14342:
 28866              	.LBB14341:
 28867              	.LBB14340:
 28868              	.LBB14339:
 28869              	.LBB14336:
 28870              	.LBB14313:
 28871              	.LBI14313:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 28872              		.loc 5 448 7 view .LVU7571
 28873              	.LBB14314:
 28874              	.LBB14315:
 28875              	.LBI14315:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 28876              		.loc 5 190 7 view .LVU7572
 28877              	.LBB14316:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28878              		.loc 5 193 51 is_stmt 0 view .LVU7573
 28879 005a 3B00     		movs	r3, r7
 28880 005c 0833     		adds	r3, r3, #8
ARM GAS  /tmp/ccszdRNt.s 			page 902


 28881              	.LVL2099:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 28882              		.loc 5 193 51 view .LVU7574
 28883              	.LBE14316:
 28884              	.LBE14315:
 28885              	.LBB14317:
 28886              	.LBI14317:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28887              		.loc 5 290 7 is_stmt 1 view .LVU7575
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 28888              		.loc 5 290 7 is_stmt 0 view .LVU7576
 28889              	.LBE14317:
 28890              	.LBB14318:
 28891              	.LBI14318:
 28892              		.loc 20 97 19 is_stmt 1 view .LVU7577
 28893              	.LBB14319:
 28894              	.LBI14319:
 28895              		.loc 10 514 7 view .LVU7578
 28896              	.LBB14320:
 28897              	.LBI14320:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28898              		.loc 6 141 7 view .LVU7579
 28899              	.LBB14321:
 28900              	.LBI14321:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28901              		.loc 7 83 7 view .LVU7580
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28902              		.loc 7 83 7 is_stmt 0 view .LVU7581
 28903              	.LBE14321:
 28904              	.LBE14320:
 28905              	.LBE14319:
 28906              	.LBE14318:
 28907              	.LBB14322:
 28908              	.LBI14322:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 28909              		.loc 5 159 2 is_stmt 1 view .LVU7582
 28910              	.LBB14323:
 28911              	.LBB14324:
 28912              	.LBI14324:
 28913              		.loc 8 99 5 view .LVU7583
 28914              		.loc 8 99 5 is_stmt 0 view .LVU7584
 28915              	.LBE14324:
 28916              	.LBB14325:
 28917              	.LBI14325:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 28918              		.loc 6 141 7 is_stmt 1 view .LVU7585
 28919              	.LBB14326:
 28920              	.LBI14326:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28921              		.loc 7 83 7 view .LVU7586
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28922              		.loc 7 83 7 is_stmt 0 view .LVU7587
 28923              	.LBE14326:
 28924              	.LBE14325:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28925              		.loc 5 160 46 view .LVU7588
 28926 005e 3B60     		str	r3, [r7]
ARM GAS  /tmp/ccszdRNt.s 			page 903


 28927              	.LVL2100:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 28928              		.loc 5 160 46 view .LVU7589
 28929              	.LBE14323:
 28930              	.LBE14322:
 28931              	.LBB14327:
 28932              	.LBI14327:
 28933              		.loc 6 153 7 is_stmt 1 view .LVU7590
 28934              	.LBB14328:
 28935              	.LBI14328:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28936              		.loc 7 89 7 view .LVU7591
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 28937              		.loc 7 89 7 is_stmt 0 view .LVU7592
 28938              	.LBE14328:
 28939              	.LBE14327:
 28940              	.LBB14329:
 28941              	.LBI14329:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28942              		.loc 5 186 7 is_stmt 1 view .LVU7593
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28943              		.loc 5 186 7 is_stmt 0 view .LVU7594
 28944              	.LBE14329:
 28945              	.LBB14330:
 28946              	.LBI14330:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28947              		.loc 5 186 7 is_stmt 1 view .LVU7595
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 28948              		.loc 5 186 7 is_stmt 0 view .LVU7596
 28949              	.LBE14330:
 28950              	.LBB14331:
 28951              	.LBI14331:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28952              		.loc 5 936 7 is_stmt 1 view .LVU7597
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 28953              		.loc 5 936 7 is_stmt 0 view .LVU7598
 28954              	.LBE14331:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 28955              		.loc 5 451 9 view .LVU7599
 28956 0060 2B68     		ldr	r3, [r5]
 28957 0062 6968     		ldr	r1, [r5, #4]
 28958 0064 8C46     		mov	ip, r1
 28959 0066 6344     		add	r3, r3, ip
 28960 0068 1A00     		movs	r2, r3
 28961              	.LVL2101:
 28962              	.LBB14332:
 28963              	.LBI14332:
 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 28964              		.loc 5 263 9 is_stmt 1 view .LVU7600
 28965              	.LBB14333:
 28966              	.LBB14334:
 28967              	.LBI14334:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 28968              		.loc 5 243 9 view .LVU7601
 28969              	.LBB14335:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28970              		.loc 5 247 11 is_stmt 0 view .LVU7602
ARM GAS  /tmp/ccszdRNt.s 			page 904


 28971 006a 0023     		movs	r3, #0
 28972 006c 2968     		ldr	r1, [r5]
 28973 006e 3800     		movs	r0, r7
 28974 0070 FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 28975              	.LVL2102:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 28976              		.loc 5 247 11 view .LVU7603
 28977              	.LBE14335:
 28978              	.LBE14334:
 28979              	.LBE14333:
 28980              	.LBE14332:
 28981              	.LBE14314:
 28982              	.LBE14313:
 28983              	.LBE14336:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 28984              		.loc 15 82 8 is_stmt 1 view .LVU7604
 28985              	.LBB14337:
 28986              	.LBI14337:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 28987              		.loc 14 827 7 view .LVU7605
 28988              	.LBB14338:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 28989              		.loc 14 829 2 is_stmt 0 view .LVU7606
 28990 0074 1835     		adds	r5, r5, #24
 28991              	.LVL2103:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 28992              		.loc 14 829 2 view .LVU7607
 28993              	.LBE14338:
 28994              	.LBE14337:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 28995              		.loc 15 82 8 view .LVU7608
 28996 0076 1837     		adds	r7, r7, #24
 28997              	.LVL2104:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 28998              		.loc 15 82 8 view .LVU7609
 28999 0078 EDE7     		b	.L601
 29000              	.LVL2105:
 29001              	.L620:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 29002              		.loc 15 82 8 view .LVU7610
 29003              	.LBE14339:
 29004              	.LBE14340:
 29005              	.LBE14341:
 29006              	.LBE14342:
 29007              	.LBE14343:
 29008              	.LBE14344:
 29009              	.LBB14345:
 29010              	.LBB14295:
 29011              	.LBB14294:
 29012              	.LBB14293:
 29013              	.LBB14292:
 29014              	.LBB14291:
 29015              	.LBB14290:
 29016              	.LBB14289:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29017              		.loc 7 105 26 view .LVU7611
 29018 007a FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
ARM GAS  /tmp/ccszdRNt.s 			page 905


 29019              	.LVL2106:
 29020              	.L617:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29021              		.loc 7 105 26 view .LVU7612
 29022              	.LBE14289:
 29023              	.LBE14290:
 29024              	.LBE14291:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29025              		.loc 13 343 18 view .LVU7613
 29026 007e 0027     		movs	r7, #0
 29027 0080 E3E7     		b	.L598
 29028              	.LVL2107:
 29029              	.L600:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29030              		.loc 13 343 18 view .LVU7614
 29031              	.LBE14292:
 29032              	.LBE14293:
 29033              	.LBE14294:
 29034              	.LBE14295:
 29035              	.LBE14345:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 29036              		.loc 13 554 2 view .LVU7615
 29037 0082 0197     		str	r7, [sp, #4]
 29038              	.LVL2108:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 29039              		.loc 13 554 2 view .LVU7616
 29040              	.LBE14346:
 29041              	.LBE14347:
 29042              	.LBE14348:
  94:alohal/cli/command.hpp ****         } else if (object_ptr){
 29043              		.loc 19 94 33 view .LVU7617
 29044 0084 6846     		mov	r0, sp
 29045 0086 B047     		blx	r6
 29046              	.LVL2109:
 29047 0088 0500     		movs	r5, r0
 29048              	.LVL2110:
 29049              	.LBB14349:
 29050              	.LBI14349:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29051              		.loc 13 675 7 is_stmt 1 view .LVU7618
 29052              	.LBB14350:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 29053              		.loc 13 677 15 is_stmt 0 view .LVU7619
 29054 008a 009C     		ldr	r4, [sp]
 29055              	.LVL2111:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 29056              		.loc 13 677 15 view .LVU7620
 29057 008c 019E     		ldr	r6, [sp, #4]
 29058              	.LVL2112:
 29059              	.LBB14351:
 29060              	.LBI14351:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29061              		.loc 13 273 7 is_stmt 1 view .LVU7621
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29062              		.loc 13 273 7 is_stmt 0 view .LVU7622
 29063              	.LBE14351:
 29064              	.LBB14352:
ARM GAS  /tmp/ccszdRNt.s 			page 906


 29065              	.LBI14352:
 29066              		.loc 24 203 5 is_stmt 1 view .LVU7623
 29067 008e 02E0     		b	.L604
 29068              	.LVL2113:
 29069              	.L621:
 29070              	.LBB14353:
 29071              	.LBB14354:
 29072              	.LBB14355:
 29073              	.LBB14356:
 29074              	.LBB14357:
 29075              	.LBB14358:
 29076              	.LBB14359:
 29077              	.LBB14360:
 29078              	.LBB14361:
 29079              	.LBI14361:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 29080              		.loc 5 236 7 view .LVU7624
 29081              	.LBB14362:
 29082              	.LBB14363:
 29083              	.LBI14363:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29084              		.loc 10 469 7 view .LVU7625
 29085              	.LBB14364:
 29086              	.LBI14364:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29087              		.loc 7 119 7 view .LVU7626
 29088              	.LBB14365:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29089              		.loc 7 128 19 is_stmt 0 view .LVU7627
 29090 0090 FFF7FEFF 		bl	_ZdlPv
 29091              	.LVL2114:
 29092              	.L603:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29093              		.loc 7 128 19 view .LVU7628
 29094              	.LBE14365:
 29095              	.LBE14364:
 29096              	.LBE14363:
 29097              	.LBE14362:
 29098              	.LBE14361:
 29099              	.LBE14360:
 29100              	.LBE14359:
 29101              	.LBB14372:
 29102              	.LBI14372:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29103              		.loc 5 150 14 is_stmt 1 view .LVU7629
 29104              	.LBB14373:
 29105              	.LBI14373:
 29106              		.loc 6 153 7 view .LVU7630
 29107              	.LBB14374:
 29108              	.LBI14374:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29109              		.loc 7 89 7 view .LVU7631
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29110              		.loc 7 89 7 is_stmt 0 view .LVU7632
 29111              	.LBE14374:
 29112              	.LBE14373:
 29113              	.LBE14372:
ARM GAS  /tmp/ccszdRNt.s 			page 907


 29114              	.LBE14358:
 29115              	.LBE14357:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 29116              		.loc 24 107 4 is_stmt 1 view .LVU7633
 29117 0094 1834     		adds	r4, r4, #24
 29118              	.LVL2115:
 29119              	.L604:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 29120              		.loc 24 107 19 view .LVU7634
 29121 0096 A642     		cmp	r6, r4
 29122 0098 05D0     		beq	.L602
 29123              	.LVL2116:
 29124              	.LBB14377:
 29125              	.LBI14357:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 29126              		.loc 24 97 5 view .LVU7635
 29127              	.LBB14376:
 29128              	.LBI14358:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 29129              		.loc 5 657 7 view .LVU7636
 29130              	.LBB14375:
 29131              	.LBI14359:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29132              		.loc 5 229 7 view .LVU7637
 29133              	.LBB14371:
 29134              	.LBB14366:
 29135              	.LBI14366:
 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29136              		.loc 5 221 7 view .LVU7638
 29137              	.LBB14367:
 29138              	.LBI14367:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29139              		.loc 5 186 7 view .LVU7639
 29140              	.LBB14368:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29141              		.loc 5 187 28 is_stmt 0 view .LVU7640
 29142 009a 2068     		ldr	r0, [r4]
 29143              	.LVL2117:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29144              		.loc 5 187 28 view .LVU7641
 29145              	.LBE14368:
 29146              	.LBE14367:
 29147              	.LBB14369:
 29148              	.LBI14369:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29149              		.loc 5 200 7 is_stmt 1 view .LVU7642
 29150              	.LBB14370:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 29151              		.loc 5 203 57 is_stmt 0 view .LVU7643
 29152 009c 2300     		movs	r3, r4
 29153 009e 0833     		adds	r3, r3, #8
 29154              	.LVL2118:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 29155              		.loc 5 203 57 view .LVU7644
 29156              	.LBE14370:
 29157              	.LBE14369:
 29158              	.LBE14366:
ARM GAS  /tmp/ccszdRNt.s 			page 908


 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29159              		.loc 5 231 2 view .LVU7645
 29160 00a0 9842     		cmp	r0, r3
 29161 00a2 F5D1     		bne	.L621
 29162 00a4 F6E7     		b	.L603
 29163              	.LVL2119:
 29164              	.L602:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29165              		.loc 5 231 2 view .LVU7646
 29166              	.LBE14371:
 29167              	.LBE14375:
 29168              	.LBE14376:
 29169              	.LBE14377:
 29170              	.LBE14356:
 29171              	.LBE14355:
 29172              	.LBE14354:
 29173              	.LBE14353:
 29174              	.LBE14352:
 29175              	.LBB14378:
 29176              	.LBI14378:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29177              		.loc 13 330 7 is_stmt 1 view .LVU7647
 29178              	.LBB14379:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 29179              		.loc 13 332 2 is_stmt 0 view .LVU7648
 29180 00a6 0098     		ldr	r0, [sp]
 29181              	.LVL2120:
 29182              	.LBB14380:
 29183              	.LBI14380:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29184              		.loc 13 347 7 is_stmt 1 view .LVU7649
 29185              	.LBB14381:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 29186              		.loc 13 350 2 is_stmt 0 view .LVU7650
 29187 00a8 0028     		cmp	r0, #0
 29188 00aa 01D0     		beq	.L596
 29189              	.LVL2121:
 29190              	.LBB14382:
 29191              	.LBI14382:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29192              		.loc 10 469 7 is_stmt 1 view .LVU7651
 29193              	.LBB14383:
 29194              	.LBB14384:
 29195              	.LBI14384:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29196              		.loc 7 119 7 view .LVU7652
 29197              	.LBB14385:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29198              		.loc 7 128 19 is_stmt 0 view .LVU7653
 29199 00ac FFF7FEFF 		bl	_ZdlPv
 29200              	.LVL2122:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29201              		.loc 7 128 19 view .LVU7654
 29202              	.LBE14385:
 29203              	.LBE14384:
 29204              	.LBE14383:
 29205              	.LBE14382:
ARM GAS  /tmp/ccszdRNt.s 			page 909


 29206              	.LBE14381:
 29207              	.LBE14380:
 29208              	.LBB14386:
 29209              	.LBI14386:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 29210              		.loc 13 125 14 is_stmt 1 view .LVU7655
 29211              	.LBB14387:
 29212              	.LBI14387:
 29213              		.loc 6 153 7 view .LVU7656
 29214              	.LBB14388:
 29215              	.LBI14388:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29216              		.loc 7 89 7 view .LVU7657
 29217              	.L596:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29218              		.loc 7 89 7 is_stmt 0 view .LVU7658
 29219              	.LBE14388:
 29220              	.LBE14387:
 29221              	.LBE14386:
 29222              	.LBE14379:
 29223              	.LBE14378:
 29224              	.LBE14350:
 29225              	.LBE14349:
  99:alohal/cli/command.hpp **** 
 29226              		.loc 19 99 5 view .LVU7659
 29227 00b0 2800     		movs	r0, r5
 29228 00b2 06B0     		add	sp, sp, #24
 29229              		@ sp needed
 29230 00b4 80BC     		pop	{r7}
 29231 00b6 B846     		mov	r8, r7
 29232 00b8 F0BD     		pop	{r4, r5, r6, r7, pc}
 29233              	.LVL2123:
 29234              	.L597:
  95:alohal/cli/command.hpp ****             return (*object_ptr.*method_pointer)(args);
 29235              		.loc 19 95 20 view .LVU7660
 29236 00ba 466B     		ldr	r6, [r0, #52]
  95:alohal/cli/command.hpp ****             return (*object_ptr.*method_pointer)(args);
 29237              		.loc 19 95 16 view .LVU7661
 29238 00bc 002E     		cmp	r6, #0
 29239 00be 5ED0     		beq	.L618
  96:alohal/cli/command.hpp ****         }
 29240              		.loc 19 96 49 view .LVU7662
 29241 00c0 C36B     		ldr	r3, [r0, #60]
 29242 00c2 DA07     		lsls	r2, r3, #31
 29243 00c4 38D4     		bmi	.L607
  96:alohal/cli/command.hpp ****         }
 29244              		.loc 19 96 49 discriminator 1 view .LVU7663
 29245 00c6 826B     		ldr	r2, [r0, #56]
 29246 00c8 9046     		mov	r8, r2
 29247              	.LVL2124:
 29248              	.L608:
  96:alohal/cli/command.hpp ****         }
 29249              		.loc 19 96 49 discriminator 4 view .LVU7664
 29250 00ca 5B10     		asrs	r3, r3, #1
 29251 00cc F618     		adds	r6, r6, r3
 29252              	.LVL2125:
 29253              	.LBB14389:
ARM GAS  /tmp/ccszdRNt.s 			page 910


 29254              	.LBI14389:
 550:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _Base(__x.size(),
 29255              		.loc 13 550 7 is_stmt 1 discriminator 4 view .LVU7665
 29256              	.LBB14390:
 29257              	.LBB14391:
 29258              	.LBB14392:
 29259              	.LBI14392:
 915:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 29260              		.loc 13 915 7 discriminator 4 view .LVU7666
 29261              	.LBB14393:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 29262              		.loc 13 916 50 is_stmt 0 discriminator 4 view .LVU7667
 29263 00ce 6368     		ldr	r3, [r4, #4]
 29264 00d0 2268     		ldr	r2, [r4]
 29265 00d2 9D1A     		subs	r5, r3, r2
 29266 00d4 EA10     		asrs	r2, r5, #3
 29267 00d6 9300     		lsls	r3, r2, #2
 29268 00d8 9B18     		adds	r3, r3, r2
 29269 00da 1801     		lsls	r0, r3, #4
 29270              	.LVL2126:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 29271              		.loc 13 916 50 discriminator 4 view .LVU7668
 29272 00dc 1B18     		adds	r3, r3, r0
 29273 00de 1802     		lsls	r0, r3, #8
 29274 00e0 1B18     		adds	r3, r3, r0
 29275 00e2 1804     		lsls	r0, r3, #16
 29276 00e4 1818     		adds	r0, r3, r0
 29277 00e6 4000     		lsls	r0, r0, #1
 29278 00e8 8018     		adds	r0, r0, r2
 29279              	.LVL2127:
 916:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 
 29280              		.loc 13 916 50 discriminator 4 view .LVU7669
 29281              	.LBE14393:
 29282              	.LBE14392:
 29283              	.LBB14394:
 29284              	.LBI14394:
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29285              		.loc 13 277 7 is_stmt 1 discriminator 4 view .LVU7670
 277:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29286              		.loc 13 277 7 is_stmt 0 discriminator 4 view .LVU7671
 29287              	.LBE14394:
 29288              	.LBB14395:
 29289              	.LBI14395:
 29290              		.loc 20 97 19 is_stmt 1 discriminator 4 view .LVU7672
 29291              	.LBB14396:
 29292              	.LBI14396:
 29293              		.loc 10 514 7 discriminator 4 view .LVU7673
 29294              	.LBB14397:
 29295              	.LBI14397:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29296              		.loc 6 141 7 discriminator 4 view .LVU7674
 29297              	.LBB14398:
 29298              	.LBI14398:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29299              		.loc 7 83 7 discriminator 4 view .LVU7675
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29300              		.loc 7 83 7 is_stmt 0 discriminator 4 view .LVU7676
ARM GAS  /tmp/ccszdRNt.s 			page 911


 29301              	.LBE14398:
 29302              	.LBE14397:
 29303              	.LBE14396:
 29304              	.LBE14395:
 29305              	.LBB14399:
 29306              	.LBI14399:
 300:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       : _M_impl(__a)
 29307              		.loc 13 300 7 is_stmt 1 discriminator 4 view .LVU7677
 29308              	.LBB14400:
 29309              	.LBI14400:
 133:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _Tp_alloc_type(__a)
 29310              		.loc 13 133 2 discriminator 4 view .LVU7678
 29311              	.LBB14401:
 29312              	.LBI14401:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29313              		.loc 6 141 7 discriminator 4 view .LVU7679
 29314              	.LBB14402:
 29315              	.LBI14402:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29316              		.loc 7 83 7 discriminator 4 view .LVU7680
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29317              		.loc 7 83 7 is_stmt 0 discriminator 4 view .LVU7681
 29318              	.LBE14402:
 29319              	.LBE14401:
 29320              	.LBB14403:
 29321              	.LBI14403:
  94:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: _M_start(), _M_finish(), _M_end_of_storage()
 29322              		.loc 13 94 2 is_stmt 1 discriminator 4 view .LVU7682
 29323              	.LBB14404:
 29324              	.LBB14405:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 29325              		.loc 13 95 47 is_stmt 0 discriminator 4 view .LVU7683
 29326 00ea 0023     		movs	r3, #0
 29327 00ec 0393     		str	r3, [sp, #12]
 29328 00ee 0493     		str	r3, [sp, #16]
 29329 00f0 0593     		str	r3, [sp, #20]
 29330              	.LVL2128:
  95:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	{ }
 29331              		.loc 13 95 47 discriminator 4 view .LVU7684
 29332              	.LBE14405:
 29333              	.LBE14404:
 29334              	.LBE14403:
 29335              	.LBE14400:
 29336              	.LBB14406:
 29337              	.LBI14406:
 356:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29338              		.loc 13 356 7 is_stmt 1 discriminator 4 view .LVU7685
 29339              	.LBB14407:
 29340              	.LBB14408:
 29341              	.LBI14408:
 340:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29342              		.loc 13 340 7 discriminator 4 view .LVU7686
 29343              	.LBB14409:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29344              		.loc 13 343 18 is_stmt 0 discriminator 4 view .LVU7687
 29345 00f2 0028     		cmp	r0, #0
 29346 00f4 28D0     		beq	.L619
ARM GAS  /tmp/ccszdRNt.s 			page 912


 29347              	.LVL2129:
 29348              	.LBB14410:
 29349              	.LBI14410:
 443:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { return __a.allocate(__n); }
 29350              		.loc 10 443 7 is_stmt 1 view .LVU7688
 29351              	.LBB14411:
 29352              	.LBI14411:
 102:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29353              		.loc 7 102 7 view .LVU7689
 29354              	.LBB14412:
 104:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 29355              		.loc 7 104 2 is_stmt 0 view .LVU7690
 29356 00f6 234B     		ldr	r3, .L624
 29357 00f8 9842     		cmp	r0, r3
 29358 00fa 23D8     		bhi	.L622
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29359              		.loc 7 114 41 view .LVU7691
 29360 00fc 4300     		lsls	r3, r0, #1
 29361 00fe 1818     		adds	r0, r3, r0
 29362              	.LVL2130:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29363              		.loc 7 114 41 view .LVU7692
 29364 0100 C000     		lsls	r0, r0, #3
 29365 0102 FFF7FEFF 		bl	_Znwj
 29366              	.LVL2131:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29367              		.loc 7 114 41 view .LVU7693
 29368 0106 0700     		movs	r7, r0
 29369              	.LVL2132:
 29370              	.L609:
 114:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29371              		.loc 7 114 41 view .LVU7694
 29372              	.LBE14412:
 29373              	.LBE14411:
 29374              	.LBE14410:
 29375              	.LBE14409:
 29376              	.LBE14408:
 358:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 29377              		.loc 13 358 2 view .LVU7695
 29378 0108 0397     		str	r7, [sp, #12]
 359:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 29379              		.loc 13 359 2 view .LVU7696
 29380 010a 0497     		str	r7, [sp, #16]
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29381              		.loc 13 360 59 view .LVU7697
 29382 010c 7D19     		adds	r5, r7, r5
 29383              	.LVL2133:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29384              		.loc 13 360 2 view .LVU7698
 29385 010e 0595     		str	r5, [sp, #20]
 29386              	.LVL2134:
 360:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29387              		.loc 13 360 2 view .LVU7699
 29388              	.LBE14407:
 29389              	.LBE14406:
 29390              	.LBE14399:
 29391              	.LBB14420:
ARM GAS  /tmp/ccszdRNt.s 			page 913


 29392              	.LBI14420:
 29393              		.loc 6 153 7 is_stmt 1 view .LVU7700
 29394              	.LBB14421:
 29395              	.LBI14421:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29396              		.loc 7 89 7 view .LVU7701
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29397              		.loc 7 89 7 is_stmt 0 view .LVU7702
 29398              	.LBE14421:
 29399              	.LBE14420:
 29400              	.LBB14422:
 29401              	.LBI14422:
 817:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 29402              		.loc 13 817 7 is_stmt 1 view .LVU7703
 29403              	.LBB14423:
 29404              	.LBB14424:
 29405              	.LBI14424:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 29406              		.loc 14 806 7 view .LVU7704
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 29407              		.loc 14 806 7 is_stmt 0 view .LVU7705
 29408              	.LBE14424:
 29409              	.LBE14423:
 29410              	.LBE14422:
 29411              	.LBB14425:
 29412              	.LBI14425:
 835:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 29413              		.loc 13 835 7 is_stmt 1 view .LVU7706
 29414              	.LBB14426:
 29415              	.LBB14427:
 29416              	.LBI14427:
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 29417              		.loc 14 806 7 view .LVU7707
 806:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       : _M_current(__i) { }
 29418              		.loc 14 806 7 is_stmt 0 view .LVU7708
 29419              	.LBE14427:
 29420              	.LBE14426:
 29421              	.LBE14425:
 29422              	.LBB14428:
 29423              	.LBI14428:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29424              		.loc 13 273 7 is_stmt 1 view .LVU7709
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29425              		.loc 13 273 7 is_stmt 0 view .LVU7710
 29426              	.LBE14428:
 29427              	.LBB14429:
 29428              	.LBI14429:
 305:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 29429              		.loc 15 305 5 is_stmt 1 view .LVU7711
 29430              	.LBB14430:
 29431              	.LBB14431:
 29432              	.LBI14431:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 29433              		.loc 15 115 5 view .LVU7712
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 29434              		.loc 15 115 5 is_stmt 0 view .LVU7713
 29435 0110 2568     		ldr	r5, [r4]
ARM GAS  /tmp/ccszdRNt.s 			page 914


 29436              	.LVL2135:
 115:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 29437              		.loc 15 115 5 view .LVU7714
 29438 0112 6468     		ldr	r4, [r4, #4]
 29439              	.LVL2136:
 29440              	.LBB14432:
 29441              	.LBB14433:
 29442              	.LBI14433:
  76:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
 29443              		.loc 15 76 9 is_stmt 1 view .LVU7715
 29444              	.L612:
 29445              	.LBB14434:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 29446              		.loc 15 82 23 view .LVU7716
 29447              	.LBB14435:
 29448              	.LBI14435:
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 29449              		.loc 14 907 5 view .LVU7717
 907:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	       const __normal_iterator<_Iterator, _Container>& __rhs)
 29450              		.loc 14 907 5 is_stmt 0 view .LVU7718
 29451              	.LBE14435:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 29452              		.loc 15 82 23 view .LVU7719
 29453 0114 A542     		cmp	r5, r4
 29454 0116 19D0     		beq	.L611
 29455              	.LVL2137:
 29456              	.LBB14436:
 29457              	.LBI14436:
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 29458              		.loc 24 74 5 is_stmt 1 view .LVU7720
  74:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 29459              		.loc 24 74 5 is_stmt 0 view .LVU7721
 29460              	.LBE14436:
 29461              	.LBE14434:
 29462              	.LBE14433:
 29463              	.LBE14432:
 29464              	.LBE14431:
 29465              	.LBE14430:
 29466              	.LBE14429:
 29467              	.LBE14391:
 29468              	.LBE14390:
 29469              	.LBE14389:
 29470              		.loc 11 174 3 is_stmt 1 view .LVU7722
 29471              	.LBB14474:
 29472              	.LBB14472:
 29473              	.LBB14470:
 29474              	.LBB14468:
 29475              	.LBB14467:
 29476              	.LBB14466:
 29477              	.LBB14465:
 29478              	.LBB14464:
 29479              	.LBB14463:
 29480              	.LBB14460:
 29481              	.LBB14437:
 29482              	.LBI14437:
 448:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 29483              		.loc 5 448 7 view .LVU7723
ARM GAS  /tmp/ccszdRNt.s 			page 915


 29484              	.LBB14438:
 29485              	.LBB14439:
 29486              	.LBI14439:
 190:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29487              		.loc 5 190 7 view .LVU7724
 29488              	.LBB14440:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 29489              		.loc 5 193 51 is_stmt 0 view .LVU7725
 29490 0118 3B00     		movs	r3, r7
 29491 011a 0833     		adds	r3, r3, #8
 29492              	.LVL2138:
 193:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 29493              		.loc 5 193 51 view .LVU7726
 29494              	.LBE14440:
 29495              	.LBE14439:
 29496              	.LBB14441:
 29497              	.LBI14441:
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29498              		.loc 5 290 7 is_stmt 1 view .LVU7727
 290:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus; }
 29499              		.loc 5 290 7 is_stmt 0 view .LVU7728
 29500              	.LBE14441:
 29501              	.LBB14442:
 29502              	.LBI14442:
 29503              		.loc 20 97 19 is_stmt 1 view .LVU7729
 29504              	.LBB14443:
 29505              	.LBI14443:
 29506              		.loc 10 514 7 view .LVU7730
 29507              	.LBB14444:
 29508              	.LBI14444:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29509              		.loc 6 141 7 view .LVU7731
 29510              	.LBB14445:
 29511              	.LBI14445:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29512              		.loc 7 83 7 view .LVU7732
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29513              		.loc 7 83 7 is_stmt 0 view .LVU7733
 29514              	.LBE14445:
 29515              	.LBE14444:
 29516              	.LBE14443:
 29517              	.LBE14442:
 29518              	.LBB14446:
 29519              	.LBI14446:
 159:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 29520              		.loc 5 159 2 is_stmt 1 view .LVU7734
 29521              	.LBB14447:
 29522              	.LBB14448:
 29523              	.LBI14448:
 29524              		.loc 8 99 5 view .LVU7735
 29525              		.loc 8 99 5 is_stmt 0 view .LVU7736
 29526              	.LBE14448:
 29527              	.LBB14449:
 29528              	.LBI14449:
 141:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 29529              		.loc 6 141 7 is_stmt 1 view .LVU7737
 29530              	.LBB14450:
ARM GAS  /tmp/ccszdRNt.s 			page 916


 29531              	.LBI14450:
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29532              		.loc 7 83 7 view .LVU7738
  83:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29533              		.loc 7 83 7 is_stmt 0 view .LVU7739
 29534              	.LBE14450:
 29535              	.LBE14449:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29536              		.loc 5 160 46 view .LVU7740
 29537 011c 3B60     		str	r3, [r7]
 29538              	.LVL2139:
 160:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #endif
 29539              		.loc 5 160 46 view .LVU7741
 29540              	.LBE14447:
 29541              	.LBE14446:
 29542              	.LBB14451:
 29543              	.LBI14451:
 29544              		.loc 6 153 7 is_stmt 1 view .LVU7742
 29545              	.LBB14452:
 29546              	.LBI14452:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29547              		.loc 7 89 7 view .LVU7743
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29548              		.loc 7 89 7 is_stmt 0 view .LVU7744
 29549              	.LBE14452:
 29550              	.LBE14451:
 29551              	.LBB14453:
 29552              	.LBI14453:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29553              		.loc 5 186 7 is_stmt 1 view .LVU7745
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29554              		.loc 5 186 7 is_stmt 0 view .LVU7746
 29555              	.LBE14453:
 29556              	.LBB14454:
 29557              	.LBI14454:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29558              		.loc 5 186 7 is_stmt 1 view .LVU7747
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29559              		.loc 5 186 7 is_stmt 0 view .LVU7748
 29560              	.LBE14454:
 29561              	.LBB14455:
 29562              	.LBI14455:
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 29563              		.loc 5 936 7 is_stmt 1 view .LVU7749
 936:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_string_length; }
 29564              		.loc 5 936 7 is_stmt 0 view .LVU7750
 29565              	.LBE14455:
 451:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29566              		.loc 5 451 9 view .LVU7751
 29567 011e 2B68     		ldr	r3, [r5]
 29568 0120 6968     		ldr	r1, [r5, #4]
 29569 0122 8C46     		mov	ip, r1
 29570 0124 6344     		add	r3, r3, ip
 29571 0126 1A00     		movs	r2, r3
 29572              	.LVL2140:
 29573              	.LBB14456:
 29574              	.LBI14456:
ARM GAS  /tmp/ccszdRNt.s 			page 917


 263:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	{
 29575              		.loc 5 263 9 is_stmt 1 view .LVU7752
 29576              	.LBB14457:
 29577              	.LBB14458:
 29578              	.LBI14458:
 243:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 			 std::__false_type)
 29579              		.loc 5 243 9 view .LVU7753
 29580              	.LBB14459:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29581              		.loc 5 247 11 is_stmt 0 view .LVU7754
 29582 0128 0023     		movs	r3, #0
 29583 012a 2968     		ldr	r1, [r5]
 29584 012c 3800     		movs	r0, r7
 29585 012e FFF7FEFF 		bl	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_itera
 29586              	.LVL2141:
 247:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	}
 29587              		.loc 5 247 11 view .LVU7755
 29588              	.LBE14459:
 29589              	.LBE14458:
 29590              	.LBE14457:
 29591              	.LBE14456:
 29592              	.LBE14438:
 29593              	.LBE14437:
 29594              	.LBE14460:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 29595              		.loc 15 82 8 is_stmt 1 view .LVU7756
 29596              	.LBB14461:
 29597              	.LBI14461:
 827:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h ****       {
 29598              		.loc 14 827 7 view .LVU7757
 29599              	.LBB14462:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 29600              		.loc 14 829 2 is_stmt 0 view .LVU7758
 29601 0132 1835     		adds	r5, r5, #24
 29602              	.LVL2142:
 829:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator.h **** 	return *this;
 29603              		.loc 14 829 2 view .LVU7759
 29604              	.LBE14462:
 29605              	.LBE14461:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 29606              		.loc 15 82 8 view .LVU7760
 29607 0134 1837     		adds	r7, r7, #24
 29608              	.LVL2143:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 29609              		.loc 15 82 8 view .LVU7761
 29610 0136 EDE7     		b	.L612
 29611              	.LVL2144:
 29612              	.L607:
  82:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
 29613              		.loc 15 82 8 view .LVU7762
 29614              	.LBE14463:
 29615              	.LBE14464:
 29616              	.LBE14465:
 29617              	.LBE14466:
 29618              	.LBE14467:
 29619              	.LBE14468:
 29620              	.LBE14470:
ARM GAS  /tmp/ccszdRNt.s 			page 918


 29621              	.LBE14472:
 29622              	.LBE14474:
  96:alohal/cli/command.hpp ****         }
 29623              		.loc 19 96 49 discriminator 2 view .LVU7763
 29624 0138 5A10     		asrs	r2, r3, #1
 29625 013a B158     		ldr	r1, [r6, r2]
 29626              	.LVL2145:
  96:alohal/cli/command.hpp ****         }
 29627              		.loc 19 96 49 discriminator 2 view .LVU7764
 29628 013c 826B     		ldr	r2, [r0, #56]
 29629 013e 8A58     		ldr	r2, [r1, r2]
 29630 0140 9046     		mov	r8, r2
 29631 0142 C2E7     		b	.L608
 29632              	.LVL2146:
 29633              	.L622:
 29634              	.LBB14475:
 29635              	.LBB14473:
 29636              	.LBB14471:
 29637              	.LBB14469:
 29638              	.LBB14419:
 29639              	.LBB14418:
 29640              	.LBB14417:
 29641              	.LBB14416:
 29642              	.LBB14415:
 29643              	.LBB14414:
 29644              	.LBB14413:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29645              		.loc 7 105 26 view .LVU7765
 29646 0144 FFF7FEFF 		bl	_ZSt17__throw_bad_allocv
 29647              	.LVL2147:
 29648              	.L619:
 105:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29649              		.loc 7 105 26 view .LVU7766
 29650              	.LBE14413:
 29651              	.LBE14414:
 29652              	.LBE14415:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29653              		.loc 13 343 18 view .LVU7767
 29654 0148 0027     		movs	r7, #0
 29655 014a DDE7     		b	.L609
 29656              	.LVL2148:
 29657              	.L611:
 343:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       }
 29658              		.loc 13 343 18 view .LVU7768
 29659              	.LBE14416:
 29660              	.LBE14417:
 29661              	.LBE14418:
 29662              	.LBE14419:
 29663              	.LBE14469:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 29664              		.loc 13 554 2 view .LVU7769
 29665 014c 0497     		str	r7, [sp, #16]
 29666              	.LVL2149:
 554:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 29667              		.loc 13 554 2 view .LVU7770
 29668              	.LBE14471:
 29669              	.LBE14473:
ARM GAS  /tmp/ccszdRNt.s 			page 919


 29670              	.LBE14475:
  96:alohal/cli/command.hpp ****         }
 29671              		.loc 19 96 49 view .LVU7771
 29672 014e 03A9     		add	r1, sp, #12
 29673 0150 3000     		movs	r0, r6
 29674 0152 C047     		blx	r8
 29675              	.LVL2150:
 29676 0154 0500     		movs	r5, r0
 29677              	.LVL2151:
 29678              	.LBB14476:
 29679              	.LBI14476:
 675:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29680              		.loc 13 675 7 is_stmt 1 view .LVU7772
 29681              	.LBB14477:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 29682              		.loc 13 677 15 is_stmt 0 view .LVU7773
 29683 0156 039C     		ldr	r4, [sp, #12]
 29684              	.LVL2152:
 677:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_get_Tp_allocator());
 29685              		.loc 13 677 15 view .LVU7774
 29686 0158 049E     		ldr	r6, [sp, #16]
 29687              	.LVL2153:
 29688              	.LBB14478:
 29689              	.LBI14478:
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29690              		.loc 13 273 7 is_stmt 1 view .LVU7775
 273:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       { return this->_M_impl; }
 29691              		.loc 13 273 7 is_stmt 0 view .LVU7776
 29692              	.LBE14478:
 29693              	.LBB14479:
 29694              	.LBI14479:
 29695              		.loc 24 203 5 is_stmt 1 view .LVU7777
 29696 015a 02E0     		b	.L615
 29697              	.LVL2154:
 29698              	.L623:
 29699              	.LBB14480:
 29700              	.LBB14481:
 29701              	.LBB14482:
 29702              	.LBB14483:
 29703              	.LBB14484:
 29704              	.LBB14485:
 29705              	.LBB14486:
 29706              	.LBB14487:
 29707              	.LBB14488:
 29708              	.LBI14488:
 236:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 29709              		.loc 5 236 7 view .LVU7778
 29710              	.LBB14489:
 29711              	.LBB14490:
 29712              	.LBI14490:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29713              		.loc 10 469 7 view .LVU7779
 29714              	.LBB14491:
 29715              	.LBI14491:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29716              		.loc 7 119 7 view .LVU7780
 29717              	.LBB14492:
ARM GAS  /tmp/ccszdRNt.s 			page 920


 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29718              		.loc 7 128 19 is_stmt 0 view .LVU7781
 29719 015c FFF7FEFF 		bl	_ZdlPv
 29720              	.LVL2155:
 29721              	.L614:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29722              		.loc 7 128 19 view .LVU7782
 29723              	.LBE14492:
 29724              	.LBE14491:
 29725              	.LBE14490:
 29726              	.LBE14489:
 29727              	.LBE14488:
 29728              	.LBE14487:
 29729              	.LBE14486:
 29730              	.LBB14499:
 29731              	.LBI14499:
 150:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29732              		.loc 5 150 14 is_stmt 1 view .LVU7783
 29733              	.LBB14500:
 29734              	.LBI14500:
 29735              		.loc 6 153 7 view .LVU7784
 29736              	.LBB14501:
 29737              	.LBI14501:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29738              		.loc 7 89 7 view .LVU7785
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29739              		.loc 7 89 7 is_stmt 0 view .LVU7786
 29740              	.LBE14501:
 29741              	.LBE14500:
 29742              	.LBE14499:
 29743              	.LBE14485:
 29744              	.LBE14484:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 29745              		.loc 24 107 4 is_stmt 1 view .LVU7787
 29746 0160 1834     		adds	r4, r4, #24
 29747              	.LVL2156:
 29748              	.L615:
 107:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h **** 	    std::_Destroy(std::__addressof(*__first));
 29749              		.loc 24 107 19 view .LVU7788
 29750 0162 A642     		cmp	r6, r4
 29751 0164 05D0     		beq	.L613
 29752              	.LVL2157:
 29753              	.LBB14504:
 29754              	.LBI14484:
  97:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_construct.h ****     { __pointer->~_Tp(); }
 29755              		.loc 24 97 5 view .LVU7789
 29756              	.LBB14503:
 29757              	.LBI14485:
 657:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { _M_dispose(); }
 29758              		.loc 5 657 7 view .LVU7790
 29759              	.LBB14502:
 29760              	.LBI14486:
 229:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29761              		.loc 5 229 7 view .LVU7791
 29762              	.LBB14498:
 29763              	.LBB14493:
 29764              	.LBI14493:
ARM GAS  /tmp/ccszdRNt.s 			page 921


 221:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_data() == _M_local_data(); }
 29765              		.loc 5 221 7 view .LVU7792
 29766              	.LBB14494:
 29767              	.LBI14494:
 186:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 29768              		.loc 5 186 7 view .LVU7793
 29769              	.LBB14495:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29770              		.loc 5 187 28 is_stmt 0 view .LVU7794
 29771 0166 2068     		ldr	r0, [r4]
 29772              	.LVL2158:
 187:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 
 29773              		.loc 5 187 28 view .LVU7795
 29774              	.LBE14495:
 29775              	.LBE14494:
 29776              	.LBB14496:
 29777              	.LBI14496:
 200:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h ****       {
 29778              		.loc 5 200 7 is_stmt 1 view .LVU7796
 29779              	.LBB14497:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 29780              		.loc 5 203 57 is_stmt 0 view .LVU7797
 29781 0168 2300     		movs	r3, r4
 29782 016a 0833     		adds	r3, r3, #8
 29783              	.LVL2159:
 203:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** #else
 29784              		.loc 5 203 57 view .LVU7798
 29785              	.LBE14497:
 29786              	.LBE14496:
 29787              	.LBE14493:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29788              		.loc 5 231 2 view .LVU7799
 29789 016c 9842     		cmp	r0, r3
 29790 016e F5D1     		bne	.L623
 29791 0170 F6E7     		b	.L614
 29792              	.LVL2160:
 29793              	.L613:
 231:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 29794              		.loc 5 231 2 view .LVU7800
 29795              	.LBE14498:
 29796              	.LBE14502:
 29797              	.LBE14503:
 29798              	.LBE14504:
 29799              	.LBE14483:
 29800              	.LBE14482:
 29801              	.LBE14481:
 29802              	.LBE14480:
 29803              	.LBE14479:
 29804              	.LBB14505:
 29805              	.LBI14505:
 330:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29806              		.loc 13 330 7 is_stmt 1 view .LVU7801
 29807              	.LBB14506:
 332:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 		      _M_impl._M_end_of_storage - _M_impl._M_start);
 29808              		.loc 13 332 2 is_stmt 0 view .LVU7802
 29809 0172 0398     		ldr	r0, [sp, #12]
 29810              	.LVL2161:
ARM GAS  /tmp/ccszdRNt.s 			page 922


 29811              	.LBB14507:
 29812              	.LBI14507:
 347:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h ****       {
 29813              		.loc 13 347 7 is_stmt 1 view .LVU7803
 29814              	.LBB14508:
 350:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 29815              		.loc 13 350 2 is_stmt 0 view .LVU7804
 29816 0174 0028     		cmp	r0, #0
 29817 0176 9BD0     		beq	.L596
 29818              	.LVL2162:
 29819              	.LBB14509:
 29820              	.LBI14509:
 469:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h ****       { __a.deallocate(__p, __n); }
 29821              		.loc 10 469 7 is_stmt 1 view .LVU7805
 29822              	.LBB14510:
 29823              	.LBB14511:
 29824              	.LBI14511:
 119:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       {
 29825              		.loc 7 119 7 view .LVU7806
 29826              	.LBB14512:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29827              		.loc 7 128 19 is_stmt 0 view .LVU7807
 29828 0178 FFF7FEFF 		bl	_ZdlPv
 29829              	.LVL2163:
 128:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h ****       }
 29830              		.loc 7 128 19 view .LVU7808
 29831              	.LBE14512:
 29832              	.LBE14511:
 29833              	.LBE14510:
 29834              	.LBE14509:
 29835              	.LBE14508:
 29836              	.LBE14507:
 29837              	.LBB14516:
 29838              	.LBI14516:
 125:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_vector.h **** 	: public _Tp_alloc_type, public _Vector_impl_data
 29839              		.loc 13 125 14 is_stmt 1 view .LVU7809
 29840              	.LBB14517:
 29841              	.LBI14517:
 29842              		.loc 6 153 7 view .LVU7810
 29843              	.LBB14518:
 29844              	.LBI14518:
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29845              		.loc 7 89 7 view .LVU7811
  89:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/new_allocator.h **** 
 29846              		.loc 7 89 7 is_stmt 0 view .LVU7812
 29847              	.LBE14518:
 29848              	.LBE14517:
 29849              	.LBE14516:
 29850              	.LBB14519:
 29851              	.LBB14515:
 29852              	.LBB14514:
 29853              	.LBB14513:
 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 29854              		.loc 10 470 35 view .LVU7813
 29855 017c 98E7     		b	.L596
 29856              	.LVL2164:
 29857              	.L618:
ARM GAS  /tmp/ccszdRNt.s 			page 923


 470:/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/alloc_traits.h **** 
 29858              		.loc 10 470 35 view .LVU7814
 29859              	.LBE14513:
 29860              	.LBE14514:
 29861              	.LBE14515:
 29862              	.LBE14519:
 29863              	.LBE14506:
 29864              	.LBE14505:
 29865              	.LBE14477:
 29866              	.LBE14476:
  98:alohal/cli/command.hpp ****     }
 29867              		.loc 19 98 17 view .LVU7815
 29868 017e 0125     		movs	r5, #1
 29869 0180 6D42     		rsbs	r5, r5, #0
 29870 0182 95E7     		b	.L596
 29871              	.L625:
 29872              		.align	2
 29873              	.L624:
 29874 0184 55555505 		.word	89478485
 29875              		.cfi_endproc
 29876              	.LFE4923:
 29878              		.weak	_ZTS17IRQ_observer_base
 29879              		.section	.rodata._ZTS17IRQ_observer_base,"aG",%progbits,_ZTS17IRQ_observer_base,comdat
 29880              		.align	2
 29883              	_ZTS17IRQ_observer_base:
 29884 0000 31374952 		.ascii	"17IRQ_observer_base\000"
 29884      515F6F62 
 29884      73657276 
 29884      65725F62 
 29884      61736500 
 29885              		.weak	_ZTI17IRQ_observer_base
 29886              		.section	.rodata._ZTI17IRQ_observer_base,"aG",%progbits,_ZTI17IRQ_observer_base,comdat
 29887              		.align	2
 29890              	_ZTI17IRQ_observer_base:
 29891 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 29892 0004 00000000 		.word	_ZTS17IRQ_observer_base
 29893              		.weak	_ZTS12Command_base
 29894              		.section	.rodata._ZTS12Command_base,"aG",%progbits,_ZTS12Command_base,comdat
 29895              		.align	2
 29898              	_ZTS12Command_base:
 29899 0000 3132436F 		.ascii	"12Command_base\000"
 29899      6D6D616E 
 29899      645F6261 
 29899      736500
 29900              		.weak	_ZTI12Command_base
 29901              		.section	.rodata._ZTI12Command_base,"aG",%progbits,_ZTI12Command_base,comdat
 29902              		.align	2
 29905              	_ZTI12Command_base:
 29906 0000 08000000 		.word	_ZTVN10__cxxabiv117__class_type_infoE+8
 29907 0004 00000000 		.word	_ZTS12Command_base
 29908              		.weak	_ZTS12IRQ_observerI3CLIE
 29909              		.section	.rodata._ZTS12IRQ_observerI3CLIE,"aG",%progbits,_ZTS12IRQ_observerI3CLIE,comdat
 29910              		.align	2
 29913              	_ZTS12IRQ_observerI3CLIE:
 29914 0000 31324952 		.ascii	"12IRQ_observerI3CLIE\000"
 29914      515F6F62 
 29914      73657276 
ARM GAS  /tmp/ccszdRNt.s 			page 924


 29914      65724933 
 29914      434C4945 
 29915              		.weak	_ZTI12IRQ_observerI3CLIE
 29916              		.section	.rodata._ZTI12IRQ_observerI3CLIE,"aG",%progbits,_ZTI12IRQ_observerI3CLIE,comdat
 29917              		.align	2
 29920              	_ZTI12IRQ_observerI3CLIE:
 29921 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 29922 0004 00000000 		.word	_ZTS12IRQ_observerI3CLIE
 29923 0008 00000000 		.word	_ZTI17IRQ_observer_base
 29924              		.weak	_ZTS7CommandI3CLIE
 29925              		.section	.rodata._ZTS7CommandI3CLIE,"aG",%progbits,_ZTS7CommandI3CLIE,comdat
 29926              		.align	2
 29929              	_ZTS7CommandI3CLIE:
 29930 0000 37436F6D 		.ascii	"7CommandI3CLIE\000"
 29930      6D616E64 
 29930      4933434C 
 29930      494500
 29931              		.weak	_ZTI7CommandI3CLIE
 29932              		.section	.rodata._ZTI7CommandI3CLIE,"aG",%progbits,_ZTI7CommandI3CLIE,comdat
 29933              		.align	2
 29936              	_ZTI7CommandI3CLIE:
 29937 0000 08000000 		.word	_ZTVN10__cxxabiv120__si_class_type_infoE+8
 29938 0004 00000000 		.word	_ZTS7CommandI3CLIE
 29939 0008 00000000 		.word	_ZTI12Command_base
 29940              		.weak	_ZTV12IRQ_observerI3CLIE
 29941              		.section	.rodata._ZTV12IRQ_observerI3CLIE,"aG",%progbits,_ZTV12IRQ_observerI3CLIE,comdat
 29942              		.align	2
 29945              	_ZTV12IRQ_observerI3CLIE:
 29946 0000 00000000 		.word	0
 29947 0004 00000000 		.word	_ZTI12IRQ_observerI3CLIE
 29948 0008 00000000 		.word	_ZN12IRQ_observerI3CLIED1Ev
 29949 000c 00000000 		.word	_ZN12IRQ_observerI3CLIED0Ev
 29950 0010 00000000 		.word	_ZN17IRQ_observer_base8RegisterEv
 29951 0014 00000000 		.word	_ZN12IRQ_observerI3CLIE3RunEv
 29952 0018 00000000 		.word	_ZN12IRQ_observerI3CLIE17Get_origin_objectEv
 29953              		.weak	_ZTV7CommandI3CLIE
 29954              		.section	.rodata._ZTV7CommandI3CLIE,"aG",%progbits,_ZTV7CommandI3CLIE,comdat
 29955              		.align	2
 29958              	_ZTV7CommandI3CLIE:
 29959 0000 00000000 		.word	0
 29960 0004 00000000 		.word	_ZTI7CommandI3CLIE
 29961 0008 00000000 		.word	_ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS
 29962 000c 00000000 		.word	_ZN7CommandI3CLIE11Get_commandB5cxx11Ev
 29963 0010 00000000 		.word	_ZN7CommandI3CLIE8Get_helpB5cxx11Ev
 29964              		.text
 29965              	.Letext0:
 29966              		.file 26 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/cpp_type_traits.h"
 29967              		.file 27 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/type_traits"
 29968              		.file 28 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/arm-none-eabi/thumb/v6-
 29969              		.file 29 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_pair.h"
 29970              		.file 30 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_iterator_base_
 29971              		.file 31 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/debug/debug.h"
 29972              		.file 32 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cwchar"
 29973              		.file 33 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdint"
 29974              		.file 34 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/exception_ptr.h"
 29975              		.file 35 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/clocale"
 29976              		.file 36 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/limits"
ARM GAS  /tmp/ccszdRNt.s 			page 925


 29977              		.file 37 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/string_view"
 29978              		.file 38 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdlib"
 29979              		.file 39 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/cstdio"
 29980              		.file 40 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/initializer_list"
 29981              		.file 41 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stringfwd.h"
 29982              		.file 42 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/utility"
 29983              		.file 43 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/uses_allocator.h"
 29984              		.file 44 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/tuple"
 29985              		.file 45 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/optional"
 29986              		.file 46 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_function.h"
 29987              		.file 47 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/algorithmfwd.h"
 29988              		.file 48 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/functional"
 29989              		.file 49 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_tree.h"
 29990              		.file 50 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/stl_map.h"
 29991              		.file 51 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/ptr_traits.h"
 29992              		.file 52 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/functexcept.h"
 29993              		.file 53 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/bits/predefined_ops.h"
 29994              		.file 54 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/numeric_traits.h"
 29995              		.file 55 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/ext/type_traits.h"
 29996              		.file 56 "/opt/gcc-arm-none-eabi-9-2020-q2/lib/gcc/arm-none-eabi/9.3.1/include/stddef.h"
 29997              		.file 57 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/machine/_default_types.h"
 29998              		.file 58 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/_types.h"
 29999              		.file 59 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/reent.h"
 30000              		.file 60 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/lock.h"
 30001              		.file 61 "/opt/gcc-arm-none-eabi-9-2020-q2/lib/gcc/arm-none-eabi/9.3.1/include/stdarg.h"
 30002              		.file 62 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/wchar.h"
 30003              		.file 63 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/_stdint.h"
 30004              		.file 64 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdint.h"
 30005              		.file 65 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/locale.h"
 30006              		.file 66 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/ctype.h"
 30007              		.file 67 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdlib.h"
 30008              		.file 68 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/stdio.h"
 30009              		.file 69 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/sys/errno.h"
 30010              		.file 70 "alohal/cli/history.hpp"
 30011              		.file 71 "alohal/filesystem/executable.hpp"
 30012              		.file 72 "alohal/filesystem/directory.hpp"
 30013              		.file 73 "alohal/filesystem/file.hpp"
 30014              		.file 74 "alohal/misc/text_transform.hpp"
 30015              		.file 75 "/opt/gcc-arm-none-eabi-9-2020-q2/arm-none-eabi/include/c++/9.3.1/pstl/execution_defs.h"
 30016              		.file 76 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/system_stm32g0xx.h"
 30017              		.file 77 "Drivers/CMSIS/Device/ST/STM32G0xx/Include/stm32g071xx.h"
 30018              		.file 78 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_def.h"
 30019              		.file 79 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_dma.h"
 30020              		.file 80 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_flash.h"
 30021              		.file 81 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_i2c.h"
 30022              		.file 82 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_tim.h"
 30023              		.file 83 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal_uart.h"
 30024              		.file 84 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_hal.h"
 30025              		.file 85 "alohal/irq/irq_multi_handler.hpp"
 30026              		.file 86 "alohal/uart/uart.hpp"
 30027              		.file 87 "alohal/mcu/configuration/externs.hpp"
 30028              		.file 88 "alohal/timer/TIM_channel.hpp"
 30029              		.file 89 "alohal/timer/timer.hpp"
 30030              		.file 90 "alohal/i2c/i2c_master.hpp"
 30031              		.file 91 "alohal/mcu/mcu.hpp"
 30032              		.file 92 "alohal/events/planner/planner_phase.hpp"
 30033              		.file 93 "alohal/events/planner/planner.hpp"
ARM GAS  /tmp/ccszdRNt.s 			page 926


 30034              		.file 94 "alohal/device/device.hpp"
 30035              		.file 95 "alohal/misc/invocation_wrapper.hpp"
 30036              		.file 96 "Drivers/STM32G0xx_HAL_Driver/Inc/stm32g0xx_ll_dma.h"
 30037              		.file 97 "<built-in>"
ARM GAS  /tmp/ccszdRNt.s 			page 927


DEFINED SYMBOLS
                            *ABS*:0000000000000000 cli.cpp
     /tmp/ccszdRNt.s:16     .text._ZN17IRQ_observer_base8RegisterEv:0000000000000000 $t
     /tmp/ccszdRNt.s:24     .text._ZN17IRQ_observer_base8RegisterEv:0000000000000000 _ZN17IRQ_observer_base8RegisterEv
     /tmp/ccszdRNt.s:40     .text._ZN12IRQ_observerI3CLIED2Ev:0000000000000000 $t
     /tmp/ccszdRNt.s:47     .text._ZN12IRQ_observerI3CLIED2Ev:0000000000000000 _ZN12IRQ_observerI3CLIED2Ev
     /tmp/ccszdRNt.s:47     .text._ZN12IRQ_observerI3CLIED2Ev:0000000000000000 _ZN12IRQ_observerI3CLIED1Ev
     /tmp/ccszdRNt.s:69     .text._ZN12IRQ_observerI3CLIE3RunEv:0000000000000000 $t
     /tmp/ccszdRNt.s:76     .text._ZN12IRQ_observerI3CLIE3RunEv:0000000000000000 _ZN12IRQ_observerI3CLIE3RunEv
     /tmp/ccszdRNt.s:136    .text._ZN12IRQ_observerI3CLIE17Get_origin_objectEv:0000000000000000 $t
     /tmp/ccszdRNt.s:143    .text._ZN12IRQ_observerI3CLIE17Get_origin_objectEv:0000000000000000 _ZN12IRQ_observerI3CLIE17Get_origin_objectEv
     /tmp/ccszdRNt.s:161    .text._ZN12IRQ_observerI3CLIED0Ev:0000000000000000 $t
     /tmp/ccszdRNt.s:168    .text._ZN12IRQ_observerI3CLIED0Ev:0000000000000000 _ZN12IRQ_observerI3CLIED0Ev
     /tmp/ccszdRNt.s:206    .text._ZN3CLI28Enable_filesystem_executableEP10Filesystem:0000000000000000 $t
     /tmp/ccszdRNt.s:213    .text._ZN3CLI28Enable_filesystem_executableEP10Filesystem:0000000000000000 _ZN3CLI28Enable_filesystem_executableEP10Filesystem
     /tmp/ccszdRNt.s:252    .text._ZN3CLI14Enable_historyEj:0000000000000000 $t
     /tmp/ccszdRNt.s:259    .text._ZN3CLI14Enable_historyEj:0000000000000000 _ZN3CLI14Enable_historyEj
     /tmp/ccszdRNt.s:316    .rodata._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:320    .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:0000000000000000 $t
     /tmp/ccszdRNt.s:327    .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:0000000000000000 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_
     /tmp/ccszdRNt.s:559    .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EEPKS5_RKS8_:0000000000000058 $d
     /tmp/ccszdRNt.s:569    .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:576    .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE13_M_insert_auxIS5_EEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEOT_
     /tmp/ccszdRNt.s:1556   .rodata._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:1560   .text._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:1567   .text._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000000000000000 _ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
     /tmp/ccszdRNt.s:1994   .text._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE17_M_realloc_insertIJRP12IRQ_observerI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000000000dc $d
     /tmp/ccszdRNt.s:2006   .text._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE12emplace_backIJRP12IRQ_observerI3CLIEEEERS1_DpOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:2013   .text._ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE12emplace_backIJRP12IRQ_observerI3CLIEEEERS1_DpOT_:0000000000000000 _ZNSt6vectorIP17IRQ_observer_baseSaIS1_EE12emplace_backIJRP12IRQ_observerI3CLIEEEERS1_DpOT_
     /tmp/ccszdRNt.s:2119   .text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:2126   .text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:0000000000000000 _ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_
     /tmp/ccszdRNt.s:2550   .text._ZNSt6vectorIP12Command_baseSaIS1_EE17_M_realloc_insertIJP7CommandI3CLIEEEEvN9__gnu_cxx17__normal_iteratorIPS1_S3_EEDpOT_:00000000000000dc $d
     /tmp/ccszdRNt.s:2562   .text._ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:2569   .text._ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_:0000000000000000 _ZNSt6vectorIP12Command_baseSaIS1_EE12emplace_backIJP7CommandI3CLIEEEERS1_DpOT_
     /tmp/ccszdRNt.s:2675   .rodata._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:2679   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000000 $t
     /tmp/ccszdRNt.s:2686   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag
     /tmp/ccszdRNt.s:2898   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPKcEEvT_S8_St20forward_iterator_tag:0000000000000058 $d
     /tmp/ccszdRNt.s:2903   .rodata._ZN3CLI7ConnectEP11Serial_line.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:2904   .rodata._ZN3CLI7ConnectEP11Serial_line.str1.4:0000000000000000 .LC9
     /tmp/ccszdRNt.s:2907   .text._ZN3CLI7ConnectEP11Serial_line:0000000000000000 $t
     /tmp/ccszdRNt.s:2914   .text._ZN3CLI7ConnectEP11Serial_line:0000000000000000 _ZN3CLI7ConnectEP11Serial_line
     /tmp/ccszdRNt.s:3212   .text._ZN3CLI7ConnectEP11Serial_line:0000000000000078 $d
     /tmp/ccszdRNt.s:26466  .text._ZN3CLI9Char_loadEv:0000000000000000 _ZN3CLI9Char_loadEv
     /tmp/ccszdRNt.s:29945  .rodata._ZTV12IRQ_observerI3CLIE:0000000000000000 _ZTV12IRQ_observerI3CLIE
     /tmp/ccszdRNt.s:3219   .rodata._ZN3CLI27Stop_foreground_applicationEv.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:3220   .rodata._ZN3CLI27Stop_foreground_applicationEv.str1.4:0000000000000000 .LC12
     /tmp/ccszdRNt.s:3223   .text._ZN3CLI27Stop_foreground_applicationEv:0000000000000000 $t
     /tmp/ccszdRNt.s:3230   .text._ZN3CLI27Stop_foreground_applicationEv:0000000000000000 _ZN3CLI27Stop_foreground_applicationEv
     /tmp/ccszdRNt.s:3428   .text._ZN3CLI27Stop_foreground_applicationEv:0000000000000034 $d
     /tmp/ccszdRNt.s:3433   .rodata._ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:3437   .text._ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccszdRNt.s:3444   .text._ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccszdRNt.s:3519   .text._ZN3CLI30Process_foreground_applicationESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000028 $d
     /tmp/ccszdRNt.s:3524   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 $t
     /tmp/ccszdRNt.s:3531   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000000 _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag
     /tmp/ccszdRNt.s:3742   .text._ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructIPcEEvT_S7_St20forward_iterator_tag:0000000000000058 $d
ARM GAS  /tmp/ccszdRNt.s 			page 928


     /tmp/ccszdRNt.s:3747   .text._ZN7CommandI3CLIE8Get_helpB5cxx11Ev:0000000000000000 $t
     /tmp/ccszdRNt.s:3754   .text._ZN7CommandI3CLIE8Get_helpB5cxx11Ev:0000000000000000 _ZN7CommandI3CLIE8Get_helpB5cxx11Ev
     /tmp/ccszdRNt.s:3901   .text._ZN7CommandI3CLIE11Get_commandB5cxx11Ev:0000000000000000 $t
     /tmp/ccszdRNt.s:3908   .text._ZN7CommandI3CLIE11Get_commandB5cxx11Ev:0000000000000000 _ZN7CommandI3CLIE11Get_commandB5cxx11Ev
     /tmp/ccszdRNt.s:4053   .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_:0000000000000000 $t
     /tmp/ccszdRNt.s:4060   .text._ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_:0000000000000000 _ZStplIcSt11char_traitsIcESaIcEENSt7__cxx1112basic_stringIT_T0_T1_EERKS8_SA_
     /tmp/ccszdRNt.s:4242   .text._ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccszdRNt.s:4249   .text._ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN3CLI8Set_lineENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccszdRNt.s:4982   .text._ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccszdRNt.s:4989   .text._ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN3CLI5PrintENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccszdRNt.s:5226   .rodata._ZN3CLI11Redraw_lineEv.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:5230   .text._ZN3CLI11Redraw_lineEv:0000000000000000 $t
     /tmp/ccszdRNt.s:5237   .text._ZN3CLI11Redraw_lineEv:0000000000000000 _ZN3CLI11Redraw_lineEv
     /tmp/ccszdRNt.s:6494   .text._ZN3CLI11Redraw_lineEv:0000000000000148 $d
     /tmp/ccszdRNt.s:6506   .text._ZN3CLI10Clear_lineEv:0000000000000000 $t
     /tmp/ccszdRNt.s:6513   .text._ZN3CLI10Clear_lineEv:0000000000000000 _ZN3CLI10Clear_lineEv
     /tmp/ccszdRNt.s:6934   .rodata._ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:6948   .text._ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccszdRNt.s:6955   .text._ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccszdRNt.s:7844   .text._ZN3CLI15Set_line_prefixENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:000000000000011c $d
     /tmp/ccszdRNt.s:7859   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z:0000000000000000 $t
     /tmp/ccszdRNt.s:7866   .text._ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z:0000000000000000 _ZN9__gnu_cxx12__to_xstringINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEcEET_PFiPT0_jPKS8_St9__va_listEjSB_z
     /tmp/ccszdRNt.s:8022   .rodata._ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:8026   .text._ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccszdRNt.s:8033   .text._ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccszdRNt.s:8980   .text._ZN3CLI28Start_foreground_applicationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000100 $d
     /tmp/ccszdRNt.s:8985   .rodata._ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:8995   .rodata._ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000020 .LC41
     /tmp/ccszdRNt.s:8998   .text._ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccszdRNt.s:9005   .text._ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccszdRNt.s:12017  .text._ZN3CLI4HelpESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:000000000000031c $d
     /tmp/ccszdRNt.s:12029  .rodata._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:12030  .rodata._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000000 .LC44
     /tmp/ccszdRNt.s:12039  .rodata._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:0000000000000020 .LC52
     /tmp/ccszdRNt.s:12045  .rodata._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE.str1.4:000000000000004c .LC58
     /tmp/ccszdRNt.s:12057  .text._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 $t
     /tmp/ccszdRNt.s:12064  .text._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000000 _ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE
     /tmp/ccszdRNt.s:15527  .text._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:000000000000035c $d
     /tmp/ccszdRNt.s:15553  .text._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:0000000000000394 $t
     /tmp/ccszdRNt.s:15767  .text._ZN3CLI10Build_infoESt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS6_EE:00000000000003f4 $d
     /tmp/ccszdRNt.s:15778  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:15785  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
     /tmp/ccszdRNt.s:17006  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:000000000000018c $d
     /tmp/ccszdRNt.s:17012  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:17019  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE12emplace_backIJRS5_EEES9_DpOT_
     /tmp/ccszdRNt.s:17242  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 $t
     /tmp/ccszdRNt.s:17249  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_
     /tmp/ccszdRNt.s:18470  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE17_M_realloc_insertIJRKS5_EEEvN9__gnu_cxx17__normal_iteratorIPS5_S7_EEDpOT_:000000000000018c $d
     /tmp/ccszdRNt.s:18476  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EERSA_:0000000000000000 $t
     /tmp/ccszdRNt.s:18483  .text._ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EERSA_:0000000000000000 _ZNSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS5_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS5_S7_EERSA_
     /tmp/ccszdRNt.s:19053  .rodata._ZN3CLI12Process_lineEv.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:19063  .rodata._ZN3CLI12Process_lineEv.str1.4:0000000000000038 .LC80
     /tmp/ccszdRNt.s:19075  .text._ZN3CLI12Process_lineEv:0000000000000000 $t
     /tmp/ccszdRNt.s:19082  .text._ZN3CLI12Process_lineEv:0000000000000000 _ZN3CLI12Process_lineEv
     /tmp/ccszdRNt.s:22204  .text._ZN3CLI12Process_lineEv:000000000000038c $d
     /tmp/ccszdRNt.s:22226  .text._ZN3CLI12Process_lineEv:00000000000003b0 $t
     /tmp/ccszdRNt.s:23085  .text._ZN3CLI12Process_lineEv:00000000000004ac $d
ARM GAS  /tmp/ccszdRNt.s 			page 929


     /tmp/ccszdRNt.s:23096  .text._ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 $t
     /tmp/ccszdRNt.s:23103  .text._ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:0000000000000000 _ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
     /tmp/ccszdRNt.s:24749  .text._ZN3CLI12AutocompleteENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE:00000000000001b4 $d
     /tmp/ccszdRNt.s:24760  .text._ZN3CLI17Process_characterEv:0000000000000000 $t
     /tmp/ccszdRNt.s:24767  .text._ZN3CLI17Process_characterEv:0000000000000000 _ZN3CLI17Process_characterEv
     /tmp/ccszdRNt.s:26444  .text._ZN3CLI17Process_characterEv:0000000000000248 $d
     /tmp/ccszdRNt.s:26459  .text._ZN3CLI9Char_loadEv:0000000000000000 $t
     /tmp/ccszdRNt.s:26524  .rodata._ZN3CLI5StartEv.str1.4:0000000000000000 $d
     /tmp/ccszdRNt.s:26525  .rodata._ZN3CLI5StartEv.str1.4:0000000000000000 .LC100
     /tmp/ccszdRNt.s:26528  .rodata._ZN3CLI5StartEv.str1.4:0000000000000008 .LC103
     /tmp/ccszdRNt.s:26532  .rodata._ZN3CLI5StartEv.str1.4:0000000000000058 .LC108
     /tmp/ccszdRNt.s:26535  .rodata._ZN3CLI5StartEv.str1.4:0000000000000064 .LC111
     /tmp/ccszdRNt.s:26539  .text._ZN3CLI5StartEv:0000000000000000 $t
     /tmp/ccszdRNt.s:26546  .text._ZN3CLI5StartEv:0000000000000000 _ZN3CLI5StartEv
     /tmp/ccszdRNt.s:28593  .text._ZN3CLI5StartEv:0000000000000204 $d
     /tmp/ccszdRNt.s:29958  .rodata._ZTV7CommandI3CLIE:0000000000000000 _ZTV7CommandI3CLIE
     /tmp/ccszdRNt.s:28604  .text._ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE:0000000000000000 $t
     /tmp/ccszdRNt.s:28611  .text._ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE:0000000000000000 _ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE
     /tmp/ccszdRNt.s:29874  .text._ZN7CommandI3CLIE6InvokeERSt6vectorINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESaIS8_EE:0000000000000184 $d
     /tmp/ccszdRNt.s:29883  .rodata._ZTS17IRQ_observer_base:0000000000000000 _ZTS17IRQ_observer_base
     /tmp/ccszdRNt.s:29880  .rodata._ZTS17IRQ_observer_base:0000000000000000 $d
     /tmp/ccszdRNt.s:29890  .rodata._ZTI17IRQ_observer_base:0000000000000000 _ZTI17IRQ_observer_base
     /tmp/ccszdRNt.s:29887  .rodata._ZTI17IRQ_observer_base:0000000000000000 $d
     /tmp/ccszdRNt.s:29898  .rodata._ZTS12Command_base:0000000000000000 _ZTS12Command_base
     /tmp/ccszdRNt.s:29895  .rodata._ZTS12Command_base:0000000000000000 $d
     /tmp/ccszdRNt.s:29905  .rodata._ZTI12Command_base:0000000000000000 _ZTI12Command_base
     /tmp/ccszdRNt.s:29902  .rodata._ZTI12Command_base:0000000000000000 $d
     /tmp/ccszdRNt.s:29913  .rodata._ZTS12IRQ_observerI3CLIE:0000000000000000 _ZTS12IRQ_observerI3CLIE
     /tmp/ccszdRNt.s:29910  .rodata._ZTS12IRQ_observerI3CLIE:0000000000000000 $d
     /tmp/ccszdRNt.s:29920  .rodata._ZTI12IRQ_observerI3CLIE:0000000000000000 _ZTI12IRQ_observerI3CLIE
     /tmp/ccszdRNt.s:29917  .rodata._ZTI12IRQ_observerI3CLIE:0000000000000000 $d
     /tmp/ccszdRNt.s:29929  .rodata._ZTS7CommandI3CLIE:0000000000000000 _ZTS7CommandI3CLIE
     /tmp/ccszdRNt.s:29926  .rodata._ZTS7CommandI3CLIE:0000000000000000 $d
     /tmp/ccszdRNt.s:29936  .rodata._ZTI7CommandI3CLIE:0000000000000000 _ZTI7CommandI3CLIE
     /tmp/ccszdRNt.s:29933  .rodata._ZTI7CommandI3CLIE:0000000000000000 $d
     /tmp/ccszdRNt.s:29942  .rodata._ZTV12IRQ_observerI3CLIE:0000000000000000 $d
     /tmp/ccszdRNt.s:29955  .rodata._ZTV7CommandI3CLIE:0000000000000000 $d
                           .group:0000000000000000 _ZN12IRQ_observerI3CLIED5Ev

UNDEFINED SYMBOLS
_ZdlPvj
_Znwj
_ZN11CLI_historyC1Ej
strlen
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcj
_ZSt20__throw_length_errorPKc
memcpy
_ZdlPv
_ZSt17__throw_bad_allocv
memmove
_ZSt19__throw_logic_errorPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERjj
_ZN10Filesystem12Set_locationENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEjc
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEjjPKcj
ARM GAS  /tmp/ccszdRNt.s 			page 930


_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_
_ZSt24__throw_out_of_range_fmtPKcz
_ZNK10Filesystem12Entry_existsENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNK10Filesystem10Entry_typeENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZNK10Filesystem9Get_entryENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
memcmp
vsnprintf
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcjj
_ZN11CLI_history6UpdateENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
_ZN11CLI_history13Reset_pointerEv
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcj
_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEjj
_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcjj
_ZN10Filesystem7ExecuteERNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEERSt6vectorIS5_SaIS5_EE
_ZN9Directory13Content_namesB5cxx11Ev
_ZN11Serial_line4ReadB5cxx11Ei
isprint
_ZN11CLI_history2UpB5cxx11Ev
_ZN11CLI_history4DownB5cxx11Ev
_ZTVN10__cxxabiv117__class_type_infoE
_ZTVN10__cxxabiv120__si_class_type_infoE
